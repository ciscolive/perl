.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Cisco::UCS::Chassis::Stats 3"
.TH Cisco::UCS::Chassis::Stats 3 "2016-05-25" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Cisco::UCS::Chassis::Stats \- Class for operations with Cisco UCS chassis power 
statistics.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 3
\&        # Print all blades in all chassis along with the chassis current 
\&        # output power and each blades current input power both in watts and 
\&        # as a percentage of the chassis input power level.
\&
\&        map { 
\&                my $c_power = $_\->stats\->output_power;
\&
\&                printf( "Chassis: %d \- Output power: %.3f\en", 
\&                        $_\->id, 
\&                        $c_power 
\&                );
\&
\&                map {
\&                        printf( "\etBlade: %d \- Input power: %.3f (%.2f%%)\en",
\&                                $_\->id, 
\&                                $_\->power_budget\->current_power, 
\&                                ( $c_power == 0 
\&                                        ? \*(Aq\-\*(Aq 
\&                                        : ( $_\->power_budget\->current_power 
\&                                                / $c_power * 100 ) 
\&                                )
\&                        ) 
\&                }   
\&                sort { $a\->id <=> $b\->id } $_\->get_blades 
\&        } 
\&        sort { 
\&                $a\->id <=> $b\->id 
\&        } $ucs\->get_chassiss;
\&
\&        # E.g.
\&        #
\&        # Chassis: 1 \- Output power: 704.000
\&        #       Blade: 1 \- Input power: 119.000 (16.90%)
\&        #       Blade: 2 \- Input power: 134.000 (19.03%)
\&        #       Blade: 3 \- Input power: 135.000 (19.18%)
\&        #       Blade: 4 \- Input power: 0.000 (0.00%)
\&        #       Blade: 5 \- Input power: 0.000 (0.00%)
\&        #       Blade: 6 \- Input power: 0.000 (0.00%)
\&        #       Blade: 7 \- Input power: 0.000 (0.00%)
\&        #       Blade: 8 \- Input power: 136.000 (19.32%)
\&        # Chassis: 2 \- Output power: 1188.000
\&        #       Blade: 1 \- Input power: 127.000 (10.69%)
\&        #       Blade: 2 \- Input power: 0.000 (0.00%)
\&        #       Blade: 3 \- Input power: 120.000 (10.10%)
\&        #       Blade: 4 \- Input power: 0.000 (0.00%)
\&        #       Blade: 5 \- Input power: 127.000 (10.69%)
\&        #       Blade: 6 \- Input power: 121.000 (10.19%)
\&        #       Blade: 7 \- Input power: 172.000 (14.48%)
\&        #       Blade: 8 \- Input power: 136.000 (11.45%)
\&        # etc.
.Ve
.SH "DECRIPTION"
.IX Header "DECRIPTION"
Cisco::UCS::Chassis::Stats is a class providing operations with a Cisco \s-1UCS\s0 
chassis power statistics.
.PP
Note that you are not supposed to call the constructor yourself, rather a 
Cisco::UCS::Chassis::Stats object is created automatically by method calls on 
a Cisco::UCS::Chassis object.
.SH "METHODS"
.IX Header "METHODS"
\fIinput_power\fR
.IX Subsection "input_power"
.PP
Returns the current input power for the chassis.
.PP
\fIinput_power_avg\fR
.IX Subsection "input_power_avg"
.PP
Returns the average input power value for the chassis.
.PP
\fIinput_power_min\fR
.IX Subsection "input_power_min"
.PP
Returns the minimum power input value for the chassis.
.PP
\fIinput_power_max\fR
.IX Subsection "input_power_max"
.PP
Returns the maximum power input value for the chassis.
.PP
\fIoutput_power\fR
.IX Subsection "output_power"
.PP
Returns the current output power value for the chassis.
.PP
\fIoutput_power_avg\fR
.IX Subsection "output_power_avg"
.PP
Returns the average output power value for the chassis.
.PP
\fIoutput_power_min\fR
.IX Subsection "output_power_min"
.PP
Returns the minimum output power value for the chassis.
.PP
\fIoutput_power_max\fR
.IX Subsection "output_power_max"
.PP
Returns the maximum output power value for the blade.
.PP
\fIthresholded\fR
.IX Subsection "thresholded"
.PP
Returns the input power thresholded state for the blade.
.PP
\fIsuspect\fR
.IX Subsection "suspect"
.PP
Returns the input power suspect state for the blade.
.PP
\fItime_collected\fR
.IX Subsection "time_collected"
.PP
Returns the timestamp at which time the power statsitics were collected.
.SH "AUTHOR"
.IX Header "AUTHOR"
Luke Poskitt, \f(CW\*(C`<ltp at cpan.org>\*(C'\fR
.SH "BUGS"
.IX Header "BUGS"
Please report any bugs or feature requests to 
\&\f(CW\*(C`bug\-cisco\-ucs\-chassis\-stats at rt.cpan.org\*(C'\fR, or through the web interface at 
<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=Cisco\-UCS\-Chassis\-Stats>.  I 
will be notified, and then you'll automatically be notified of progress on your 
bug as I make changes.
.SH "SUPPORT"
.IX Header "SUPPORT"
You can find documentation for this module with the perldoc command.
.PP
.Vb 1
\&    perldoc Cisco::UCS::Chassis::Stats
.Ve
.PP
You can also look for information at:
.IP "\(bu" 4
\&\s-1RT: CPAN\s0's request tracker
.Sp
<http://rt.cpan.org/NoAuth/Bugs.html?Dist=Cisco\-UCS\-Chassis\-Stats>
.IP "\(bu" 4
AnnoCPAN: Annotated \s-1CPAN\s0 documentation
.Sp
<http://annocpan.org/dist/Cisco\-UCS\-Chassis\-Stats>
.IP "\(bu" 4
\&\s-1CPAN\s0 Ratings
.Sp
<http://cpanratings.perl.org/d/Cisco\-UCS\-Chassis\-Stats>
.IP "\(bu" 4
Search \s-1CPAN\s0
.Sp
<http://search.cpan.org/dist/Cisco\-UCS\-Chassis\-Stats/>
.SH "LICENSE AND COPYRIGHT"
.IX Header "LICENSE AND COPYRIGHT"
Copyright 2013 Luke Poskitt.
.PP
This program is free software; you can redistribute it and/or modify it
under the terms of either: the \s-1GNU\s0 General Public License as published
by the Free Software Foundation; or the Artistic License.
.PP
See http://dev.perl.org/licenses/ for more information.

.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "GraphViz2::Utils 3"
.TH GraphViz2::Utils 3 "2020-10-02" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
GraphViz2::Utils \- Some utils to generate the demo page
.SH "Synopsis"
.IX Header "Synopsis"
See \*(L"Synopsis\*(R" in GraphViz2.
.PP
See scripts/generate.index.pl.
.PP
Note: scripts/generate.index.pl outputs to a directory called 'html' in the 'current' directory.
.PP
See: <http://savage.net.au/Perl\-modules/html/graph.easy.marpa/index.html>.
.SH "Description"
.IX Header "Description"
Some utils to simplify generation of the demo page.
.PP
It is not expected that end-users would ever need to use this module.
.SH "Distributions"
.IX Header "Distributions"
This module is available as a Unix-style distro (*.tgz).
.PP
See <http://savage.net.au/Perl\-modules/html/installing\-a\-module.html>
for help on unpacking and installing distros.
.SH "Installation"
.IX Header "Installation"
Install GraphViz2 as you would for any \f(CW\*(C`Perl\*(C'\fR module:
.PP
Run:
.PP
.Vb 1
\&        cpanm GraphViz2
.Ve
.PP
or run:
.PP
.Vb 1
\&        sudo cpan GraphViz2
.Ve
.PP
or unpack the distro, and then either:
.PP
.Vb 4
\&        perl Build.PL
\&        ./Build
\&        ./Build test
\&        sudo ./Build install
.Ve
.PP
or:
.PP
.Vb 4
\&        perl Makefile.PL
\&        make (or dmake or nmake)
\&        make test
\&        make install
.Ve
.SH "Constructor and Initialization"
.IX Header "Constructor and Initialization"
.SS "Calling \fBnew()\fP"
.IX Subsection "Calling new()"
\&\f(CW\*(C`new()\*(C'\fR is called as \f(CW\*(C`my($obj) = GraphViz2::Utils \-> new(k1 => v1, k2 => v2, ...)\*(C'\fR.
.PP
It returns a new object of type \f(CW\*(C`GraphViz2::Utils\*(C'\fR.
.PP
Key-value pairs accepted in the parameter list:
.IP "o (none)" 4
.IX Item "o (none)"
.SH "Methods"
.IX Header "Methods"
.SS "\fBgenerate_demo_environment()\fP"
.IX Subsection "generate_demo_environment()"
Returns a hashref of \s-1OS,\s0 etc, values.
.PP
Keys are \f(CW\*(C`left\*(C'\fR and \f(CW\*(C`right\*(C'\fR, to suit \f(CW\*(C`htdocs/assets/templates/graph/easy/marpa/fancy.table.tx\*(C'\fR.
.PP
\&\f(CW\*(C`*.tx\*(C'\fR files are used by Text::Xslate.
.PP
Called by \*(L"\fBgenerate_demo_index()\fR\*(R".
.SS "\fBgenerate_demo_index()\fP"
.IX Subsection "generate_demo_index()"
Calls \*(L"get_files($dir_name, \f(CW$type\fR)\*(R" in GraphViz2::Filer and \*(L"\fBgenerate_demo_environment()\fR\*(R".
.PP
Writes \f(CW\*(C`html/index.html\*(C'\fR.
.PP
See scripts/generate.index.pl.
.SH "Thanks"
.IX Header "Thanks"
Many thanks are due to the people who chose to make Graphviz <http://www.graphviz.org/> Open Source.
.PP
And thanks to Leon Brocard <http://search.cpan.org/~lbrocard/>, who wrote GraphViz, and kindly gave me co-maint of the module.
.SH "Version Numbers"
.IX Header "Version Numbers"
Version numbers < 1.00 represent development versions. From 1.00 up, they are production versions.
.SH "Machine-Readable Change Log"
.IX Header "Machine-Readable Change Log"
The file Changes was converted into Changelog.ini by Module::Metadata::Changes.
.SH "Support"
.IX Header "Support"
Email the author, or log a bug on \s-1RT:\s0
.PP
<https://rt.cpan.org/Public/Dist/Display.html?Name=GraphViz2>.
.SH "Author"
.IX Header "Author"
GraphViz2 was written by Ron Savage \fI<ron@savage.net.au>\fR in 2011.
.PP
Home page: <http://savage.net.au/index.html>.
.SH "Copyright"
.IX Header "Copyright"
Australian copyright (c) 2011, Ron Savage.
.PP
.Vb 4
\&        All Programs of mine are \*(AqOSI Certified Open Source Software\*(Aq;
\&        you can redistribute them and/or modify them under the terms of
\&        The Perl License, a copy of which is available at:
\&        http://dev.perl.org/licenses/
.Ve

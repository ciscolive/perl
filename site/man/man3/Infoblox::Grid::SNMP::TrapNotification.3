.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Infoblox::Grid::SNMP::TrapNotification 3"
.TH Infoblox::Grid::SNMP::TrapNotification 3 "2018-06-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Infoblox::Grid::SNMP::TrapNotification  \- Trap Notification object.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This object represents the trap notification settings of the Infoblox::Grid and Infoblox::Grid::Member object. The object allows you to control which trap categories are enabled, and for which trap categories mail notification will be sent.
.SH "CONSTRUCTOR"
.IX Header "CONSTRUCTOR"
Use the following parameters to construct the Infoblox::Grid::SNMP::TrapNotification object
.PP
.Vb 5
\& my $trap_notification = Infoblox::Grid::SNMP::TrapNotification\->new(
\&    trap_type       =>  $string,              #Required
\&    enable_email    =>  "true" | "false",     #Optional / Default is  "false"
\&    enable_trap     =>  "true" | "false",     #Optional / Default is  "true"
\& );
.Ve
.SH "MODULE METHODS"
.IX Header "MODULE METHODS"
The following functions are available to apply to an \s-1SNMP\s0 Trap Notification object.
.SS "Infoblox::Grid\->trap_notifications( )"
.IX Subsection "Infoblox::Grid->trap_notifications( )"
.RS 4
Use this function to specify trap notification settings at the grid level. See
Infoblox::Grid\->\fBtrap_notifications()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 7
\& #Get a reference to a trap notifications array
\& my $trap_notifications = $grid\->trap_notifications();
\& #Modify trap notifications
\& my $notifications = $grid\->trap_notifications();
\& foreach(@$notifications){if $_\->trap_type() eq \*(AqCPU\*(Aq; $_\->enable_email="true";} #Change value for \*(AqCPU\*(Aq trap
\& $grid\->trap_notifications($notifications);
\& $session\->modify($grid);
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Grid::Member\->trap_notifications( )"
.IX Subsection "Infoblox::Grid::Member->trap_notifications( )"
.RS 4
Use this function to specify a trap notifications at the member level. See Infoblox::Grid::Member\->\fBtrap_notifications()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 7
\& #Get a reference to a trap notifications array
\& my $trap_notifications = $member\->trap_notifications();
\& #Modify trap notifications
\& my $notifications = $member\->trap_notifications();
\& foreach(@$notifications){if $_\->trap_type() eq \*(AqCPU\*(Aq; $_\->enable_email="true";} #Change value for \*(AqCPU\*(Aq trap
\& $member\->trap_notifications($notifications);
\& $session\->modify($member);
.Ve
.RE
.RS 4
.RE
.SH "METHODS"
.IX Header "METHODS"
This section describes all the methods that can be used to retrieve the attribute values of a Trap Notification object.
.SS "enable_email( )"
.IX Subsection "enable_email( )"
.RS 4
Use this method to retrieve the enable_email flag of a Trap Notification object.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
none
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the  enable_email flag value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get  enable_email flag
\& my $enable_email = $trap_notification\->enable_email();
\& #Set  enable_email flag
\& $trap_notification\->enable_email();
.Ve
.RE
.RS 4
.RE
.SS "enable_trap( )"
.IX Subsection "enable_trap( )"
.RS 4
Use this method to retrieve the enable_trap flag of a Trap Notification object.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
none
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the  enable_trap flag attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get  enable_trap flag
\& my $enable_trap = $trap_notification\->enable_trap();
\& #Set  enable_trap flag
\& $trap_notification\->enable_trap();
.Ve
.RE
.RS 4
.RE
.SS "trap_type( )"
.IX Subsection "trap_type( )"
.RS 4
Use this method to retrieve the category of a trap in the Trap Notification object.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
none
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the  category of the trap attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get category of trap
\& my $trap_type = $trap_notification\->trap_type();
\& #Set category of trap
\& $trap_notification\->trap_type();
.Ve
.RE
.RS 4
.RE
.SH "AUTHOR"
.IX Header "AUTHOR"
Infoblox Inc. <http://www.infoblox.com/>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Infoblox::Grid, Infoblox::Grid::Member
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2017 Infoblox Inc.

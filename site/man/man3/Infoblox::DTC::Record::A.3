.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Infoblox::DTC::Record::A 3"
.TH Infoblox::DTC::Record::A 3 "2018-06-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Infoblox::DTC::Record::A \- A DTC A record object.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
A \s-1DTC A\s0 object represents a \s-1DNS\s0 Traffic Control Address (\s-1DTC A\s0) resource record. \s-1DTC A\s0 record maps a load balancing domain name to an IPv4 address.
.SH "CONSTRUCTOR"
.IX Header "CONSTRUCTOR"
.Vb 7
\& my $object = Infoblox::DTC::Record::A\->new(
\&     \*(Aqdtc_server\*(Aq  => $dtc_server,      #Required
\&     \*(Aqipv4addr\*(Aq    => $ipv4addr,        #Required
\&     \*(Aqcomment\*(Aq     => $string,          #Optional
\&     \*(Aqdisable\*(Aq     => \*(Aqtrue\*(Aq | \*(Aqfalse\*(Aq, #Optional / Default is \*(Aqfalse\*(Aq
\&     \*(Aqttl\*(Aq         => $uint | undef,    #Optional / Default is undefined
\& );
.Ve
.SH "SESSION METHODS"
.IX Header "SESSION METHODS"
This section describes all the methods in an Infoblox::Session module that can be applied to a \s-1DTC A\s0 record object.
.SS "Infoblox::Session\->add( )"
.IX Subsection "Infoblox::Session->add( )"
.RS 4
Use this method to add an object to the Infoblox appliance. See Infoblox::Session\->\fBadd()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 8
\& #Construct an object
\& my $object = Infoblox::DTC::Record::A\->new(
\&     \*(Aqcomment\*(Aq     => \*(AqSample DTC A record\*(Aq,
\&     \*(Aqdisable\*(Aq     => \*(Aqfalse\*(Aq,
\&     \*(Aqdtc_server\*(Aq  => $dtc_server,
\&     \*(Aqipv4addr\*(Aq    => \*(Aq10.0.0.1\*(Aq,
\&     \*(Aqttl\*(Aq         => 1024,
\& );
\&
\& # Submit for addition
\& my $response = $session\->add($object);
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->get( )"
.IX Subsection "Infoblox::Session->get( )"
.RS 4
Use this method to retrieve the existing objects from an Infoblox appliance. See Infoblox::Session\->\fBget()\fR for parameters and return values.
.IP "\fBKey Reference\fR" 4
.IX Item "Key Reference"
.Vb 1
\& Apply the following attributes to get specific DTC A record objects:
\&
\&     dtc_server \- Required. DTC Server object the DTC A record is associated with (exact).
\&     comment    \- Optional. Descriptive comment in string format (regexp).
\&     ipv4addr   \- Optional. DTC A record IPv4 address in string format (regexp).
.Ve
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& my @retrieved_objs = $session\->get(
\&     object     => \*(AqInfoblox::DTC::Record::A\*(Aq,
\&     dtc_server => $dtc_server,
\& );
\&
\& my @retrieved_objs = $session\->get(
\&    object     => \*(AqInfoblox::DTC::Record::A\*(Aq,
\&    dtc_server => $dtc_server,
\&    ipv4addr   => \*(Aq10.0.0.1\*(Aq,
\& );
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->modify( )"
.IX Subsection "Infoblox::Session->modify( )"
.RS 4
Use this method to modify an object in the Infoblox appliance. See Infoblox::Session\->\fBmodify()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Use this method to modify the comment.
\& $object\->comment(\*(Aqthis is a modified comment\*(Aq);
\&
\& # Submit the modification
\& my $response = $session\->modify($object);
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->remove( )"
.IX Subsection "Infoblox::Session->remove( )"
.RS 4
Use this method to submit the removal of an object from the Infoblox appliance. See Infoblox::Session\->\fBremove()\fR for parameters and return values.
.Sp
To remove a specific object, first use \fBget()\fR or \fBsearch()\fR to retrieve the object, and then submit it for removal.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 5
\& # Get the objects associated with DTC Server $dtc_server
\& my @retrieved_objs = $session\->get(
\&     object     => \*(AqInfoblox::DTC::Record::A\*(Aq,
\&     dtc_server => $dtc_server,
\& );
\&
\& # Find the desired object in the retrieved list.
\& my $desired_rec = $retrieved_objs[0];
\&
\& # Submit for removal
\& my $response = $session\->remove($desired_rec);
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->search( )"
.IX Subsection "Infoblox::Session->search( )"
.RS 4
Use this method to retrieve the existing objects from an Infoblox appliance. See Infoblox::Session\->\fBsearch()\fR for parameters and return values.
.IP "\fBKey Reference\fR" 4
.IX Item "Key Reference"
.Vb 1
\& Apply the following attributes to search the DTC A record objects:
\&
\&     dtc_server \- Required. DTC Server object the DTC A record is associated with.
\&     comment    \- Optional. Descriptive comment in string format
\&     ipv4addr   \- Optional. DTC A record address.
.Ve
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 5
\& # Get the objects associated with DTC Server $dtc_server
\& my @retrieved_objs = $session\->search(
\&     object     => \*(AqInfoblox::DTC::Record::A\*(Aq,
\&     dtc_server => $dtc_server,
\& );
\&
\& # Get the objects associated with DTC Server $dtc_server with comment that starts from \*(AqA\*(Aq
\& my @retrieved_objs = $session\->get(
\&     object     => \*(AqInfoblox::DTC::Record::A\*(Aq,
\&     dtc_server => $dtc_server,
\&     comment    => \*(Aq^A.*\*(Aq,
\& );
.Ve
.RE
.RS 4
.RE
.SH "METHODS"
.IX Header "METHODS"
This section describes all the methods that can be used to retrieve the attribute values of a \s-1DTC A\s0 record object.
.SS "auto_created( )"
.IX Subsection "auto_created( )"
.RS 4
Use this method to retrieve the flag that indicates whether this record was automatically created by \s-1NIOS\s0 or not. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get auto_created value
\& my $auto_created = $object\->auto_created();
.Ve
.RE
.RS 4
.RE
.SS "comment( )"
.IX Subsection "comment( )"
.RS 4
Use this method to set or retrieve the descriptive comment of a \s-1DTC A\s0 record object.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Desired comment in string format with a maximum of 256 characters.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get comment value
\& my $comment = $object\->comment();
\&
\& #Modify comment value
\& $object\->comment(\*(AqThis is a new comment\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "disable( )"
.IX Subsection "disable( )"
.RS 4
Use this method to set or retrieve the disable flag of a \s-1DTC A\s0 record.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify 'true' to set the disable flag or 'false' to deactivate/unset it.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get disable value
\& my $disable = $object\->disable();
\&
\& #Modify disable value
\& $object\->disable(\*(Aqtrue\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "dtc_server( )"
.IX Subsection "dtc_server( )"
.RS 4
Use this method to set or retrieve the \s-1DTC\s0 Server the \s-1DTC A\s0 record associated with.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.Sp
Note that once the \s-1DTC\s0 record has been created the \s-1DTC\s0 Server value cannot be changed.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an Infoblox::DTC::Server object.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get the dtc_server field
\& my $dtc_server = $object\->dtc_server();
\&
\& #Modify dtc_server value
\& $object\->dtc_server($server1);
.Ve
.RE
.RS 4
.RE
.SS "ipv4addr( )"
.IX Subsection "ipv4addr( )"
.RS 4
Use this method to set or retrieve the IPv4 address that is mapped to a domain name.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is desired IPv4 address in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get ipv4addr value
\& my $ipv4addr = $object\->ipv4addr();
\&
\& #Modify ipv4addr value
\& $object\->ipv4addr(\*(Aq10.0.0.10\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "ttl( )"
.IX Subsection "ttl( )"
.RS 4
Use this method to set or retrieve the Time to Live (\s-1TTL\s0) value.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.Sp
The default value is undefined which indicates that the record inherits the \s-1TTL\s0 value of the \s-1DTC\s0 server pool.
.Sp
Specify a \s-1TTL\s0 value to override the \s-1TTL\s0 value at the \s-1DTC\s0 server pool level.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an unsigned integer between 0 and 4294967295 that represents the duration (in seconds) that the record is cached.
Zero indicates that the record should not be cached.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get ttl value
\& my $ttl = $object\->ttl();
\&
\& #Modify ttl value
\& $object\->ttl(1800);
\&
\& #inherit ttl value
\& $object\->ttl(undef);
.Ve
.RE
.RS 4
.RE
.SH "AUTHOR"
.IX Header "AUTHOR"
Infoblox Inc. <http://www.infoblox.com/>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Infoblox::Session, 
Infoblox::Session\->\fBadd()\fR, 
Infoblox::Session\->\fBget()\fR,
Infoblox::Session\->\fBmodify()\fR, 
Infoblox::Session\->\fBremove()\fR, 
Infoblox::Session\->\fBsearch()\fR, 
Infoblox::DTC::Server
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2017 Infoblox Inc.

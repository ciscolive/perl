.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Infoblox 3"
.TH Infoblox 3 "2018-06-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Infoblox \- API Installation and Usage Instructions
.SH "VERSION"
.IX Header "VERSION"
.Vb 1
\& 8.2.6\-371069
.Ve
.SH "Infoblox API Installation Instructions"
.IX Header "Infoblox API Installation Instructions"
Infoblox provides a Perl \s-1API\s0 (application programming interface) to help facilitate the integration of the Infoblox device into network environments. The Infoblox \s-1DMAPI\s0 (Data and Management \s-1API\s0) is a set of packages delivered with the Infoblox device to install the package.  Use the usual Perl module installation tools on your management system to install the package. For Windows systems using the ActiveState build of Perl, the package is called \s-1PPM\s0 (\*(L"Perl Package Manager\*(R" or \*(L"Programmer's Package Manager\*(R"). For \s-1UNIX\s0 systems, the package is called \s-1CPAN,\s0 a global archive of Perl resources.
.PP
\&\*(L"Windows Management System\*(R"
.PP
\&\*(L"Unix Management System\*(R"
.SS "Windows Management System"
.IX Subsection "Windows Management System"
To install the Infoblox \s-1DMAPI\s0 packages on a Windows management system, download and install \s-1PPM\s0 (from <http://www.activestate.com/>). Then do the following:
.PP
\&\*(L"1a.   Install Crypt::SSLeay and libwww-perl.\*(R" for IPv4 connections
.PP
\&\*(L"1b.   Install the supporting libraries.\*(R" for IPv6 connections
.PP
\&\*(L"2.   \s-1PPM 3\s0.x: Add the Infoblox device as a repository.\*(R"
.PP
\&\*(L"3.   \s-1PPM 3\s0.x: Search the Infoblox device for Infoblox packages.\*(R"
.PP
\&\*(L"4.   \s-1PPM 3\s0.x: Install Infoblox packages on your management system.\*(R"
.PP
\&\*(L"5.   \s-1PPM 4.0:\s0 Fetch and install Infoblox packages.\*(R"
.PP
\fIRequirements for Windows Management Systems and IPv4 connections\fR
.IX Subsection "Requirements for Windows Management Systems and IPv4 connections"
.PP
\&\- Perl 5.8.8 or later
.PP
\&\- For Windows management systems: the ActiveState version of Perl 5.8.8 or later with \s-1PPM 3\s0.x or later
.PP
\&\- Crypt::SSLeay version 0.51 or later (and its dependencies: ssleay32.dll and libeay32.dll)
.PP
\&\- LWP::UserAgent version 5.813 or later
.PP
\&\- XML::Parser
.PP
\fIRequirements for Windows Management Systems and IPv6 connections\fR
.IX Subsection "Requirements for Windows Management Systems and IPv6 connections"
.PP
\&\- Perl 5.14.2 or later
.PP
\&\- For Windows management systems: the ActiveState version of Perl 5.14.2 or later with \s-1PPM 3\s0.x or later
.PP
\&\- LWP::UserAgent version 6.02 or later and relevant dependencies, including LWP::Protocol::https
.PP
\&\- Net::INET6Glue
.PP
\&\- XML::Parser
.PP
\fI1a.   Install Crypt::SSLeay and libwww-perl.\fR
.IX Subsection "1a. Install Crypt::SSLeay and libwww-perl."
.Sp
.RS 4
1.0 Check your Perl version.
.Sp
The Crypt::SSLeay package is Perl version sensitive. Perl version 5.8.x requires different packages than 5.10.x. To check the Perl version installed, enter the command: perl \-v.
.Sp
If Perl 5.8.x is installed, the command will return the following:
.Sp
.Vb 2
\& C:\e>perl \-v
\& This is perl, v5.8.8 built for MSWin32\-x86\-multi\-thread...
.Ve
.Sp
If Perl 5.10.x is installed, the command will return the following:
.Sp
.Vb 2
\& C:\e>perl \-v
\& This is perl, v5.10.0 built for MSWin32\-x86\-multi\-thread...
.Ve
.Sp
1.1 Install Crypt-SSLeay.
.Sp
The Crypt::SSLeay package allows you to make an \s-1HTTPS\s0 connection to the Infoblox device. Crypt::SSLeay is not part of the core Perl distribution.  To check if it is installed, enter the command: ppm query Crypt-SSLeay.  If the Crypt-SSLeay package is already installed, the query returns the following result:
.Sp
.Vb 3
\& C:\e>ppm query Crypt\-SSLeay
\& Querying target 1 (ActivePerl 5.8.8.817)
\& 1. Crypt\-SSLeay [0.51] OpenSSL glue that provides LWP https
.Ve
.Sp
If the Crypt::SSLeay package is not installed, the query returns the following:
.Sp
.Vb 3
\& C:\e>ppm query Crypt\-SSLeay
\& Querying target 1 (ActivePerl 5.8.8.817)
\& No matches for \*(AqCrypt\-SSLeay; see \*(Aqhelp query\*(Aq.
.Ve
.Sp
To install Crypt::SSLeay (and its dependencies ssleay32.dll and libeay32.dll) one needs to either build it from the source distribution, or locate a precompiled Crypt\-SSLeay.ppd archive.
.Sp
Note that Crypt::SSLeay does not support TLSv1.1 and higher until version 0.58. To use \s-1TLS\s0 v1.1 and higher, you must install Crypt::SSLeay version 0.58 and higher.
.Sp
1.2 Install libwww-perl.
.Sp
If you need to update LWP::UserAgent, then you will have to install the latest libwww-perl package.
.Sp
If the \s-1PPM\s0 version is 3.x, you will first need to add a \s-1PPM\s0 repository:
.Sp
.Vb 1
\& C:\e> ppm repo add bribes http://www.bribes.org/perl/ppm
.Ve
.Sp
To install libwww-perl:
.Sp
.Vb 1
\& C:\e> ppm install libwww\-perl \-force
.Ve
.RE
.PP
\fI1b.   Install the supporting libraries.\fR
.IX Subsection "1b. Install the supporting libraries."
.PP
Infoblox recommends using the ActiveState ppm tool to install the needed modules and dependencies, which may already be installed as part of the perl distribution. For some platforms, some Perl modules may not be available at the time of this writing. an example: Net::INET6Glue, which depends on IO::Socket::INET6; Net::INET6Glue can be compiled following the instructions at
.PP
.Vb 1
\& http://www.activestate.com/blog/2010/10/how\-install\-cpan\-modules\-activeperl
.Ve
.PP
using the Microsoft(r) \s-1SDK\s0 section of the instructions. Please refer to ActiveState's website and documentation for further questions.
.PP
\fI2.   \s-1PPM 3\s0.x: Add the Infoblox device as a repository.\fR
.IX Subsection "2. PPM 3.x: Add the Infoblox device as a repository."
.Sp
.RS 4
The following steps add the Infoblox device as a repository in your \s-1PPM 3\s0.x configuration, included with Active Perl from version 5.8.0.802 to 5.8.8.817.
.Sp
(For \s-1PPM 4.0,\s0 included with ActivePerl 5.8.8.818 and later, see \*(L"5.   \s-1PPM 4.0:\s0 Fetch and install Infoblox packages.\*(R")
.Sp
\&\fB2.1 Add a \s-1PPM\s0 repository to the configuration by issuing the ppm repository command;\fR
.Sp
.RS 4
*  For <repo_name>, type a meaningful name for the repository, such as 'Infoblox\-device'.
*  For <ip_addr>, type the \s-1IP\s0 address that you use for managing the Infoblox device or a
resolvable domain name (for a grid, use the address or domain name of the grid master).
.Sp
.Vb 4
\& C:\e> ppm repo add <repo_name> https://<ip_addr>/api/dist/ppm
\& Repositories:
\& [1] <repo_name>
\& [2] ActiveState Package Repository
.Ve
.Sp
(Note that the packages are connected via \s-1HTTPS,\s0 not \s-1HTTP.\s0 You only need to add the repository once.)
.RE
.RE
.RS 4
.Sp
\&\fB2.2 To ensure that you have the correct \s-1URL,\s0 open a Web browser and visit the \s-1URL\s0 you specified for the repository. If the \s-1URL\s0 is correct, you can see a directory listing.\fR
.RE
.PP
\fI3.   \s-1PPM 3\s0.x: Search the Infoblox device for Infoblox packages.\fR
.IX Subsection "3. PPM 3.x: Search the Infoblox device for Infoblox packages."
.Sp
.RS 4
Start \s-1PPM\s0 from a command shell:
.Sp
.Vb 3
\& C:\e> ppm
\& PPM \- Programmer\*(Aqs Package Manager version 3.4.
\& Copyright (c) 2001 ActiveState Software Inc.  All Rights Reserved.
\&
\& Entering interactive shell. Using Term::ReadLine::Perl as readline library.
\&
\& Type \*(Aqhelp\*(Aq to get started.
\&
\& ppm>
\&
\& Use PPM to find the Infoblox package:
\&
\& ppm> search Infoblox
\& Searching in Active Repositories
\& 1. Infoblox [4.9999990014709] Infoblox Data and Management API 4.x
.Ve
.RE
.PP
\fI4.   \s-1PPM 3\s0.x: Install Infoblox packages on your management system.\fR
.IX Subsection "4. PPM 3.x: Install Infoblox packages on your management system."
.Sp
.RS 4
Install the Infoblox package with \s-1PPM:\s0
.Sp
.Vb 7
\& ppm> install Infoblox
\& ====================
\& Install \*(AqInfoblox\*(Aq version 4.9999990014709 in ActivePerl 5.8.8.817.
\& ====================
\& Downloaded 167481 bytes.
\& ...
\& Successfully installed Infoblox version 4.9999990014709 in ActivePerl 5.8.8.817.
.Ve
.RE
.PP
\fI5.   \s-1PPM 4.0:\s0 Fetch and install Infoblox packages.\fR
.IX Subsection "5. PPM 4.0: Fetch and install Infoblox packages."
.Sp
.RS 4
There is a bug in \s-1PPM\s0 version 4.0 which is included in ActivePerl 5.8.8.818 and 5.8.8.819 which prevents \s-1PPM 4.0\s0 from accessing a module archive with https.  This bug, and ActiveState's workaround is described at:
.Sp
http://bugs.activestate.com/show_bug.cgi?id=52508
.Sp
If you have ActivePerl 5.8.8.818 or 5.8.8.819 (use perl \-v at a command line to see), either upgrade to ActivePerl 5.8.8.820 or use the workaround described in the bug: http://bugs.activestate.com/show_bug.cgi?id=52508
.Sp
You can also work around the bug by following the steps in section 5.3.
.Sp
If you have ActivePerl 5.8.8.820 installed, skip the patch step in 5.1 and immediately install the package by following the steps in section 5.2.
.Sp
\&\fB5.1   \s-1PPM 4.0:\s0 Patch lib/ActivePerl/PPM/limited_inc.pm\fR
.Sp
.RS 4
If you have ActivePerl 5.8.8.818 or 5.8.8.819, please patch your \s-1PPM\s0 installation so \s-1PPM\s0 will be able to find modules stored in repositories accessed by https.
.Sp
As shown in
.Sp
http://bugs.activestate.com/show_bug.cgi?id=52508
.Sp
apply this patch one time to your ActiveState \s-1PPM\s0 installation for each win32 client:
.Sp
.Vb 10
\& Index: lib/ActivePerl/PPM/limited_inc.pm
\& \-\-\- lib/ActivePerl/PPM/limited_inc.pm.~1~ Tue Nov 28 16:01:09 2006
\& +++ lib/ActivePerl/PPM/limited_inc.pm Tue Nov 28 16:01:09 2006
\& @@ \-9,7 +9,7 @@
\& (my $dir = _\|_FILE_\|_) =~ s,/ActivePerl/PPM/.*,,;
\& Make a new directory, naming it something like "ibpack", and then change the command prompt to that directory.
\& if (grep $_ eq $dir, @INC) {
\& \- shift(@INC) while $INC[0] ne $dir;
\& + push(@INC, shift(@INC)) while $INC[0] ne $dir;
\& }
\&
\& 1;
.Ve
.Sp
To find the full path to this file on your system, use perl \-V at the command line.  The contents of \f(CW@INC\fR are at the end of the output.  The limited_inc.pm file is in the lib directory, not in the site/lib directory.
.Sp
If you are unfamiliar with diffs, the + and \- notation just means to replace the line:
.Sp
.Vb 1
\& shift(@INC) while $INC[0] ne $dir;
.Ve
.Sp
line with the
.Sp
.Vb 1
\& push(@INC, shift(@INC)) while $INC[0] ne $dir;
.Ve
.Sp
When complete, the lines of the patched limited_inc.pm should look like:
.Sp
.Vb 5
\& if (grep $_ eq $dir, @INC) {
\& # patch from http://bugs.activestate.com/show_bug.cgi?id=52508
\& #    shift(@INC) while $INC[0] ne $dir;
\& push(@INC, shift(@INC)) while $INC[0] ne $dir;
\& }
.Ve
.Sp
Continue on to step 5.2
.RE
.RE
.RS 4
.Sp
\&\fB5.2   \s-1PPM 4.0:\s0 Install the Infoblox modules\fR
.Sp
.RS 4
Enter the following command, substituting the \s-1IP\s0 address or resolvable hostname of the Infoblox device for <ip_addr>:
.Sp
C:\etmp>ppm install https://<ip_addr>/api/dist/ppm/Infoblox.ppd
.Sp
or you can use the \s-1GUI\s0 version of \s-1PPM\s0 by running the \s-1GUI,\s0 searching for the Infoblox module and installing it in the usual way.
.RE
.RE
.RS 4
.Sp
\&\fB5.3   \s-1PPM 4.0\s0 Alternate Work Around to Install\fR
.Sp
.RS 4
Make a new directory and name the directory, for example, \*(L"ibpack\*(R". Then change the command prompt to that directory.
.Sp
Make a new directory, naming it something like \*(L"ibpack\*(R", and then change the command prompt to that directory.
.Sp
.Vb 1
\& C:\e> md ibpack
\&
\& C:\e> cd ibpack
\&
\& C:\eibpack>
.Ve
.Sp
Next, transfer the files that contain the module distribution from the Infoblox device to your management system using 'lwp\-request'. You must transfer two files: a description file, and the main distribution. The description file is always named \*(L"Infoblox.ppd\*(R".
.Sp
Enter the following command, substituting the \s-1IP\s0 address or resolvable hostname of the Infoblox device for <ip_addr>:
.Sp
.Vb 1
\& C:\eibpack> lwp\-request https://<ip_addr>/api/dist/ppm/Infoblox.ppd > Infoblox.ppd
.Ve
.Sp
View the Infoblox.ppd file:
.Sp
.Vb 10
\& C:\eibpack> type Infoblox.ppd
\& <?xml version="1.0" encoding="UTF\-8"?>
\& <SOFTPKG NAME="Infoblox" VERSION="4,999999001478,0,0">
\& <TITLE>Infoblox</TITLE>
\& <ABSTRACT>Infoblox Data and Management API 4.x</ABSTRACT>
\& <AUTHOR>Infoblox, Inc.</AUTHOR>
\& <IMPLEMENTATION>
\& <CODEBASE HREF="Infoblox\-4.999999001478.tar.gz" />
\& </IMPLEMENTATION>
\& </SOFTPKG>
.Ve
.Sp
The file name of the main distribution package is contained in the \s-1HREF\s0 attributes of the \s-1CODEBASE\s0 element. In the output shown above, it is \*(L"Infoblox\-4.999999001478.tar.gz\*(R". Use lwp-request to fetch that file.
.Sp
.Vb 1
\& C:\eibpack> lwp\-request https://<ip_addr>/api/dist/ppm/Infoblox\-4.999999001478.tar.gz > Infoblox\-4.999999001478.tar.gz
.Ve
.Sp
Use \s-1PPM\s0 to install the Infoblox \s-1DMAPI\s0 from the local file system:
.Sp
.Vb 5
\& C:\eibpack> ppm install Infoblox.ppd
\& Unpacking Infoblox\-4.999999001478...done
\& Generating HTML for Infoblox\-4.999999001478...done
\& Installing to site area...done
\& 64 files installed
.Ve
.Sp
The installation is complete.
.Sp
Uninstalling and Reinstalling the Infoblox Package
.Sp
After you configure \s-1PPM\s0 to search the Infoblox repository, use the appropriate command to uninstall and reinstall the Infoblox package:
.Sp
.Vb 6
\& ppm> uninstall Infoblox
\& ====================
\& Remove \*(AqInfoblox\*(Aq version 4.9999990014709 in ActivePerl 5.8.8.817.
\& ====================
\& ...
\& Successfully removed Infoblox version 4.9999990014709 from ActivePerl 5.8.8.817.
\&
\& ppm> install Infoblox
\& ====================
\& Install \*(AqInfoblox\*(Aq version 4.9999990014709 in ActivePerl 5.8.8.817.
\& ====================
\& ...
\& Successfully installed Infoblox version 4.9999990014709 in ActivePerl 5.8.8.817.
.Ve
.RE
.RE
.RS 4
.RE
.SS "Unix Management System"
.IX Subsection "Unix Management System"
\fIRequirements for Unix Management Systems\fR
.IX Subsection "Requirements for Unix Management Systems"
.PP
For IPv4 connections the following are required
.PP
\&\- Perl 5.8.8 or later
.PP
\&\- Crypt::SSLeay version 0.51 or later
.PP
\&\- LWP::UserAgent version 5.813 or later
.PP
\&\- XML::Parser
.PP
For IPv6 connections the following are required
.PP
\&\- Perl 5.14.2 or later
.PP
\&\- LWP::UserAgent version 6.02 or later and relevant dependencies, including LWP::Protocol::https
.PP
\&\- Net::INET6Glue
.PP
\&\- XML::Parser
.PP
to easily install the required libraries it is recommented to use \s-1CPAN,\s0 after installing perl run
.PP
.Vb 1
\& perl \-e shell \-MCPAN
.Ve
.PP
and once configured simply run
.PP
.Vb 2
\& install LWP::UserAgent
\& install XML::Parser
.Ve
.PP
and the other packages you need depending on IPv4 or IPv6 accessibility.
.PP
\fI\s-1DIRECT INSTALLATION\s0\fR
.IX Subsection "DIRECT INSTALLATION"
.PP
To install the Infoblox \s-1DMAPI\s0 packages on a \s-1UNIX\s0 management system, first download and install the \s-1API\s0 package from:
.PP
.Vb 1
\& https://<ip_addr>/api/dist/CPAN/authors/id/INFOBLOX/
.Ve
.PP
where ip_addr is the \s-1IP\s0 address of the appliance. Then locate and download the file Infoblox\-xxxxxxx.tar.gz
where xxxxxxx is an integer depending on your \s-1API\s0 package version.
.PP
After you download the package, extract it to a temporary directory with:
.PP
.Vb 1
\& tar xvfz Infoblox\-xxxxxxx.tar.gz
.Ve
.PP
Then execute the following commands:
.PP
.Vb 4
\& cd Infoblox\-xxxxxxx/
\& perl Makefile.PL
\& make
\& make install
.Ve
.PP
Optionally, before you install, test the package by running:
.PP
.Vb 1
\& make test
.Ve
.PP
The installation is complete.
.SH "Infoblox API Usage Guidelines"
.IX Header "Infoblox API Usage Guidelines"
The usage instructions are provided to assist you in using the Infoblox \s-1API.\s0
.SS "Library options"
.IX Subsection "Library options"
The Infoblox library can optionally be invoked by supplying the following options
.PP
.Vb 4
\&  :accessrights     \- If this is specified, \*(AqInfoblox::Grid::Admin::Group\*(Aq sends a request for \*(AqInfoblox::Grid::Admin::Permission\*(Aq to set the member \*(Aqpermission_list\*(Aq.
\&  :noaccessrights   \- If this is specified, \*(AqInfoblox::Grid::Admin::Group\*(Aq does not send a request for \*(AqInfoblox::Grid::Admin::Permission\*(Aq and the member \*(Aqpermission_list\*(Aq is not set. This is specified by default.
\&  :ipv6connection   \- This will allow the API to connect to IPv6 members.
\&  :hostaddress      \- if this is specified the new \*(AqInfoblox::DHCP::HostAddr\*(Aq and \*(AqInfoblox::DHCP::IPv6HostAddr\*(Aq types will be supported, see \*(AqInfoblox::DNS::Host\*(Aq for more information
.Ve
.PP
for example, to enable :ipv6connection the use line would be
.PP
.Vb 1
\&  use Infoblox qw ( :ipv6connection );
.Ve
.SS "\s-1UTF8\s0 Considerations"
.IX Subsection "UTF8 Considerations"
.RS 4
If there are utf\-8 characters in your script, remember to use the pragma 'use utf8'.  If you need more information, please see http://search.cpan.org/~nwclark/perl\-5.8.8/lib/utf8.pm on the utf8 pragma.
.RE
.SS "\fBsearch()\fP Considerations"
.IX Subsection "search() Considerations"
.RS 4
When using the \fBsearch()\fR method, you can retrieve more information than expected. Include additional checks for exact matches.
.RE
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 3
\& my @result_array = $session\->search(
\&        "object" => "Infoblox::DNS::Record::A",
\&        "name" => "infoblox.com" );
\&
\& my $obj;
\&
\& foreach my $match (@result_array)
\& {
\&    if( ($match\->name() eq "infoblox.com") && ($match\->ipv4addr() eq "2.2.2.2") )
\&    {
\&       print "Matches\en";
\&       $obj = $match;
\&    }
\& }
.Ve
.SS "Object inheritance"
.IX Subsection "Object inheritance"
.RS 4
Values set in \s-1PAPI\s0 object members might differ from the effective value used for that particular member during product operation, which could be a value inherited from the Grid or the Grid Member depending on the particular object in question and the state of the object override flags.
.RE
.SH "Alternate installation instructions"
.IX Header "Alternate installation instructions"
The following is provided for reference purposes only, as CPAN::Site has not supported this installation method for some time.
.PP
\fI\s-1CPAN INSTALLATION\s0 (obsolete, only for CPAN::Site pre 1.02)\fR
.IX Subsection "CPAN INSTALLATION (obsolete, only for CPAN::Site pre 1.02)"
.PP
To install the Infoblox \s-1DMAPI\s0 packages on a \s-1UNIX\s0 management system, first download and install ActivePerl (from www.activestate.com), and then do the following steps:
.PP
\&\*(L"1.   Install Crypt::SSLeay and CPAN::Site on your management system.\*(R"
.PP
\&\*(L"2.   Run CPAN::Site, instead of \s-1CPAN.\*(R"\s0
.PP
\&\*(L"3.   Add the Infoblox device \s-1URL\s0 to the top of the \s-1CPAN URL\s0 list.\*(R"
.PP
\&\*(L"4.   (Optional) Reduce the number of \s-1CPAN\s0 fetch methods.\*(R"
.PP
\&\*(L"5.   Reload the CPAN::Site index.\*(R"
.PP
\&\*(L"6.   Install the Infoblox package on your management system.\*(R"
.PP
Typically, the installation is done at the root level. See perlfaq8 under the question \*(L"How do I keep my own module/library directory?\*(R" for instructions on how to install a module as a user other than root.
.PP
If you have never used \s-1CPAN\s0 on the client \s-1UNIX\s0 machine, you will need to follow the instructions, when you run it for the first time, you will be prompted for many configuration variables.  Follow the procedure at 0.  First Time \s-1CPAN\s0 Installation
.PP
CPAN::Site Overview
.PP
The Infoblox modules are installed using a variant of \s-1CPAN\s0 named CPAN::Site.  See
.PP
http://search.cpan.org/search?mode=module&query=CPAN%3A%3ASite
.PP
for more information on CPAN::Site.
.PP
In the usual \s-1CPAN\s0 model, there is a single \s-1CPAN\s0 repository, and every copy is a full and complete copy of every available package.  In the CPAN::Site model, there are multiple repositories which may have a given module. As the Infoblox modules are deployed with CPAN::Site, you must use CPAN::Site instead of \s-1CPAN\s0 to install them.  This is covered in more detail in step 2.  If you use \s-1CPAN\s0 instead of CPAN::Site, typically the installation process will not find the Infoblox module in step 5.
.PP
One consequence of using CPAN::Site is the installation searches multiple sites for the same set of files, finding some of them in some locations but not in others. This is a normal result. Additionally, \s-1CPAN\s0 has the ability to search for and fetch files using several different mechanisms: curl, \s-1FTP,\s0 lynx, ncftpget, wget, and \s-1LWP.\s0 Both \s-1CPAN\s0 and CPAN::Site use each of these methods in turn when it tries to find files. If the \s-1CPAN\s0 configuration lists many sites in its \s-1URL\s0 list and many access methods, the installation may take a long time while CPAN::Site tries each of the access methods on each of the listed sites. For this reason, Infoblox recommends that you reduce the number of sites in the \s-1URL\s0 list and the number of access methods as described in step 4.
.PP
If you are installing a new version of the Infoblox modules and your urllist configuration still includes the Infoblox appliance, skip directly to steps 5 and 6.
.PP
First Time \s-1CPAN\s0 Installation
.IX Subsection "First Time CPAN Installation"
.Sp
.RS 4
If you have never used \s-1CPAN\s0 on this client machine before, enter the following command:
.Sp
.Vb 1
\& [root@lx2 ~]# perl \-MCPAN \-e shell
.Ve
.Sp
and follow the prompts through the \s-1CPAN\s0 configuration.  You can accept all of the defaults, except for the list of \s-1CPAN\s0 sites close to your physical location.  Navigate the menus and choose 1 or 2 \s-1CPAN\s0 sites that are close to your site.  When your configuration choices are complete, exit \s-1CPAN\s0 by typing exit at the prompt.
.RE
.PP
1.   Install Crypt::SSLeay and CPAN::Site on your management system.
.IX Subsection "1. Install Crypt::SSLeay and CPAN::Site on your management system."
.Sp
.RS 4
The Crypt::SSLeay package allows you to make an \s-1HTTPS\s0 connection to the Infoblox device. If Crypt::SSLeay is not already installed, open a terminal window, login as the root user, and use \s-1CPAN\s0 to install the Crypt::SSLeay package and all its dependencies:
.Sp
.Vb 1
\& lx> perl \-MCPAN \-e \*(Aqinstall Crypt::SSLeay\*(Aq
.Ve
.Sp
Install the CPAN::Site module:
.Sp
.Vb 1
\& lx> perl \-MCPAN \-e \*(Aqinstall CPAN::Site\*(Aq
.Ve
.Sp
When the system prompts: \*(L"Running client or server?\*(R", enter 'client'.  The installation process is asking if you want to install CPAN::Site as a server or as a client.  Since CPAN::Site retrieves the Infoblox modules from a server, CPAN::Site acts as a client.
.RE
.PP
2.   Run CPAN::Site, instead of \s-1CPAN.\s0
.IX Subsection "2. Run CPAN::Site, instead of CPAN."
.Sp
.RS 4
Use CPAN::Site instead of \s-1CPAN:\s0
.Sp
.Vb 2
\& lx> perl \-MCPAN::Site \-e shell
\& CPAN: File::HomeDir loaded ok
\&
\& cpan shell \-\- CPAN exploration and modules installation (v1.87)
\& ReadLine support enabled
.Ve
.Sp
You must use CPAN::Site every time to access the Infoblox modules.
.RE
.PP
3.   Add the Infoblox device \s-1URL\s0 to the top of the \s-1CPAN URL\s0 list.
.IX Subsection "3. Add the Infoblox device URL to the top of the CPAN URL list."
.Sp
.RS 4
\&\fB3.0 You can manipulate the contents of the urllist with the usual perl functions push, pop, shift and unshift.  push and pop operate on the end of the list, while shift and unshift operate on the beginning of the list.  To empty the urllist, issue repeated shift or pop operands like this:\fR
.Sp
.Vb 5
\& cpan> o conf urllist
\& urllist
\& [ftp://mirrors.kernel.org/pub/CPAN]
\& [http://mirrors.kernel.org/pub/CPAN]
\& Type \*(Aqo conf\*(Aq to view all configuration items
\&
\& cpan> o conf urllist shift
\&
\& cpan> o conf urllist shift
\&
\& cpan> o conf urllist
\& urllist
\&Type \*(Aqo conf\*(Aq to view all configuration items
.Ve
.Sp
.RS 4
You can put an item on the list at the beginning with unshift and at the end of the list with push:
.Sp
.Vb 1
\& cpan> o conf urllist unshift ftp://mirrors.kernel.org/pub/CPAN
\&
\& cpan> o conf urllist push ftp://bogus.site.at.end.of.list/CPAN
\&
\& cpan> o conf urllist
\& urllist
\& [ftp://mirrors.kernel.org/pub/CPAN]
\& [ftp://bogus.site.at.end.of.list/CPAN]
\&Type \*(Aqo conf\*(Aq to view all configuration items
.Ve
.Sp
When you finish configuring the urllist, you must have the Infoblox appliance as the first item in the list.  This is a requirement of CPAN::Site.  The best configuration of urllist is a two-item list with the Infoblox appliance first and one other close, fast \s-1CPAN\s0 site second.  For example, at the Infoblox headquarters a good set of choices for urllist is:
.Sp
.Vb 5
\& cpan> o conf urllist
\& urllist
\& [https://<ip_addr>/api/dist/CPAN]
\& [ftp://mirrors.kernel.org/pub/CPAN]
\&Type \*(Aqo conf\*(Aq to view all configuration items
.Ve
.Sp
The complete list of \s-1CPAN\s0 sites can be found at:
.Sp
http://www.cpan.org/SITES.html
.RE
.RE
.RS 4
.Sp
\&\fB3.1 Configure the Infoblox device first in the \s-1CPAN URL\s0 list, so that CPAN::Site finds it first when searching for packages. Type the \s-1IP\s0 address or domain name of your Infoblox device for <ip_addr> (for a grid, use the address of the grid master):\fR
.Sp
.RS 4
cpan> o conf urllist unshift https://<ip_addr>/api/dist/CPAN
.Sp
(Note: You only need to add the repository to the \s-1URL\s0 list once.)
.RE
.RE
.RS 4
.Sp
\&\fB3.2 You must have at least one other normal \s-1CPAN\s0 site in the list in case your client needs other public packages. The following is a sample \s-1URL\s0 list for a set of \s-1CPAN\s0 sites in North America:\fR
.Sp
.Vb 6
\& cpan> o conf urllist
\& urllist
\& [https://<ip_addr>/api/dist/CPAN]
\& [ftp://mirrors.kernel.org/pub/CPAN]
\& [ftp://cpan.pair.com/pub/CPAN/]
\&Type \*(Aqo conf\*(Aq to view all configuration items
.Ve
.Sp
.RS 4
If you do not have any other \s-1CPAN\s0 sites in your \s-1URL\s0 list, add at least one before continuing. Use the command
.Sp
o conf urllist push <url_string>
.RE
.RE
.RS 4
.Sp
\&\fB3.3 To ensure that you have the correct \s-1URL\s0 for the Infoblox modules, open a Web browser and visit the \s-1URL\s0 you specified for the repository, in this example https://<ip_addr>/api/dist/CPAN. If the \s-1URL\s0 is correct, you can see a directory listing of the module files.\fR
.Sp
\&\fB3.4 Save your \s-1CPAN\s0 configuration:\fR
.Sp
.Vb 2
\& cpan> o conf commit
\&commit: wrote \*(Aq/usr/lib/perl5/5.8.8/CPAN/Config.pm\*(Aq
.Ve
.RE
.RS 4
.RE
.PP
4. (Optional) Reduce the number of \s-1CPAN\s0 fetch methods.
.IX Subsection "4. (Optional) Reduce the number of CPAN fetch methods."
.Sp
.RS 4
By reducing the number of \s-1CPAN\s0 fetch methods, you can shorten the installation process. For an explanation why Infoblox recommends this step, see the note in the introduction (before step 1).
.Sp
.Vb 1
\& CPAN (and CPAN::Site) supports up to six different ways to search for and fetch files: curl, FTP, lynx, ncftpget, wget, and LWP. Infoblox recommends that you choose the method that work best for you and only configure those methods. For the typical cases, Infoblox recommends keeping LWP, FTP, and ncftpget enabled and disabling curl, lynx and wget. To disable a fetch method, set it to an empty string and then commit the configuration. In the example below, you first display the configuration parameters for curl, lynx, and wget, and then set them to an empty string:
\&
\& cpan> o conf curl
\& curl                               [/usr/bin/curl]
\&
\& cpan> o conf curl ""
\& curl                               []
\&
\& cpan> o conf lynx
\& lynx                            [/usr/bin/lynx]
\&
\& cpan> o conf lynx ""
\& lynx                            []
\&
\& cpan> o conf wget
\& wget                            [/usr/bin/wget]
\&
\& cpan> o conf wget ""
\& wget                            []
\&
\& cpan> o conf commit
\& commit: wrote \*(Aq/usr/lib/perl5/5.8.8/CPAN/Config.pm\*(Aq
.Ve
.RE
.PP
5.   Reload the CPAN::Site index.
.IX Subsection "5. Reload the CPAN::Site index."
.Sp
.RS 4
Use \s-1CPAN\s0 to reload the CPAN::Site index:
.Sp
.Vb 10
\& cpan> reload index
\& CPAN: Storable loaded ok
\& Going to read /root/.cpan/Metadata
\& Database was generated on Sat, 09 Sep 2006 22:32:52 GMT
\& CPAN: LWP::UserAgent loaded ok
\& Fetching with LWP:
\& https://<ip_addr>/api/dist/CPAN/authors/01mailrc.txt.gz
\& ...
\& Fetching with LWP:
\& https://<ip_addr>/api/dist/CPAN/modules/03modlist.data.gz
\& LWP failed with code[404] message[Not Found]
\& Fetching with LWP:
\& ftp://mirrors.kernel.org/pub/CPAN/modules/03modlist.data.gz
\& Going to read /root/.cpan/sources/modules/03modlist.data.gz
\& Going to write /root/.cpan/Metadata
.Ve
.Sp
Note: Unlike \s-1CPAN,\s0 CPAN::Site is designed so that some of the files that describe the available packages are not found in all of the locations in your \s-1URL\s0 list.  It is normal to see some \*(L"file not found\*(R" errors during the index reload.
.RE
.PP
6.   Install the Infoblox package on your management system.
.IX Subsection "6. Install the Infoblox package on your management system."
.Sp
.RS 4
The usual \s-1CPAN\s0 process for installing Perl modules is:
.Sp
.RS 4
\&\fB6.1 Search\fR
.Sp
\&\fB6.2 Test\fR
.Sp
\&\fB6.3 Install\fR
.Sp
\&\fB6.4 Uninstall and Reinstall\fR
.RE
.RE
.RS 4
.Sp
\&\fB6.1 Search\fR
.Sp
.RS 4
Use the m operator to search for the Infoblox module:
.Sp
.Vb 10
\& cpan> m /Infoblox/
\& CPAN: Storable loaded ok
\& Going to read /root/.cpan/Metadata
\& Database was generated on Mon, 18 Sep 2006 06:29:55 GMT
\& CPAN: LWP::UserAgent loaded ok
\& . . .
\& Fetching with LWP:
\& https://<ip_addr>/api/dist/CPAN/site/01mailrc.txt.gz
\& Going to read /root/.cpan/sources/site/01mailrc.txt.gz
\& Module id = Infoblox
\& CPAN_USERID  INFOBLOX (Infoblox Technical Support <support@infoblox.com>)
\& CPAN_VERSION 4.9999990014709
\& CPAN_FILE    INFOBLOX/Infoblox\-4.9999990014709.tar.gz
\& INST_FILE    (not installed)
.Ve
.Sp
If the search cannot find the Infoblox modules:
.Sp
a.  Ensure that you are using CPAN::Site, not \s-1CPAN\s0 as shown in 2.   Run CPAN::Site, instead of \s-1CPAN.\s0
b.  Check the Infoblox appliance in the urllist as shown in step 3.3.
.RE
.RE
.RS 4
.Sp
\&\fB6.2 Test\fR
.Sp
.RS 4
You can optionally test the package before the installation:
.Sp
.Vb 7
\& cpan> test Infoblox
\& Running test for module Infoblox
\& Running make for Infoblox\-4.999990014709.tar.gz
\& ...
\& All tests successful.
\& Files=1, Tests=1,  0 wallclock secs ( 0.74 cusr +  0.08 csys =  0.82 CPU)
\& /usr/bin/make test \- OK
.Ve
.RE
.RE
.RS 4
.Sp
\&\fB6.3 Install\fR
.Sp
.RS 4
Install the Infoblox package:
.Sp
.Vb 7
\& cpan> install Infoblox
\& Running install for module Infoblox
\& Running make for INFOBLOX/Infoblox\-4.9999990014709.tar.gz
\& ...
\& Writing /usr/lib/perl5/site_perl/5.8.8/i386\-linux\-thread\-multi/auto/Infoblox/.packlist
\& Appending installation info to /usr/lib/perl5/5.8.8/i386\-linux\-thread\-multi/perllocal.pod
\& /usr/bin/make install  \-\- OK
.Ve
.Sp
To exit the CPAN::Site shell:
.Sp
.Vb 1
\& cpan> quit
.Ve
.Sp
The installation is complete.
.RE
.RE
.RS 4
.Sp
\&\fB6.4 Uninstalling and Reinstalling the Infoblox Package\fR
.Sp
.RS 4
Although not directly supported by \s-1CPAN,\s0 it is simple to uninstall the Infoblox package using published techniques. One way to do it is provided by the modrm program that is described in the ExtUtils::Packlist documentation. See http://search.cpan.org/~yves/ExtUtils\-Install\-1.41/lib/ExtUtils/Packlist.pm#EXAMPLE for the modrm program. To reinstall it, repeat steps 5 and 6 above.
.RE
.RE
.RS 4
.RE

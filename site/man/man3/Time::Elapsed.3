.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Time::Elapsed 3"
.TH Time::Elapsed 3 "2018-12-25" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Time::Elapsed
.SH "VERSION"
.IX Header "VERSION"
version 0.33
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 3
\&   use Time::Elapsed qw( elapsed );
\&   $t = 1868401;
\&   print elapsed( $t );
.Ve
.PP
prints:
.PP
.Vb 1
\&   21 days, 15 hours and 1 second
.Ve
.PP
If you set the language to turkish:
.PP
.Vb 1
\&   print elapsed( $t, \*(AqTR\*(Aq );
.Ve
.PP
prints:
.PP
.Vb 1
\&   21 gÃ¼n, 15 saat ve 1 saniye
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module transforms the elapsed seconds into a human readable string.
It can be used for (for example) rendering \f(CW\*(C`uptime\*(C'\fR values into
a human readable form. The resulting string will be an approximation.
See the \*(L"\s-1CAVEATS\*(R"\s0 section for more information.
.SH "NAME"
Time::Elapsed \- Displays the elapsed time as a human readable string.
.SH "IMPORT PARAMETERS"
.IX Header "IMPORT PARAMETERS"
This module does not export anything by default. You have to
specify import parameters. \f(CW\*(C`:all\*(C'\fR key does not include
\&\f(CW\*(C`import commands\*(C'\fR.
.SS "\s-1FUNCTIONS\s0"
.IX Subsection "FUNCTIONS"
.Vb 1
\&   elapsed
.Ve
.SS "\s-1KEYS\s0"
.IX Subsection "KEYS"
.Vb 1
\&   :all
.Ve
.SS "\s-1COMMANDS\s0"
.IX Subsection "COMMANDS"
.Vb 4
\&   Parameter   Description
\&   \-\-\-\-\-\-\-\-\-   \-\-\-\-\-\-\-\-\-\-\-
\&   \-compile    All available language data will immediately be compiled
\&               and placed into an internal cache.
.Ve
.SH "FUNCTIONS"
.IX Header "FUNCTIONS"
.SS "elapsed \s-1SECONDS\s0 [, \s-1OPTIONS\s0 ]"
.IX Subsection "elapsed SECONDS [, OPTIONS ]"
.IP "\(bu" 4
\&\f(CW\*(C`SECONDS\*(C'\fR must be a number representing the elapsed seconds.
If it is false, \f(CW0\fR (zero) will be used. If it is not defined, \f(CW\*(C`undef\*(C'\fR
will be returned.
.IP "\(bu" 4
The optional argument \f(CW\*(C`OPTIONS\*(C'\fR is a either a string containing the language
id or a hashref containing several options. These two codes are equal:
.Sp
.Vb 2
\&   elapsed $secs, \*(AqDE\*(Aq;
\&   elapsed $secs, { lang => \*(AqDE\*(Aq };
.Ve
.Sp
The hashref is used to pass extra options.
.PP
\fI\s-1OPTIONS\s0\fR
.IX Subsection "OPTIONS"
.PP
lang
.IX Subsection "lang"
.PP
The optional argument language id, represents the language to use when
converting the data to a string. The language section is really a
standalone module in the \f(CW\*(C`Time::Elapsed::Lang::\*(C'\fR namespace, so it is
possible to extend the language support on your own. Currently
supported languages are:
.PP
.Vb 5
\&   Parameter  Description
\&   \-\-\-\-\-\-\-\-\-  \-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
\&      EN      English (default)
\&      TR      Turkish
\&      DE      German
.Ve
.PP
Language ids are case-insensitive. These are all same: \f(CW\*(C`en\*(C'\fR, \f(CW\*(C`EN\*(C'\fR, \f(CW\*(C`eN\*(C'\fR.
.PP
weeks
.IX Subsection "weeks"
.PP
If this option is present and set to a treu value, then you'll get \*(L"weeks\*(R"
instead of \*(L"days\*(R" in the output if the output has a days value between 7 days
and 28 days.
.SH "CAVEATS"
.IX Header "CAVEATS"
.IP "\(bu" 4
The calculation of the elapsed time is only an approximation, since these
values are used internally:
.Sp
.Vb 3
\&   1 Day   =  24 Hour
\&   1 Month =  30 Day
\&   1 Year  = 365 Day
.Ve
.Sp
See
\&\*(L"How Datetime Math is Done\*(R" in DateTime
for more information on this subject. Also see \f(CW\*(C`in_units()\*(C'\fR method in
DateTime::Duration.
.IP "\(bu" 4
This module' s source file is \s-1UTF\-8\s0 encoded (without a \s-1BOM\s0) and it returns
\&\s-1UTF\-8\s0 values whenever possible.
.IP "\(bu" 4
Currently, the module won't work with any perls older than 5.6 because of
the \s-1UTF\-8\s0 encoding and the usage of utf8 pragma. However, the pragma
limitation can be by-passed with a \f(CW%INC\fR trick under 5.005_04 (tested)
and can be used with english language (default behavior), but any other
language will probably need unicode support.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
PTools::Time::Elapsed, DateTime, DateTime::Format::Duration,
Time::Duration.
.SH "AUTHOR"
.IX Header "AUTHOR"
Burak Gursoy <burak@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2007 by Burak Gursoy.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

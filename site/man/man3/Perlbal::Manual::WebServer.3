.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Perlbal::Manual::WebServer 3"
.TH Perlbal::Manual::WebServer 3 "2012-02-20" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Perlbal::Manual::WebServer \- Configuring Perlbal as a Web Server
.SS "\s-1VERSION\s0"
.IX Subsection "VERSION"
Perlbal 1.78.
.SS "\s-1DESCRIPTION\s0"
.IX Subsection "DESCRIPTION"
How to configure a Perlbal Web Server service.
.SS "\s-1READ ME FIRST\s0"
.IX Subsection "READ ME FIRST"
Please read Perlbal::Manual::Configuration first for a better explanation on how to configure Perlbal. This document will make much more sense after reading that.
.SS "Configuring Perlbal as a Web Server"
.IX Subsection "Configuring Perlbal as a Web Server"
By default, perlbal looks for a configuration file at \fI/etc/perlbal/perlbal.conf\fR.
.PP
You can also point perlbal at a different configuration file with the \fB\-c\fR flag.
.PP
.Vb 1
\&    $ perlbal \-c /home/user/perlbal.conf
.Ve
.PP
Here's a very simple example where we configure a simple web server that serves an index file under /tmp
.PP
.Vb 5
\&    CREATE SERVICE perlbal_test
\&        SET role           = web_server
\&        SET listen         = 0.0.0.0:80
\&        SET docroot        = /tmp
\&    ENABLE perlbal_test
.Ve
.PP
The first line creates a service called \f(CW\*(C`perlbal_test\*(C'\fR. The last line enables that service.
.PP
The three parameters state \- in order \- that the service is a web server, that it listens on all addresses on port 80, and that its document root is \f(CW\*(C`/tmp\*(C'\fR.
.SS "Parameters"
.IX Subsection "Parameters"
You can set parameters via commands of either forms:
.PP
.Vb 2
\&    SET <service\-name> <param> = <value>
\&    SET <param> = <value>
.Ve
.IP "\fBdirindexing\fR = bool" 8
.IX Item "dirindexing = bool"
Show directory indexes when an \s-1HTTP\s0 request is for a directory. Warning: this is not an async operation, so will slow down Perlbal on heavily loaded sites.
.Sp
Default if false.
.IP "\fBdocroot\fR = directory/root" 8
.IX Item "docroot = directory/root"
Directory root for web server.
.IP "\fBenable_concatenate_get\fR = bool" 8
.IX Item "enable_concatenate_get = bool"
Enable Perlbal's multiple-files-in-one-request mode, where a client have use a comma-separated list of files to return, always in text/plain.
.Sp
Useful for web apps which have dozens/hundreds of tiny css/js files, and don't trust browsers/etc to do pipelining.
.Sp
Decreases overall round-trip latency a bunch, but requires app to be modified to support it. See t/17\-concat.t test for details.
.Sp
Default is false.
.IP "\fBenable_md5\fR = bool" 8
.IX Item "enable_md5 = bool"
Enable verification of the Content\-MD5 header in \s-1HTTP PUT\s0 requests.
.Sp
Default is true.
.IP "\fBenable_delete\fR = bool" 8
.IX Item "enable_delete = bool"
Enable \s-1HTTP DELETE\s0 requests.
.Sp
Default is false.
.IP "\fBenable_put\fR = bool" 8
.IX Item "enable_put = bool"
Enable \s-1HTTP PUT\s0 requests.
.Sp
Default is false.
.IP "\fBindex_files\fR = comma-separated list of filenames" 8
.IX Item "index_files = comma-separated list of filenames"
Comma-separated list of filenames to load when a user visits a directory \s-1URL,\s0 listed in order of preference.
.Sp
Default is index.html.
.IP "\fBmax_put_size\fR = size" 8
.IX Item "max_put_size = size"
The maximum content-length that will be accepted for a \s-1PUT\s0 request, if enable_put is on.
.Sp
Default is 0, which means there is no limit.
.IP "\fBmin_put_directory\fR = int" 8
.IX Item "min_put_directory = int"
If \s-1PUT\s0 requests are enabled, require this many levels of directories to already exist. If not, fail.
.Sp
Default is 0.
.IP "\fBserver_tokens\fR = bool" 8
.IX Item "server_tokens = bool"
Whether to provide a \*(L"Server\*(R" header.
.Sp
Perlbal by default adds a header to all replies (such as the web_server role). By setting this default to \*(L"off\*(R", you can prevent Perlbal from identifying itself.
.Sp
Default is \f(CW\*(C`on\*(C'\fR.
.SS "\s-1SEE ALSO\s0"
.IX Subsection "SEE ALSO"
Perlbal::Manual::Configuration,
Perlbal::Manual::Management.

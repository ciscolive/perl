.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Scalar::Does::MooseTypes 3"
.TH Scalar::Does::MooseTypes 3 "2017-01-31" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Scalar::Does::MooseTypes \- (DEPRECATED) additional constants for Scalar::Does, inspired by the built\-in Moose type constraints
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 3
\&  use 5.010;
\&  use Scalar::Does qw(does);
\&  use Scalar::Does::MooseTypes \-all;
\&  
\&  my $var = [];
\&  if (does $var, ArrayRef) {
\&    say "It\*(Aqs an arrayref!";
\&  }
.Ve
.SH "STATUS"
.IX Header "STATUS"
This module is deprecated; use Types::Standard instead:
.PP
.Vb 3
\&  use 5.010;
\&  use Scalar::Does qw(does);
\&  use Types::Standard qw(ArrayRef);
\&  
\&  my $var = [];
\&  if (does $var, ArrayRef) {
\&    say "It\*(Aqs an arrayref!";
\&  }
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
.SS "Constants"
.IX Subsection "Constants"
.ie n .IP """Any""" 4
.el .IP "\f(CWAny\fR" 4
.IX Item "Any"
.PD 0
.ie n .IP """Item""" 4
.el .IP "\f(CWItem\fR" 4
.IX Item "Item"
.ie n .IP """Bool""" 4
.el .IP "\f(CWBool\fR" 4
.IX Item "Bool"
.ie n .IP """Undef""" 4
.el .IP "\f(CWUndef\fR" 4
.IX Item "Undef"
.ie n .IP """Defined""" 4
.el .IP "\f(CWDefined\fR" 4
.IX Item "Defined"
.ie n .IP """Value""" 4
.el .IP "\f(CWValue\fR" 4
.IX Item "Value"
.ie n .IP """Str""" 4
.el .IP "\f(CWStr\fR" 4
.IX Item "Str"
.ie n .IP """Num""" 4
.el .IP "\f(CWNum\fR" 4
.IX Item "Num"
.ie n .IP """Int""" 4
.el .IP "\f(CWInt\fR" 4
.IX Item "Int"
.ie n .IP """ClassName""" 4
.el .IP "\f(CWClassName\fR" 4
.IX Item "ClassName"
.ie n .IP """RoleName""" 4
.el .IP "\f(CWRoleName\fR" 4
.IX Item "RoleName"
.ie n .IP """Ref""" 4
.el .IP "\f(CWRef\fR" 4
.IX Item "Ref"
.ie n .IP """ScalarRef""" 4
.el .IP "\f(CWScalarRef\fR" 4
.IX Item "ScalarRef"
.ie n .IP """ArrayRef""" 4
.el .IP "\f(CWArrayRef\fR" 4
.IX Item "ArrayRef"
.ie n .IP """HashRef""" 4
.el .IP "\f(CWHashRef\fR" 4
.IX Item "HashRef"
.ie n .IP """CodeRef""" 4
.el .IP "\f(CWCodeRef\fR" 4
.IX Item "CodeRef"
.ie n .IP """RegexpRef""" 4
.el .IP "\f(CWRegexpRef\fR" 4
.IX Item "RegexpRef"
.ie n .IP """GlobRef""" 4
.el .IP "\f(CWGlobRef\fR" 4
.IX Item "GlobRef"
.ie n .IP """FileHandle""" 4
.el .IP "\f(CWFileHandle\fR" 4
.IX Item "FileHandle"
.ie n .IP """Object""" 4
.el .IP "\f(CWObject\fR" 4
.IX Item "Object"
.PD
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Types::Standard.
.PP
Scalar::Does,
Moose::Util::TypeConstraints.
.SH "AUTHOR"
.IX Header "AUTHOR"
Toby Inkster <tobyink@cpan.org>.
.SH "COPYRIGHT AND LICENCE"
.IX Header "COPYRIGHT AND LICENCE"
This software is copyright (c) 2012\-2014, 2017 by Toby Inkster.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
.SH "DISCLAIMER OF WARRANTIES"
.IX Header "DISCLAIMER OF WARRANTIES"
\&\s-1THIS PACKAGE IS PROVIDED \*(L"AS IS\*(R" AND WITHOUT ANY EXPRESS OR IMPLIED
WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
MERCHANTIBILITY AND FITNESS FOR A PARTICULAR PURPOSE.\s0

.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.41)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Minion::Command::minion::job 3"
.TH Minion::Command::minion::job 3 "2020-10-24" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Minion::Command::minion::job \- Minion job command
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  Usage: APPLICATION minion job [OPTIONS] [IDS]
\&
\&    ./myapp.pl minion job
\&    ./myapp.pl minion job 10023
\&    ./myapp.pl minion job \-w
\&    ./myapp.pl minion job \-w 23
\&    ./myapp.pl minion job \-s
\&    ./myapp.pl minion job \-f 10023
\&    ./myapp.pl minion job \-q important \-t foo \-t bar \-S inactive
\&    ./myapp.pl minion job \-Q \*(Aqhost:localhost\*(Aq \-S inactive
\&    ./myapp.pl minion job \-e foo \-a \*(Aq[23, "bar"]\*(Aq
\&    ./myapp.pl minion job \-e foo \-x 1 \-P 10023 \-P 10024 \-p 5 \-q important
\&    ./myapp.pl minion job \-e \*(Aqfoo\*(Aq \-n \*(Aq{"test":123}\*(Aq
\&    ./myapp.pl minion job \-R \-d 10 \-E 300 10023
\&    ./myapp.pl minion job \-\-remove 10023
\&    ./myapp.pl minion job \-n \*(Aq["test"]\*(Aq
\&    ./myapp.pl minion job \-L
\&    ./myapp.pl minion job \-L some_lock some_other_lock
\&    ./myapp.pl minion job \-b jobs \-a \*(Aq[12]\*(Aq
\&    ./myapp.pl minion job \-b jobs \-a \*(Aq[12]\*(Aq 23 24 25
\&
\&  Options:
\&    \-A, \-\-attempts <number>     Number of times performing this new job will be
\&                                attempted, defaults to 1
\&    \-a, \-\-args <JSON array>     Arguments for new job or worker remote control
\&                                command in JSON format
\&    \-b, \-\-broadcast <command>   Broadcast remote control command to one or more
\&                                workers
\&    \-d, \-\-delay <seconds>       Delay new job for this many seconds
\&    \-E, \-\-expire <seconds>      New job is valid for this many seconds before
\&                                it expires
\&    \-e, \-\-enqueue <task>        New job to be enqueued
\&    \-f, \-\-foreground            Retry job in "minion_foreground" queue and
\&                                perform it right away in the foreground (very
\&                                useful for debugging)
\&    \-H, \-\-history               Show queue history
\&    \-h, \-\-help                  Show this summary of available options
\&        \-\-home <path>           Path to home directory of your application,
\&                                defaults to the value of MOJO_HOME or
\&                                auto\-detection
\&    \-L, \-\-locks                 List active named locks
\&    \-l, \-\-limit <number>        Number of jobs/workers to show when listing
\&                                them, defaults to 100
\&    \-m, \-\-mode <name>           Operating mode for your application, defaults to
\&                                the value of MOJO_MODE/PLACK_ENV or
\&                                "development"
\&    \-n, \-\-notes <JSON>          Notes in JSON format for new job or list only
\&                                jobs with one of these notes
\&    \-o, \-\-offset <number>       Number of jobs/workers to skip when listing
\&                                them, defaults to 0
\&    \-P, \-\-parent <id>           One or more jobs the new job depends on
\&    \-p, \-\-priority <number>     Priority of new job, defaults to 0
\&    \-q, \-\-queue <name>          Queue to put new job in, defaults to "default",
\&                                or list only jobs in these queues
\&    \-R, \-\-retry                 Retry job
\&        \-\-remove                Remove job
\&    \-S, \-\-state <name>          List only jobs in these states
\&    \-s, \-\-stats                 Show queue statistics
\&    \-T, \-\-tasks                 List available tasks
\&    \-t, \-\-task <name>           List only jobs for these tasks
\&    \-U, \-\-unlock <name>         Release named lock
\&    \-w, \-\-workers               List workers instead of jobs, or show
\&                                information for a specific worker
\&    \-x, \-\-lax <bool>            Jobs this job depends on may also have failed
\&                                to allow for it to be processed
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Minion::Command::minion::job manages the Minion job queue.
.SH "ATTRIBUTES"
.IX Header "ATTRIBUTES"
Minion::Command::minion::job inherits all attributes from Mojolicious::Command and implements the following new
ones.
.SS "description"
.IX Subsection "description"
.Vb 2
\&  my $description = $job\->description;
\&  $job            = $job\->description(\*(AqFoo\*(Aq);
.Ve
.PP
Short description of this command, used for the command list.
.SS "usage"
.IX Subsection "usage"
.Vb 2
\&  my $usage = $job\->usage;
\&  $job      = $job\->usage(\*(AqFoo\*(Aq);
.Ve
.PP
Usage information for this command, used for the help screen.
.SH "METHODS"
.IX Header "METHODS"
Minion::Command::minion::job inherits all methods from Mojolicious::Command and implements the following new
ones.
.SS "run"
.IX Subsection "run"
.Vb 1
\&  $job\->run(@ARGV);
.Ve
.PP
Run this command.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Minion, <https://minion.pm>, Mojolicious::Guides, <https://mojolicious.org>.

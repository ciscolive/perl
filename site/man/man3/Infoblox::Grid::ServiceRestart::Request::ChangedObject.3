.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Infoblox::Grid::ServiceRestart::Request::ChangedObject 3"
.TH Infoblox::Grid::ServiceRestart::Request::ChangedObject 3 "2018-06-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Infoblox::Grid::ServiceRestart::Request::ChangedObject \- A Grid service restart request changed object.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The Grid service restart request changed object provides information about changes that are waiting for the restart.
.SH "SESSION METHODS"
.IX Header "SESSION METHODS"
This section describes all the methods in a Session module that you can apply to a Grid service restart request changed object.
.SS "Infoblox::Session\->get( )"
.IX Subsection "Infoblox::Session->get( )"
.RS 4
Use this method to retrieve all the matching objects from the Infoblox appliance. See Infoblox::Session\->\fBget()\fR for parameters and return values.
.IP "\fBKey Reference\fR" 4
.IX Item "Key Reference"
.Vb 1
\& Apply the following attribute to get a specific object:
\&
\&  source  \- Infoblox::Grid::ServiceRestartGroup or Infoblox::Grid::Member object.
\&  service \- string that contains service that is waiting for restart. The default value is \*(AqALL\*(Aq.
.Ve
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& my @retrieved_objs = $session\->get(
\&     object  => \*(AqInfoblox::Grid::ServiceRestart::Request::ChangedObject\*(Aq,
\&     service => \*(AqDHCPV6\*(Aq,
\& );
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->search( )"
.IX Subsection "Infoblox::Session->search( )"
.RS 4
Use this method to search for objects in the Infoblox appliance. See Infoblox::Session\->\fBsearch()\fR for parameters and return values.
.IP "\fBKey Reference\fR" 4
.IX Item "Key Reference"
.Vb 1
\& Apply the following attribute to search for a specific object:
\&
\&  source  \- Infoblox::Grid::ServiceRestartGroup or Infoblox::Grid::Member object.
\&  service \- string that contains service that is waiting for changes. The default value is \*(AqALL\*(Aq.
.Ve
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& my @retrieved_objs = $session\->search(
\&     object  => \*(AqInfoblox::Grid::ServiceRestart::Request::ChangedObject\*(Aq,
\&     service => \*(AqDHCPV6\*(Aq,
\& );
.Ve
.RE
.RS 4
.RE
.SH "METHODS"
.IX Header "METHODS"
This section describes all the methods that you can use to set or retrieve the attribute values of the object.
.SS "action( )"
.IX Subsection "action( )"
.RS 4
Use this method to retrieve the operation on the changed object. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get action value
\& my $value = $object\->action();
.Ve
.RE
.RS 4
.RE
.SS "changed_time( )"
.IX Subsection "changed_time( )"
.RS 4
Use this method to retrieve the timestamp of the change. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the number of seconds elapsed since January 1, 1970, in \s-1UTC\s0 format.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get changed_time value
\& my $changed_time = $object\->changed_time();
.Ve
.RE
.RS 4
.RE
.SS "changed_properties( )"
.IX Subsection "changed_properties( )"
.RS 4
Use this method to retrieve the list of properties changed in the object. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns a reference to an array of strings. Each string in the array describes the changes.
The descriptions are similiar to the entries in the Change Audit Log column in the \s-1GUI.\s0
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get changed_properties value
\& my $changed_properties = $object\->changed_properties();
.Ve
.RE
.RS 4
.RE
.SS "object_name( )"
.IX Subsection "object_name( )"
.RS 4
Use this method to retrieve the name of the changed object. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
none
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the object name in string format.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get object_name value
\& my $value = $object\->object_name();
.Ve
.RE
.RS 4
.RE
.SS "object_type( )"
.IX Subsection "object_type( )"
.RS 4
Use this method to retrieve the type of the changed object. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get object_type value
\& my $value = $object\->object_type();
.Ve
.RE
.RS 4
.RE
.SS "user_name( )"
.IX Subsection "user_name( )"
.RS 4
Use this method to retrieve the user name who have changed the object properties. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get user_name value
\& my $value = $object\->user_name();
.Ve
.RE
.RS 4
.RE
.SH "AUTHOR"
.IX Header "AUTHOR"
Infoblox Inc. <http://www.infoblox.com/>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Infoblox::Session,
Infoblox::Session\->\fBget()\fR,
Infoblox::Session\->\fBsearch()\fR,
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2017 Infoblox Inc.

.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Data::Object::Class 3"
.TH Data::Object::Class 3 "2020-02-17" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Data::Object::Class
.SH "ABSTRACT"
.IX Header "ABSTRACT"
Class Builder for Perl 5
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  package Identity;
\&
\&  use Data::Object::Class;
\&
\&  package main;
\&
\&  my $id = Identity\->new;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This package modifies the consuming package making it a class.
.SH "INHERITS"
.IX Header "INHERITS"
This package inherits behaviors from:
.PP
Moo
.SH "SCENARIOS"
.IX Header "SCENARIOS"
This package supports the following scenarios:
.SS "extends"
.IX Subsection "extends"
.Vb 1
\&  # given: synopsis
\&
\&  package Person;
\&
\&  use Data::Object::Class;
\&
\&  extends \*(AqIdentity\*(Aq;
\&
\&  package main;
\&
\&  my $person = Person\->new;
.Ve
.PP
This package supports the \f(CW\*(C`extends\*(C'\fR keyword, which is used to declare
superclasses your class will inherit from. See Moo for more information.
.SS "has"
.IX Subsection "has"
.Vb 1
\&  # given: synopsis
\&
\&  package Person;
\&
\&  use Data::Object::Class;
\&
\&  has name => (
\&    is => \*(Aqro\*(Aq
\&  );
\&
\&  package main;
\&
\&  my $person = Person\->new(name => \*(Aq...\*(Aq);
.Ve
.PP
This package supports the \f(CW\*(C`has\*(C'\fR keyword, which is used to declare class
attributes, which can be accessed and assigned to using the built-in
getter/setter or by the object constructor. See Moo for more information.
.SS "with"
.IX Subsection "with"
.Vb 1
\&  # given: synopsis
\&
\&  package Employable;
\&
\&  use Moo::Role;
\&
\&  package Person;
\&
\&  use Data::Object::Class;
\&
\&  with \*(AqEmployable\*(Aq;
\&
\&  package main;
\&
\&  my $person = Person\->new;
.Ve
.PP
This package supports the \f(CW\*(C`with\*(C'\fR keyword, which is used to declare roles to be
used and compose into your class. See Moo for more information.
.SH "AUTHOR"
.IX Header "AUTHOR"
Al Newkirk, \f(CW\*(C`awncorp@cpan.org\*(C'\fR
.SH "LICENSE"
.IX Header "LICENSE"
Copyright (C) 2011\-2019, Al Newkirk, et al.
.PP
This is free software; you can redistribute it and/or modify it under the terms
of the The Apache License, Version 2.0, as elucidated in the \*(L"license
file\*(R" <https://github.com/iamalnewkirk/data-object-class/blob/master/LICENSE>.
.SH "PROJECT"
.IX Header "PROJECT"
Wiki <https://github.com/iamalnewkirk/data-object-class/wiki>
.PP
Project <https://github.com/iamalnewkirk/data-object-class>
.PP
Initiatives <https://github.com/iamalnewkirk/data-object-class/projects>
.PP
Milestones <https://github.com/iamalnewkirk/data-object-class/milestones>
.PP
Contributing <https://github.com/iamalnewkirk/data-object-class/blob/master/CONTRIBUTE.md>
.PP
Issues <https://github.com/iamalnewkirk/data-object-class/issues>

.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Mojolicious::Plugin::YamlConfig 3"
.TH Mojolicious::Plugin::YamlConfig 3 "2019-02-19" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mojolicious::Plugin::YamlConfig \- YAML Configuration Plugin
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 4
\&    # myapp.yaml
\&    \-\-
\&    foo: "bar"
\&    music_dir: "<%= app\->home\->rel_dir(\*(Aqmusic\*(Aq) %>"
\&
\&    # Mojolicious
\&    $self\->plugin(\*(Aqyaml_config\*(Aq);
\&
\&    # Mojolicious::Lite
\&    plugin \*(Aqyaml_config\*(Aq;
\&
\&    # Reads myapp.yaml by default and puts the parsed version into the stash
\&    my $config = $self\->stash(\*(Aqconfig\*(Aq);
\&
\&    # Everything can be customized with options
\&    plugin yaml_config => {
\&        file      => \*(Aq/etc/myapp.conf\*(Aq,
\&        stash_key => \*(Aqconf\*(Aq,
\&        class     => \*(AqYAML::XS\*(Aq
\&    };
.Ve
.SS "\s-1DESCRIPTION\s0"
.IX Subsection "DESCRIPTION"
Look at Mojolicious::Plugin::JSONConfig and replace \*(L"JSONConfig\*(R" with \*(L"yaml_config\*(R"
and you should be fine. :)
.SS "\s-1LIMITATIONS\s0"
.IX Subsection "LIMITATIONS"
YAML::Tiny is the default parser. It doesn't even try to implement the full
\&\s-1YAML\s0 spec. Currently you can use \s-1YAML::PP\s0, \s-1YAML::XS\s0, YAML::Old and
\&\s-1YAML\s0 via the \f(CW\*(C`class\*(C'\fR option to parse the data with a more advanced \s-1YAML\s0 parser.
.SS "\s-1AUTHOR\s0"
.IX Subsection "AUTHOR"
Danijel Tasov <data@cpan.org>
.SS "\s-1SEE ALSO\s0"
.IX Subsection "SEE ALSO"
Mojolicious, Mojolicious::Plugin::JSONConfig, Mojolicious::Guides

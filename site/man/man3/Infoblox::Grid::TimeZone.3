.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Infoblox::Grid::TimeZone 3"
.TH Infoblox::Grid::TimeZone 3 "2018-06-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Infoblox::Grid::TimeZone \- Grid time zone object.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Grid TimeZone object is used to set the time zone for an Infoblox appliance.
.SH "CONSTRUCTOR"
.IX Header "CONSTRUCTOR"
.Vb 5
\& #Constructor for an Grid Time zone object
\& my $time_zone = Infoblox::Grid::TimeZone\->new (
\&         time_zone    => $time_zone            #Required
\&         ntp_enabled  => "true" | "false"      #Optional / Default "false"
\&     );
.Ve
.SH "SESSION METHODS"
.IX Header "SESSION METHODS"
This section describes all the methods in Infoblox::Session that you can apply to a grid TimeZone object.
.SS "Infoblox::Session\->get( )"
.IX Subsection "Infoblox::Session->get( )"
.RS 4
Use this method to retrieve existing objects from the Infoblox appliance. See Infoblox::Session\->\fBget()\fR for parameters and return values.
.IP "\fBKey Reference\fR" 4
.IX Item "Key Reference"
.Vb 1
\& Apply the following attributes to get a grid TimeZone object:
\&
\& none.
.Ve
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 1
\& my @result_array = $session\->get( "object" => "Infoblox::Grid::TimeZone");
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->modify( )"
.IX Subsection "Infoblox::Session->modify( )"
.RS 4
Use this method to modify objects in the Infoblox appliance. See Infoblox::Session\->\fBmodify()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 5
\& # Use method to modify the time zone.
\& $object\->time_zone( "(UTC \- 8:00) Pacific Time (US and Canada), Tijuana" );
\& $object\->ntp_enabled( "false" );
\& # Submit modification
\& my $response = $session\->modify( $object );
.Ve
.RE
.RS 4
.RE
.SH "METHODS"
.IX Header "METHODS"
This section describes all the methods that you can use to configure and retrieve the attribute value of a time zone.
.SS "ntp_enabled( )"
.IX Subsection "ntp_enabled( )"
.RS 4
Use this method to enable/disable \s-1NTP\s0 (Network Time Protocol).
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to enable \s-1NTP\s0 or \*(L"false\*(R" to disable it. Default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get ntp_enabled
\& my $enable = $object\->ntp_enabled();
\& #Modify ntp_enabled
\& $object\->ntp_enabled("true");
.Ve
.RE
.RS 4
.RE
.SS "time_zone( )"
.IX Subsection "time_zone( )"
.RS 4
Use this method to set or retrieve  a time_zone.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Desired time in string format. Following are the available Time Zones:
.Sp
.Vb 10
\& \*(Aq(UTC \- 12:00)\*(Aq
\& \*(Aq(UTC \- 11:00) Midway Island, Samoa\*(Aq
\& \*(Aq(UTC \- 10:00) Hawaii\*(Aq
\& \*(Aq(UTC \- 9:00) Alaska\*(Aq
\& \*(Aq(UTC \- 8:00) Pacific Time (US and Canada), Tijuana\*(Aq
\& \*(Aq(UTC \- 7:00) Arizona\*(Aq
\& \*(Aq(UTC \- 7:00) Mountain Time (US and Canada)\*(Aq
\& \*(Aq(UTC \- 6:00) Central Time (US and Canada)\*(Aq
\& \*(Aq(UTC \- 6:00) Mexico City, Tegucigalpa\*(Aq
\& \*(Aq(UTC \- 6:00) Saskatchewan\*(Aq
\& \*(Aq(UTC \- 5:00) Bogota, Lima, Quito\*(Aq
\& \*(Aq(UTC \- 5:00) Eastern Time (US and Canada)\*(Aq
\& \*(Aq(UTC \- 5:00) Indiana (East)\*(Aq
\& \*(Aq(UTC \- 4:00) Caracas\*(Aq
\& \*(Aq(UTC \- 4:00) Atlantic Time (Canada)\*(Aq
\& \*(Aq(UTC \- 4:00) Santiago\*(Aq
\& \*(Aq(UTC \- 3:30) Newfoundland\*(Aq
\& \*(Aq(UTC \- 3:00) Brasilia\*(Aq
\& \*(Aq(UTC \- 3:00) Buenos Aires\*(Aq
\& \*(Aq(UTC \- 2:00) Mid\-Atlantic\*(Aq
\& \*(Aq(UTC \- 1:00) Azores\*(Aq
\& \*(Aq(UTC) Casablanca\*(Aq
\& \*(Aq(UTC) Coordinated Universal Time\*(Aq
\& \*(Aq(UTC) Dublin\*(Aq
\& \*(Aq(UTC) Lisbon\*(Aq
\& \*(Aq(UTC) London\*(Aq
\& \*(Aq(UTC + 1:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna\*(Aq
\& \*(Aq(UTC + 1:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague\*(Aq
\& \*(Aq(UTC + 1:00) Brussels, Copenhagen, Madrid, Paris\*(Aq
\& \*(Aq(UTC + 1:00) Sarajevo, Skopje, Sofija, Warsaw, Zagreb\*(Aq
\& \*(Aq(UTC + 2:00) Athens, Vilnius\*(Aq
\& \*(Aq(UTC + 2:00) Bucharest\*(Aq
\& \*(Aq(UTC + 2:00) Cairo\*(Aq
\& \*(Aq(UTC + 2:00) Harare\*(Aq
\& \*(Aq(UTC + 2:00) Helsinki\*(Aq
\& \*(Aq(UTC + 2:00) Jerusalem\*(Aq
\& \*(Aq(UTC + 2:00) Kaliningrad\*(Aq
\& \*(Aq(UTC + 3:00) Baghdad, Istanbul, Kuwait, Minsk, Riyadh\*(Aq
\& \*(Aq(UTC + 3:00) Nairobi\*(Aq
\& \*(Aq(UTC + 3:00) Moscow, St    .   Petersburg, Volgograd\*(Aq
\& \*(Aq(UTC + 3:30) Tehran\*(Aq
\& \*(Aq(UTC + 4:00) Dubai\*(Aq
\& \*(Aq(UTC + 4:00) Baku\*(Aq
\& \*(Aq(UTC + 4:00) Samara\*(Aq
\& \*(Aq(UTC + 4:30) Kabul\*(Aq
\& \*(Aq(UTC + 5:00) Ekaterinburg\*(Aq
\& \*(Aq(UTC + 5:00) Islamabad, Karachi\*(Aq
\& \*(Aq(UTC + 5:30) Bombay, Calcutta, Madras, New Delhi\*(Aq
\& \*(Aq(UTC + 5:30) Colombo\*(Aq
\& \*(Aq(UTC + 6:00) Dhaka\*(Aq
\& \*(Aq(UTC + 6:00) Omsk\*(Aq
\& \*(Aq(UTC + 6:30) Rangoon\*(Aq
\& \*(Aq(UTC + 7:00) Bangkok, Hanoi\*(Aq
\& \*(Aq(UTC + 7:00) Krasnoyarsk\*(Aq
\& \*(Aq(UTC + 8:00) Beijing, Chongqing, Shanghai\*(Aq
\& \*(Aq(UTC + 8:00) Hong Kong\*(Aq
\& \*(Aq(UTC + 8:00) Irkutsk\*(Aq
\& \*(Aq(UTC + 8:00) Perth\*(Aq
\& \*(Aq(UTC + 8:00) Singapore\*(Aq
\& \*(Aq(UTC + 8:00) Taipei\*(Aq
\& \*(Aq(UTC + 9:00) Osaka, Sapporo, Tokyo\*(Aq
\& \*(Aq(UTC + 9:00) Seoul\*(Aq
\& \*(Aq(UTC + 9:00) Yakutsk\*(Aq
\& \*(Aq(UTC + 9:30) Adelaide\*(Aq
\& \*(Aq(UTC + 9:30) Darwin\*(Aq
\& \*(Aq(UTC + 10:00) Brisbane\*(Aq
\& \*(Aq(UTC + 10:00) Canberra, Sydney\*(Aq
\& \*(Aq(UTC + 10:00) Melbourne, Victoria\*(Aq
\& \*(Aq(UTC + 10:00) Guam\*(Aq
\& \*(Aq(UTC + 10:00) Hobart\*(Aq
\& \*(Aq(UTC + 10:00) Vladivostok\*(Aq
\& \*(Aq(UTC + 11:00) Solomon Islands\*(Aq
\& \*(Aq(UTC + 11:00) Magadan\*(Aq
\& \*(Aq(UTC + 12:00) Anadyr\*(Aq
\& \*(Aq(UTC + 12:00) Auckland\*(Aq
\& \*(Aq(UTC + 12:00) Fiji\*(Aq
\& \*(Aq(UTC + 12:00) Marshall Islands\*(Aq
.Ve
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get time_zone
\& my $time_zone = $object\->time_zone();
\& #Modify time_zone
\& $object\->time_zone("(UTC \- 8:00) Pacific Time (US and Canada), Tijuana");
.Ve
.RE
.RS 4
.RE
.SH "SAMPLE CODE"
.IX Header "SAMPLE CODE"
The following sample code demonstrates different operations that can be applied to an object such as create, modify, and remove an object. This sample code also includes error handling for the operations.
.PP
.Vb 3
\& #PROGRAM STARTS: Include all the modules that will be used
\& use strict;
\& use Infoblox;
\&
\& #Create a session to the Infoblox appliance
\& my $session = Infoblox::Session\->new(
\&     master   => "192.168.1.2",
\&     username => "admin",
\&     password => "infoblox"
\& );
\& unless ($session) {
\&    die("Construct session failed: ",
\&        Infoblox::status_code() . ":" . Infoblox::status_detail());
\& }
\& print "Session created successfully\en";
\&
\& my @result_array = $session\->get( "object" => "Infoblox::Grid::TimeZone");
\& if( defined @result_array  and scalar( @result_array ) > 0 )
\&  {
\&         my $object = $result_array[0];
\&         unless ($object) {
\&                 die("Get on Time zone failed: ",
\&         $session\->status_code() . ":" . $session\->status_detail());
\&         }
\& #Modify time_zone
\& $object\->time_zone("(UTC \- 8:00) Pacific Time (US and Canada), Tijuana");
\& my $enable = $object\->ntp_enabled();
\& $object\->ntp_enabled( "true" );
\& $session\->modify($object)
\&    or die("Modify on Time zone failed: ",
\&            $session\->status_code() . ":" . $session\->status_detail());
\& print "Grid Time zone modified successfully \en";
\& }
\& else
\& {
\&         print "No  TimeZone Structure found !!!\en";
\& }
\&
\& ####PROGRAM ENDS####
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Infoblox Inc. <http://www.infoblox.com/>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Infoblox::Session, Infoblox::Session\->\fBget()\fR, Infoblox::Session\->\fBmodify()\fR
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2017 Infoblox Inc.

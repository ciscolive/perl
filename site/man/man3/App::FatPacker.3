.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "App::FatPacker 3"
.TH App::FatPacker 3 "2019-02-18" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
App::FatPacker \- pack your dependencies onto your script file
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  $ fatpack pack myscript.pl >myscript.packed.pl
.Ve
.PP
Or, with more step-by-step control:
.PP
.Vb 4
\&  $ fatpack trace myscript.pl
\&  $ fatpack packlists\-for \`cat fatpacker.trace\` >packlists
\&  $ fatpack tree \`cat packlists\`
\&  $ fatpack file myscript.pl >myscript.packed.pl
.Ve
.PP
Each command is designed to be simple and self-contained so that you can modify
the input/output of each step as needed. See the documentation for the
fatpack script itself for more information.
.PP
The programmatic \s-1API\s0 for this code is not yet fully decided, hence the 0.x
release version. Expect that to be cleaned up for 1.0.
.SH "CAVEATS"
.IX Header "CAVEATS"
As dependency module code is copied into the resulting file as text, only
pure-perl dependencies can be packed, not compiled \s-1XS\s0 code.
.PP
The currently-installed dependencies to pack are found via \fI.packlist\fR files,
which are generally only included in non-core distributions that were installed
by a \s-1CPAN\s0 installer. This is a feature; see \*(L"packlists-for\*(R" in fatpack for
details. (a notable exception to this is FreeBSD, which, since its packaging
system is designed to work equivalently to a source install, does preserve
the packlist files)
.SH "SEE ALSO"
.IX Header "SEE ALSO"
article for Perl Advent 2012 <http://www.perladvent.org/2012/2012-12-14.html>
.PP
pp \- \s-1PAR\s0 Packager, a much more complex architecture-dependent packer that
can pack compiled code and even a Perl interpreter
.SH "SUPPORT"
.IX Header "SUPPORT"
Bugs may be submitted through the \s-1RT\s0 bug tracker <https://rt.cpan.org/Public/Dist/Display.html?Name=App-FatPacker>
(or bug\-App\-FatPacker@rt.cpan.org <mailto:bug-App-FatPacker@rt.cpan.org>).
.PP
You can normally also obtain assistance on irc, in #toolchain on irc.perl.org.
.SH "AUTHOR"
.IX Header "AUTHOR"
Matt S. Trout (mst) <mst@shadowcat.co.uk>
.SS "\s-1CONTRIBUTORS\s0"
.IX Subsection "CONTRIBUTORS"
miyagawa \- Tatsuhiko Miyagawa (cpan:MIYAGAWA) <miyagawa@bulknews.net>
.PP
tokuhirom \- MATSUNO★Tokuhiro (cpan:TOKUHIROM) <tokuhirom@gmail.com>
.PP
dg \- David Leadbeater (cpan:DGL) <dgl@dgl.cx>
.PP
gugod \- 劉康民 (cpan:GUGOD) <gugod@cpan.org>
.PP
t0m \- Tomas Doran (cpan:BOBTFISH) <bobtfish@bobtfish.net>
.PP
sawyer \- Sawyer X (cpan:XSAWYERX) <xsawyerx@cpan.org>
.PP
ether \- Karen Etheridge (cpan:ETHER) <ether@cpan.org>
.PP
Mithaldu \- Christian Walde (cpan:MITHALDU) <walde.christian@googlemail.com>
.PP
dolmen \- Olivier Mengué (cpan:DOLMEN) <dolmen@cpan.org>
.PP
djerius \- Diab Jerius (cpan:DJERIUS) <djerius@cpan.org>
.PP
haarg \- Graham Knop (cpan:HAARG) <haarg@haarg.org>
.PP
grinnz \- Dan Book (cpan:DBOOK) <dbook@cpan.org>
.PP
Many more people are probably owed thanks for ideas. Yet
another doc nit to fix.
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2010 the App::FatPacker \*(L"\s-1AUTHOR\*(R"\s0 and \*(L"\s-1CONTRIBUTORS\*(R"\s0
as listed above.
.SH "LICENSE"
.IX Header "LICENSE"
This library is free software and may be distributed under the same terms
as perl itself.

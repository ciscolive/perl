.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Infoblox::Grid::Member::ServiceStatus 3"
.TH Infoblox::Grid::Member::ServiceStatus 3 "2018-06-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Infoblox::Grid::Member::ServiceStatus \- Service Status object.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This object is used to report the service status on an Infoblox appliance. All methods are to be considered read-only.
.SH "MODULE METHODS"
.IX Header "MODULE METHODS"
The following functions can be applied to a ServiceStatus object.
.SS "Infoblox::Grid::Member\->service_status( ), Infoblox::Grid::Member\->node1_service_status( ), Infoblox::Grid::Member\->node2_service_status( )"
.IX Subsection "Infoblox::Grid::Member->service_status( ), Infoblox::Grid::Member->node1_service_status( ), Infoblox::Grid::Member->node2_service_status( )"
.RS 4
Use this function to retrieve a reference to an array of Infoblox::Grid::Member::ServiceStatus objects that represents the service status for an Infoblox appliance.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Retrieve the member object
\& my $member = $session\->get(object => \*(AqInfoblox::Grid::Member\*(Aq, name => \*(Aqhostname.com\*(Aq);
\&
\& # Access its service status
\& my @services = @{$member\->service_status()};
\& print $services[0]\->status();
.Ve
.RE
.RS 4
.RE
.SH "METHODS"
.IX Header "METHODS"
This section describes all the methods that you can use to retrieve the attribute value of an appliance's service status.
.SS "description( )"
.IX Subsection "description( )"
.RS 4
Use this method to retrieve the description of the current ServiceStatus object.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value, which depends on the value of the 'service' method:
.Sp
.Vb 10
\& service value (for service_status) returned by this method
\& ===================================================================
\& DHCP \- DHCP service status
\& DNS \- DNS service status
\& NTP \- NTP service status
\& TFTP \-  Percentage of the file distribution storage space that is used
\& HTTP_FILE_DIST \- Percentage of the file distribution storage space that is used
\& FTP \- Percentage of the file distribution storage space that is used
\& BLOXTOOLS \- CPU/memory/disk space usage percentage
\& DNS_CACHE_ACCELERATION \- DNS Cache Acceleration service status.
\&
\& service value (for node1/2_service_status) returned by this method
\& ===========================================================================
\& NODE_STATUS \- Node status
\& CPU1_TEMP \- CPU1 temperature in Celsius
\& CPU2_TEMP \- CPU2 temperature in Celsius
\& DISK_USAGE \- Disk usage percentage
\& ENET_LAN \- LAN1 interface IP
\& ENET_LAN2 \- LAN2 interface IP
\& ENET_HA \- HA interface IP
\& ENET_MGMT \- MGMT interface IP
\& LCD \- State of the LCD process (running/not running)
\& MEMORY \- Memory usage percentage
\& REPLICATION \- HA replication state
\& DB_OBJECT \- Database capacity usage percentage
\& RAID_DISK1 \- Disk status and type
\& RAID_DISK2 \- Disk status and type
\& RAID_DISK3 \- Disk status and type
\& RAID_DISK4 \- Disk status and type
\& FAN1 \- Fan 1 speed
\& FAN2 \- Fan 2 speed
\& FAN3 \- Fan 3 speed
\& POWER_SUPPLY \- Power status
\& NTP_SYNC \- Indicates if there are "reachable" NTP associations
\& TEMP_SYS \- System temperature in Celsius
\& RAID_BATTERY \- RAID battery status
\& CPU_USAGE \- CPU Usage
\& BGP \- BGP service status
\& OSPF \- OSPF service status
\& OSPF6 \- OSPFv6 service status
\& SWAP_USAGE \- Swap Usage
.Ve
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get description
\& my $description = $service_status\->description();
.Ve
.RE
.RS 4
.RE
.SS "status( )"
.IX Subsection "status( )"
.RS 4
Use this method to retrieve the service status.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value. Valid values are \*(L"Failed\*(R", \*(L"Warning\*(R", \*(L"Working\*(R", and \*(L"Inactive\*(R"
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get status
\& my $status = $service_status\->status();
.Ve
.RE
.RS 4
.RE
.SS "service( )"
.IX Subsection "service( )"
.RS 4
Use this method to retrieve the service identifier.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value. Possible values when the object is retrieved via service_status are:
.Sp
\&\s-1ANALYTICS, ATP, BLOXTOOLS, CAPTIVE_PORTAL, CLOUD_API, DHCP, DISCOVERY, DNS, DNS_CACHE_ACCELERATION, FTP,
HSM, HTTP_FILE_DIST, NTP, REPORTING, TAXII, TFTP\s0
.Sp
Possible values when the object is retrieved via node1/2_service_status are:
.Sp
\&\s-1AUTH_NAMED, BGP, CORE_FILES, CPU1_TEMP, CPU2_TEMP, CPU_USAGE, CPU_USAGE, DB_OBJECT, DISCOVERY_CAPACITY,\s0 
\&\s-1DISK_SIZE, DISK_USAGE, ENET_HA, ENET_LAN, ENET_LAN2, ENET_MGMT, EXTERNAL_STORAGE, FAN1, FAN2,\s0 
\&\s-1FAN3, FAN4, FAN5, FAN6, FAN7, FAN8, JOIN_STATUS, LCD, MEMORY, MGM_SERVICE, NETWORK_CAPACITY,\s0 
\&\s-1NODE_STATUS, NTP_SYNC, OSPF, OSPF6, PASSIVE_HA_CONNECTIVITY, POWER1, POWER2, POWER3, POWER4,\s0 
\&\s-1POWER_SUPPLY, RAID_BATTERY, RAID_DISK1, RAID_DISK2, RAID_DISK3, RAID_DISK4, RAID_DISK5,\s0 
\&\s-1RAID_DISK6, RAID_DISK7, RAID_DISK8, RAID_SUMMARY, REPLICATION, SFP_HA, SFP_LAN, SFP_LAN2, SFP_MGMT,\s0 
\&\s-1SNIC_CHIP_TEMP, SNIC_CORE_UTIL, SNIC_PCB_TEMP, SNIC_UTIL, SUBGRID_CONN, SWAP_USAGE, SYS_TEMP, VPN_CERT\s0
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get service
\& my $service = $service_status\->service();
.Ve
.RE
.RS 4
.RE
.SH "AUTHOR"
.IX Header "AUTHOR"
Infoblox Inc. <http://www.infoblox.com/>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Infoblox::Grid::Member/>
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2017 Infoblox Inc.

.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "File::UserDirs 3"
.TH File::UserDirs 3 "2020-08-24" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
File::UserDirs \- find extra media and documents directories
.SH "VERSION"
.IX Header "VERSION"
This document describes File::UserDirs version \f(CW0.04\fR.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&    use File::UserDirs qw(:all);
\&    print xdg_desktop_dir; # e.g. /home/user/Desktop
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module can be used to find directories as informally specified
by the Freedesktop.org xdg-user-dirs software. This
gives a mechanism to locate extra directories for media and documents files.
.SH "INTERFACE"
.IX Header "INTERFACE"
.ie n .IP """xdg_desktop_dir""" 4
.el .IP "\f(CWxdg_desktop_dir\fR" 4
.IX Item "xdg_desktop_dir"
Returns the desktop directory. Unless changed by the user,
this is the directory \fIDesktop\fR in the home directory.
.ie n .IP """xdg_documents_dir""" 4
.el .IP "\f(CWxdg_documents_dir\fR" 4
.IX Item "xdg_documents_dir"
Returns the documents directory. Unless changed by the user,
this is the home directory.
.ie n .IP """xdg_download_dir""" 4
.el .IP "\f(CWxdg_download_dir\fR" 4
.IX Item "xdg_download_dir"
Returns the download directory. Unless changed by the user,
this is the home directory.
.ie n .IP """xdg_music_dir""" 4
.el .IP "\f(CWxdg_music_dir\fR" 4
.IX Item "xdg_music_dir"
Returns the music directory. Unless changed by the user,
this is the home directory.
.ie n .IP """xdg_pictures_dir""" 4
.el .IP "\f(CWxdg_pictures_dir\fR" 4
.IX Item "xdg_pictures_dir"
Returns the pictures directory. Unless changed by the user,
this is the home directory.
.ie n .IP """xdg_publicshare_dir""" 4
.el .IP "\f(CWxdg_publicshare_dir\fR" 4
.IX Item "xdg_publicshare_dir"
Returns the public share directory. Unless changed by the user,
this is the home directory.
.ie n .IP """xdg_templates_dir""" 4
.el .IP "\f(CWxdg_templates_dir\fR" 4
.IX Item "xdg_templates_dir"
Returns the templates directory. Unless changed by the user,
this is the home directory.
.ie n .IP """xdg_videos_dir""" 4
.el .IP "\f(CWxdg_videos_dir\fR" 4
.IX Item "xdg_videos_dir"
Returns the videos directory. Unless changed by the user,
this is the home directory.
.SH "EXPORTS"
.IX Header "EXPORTS"
None by default, but any method can be exported on demand.
Also the group \f(CW\*(C`:all\*(C'\fR is defined which exports all methods.
.SH "DIAGNOSTICS"
.IX Header "DIAGNOSTICS"
.ie n .IP """""xdg\-user\-dir"" failed to start: %s""" 4
.el .IP "\f(CW``xdg\-user\-dir'' failed to start: %s\fR" 4
.IX Item """xdg-user-dir"" failed to start: %s"
The executable \f(CW\*(C`xdg\-user\-dir\*(C'\fR could not be run, most likely because it was not
installed. See \*(L"\s-1DEPENDENCIES\*(R"\s0.
.SH "CONFIGURATION AND ENVIRONMENT"
.IX Header "CONFIGURATION AND ENVIRONMENT"
The location of the directories can be specified by the user in the file
\&\fI\f(CI$XDG_CONFIG_HOME\fI/user\-dirs.dirs\fR. It is a shell file setting a number of
environment variables. To find the exact pathname from Perl, run:
.PP
.Vb 2
\&    use File::BaseDir qw(config_home);
\&    print config_home(\*(Aquser\-dirs.dirs\*(Aq);
.Ve
.SS "Example customised \fIuser\-dirs.dirs\fP"
.IX Subsection "Example customised user-dirs.dirs"
.Vb 8
\&    XDG_DESKTOP_DIR="$HOME/Workspace"
\&    XDG_DOCUMENTS_DIR="$HOME/Files"
\&    XDG_DOWNLOAD_DIR="$HOME/Files/Downloads"
\&    XDG_MUSIC_DIR="$HOME/Files/Audio"
\&    XDG_PICTURES_DIR="$HOME/Files/Images"
\&    XDG_PUBLICSHARE_DIR="$HOME/public_html"
\&    XDG_TEMPLATES_DIR="$HOME/Files/Document templates"
\&    XDG_VIDEOS_DIR="$HOME/Files/Video"
.Ve
.SH "DEPENDENCIES"
.IX Header "DEPENDENCIES"
This module requires the executable \fIxdg-user-dir\fR from the package
\&\f(CW\*(C`xdg\-user\-dirs\*(C'\fR. Source code is available from
<http://cgit.freedesktop.org/xdg/xdg\-user\-dirs/>.
.SH "SEE ALSO"
.IX Header "SEE ALSO"

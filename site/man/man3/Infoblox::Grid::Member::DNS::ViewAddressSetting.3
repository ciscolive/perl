.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Infoblox::Grid::Member::DNS::ViewAddressSetting 3"
.TH Infoblox::Grid::Member::DNS::ViewAddressSetting 3 "2018-06-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
IInfoblox::Grid::Member::DNS::ViewAddressSetting \- The Grid member DNS view address settings.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The object provides information about the settings for the query source address and port, zone transfer
request address, notify address and port as well as notify delay.
.SH "CONSTRUCTOR"
.IX Header "CONSTRUCTOR"
.Vb 12
\& my $object = IInfoblox::Grid::Member::DNS::ViewAddressSetting\->new(
\&     enable_notify_source_port        => \*(Aqtrue\*(Aq | \*(Aqfalse\*(Aq,                          #Optional / Default is \*(Aqfalse\*(Aq
\&     enable_query_source_port         => \*(Aqtrue\*(Aq | \*(Aqfalse\*(Aq,                          #Optional / Default is \*(Aqfalse\*(Aq
\&     notify_delay                     => $uint,                                     #Optional / Default is 5
\&     notify_source_port               => $uint,                                     #Optional / Default is undefined
\&     notify_transfer_source_interface => \*(AqVIP\*(Aq | \*(AqMGMT\*(Aq | \*(AqLAN2\*(Aq | \*(AqAny\*(Aq | $ipaddr, #Optional / Default is \*(AqAny\*(Aq
\&     override_notify_delay            => \*(Aqtrue\*(Aq | \*(Aqfalse\*(Aq,                          #Optional / Default is \*(Aqfalse\*(Aq
\&     override_source_port             => \*(Aqtrue\*(Aq | \*(Aqfalse\*(Aq,                          #Optional / Default is \*(Aqfalse\*(Aq
\&     query_source_interface           => \*(AqVIP\*(Aq | \*(AqMGMT\*(Aq | \*(AqLAN2\*(Aq | \*(AqAny\*(Aq | $ipaddr, #Optional / Default is \*(AqAny\*(Aq
\&     query_source_port                => $uint,                                     #Optional / Default is undefined
\&     view_name                        => $string,                                   #Required
\& );
.Ve
.SH "MODULE METHODS"
.IX Header "MODULE METHODS"
You can apply the following functions to a \s-1DNS\s0 view address settings object.
.SS "Infoblox::Grid::Member::DNS\->dns_view_address_settings( )"
.IX Subsection "Infoblox::Grid::Member::DNS->dns_view_address_settings( )"
.RS 4
Use this method to set or retrieve the list of address settings for Grid member views.
See Infoblox::Grid::Member::DNS/\fBdns_view_address_settings()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get dns_view_address_settings value
\& my $value = $object\->dns_view_address_settings();
\&
\& #Construct view address setting
\& my $view_address_setting = Infoblox::Grid::Member::DNS::ViewAddressSetting\->new(\*(Aqview_name\*(Aq => \*(Aqview1\*(Aq);
\&
\& #Modify dns_view_address_settings value
\& $object\->dns_view_address_settings([$view_address_setting]);
.Ve
.RE
.RS 4
.RE
.SH "METHODS"
.IX Header "METHODS"
This section describes all the methods that you can use to set and retrieve the attribute values for a \s-1DNS\s0 view address settings object.
.SS "enable_notify_source_port( )"
.IX Subsection "enable_notify_source_port( )"
.RS 4
Use this method to set or retrieve the flag that indicates whether the notify source port setting is enabled.
.Sp
Setting this method to a defined value implicitly sets the override_source_ports method to 'true'.
Setting the parameter to undefined (if enable_query_source_port, query_source_port, notify_source_port are undefined)
causes the appliance to use the Grid member default and automatically resets the override_source_ports method to 'false'.
.Sp
Note that when enable_notify_source_port is set to a defined value and override_source_ports is set to 'false', the last operation takes precedence.
Thus the sequence \f(CW$object\fR\->enable_notify_source_port('true'); \f(CW$object\fR\->override_source_ports('false'); will set override_source_ports to 'false',
and the sequence \f(CW$object\fR\->override_source_ports('false'); \f(CW$object\fR\->enable_notify_source_port('true'); will result in override_source_ports='true'.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify 'true' to enable notify source port setting, and 'false' to disable it.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
When you specify a parameter and the modification succeeds, the method returns 'true'. When the operation fails, the method returns 'false'.
.Sp
When you do not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get enable_notify_source_port value
\& my $value = $object\->enable_notify_source_port();
\&
\& #Modify enable_notify_source_port value
\& $object\->enable_notify_source_port(\*(Aqtrue\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "enable_query_source_port( )"
.IX Subsection "enable_query_source_port( )"
.RS 4
Use this method to set or retrieve the flag that indicates whether the query source port setting is enabled.
.Sp
Setting this method to a defined value implicitly sets the override_source_ports method to 'true'.
Setting the parameter to undefined (if enable_notify_source_port, query_source_port, notify_source_port are undefined)
causes the appliance to use the Grid member default and automatically resets the override_source_ports method to 'false'.
.Sp
Note that when enable_query_source_port is set to a defined value and override_source_ports is set to 'false', the last operation takes precedence.
Thus the sequence \f(CW$object\fR\->enable_query_source_port('true'); \f(CW$object\fR\->override_source_ports('false'); will set override_source_ports to 'false',
and the sequence \f(CW$object\fR\->override_source_ports('false'); \f(CW$object\fR\->enable_query_source_port('true'); will result in override_source_ports='true'.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify 'true' to enable query source port setting, and 'false' to disable it.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
When you specify a parameter and the modification succeeds, the method returns 'true'. When the operation fails, the method returns 'false'.
.Sp
When you do not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get enable_query_source_port value
\& my $value = $object\->enable_query_source_port();
\&
\& #Modify enable_query_source_port value
\& $object\->enable_query_source_port(\*(Aqtrue\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "notify_delay( )"
.IX Subsection "notify_delay( )"
.RS 4
Use this method to set or retrieve the minimum delay (in seconds) between a set of \s-1NOTIFY\s0 messages.
.Sp
Setting this method to a defined value implicitly sets the override_notify_delay method to 'true'. Setting the parameter to undefined causes the appliance to use the Grid \s-1DNS\s0 default and automatically resets the override_notify_delay method to 'false'.
.Sp
Note that when notify_delay is set to a defined value and override_notify_delay is set to 'false', the last operation takes precedence.
Thus the sequence \f(CW$object\fR\->notify_delay('true'); \f(CW$object\fR\->override_notify_delay('false'); will set override_notify_delay to 'false',
and the sequence \f(CW$object\fR\->override_notify_delay('false'); \f(CW$object\fR\->notify_delay('true'); will result in override_notify_delay='true'.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an unsigned integer between 5 and 86400. The default value is 5.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
When you specify a parameter and the modification succeeds, the method returns 'true'. When the operation fails, the method returns 'false'.
.Sp
When you do not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get notify_delay value
\& my $value = $object\->notify_delay();
\&
\& #Modify notify_delay value
\& $object\->notify_delay(10000);
.Ve
.RE
.RS 4
.RE
.SS "notify_source_port( )"
.IX Subsection "notify_source_port( )"
.RS 4
Use this method to set or retrieve the notify source port number.
.Sp
Setting this method to a defined value implicitly sets the override_source_ports method to 'true'.
Setting the parameter to undefined (if enable_query_source_port, enable_notify_source_port, query_source_port are undefined)
causes the appliance to use the Grid member default and automatically resets the override_source_ports method to 'false'.
.Sp
Note that when notify_source_port is set to a defined value and override_source_ports is set to 'false', the last operation takes precedence.
Thus the sequence \f(CW$object\fR\->notify_source_port('true'); \f(CW$object\fR\->override_source_ports('false'); will set override_source_ports to 'false',
and the sequence \f(CW$object\fR\->override_source_ports('false'); \f(CW$object\fR\->notify_source_port('true'); will result in override_source_ports='true'.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an unsigned integer between 1 and 63999.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
When you specify a parameter and the modification succeeds, the method returns 'true'. When the operation fails, the method returns 'false'.
.Sp
When you do not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get notify_source_port value
\& my $value = $object\->notify_source_port();
\&
\& #Modify notify_source_port value
\& $object\->notify_source_port(10000);
.Ve
.RE
.RS 4
.RE
.SS "notify_transfer_source_interface( )"
.IX Subsection "notify_transfer_source_interface( )"
.RS 4
Use this method to specify which \s-1IP\s0 address is used as the source for notify and zone transfer operations.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid values are '\s-1VIP\s0', '\s-1MGMT\s0', '\s-1LAN2\s0', 'Any' or an \s-1IP\s0 address. The default is '\s-1VIP\s0'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get notify_transfer_source_interface value
\& my $value = $object\->notify_transfer_source_interface();
\&
\& #Modify notify_transfer_source_interface value
\& $object\->notify_transfer_source_interface(\*(AqAny\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "query_source_interface( )"
.IX Subsection "query_source_interface( )"
.RS 4
Use this method to specify which \s-1IP\s0 address is used as the source for query operations.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid values are '\s-1VIP\s0', '\s-1MGMT\s0', '\s-1LAN2\s0', 'Any' or an \s-1IP\s0 address. Default is '\s-1VIP\s0'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get query_source_interface value
\& my $value = $object\->query_source_interface();
\&
\& #Modify query_source_interface value
\& $object\->query_source_interface(\*(AqAny\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "override_notify_delay( )"
.IX Subsection "override_notify_delay( )"
.RS 4
The override_notify_delay attribute controls whether the notify_delay method values of the member are used, instead of the Grid member default.
.Sp
The override_notify_delay attribute can be specified explicitly. It is also set implicitly when notify_delay is set to a defined value.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Set the parameter to 'true' to override the member-level setting for notify_delay. Set the parameter to 'false' to inherit the member-level setting for notify_delay.
.Sp
The default value of this parameter is 'false'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get override_notify_delay value
\& my $value = $object\->override_notify_delay();
\&
\& #Modify override_notify_delay value
\& $object\->override_notify_delay(\*(Aqtrue\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "override_source_ports( )"
.IX Subsection "override_source_ports( )"
.RS 4
The override_source_ports attribute controls whether the values of enable_notify_source_port, enable_query_source_port, query_source_port and notify_source_port for the member are used, instead of the Grid member default.
.Sp
The override_source_ports attribute can be specified explicitly. It is also set implicitly when any of enable_notify_source_port, enable_query_source_port, query_source_port, notify_source_port is set to a defined value.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Set the parameter to true to override the member-level setting for enable_notify_source_port, enable_query_source_port, query_source_port, notify_source_port. Set the parameter to 'false' to inherit the member-level setting for source_ports.
.Sp
The default value of this parameter is 'false'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get override_source_ports value
\& my $value = $object\->override_source_ports();
\&
\& #Modify override_source_ports value
\& $object\->override_source_ports(\*(Aqtrue\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "query_source_port( )"
.IX Subsection "query_source_port( )"
.RS 4
Use this method to set or retrieve the query source port number.
.Sp
Setting this method to a defined value implicitly sets the override_source_ports method to 'true'.
Setting the parameter to undefined (if enable_query_source_port, enable_notify_source_port, notify_source_port are undefined)
causes the appliance to use the Grid member default and automatically resets the override_source_ports method to 'false'.
.Sp
Note that when query_source_port is set to a defined value and override_source_ports is set to 'false', the last operation takes precedence.
Thus the sequence \f(CW$object\fR\->query_source_port('true'); \f(CW$object\fR\->override_source_ports('false'); will set override_source_ports to 'false',
and the sequence \f(CW$object\fR\->override_source_ports('false'); \f(CW$object\fR\->query_source_port('true'); will result in override_source_ports='true'.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an unsigned integer between 1 and 63999.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
When you specify a parameter and the modification succeeds, the method returns 'true'. When the operation fails, the method returns 'false'.
.Sp
When you do not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get query_source_port value
\& my $value = $object\->query_source_port();
\&
\& #Modify query_source_port value
\& $object\->query_source_port(10000);
.Ve
.RE
.RS 4
.RE
.SS "view_name( )"
.IX Subsection "view_name( )"
.RS 4
Use this method to set or retrieve the \s-1DNS\s0 view name.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is a desired \s-1DNS\s0 view name in a string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
When you specify a parameter and the modification succeeds, the method returns 'true'. When the operation fails, the method returns 'false'.
.Sp
When you do not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get view_name value
\& my $value = $object\->view_name();
\&
\& #Modify view_name value
\& $object\->view_name(\*(Aqview1\*(Aq);
.Ve
.RE
.RS 4
.RE
.SH "AUTHOR"
.IX Header "AUTHOR"
Infoblox Inc. <http://www.infoblox.com/>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Infoblox::Grid::Member::DNS,
Infoblox::Grid::Member::DNS/\fBdns_view_address_settings()\fR,
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2017 Infoblox Inc.
.SH "POD ERRORS"
.IX Header "POD ERRORS"
Hey! \fBThe above document had some coding errors, which are explained below:\fR
.IP "Around line 33:" 4
.IX Item "Around line 33:"
alternative text 'Infoblox::Grid::Member::DNS/\fBdns_view_address_settings()\fR' contains non-escaped | or /
.IP "Around line 429:" 4
.IX Item "Around line 429:"
alternative text 'Infoblox::Grid::Member::DNS/\fBdns_view_address_settings()\fR' contains non-escaped | or /

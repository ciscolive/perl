.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Mo::default 3"
.TH Mo::default 3 "2016-07-06" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "Name"
.IX Header "Name"
Mo::default \- Adds the default feature to Mo's has
.SH "Synopsis"
.IX Header "Synopsis"
.Vb 5
\&    use Mo qw\*(Aqdefault\*(Aq;
\&    has job  => ( default => \*(AqKiller\*(Aq );
\&    has name => ( default => sub { \*(AqJoe\*(Aq } );
\&    has age      => 42;
\&    has colors   => [ \*(Aqgreen\*(Aq, \*(Aqblue\*(Aq ];
.Ve
.SH "Description"
.IX Header "Description"
Adds the default parameter to has, which expects a value. If the value is a
code ref, it is called to produce the default. If the value is a hash or array
ref, then a shallow copy is made for the default. If there is an odd number of
arguments after the attribute name, then the first value is the default.
.PP
These 3 lines are the same:
.PP
.Vb 3
\&    has things => default => sub {+{}};
\&    has things => default => {};
\&    has things => {};
.Ve
.SH "Laziness"
.IX Header "Laziness"
Default attribute values in Mo are lazy by default.
This can be changed by explicitly setting the \f(CW\*(C`lazy\*(C'\fR argument to false, in
order to cause it to be initialized during instantiation.
.PP
.Vb 4
\&    use Mo qw\*(Aqdefault\*(Aq;
\&    has status   => \*(Aqactive\*(Aq;                 # lazy
\&    has location => sub { ... }, lazy => 1;   # lazy
\&    has target   => sub { ... }, lazy => 0;   # eager
.Ve
.PP
To change the default behavior and make attributes to be initialized eagerly
by default, import \f(CW\*(C`nonlazy\*(C'\fR.
.PP
.Vb 4
\&    use Mo qw\*(Aqdefault nonlazy\*(Aq;
\&    has status   => \*(Aqactive\*(Aq;                 # eager
\&    has location => sub { ... }, lazy => 1;   # lazy
\&    has target   => sub { ... }, lazy => 0;   # eager
.Ve

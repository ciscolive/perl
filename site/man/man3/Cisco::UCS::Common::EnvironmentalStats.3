.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Cisco::UCS::Common::EnvironmentalStats 3"
.TH Cisco::UCS::Common::EnvironmentalStats 3 "2016-05-25" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Cisco::UCS::Common::EnvironmentalStats \- Class for operations with Cisco UCS 
environmental stati.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&        # Print all blades in all chassis along with a cacti\-style listing of 
\&        # the blades current, maximum and average CPU temperature values.
\&
\&        map { 
\&                print "Chassis: " . $_\->id ."\en";
\&
\&                map { 
\&                        print "\etBlade: ". $_\->id;
\&
\&                        map {
\&                                print "\en\et\etCPU: ". $_\->id 
\&                                . "\en\et\et\etCurrent:". $_\->env_stats\->temperature
\&                                . "\en\et\et\etMax:". $_\->env_stats\->temperature_max 
\&                                . "\en\et\et\etAvg:". $_\->env_stats\->temperature_avg ."\en" 
\&
\&                        }   
\&                        sort { $a\->id <=> $b\->id } $_\->get_cpus
\&                }
\&                sort { $a\->id <=> $b\->id } $_\->get_blades 
\&        } 
\&        sort { 
\&                $a\->id <=> $b\->id 
\&        } $ucs\->get_chassiss;
\&
\&        # Prints something like:
\&        #
\&        # Chassis: 1
\&        #       Blade: 1
\&        #               CPU: 1
\&        #                       Current:32.500000
\&        #                       Max:33.000000
\&        #                       Avg:32.375000
\&        #
\&        #               CPU: 2
\&        #                       Current:37.000000
\&        #                       Max:37.000000
\&        #                       Avg:32.500000
\&        #       Blade: 2
\&        #               CPU: 1
\&        #                       Current:45.500000
\&        #                       Max:46.000000
\&        #                       Avg:45.666668
\&        # ...etc.
.Ve
.SH "DECRIPTION"
.IX Header "DECRIPTION"
Cisco::UCS::Common::EnvironmentalStats is a class providing operations with 
Cisco \s-1UCS\s0 environmental stati.
.PP
Note that you are not supposed to call the constructor yourself, rather a 
Cisco::UCS::Common::EnvironmentalStats object is created automatically by 
method calls on a Cisco::UCS::Blade object.
.SH "METHODS"
.IX Header "METHODS"
\fIinput_current\fR
.IX Subsection "input_current"
.PP
Returns the current input current value for the target object.
.PP
\fIinput_current_avg\fR
.IX Subsection "input_current_avg"
.PP
Returns the current average input current value for the target object.
.PP
\fIinput_current_min\fR
.IX Subsection "input_current_min"
.PP
Returns the current minimum input current value for the target object.
.PP
\fIinput_current_max\fR
.IX Subsection "input_current_max"
.PP
Returns the current maximum input current value for the target object.
.PP
\fItemperature\fR
.IX Subsection "temperature"
.PP
Returns the current temperature value for the target object.
.PP
\fItemperature_avg\fR
.IX Subsection "temperature_avg"
.PP
Returns the average temperature value for the target object.
.PP
\fItemperature_max\fR
.IX Subsection "temperature_max"
.PP
Returns the maximum temperature value for the target object.
.PP
\fItemperature_min\fR
.IX Subsection "temperature_min"
.PP
Returns the minimum temperature value for the target object.
.PP
\fIthresholded\fR
.IX Subsection "thresholded"
.PP
Flag to indicate if the environmental status is in a thresholded state.
.PP
\fIsuspect\fR
.IX Subsection "suspect"
.PP
Flag to indicate if the environmental status is in a suspect state.
.PP
\fItime_collected\fR
.IX Subsection "time_collected"
.PP
Returns the timestamp at which time the status information were collected.
.SH "AUTHOR"
.IX Header "AUTHOR"
Luke Poskitt, \f(CW\*(C`<ltp at cpan.org>\*(C'\fR
.SH "BUGS"
.IX Header "BUGS"
Please report any bugs or feature requests to 
\&\f(CW\*(C`bug\-cisco\-ucs\-common\-environmentalstats at rt.cpan.org\*(C'\fR, or through the web 
interface at 
<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=Cisco\-UCS\-Common\-EnvironmentalStats>.  
I will be notified, and then you'll automatically be notified of progress on 
your bug as I make changes.
.SH "SUPPORT"
.IX Header "SUPPORT"
You can find documentation for this module with the perldoc command.
.PP
.Vb 1
\&    perldoc Cisco::UCS::Common::EnvironmentalStats
.Ve
.PP
You can also look for information at:
.IP "\(bu" 4
\&\s-1RT: CPAN\s0's request tracker
.Sp
<http://rt.cpan.org/NoAuth/Bugs.html?Dist=Cisco\-UCS\-Common\-EnvironmentalStats>
.IP "\(bu" 4
AnnoCPAN: Annotated \s-1CPAN\s0 documentation
.Sp
<http://annocpan.org/dist/Cisco\-UCS\-Common\-EnvironmentalStats>
.IP "\(bu" 4
\&\s-1CPAN\s0 Ratings
.Sp
<http://cpanratings.perl.org/d/Cisco\-UCS\-Common\-EnvironmentalStats>
.IP "\(bu" 4
Search \s-1CPAN\s0
.Sp
<http://search.cpan.org/dist/Cisco\-UCS\-Common\-EnvironmentalStats/>
.SH "LICENSE AND COPYRIGHT"
.IX Header "LICENSE AND COPYRIGHT"
Copyright 2013 Luke Poskitt.
.PP
This program is free software; you can redistribute it and/or modify it
under the terms of either: the \s-1GNU\s0 General Public License as published
by the Free Software Foundation; or the Artistic License.
.PP
See http://dev.perl.org/licenses/ for more information.

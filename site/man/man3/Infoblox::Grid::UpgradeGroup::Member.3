.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Infoblox::Grid::UpgradeGroup::Member 3"
.TH Infoblox::Grid::UpgradeGroup::Member 3 "2018-06-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Infoblox::Grid::UpgradeGroup::Member \- Upgrade Group Member object
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This object is used to represent Upgrade Group Grid members.
.SH "CONSTRUCTOR"
.IX Header "CONSTRUCTOR"
.Vb 3
\& my $member = Infoblox::Grid::UpgradeGroup::Member\->new(
\&     member         => $string, # Required, name of the member
\& );
.Ve
.SH "MODULE METHODS"
.IX Header "MODULE METHODS"
The following functions are available to apply to an Upgrade Group Member object.
.SS "Infoblox::Grid::UpgradeGroup\->members( )"
.IX Subsection "Infoblox::Grid::UpgradeGroup->members( )"
.RS 4
Use this function to specify the members that belong to this upgrade group. See Infoblox::Grid::UpgradeGroup\->\fBmembers()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 8
\& my $member1 = Infoblox::Grid::UpgradeGroup::Member\->new(
\&                                                        member => \*(Aqhostname.com\*(Aq,
\&                                                       );
\& unless($member1) {
\&      die("Construct member failed: ",
\&            Infoblox::status_code() . ":" . Infoblox::status_detail());
\& }
\& print "Member object created successfully\en";
\&
\& #Create the upgrade group object with this member
\& my $sgu = Infoblox::Grid::UpgradeGroup\->new(
\&                                             name                         => "groupname1",
\&                                             comment                      => "group name 1 comment",
\&                                             distribution_policy          => "sequentially",
\&                                             upgrade_policy               => "simultaneously",
\&                                             distribution_dependent_group => \*(Aqdistgroup1\*(Aq,
\&                                             upgrade_dependent_group      => \*(Aqdistgroup2\*(Aq,
\&                                             distribution_time            => \*(Aq2020\-12\-22T11:22:33Z\*(Aq,
\&                                             upgrade_time                 => \*(Aq2021\-12\-22T11:22:33Z\*(Aq,
\&                                             members                      => [$member1],
\&                                             );
\&
\& my $response = $session\->add($sgu)
\& unless($response) {
\&      die("Add upgrade group failed: ",
\&            session\->status_code() . ":" . session\->status_detail());
\& }
\& print "Upgrade group created successfully\en";
.Ve
.RE
.RS 4
.RE
.SH "METHODS"
.IX Header "METHODS"
This section describes all the methods that you can use to set and retrieve the attribute values of an Upgrade Group Member object.
.SS "member( )"
.IX Subsection "member( )"
.RS 4
Use this method to set or retrieve the name of the member.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The name of the grid member.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get member
\& my $member = $member\->member();
\& #Modify member
\& $member\->member("192.168.1.3");
.Ve
.RE
.RS 4
.RE
.SS "time_zone( )"
.IX Subsection "time_zone( )"
.RS 4
Use this method to retrieve the time zone of the member.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
none
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get time_zone
\& my $time_zone = $member\->time_zone();
.Ve
.RE
.RS 4
.RE
.SH "AUTHOR"
.IX Header "AUTHOR"
Infoblox Inc. <http://www.infoblox.com/>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Infoblox::Grid::UpgradeGroup
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2017 Infoblox Inc.

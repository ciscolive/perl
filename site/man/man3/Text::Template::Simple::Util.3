.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Text::Template::Simple::Util 3"
.TH Text::Template::Simple::Util 3 "2018-12-25" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Text::Template::Simple::Util
.SH "VERSION"
.IX Header "VERSION"
version 0.91
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&   TODO
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Contains utility functions for Text::Template::Simple.
.SH "NAME"
Text::Template::Simple::Util \- Utility functions
.SH "FUNCTIONS"
.IX Header "FUNCTIONS"
.SS "\s-1DEBUG\s0"
.IX Subsection "DEBUG"
Returns the debug status.
.SS "\s-1DIGEST\s0"
.IX Subsection "DIGEST"
Returns the \f(CW\*(C`digester\*(C'\fR object.
.SS "binary_mode \s-1FILE_HANDLE, LAYER\s0"
.IX Subsection "binary_mode FILE_HANDLE, LAYER"
Sets the I/O layer of \f(CW\*(C`FILE_HANDLE\*(C'\fR in modern \f(CW\*(C`perls\*(C'\fR, only sets \f(CW\*(C`binmode\*(C'\fR
on \f(CW\*(C`FILE_HANDLE\*(C'\fR otherwise.
.SS "L \s-1TYPE, ID\s0 [, \s-1PARAMETERS\s0]"
.IX Subsection "L TYPE, ID [, PARAMETERS]"
Internal method.
.SS "fatal \s-1ID\s0 [, \s-1PARAMETERS\s0]"
.IX Subsection "fatal ID [, PARAMETERS]"
Internal method.
.ie n .SS """trim STRING"""
.el .SS "\f(CWtrim STRING\fP"
.IX Subsection "trim STRING"
Returns the trimmed version of the \f(CW\*(C`STRING\*(C'\fR.
.ie n .SS """ltrim STRING"""
.el .SS "\f(CWltrim STRING\fP"
.IX Subsection "ltrim STRING"
Returns the left trimmed version of the \f(CW\*(C`STRING\*(C'\fR.
.ie n .SS """rtrim STRING"""
.el .SS "\f(CWrtrim STRING\fP"
.IX Subsection "rtrim STRING"
Returns the right trimmed version of the \f(CW\*(C`STRING\*(C'\fR.
.SS "escape \s-1CHAR, STRING\s0"
.IX Subsection "escape CHAR, STRING"
Escapes all occurrences of \f(CW\*(C`CHAR\*(C'\fR in \f(CW\*(C`STRING\*(C'\fR with backslashes.
.SS "visualize_whitespace \s-1STRING\s0"
.IX Subsection "visualize_whitespace STRING"
Replaces the white space in \f(CW\*(C`STRING\*(C'\fR with visual representations.
.ie n .SH """OVERRIDABLE FUNCTIONS"""
.el .SH "\f(CWOVERRIDABLE FUNCTIONS\fP"
.IX Header "OVERRIDABLE FUNCTIONS"
.SS "\s-1LOG\s0"
.IX Subsection "LOG"
If debugging mode is enabled in Text::Template::Simple, all
debugging messages will be captured by this function and will
be printed to \f(CW\*(C`STDERR\*(C'\fR.
.PP
If a sub named \f(CW\*(C`Text::Template::Simple::Util::MYLOG\*(C'\fR is defined,
then all calls to \f(CW\*(C`LOG\*(C'\fR will be redirected to this sub. If you want to
save the debugging messages to a file or to a database, you must define
the \f(CW\*(C`MYLOG\*(C'\fR sub.
.SH "AUTHOR"
.IX Header "AUTHOR"
Burak Gursoy <burak@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2004 by Burak Gursoy.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Data::IEEE754 3"
.TH Data::IEEE754 3 "2017-04-25" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Data::IEEE754 \- Pack and unpack big\-endian IEEE754 floats and doubles
.SH "VERSION"
.IX Header "VERSION"
version 0.02
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  use Data::IEEE754 qw( pack_double_be unpack_double_be );
\&
\&  my $packed = pack_double_be(3.14);
\&  my $double = unpack_double_be($packed);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module provides some simple convenience functions for packing and
unpacking \s-1IEEE 754\s0 floats and doubles.
.PP
If you can require Perl 5.10 or greater then this module is pointless. Just
use the \f(CW\*(C`d>\*(C'\fR and \f(CW\*(C`f>\*(C'\fR pack formats instead!
.PP
Currently this module only implements big-endian order. Patches to add
little-endian order subroutines are welcome.
.SH "EXPORTS"
.IX Header "EXPORTS"
This module optionally exports the following four functions:
.IP "\(bu" 4
pack_float_be($number)
.IP "\(bu" 4
pack_double_be($number)
.IP "\(bu" 4
unpack_float_be($binary)
.IP "\(bu" 4
unpack_double_be($binary)
.SH "CREDITS"
.IX Header "CREDITS"
The code in this module is more or less copied and pasted from
Data::MessagePack's \f(CW\*(C`Data::MessagePack::PP\*(C'\fR module. That module was
written by Makamaka Hannyaharamitu. The code was then tweaked by Dave Rolsky,
so blame him for the bugs.
.SH "SUPPORT"
.IX Header "SUPPORT"
Please submit bugs to the \s-1CPAN RT\s0 system at
http://rt.cpan.org/NoAuth/Bugs.html?Dist=Data\-IEEE754 or via email at
bug\-data\-ieee754@rt.cpan.org.
.PP
Bugs may be submitted through <https://github.com/maxmind/Data\-IEEE754/issues>.
.SH "AUTHOR"
.IX Header "AUTHOR"
Dave Rolsky <autarch@urth.org>
.SH "CONTRIBUTORS"
.IX Header "CONTRIBUTORS"
.IP "\(bu" 4
Dave Rolsky <drolsky@maxmind.com>
.IP "\(bu" 4
Greg Oschwald <goschwald@maxmind.com>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is Copyright (c) 2017 by MaxMind, Inc.
.PP
This is free software, licensed under:
.PP
.Vb 1
\&  The Artistic License 2.0 (GPL Compatible)
.Ve

.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Mojolicious::Plugin::Loco 3"
.TH Mojolicious::Plugin::Loco 3 "2019-10-25" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mojolicious::Plugin::Loco \- launch a web browser; easy local GUI
.SH "VERSION"
.IX Header "VERSION"
version 0.008
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&  use Mojolicious::Lite;
\&  plugin \*(AqLoco\*(Aq;
\&
\&  get \*(Aq/\*(Aq => "index";
\&
\&  post \*(Aq/kick\-me\*(Aq => sub {
\&    my $c = shift;
\&    return if $c\->loco\->csrf_fail;
\&    # system q(cat /dev/urandom | fdisk);
\&    my $bcount = ++$c\->session\->{bruises};
\&    $c\->flash(msg => "Ok, that hurt. ($bcount)");
\&    $c\->redirect_to(\*(Aq/\*(Aq);
\&  };
\&
\&  post \*(Aq/quit\*(Aq => sub { shift\->loco\->quit; };
\&
\&  app\->secrets([\*(AqI am the very model of a modern major general\*(Aq.rand()]);
\&  app\->start;
\&
\&  _\|_DATA_\|_
\&  @@ index.html.ep
\&  % layout \*(Aqdefault\*(Aq;
\&  <h1>Ready!</h1>
\&  %= csrf_button_to "Kick Me", \*(Aq/kick\-me\*(Aq, method => \*(AqPOST\*(Aq;
\&  %= csrf_button_to "Exit",    \*(Aq/quit\*(Aq,    method => \*(AqPOST\*(Aq;
\&  <p><%= $c\->flash(\*(Aqmsg\*(Aq)%></p>
\&
\&  @@ layouts/default.html.ep
\&  <!DOCTYPE html><html><head>
\&  %= $c\->loco\->jsload;    # needs to be on every page
\&  %= content_for \*(Aqhead\*(Aq;
\&  </head><body>
\&  %= content
\&  </body>
\&  </html>
.Ve
.PP
Save to \f(CW\*(C`myapp.pl\*(C'\fR, and then
.PP
.Vb 1
\&  perl myapp.pl daemon
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This plugin allows writing low-effort desktop applications using Mojolicious (even cross-platform ones if your code is sufficiently portable).
.PP
When run as a daemon listening on an explicit port, the plugin launches an internet browser, passing an initial \s-1URL\s0 and seed so that subsequent requests from that browser can be distinguished.  Client-side javascript then pings the server regularly until either the server shuts down or the various browser windows are closed.
.PP
For applications making changes to the filesystem / local machine state, or handling sensitive data or anything else that matters, please see \*(L"\s-1SECURITY CONSIDERATIONS\*(R"\s0
.PP
This module is currently experimental; the \s-1API\s0 may change without notice.
.SH "OPTIONS"
.IX Header "OPTIONS"
.SS "config_key"
.IX Subsection "config_key"
Key of the configuration hash (\f(CW\*(C`app\->config\*(C'\fR) containing plugin option values.  Default is \f(CW\*(Aqloco\*(Aq\fR.  If false, then \f(CW\*(C`app\->config\*(C'\fR is not consulted.
.SS "initial_wait"
.IX Subsection "initial_wait"
How many seconds for the server to wait for the initial browser window to finish loading before giving up and shutting down.  Zero means wait forever.  Default is 15.
.SS "final_wait"
.IX Subsection "final_wait"
How many seconds for the server to wait after the last browser window ceases communicating before shutting down (we do not rely on \f(CW\*(C`window.unload\*(C'\fR).  Default is 3.
.PP
Since javascript timer events from backgrounded/hidden tabs/windows are typically throttled in current browsers, reducing this below 2 will most likely make the application terminate prematurely if all windows are hidden or minimized.
.SS "entry"
.IX Subsection "entry"
\&\s-1URI\s0 path for the entry point of your application (i.e., what to display in the initial brower window).  Default is \f(CW\*(C`/\*(C'\fR.
.SS "api_path"
.IX Subsection "api_path"
\&\s-1URI\s0 path prefix reserved for use by this plugin.  Endpoints needed by this module live here; this is also where the required javascript file(s) are served from.  Default is \f(CW\*(C`/hb/\*(C'\fR; it can be pretty much anything as long as it's distinct from what the rest of your application uses.
.SS "browser"
.IX Subsection "browser"
Which browser (executable file) to run.  If false (\f(CW0\fR or \f(CW\*(Aq\*(Aq\fR) then no browser will be invoked.  If a subroutine reference, then it is assumed that calling it with a \s-1URI\s0 as first argument will launch something useful.  Default is for Browser::Open to launch whatever the default browser is for your system.
.SS "allow_other_sessions"
.IX Subsection "allow_other_sessions"
If false (default), \f(CW$c\fR\->validation\->csrf_protect fails on any session other than the one started from the initial browser launched.  Requests doing this check are then blocked from all other sessions.
.PP
If true, \f(CW$c\fR\->validation\->csrf_protect will behave in the default manner, and you will need to check \*(L"loco\->id\*(R" explicitly.
.PP
Read \*(L"\s-1SECURITY CONSIDERATIONS\*(R"\s0 if you think you might want to set this.
.SH "HELPERS"
.IX Header "HELPERS"
.SS "loco\->config"
.IX Subsection "loco->config"
Get or set plugin configuration options.  Note that most values are only meaningful prior to server start so changing them thereafter won't affect anything.
.PP
.Vb 5
\&  $c\->loco\->config                         # \-> full hash of settings
\&  $c\->loco\->config(\*(Aqfinal_wait\*(Aq)           # \-> 3
\&  $c\->loco\->config(final_wait => 200)      # \-> $c, sets final_wait
\&  $c\->loco\->config({final_wait => 200})    # \-> same
\&  app\->config(\*(Aqloco\*(Aq)\->{final_wait} = 200  # same effect if config_key not changed
.Ve
.SS "loco\->id"
.IX Subsection "loco->id"
Get or set the session id (for the purposes of this plugin).  By default, this is 1 for the launched browser's session and undefined for all others.
.SS "loco\->csrf_fail"
.IX Subsection "loco->csrf_fail"
Renders an \s-1HTTP 400\s0 reply and returns true unless \f(CW\*(C`csrf_token\*(C'\fR validation succeeds.  If \*(L"allow_other_sessions\*(R" is false, this implicitly also checks \*(L"loco\->id\*(R".
.PP
.Vb 1
\&  return if $c\->loco\->csrf_fail;
.Ve
.SS "loco\->id_fail"
.IX Subsection "loco->id_fail"
Renders an \s-1HTTP 400\s0 reply and returns true unless there is a nonzero session id.
.PP
.Vb 1
\&  return if $c\->loco\->id_fail;
.Ve
.SS "loco\->quit"
.IX Subsection "loco->quit"
Stop the server and render a final page if necessary.  This implicitly calls \*(L"loco\->csrf_fail\*(R" and checks \*(L"loco\->id\*(R".
.SS "loco\->jsload"
.IX Subsection "loco->jsload"
Loads whatever javascript needs to be in the <head> section of every page to be displayed in the browser window.  You most likely want this in your default layout.
.PP
.Vb 1
\&  %= $c\->loco\->jsload;
.Ve
.PP
Or you can be more elaborate
.PP
.Vb 6
\&  %= $c\->loco\->jsload( jquery => \*(Aqhttps://code.jquery.com/jquery\-3.3.1.min.js\*(Aq, begin
\&        .on_hb(function(h) {
\&          // do something on every heartbeat
\&          $(\*(Aq#heartbeat\*(Aq).html(h);
\&        })
\&  % end );
.Ve
.PP
Options for \*(L"loco\->jsload\*(R" include
.PP
\fIjquery\fR
.IX Subsection "jquery"
.PP
\&\s-1URL\s0 to be loading jquery from.  Default is to use the jquery version included in the Mojolicious distribution.  Specifying an empty string \f(CW\*(Aq\*(Aq\fR suppresses jquery loading entirely, if you have already loaded it as part of some other package.
.PP
\fInofinish\fR
.IX Subsection "nofinish"
.PP
Suppress the default \f(CW\*(C`on_finish\*(C'\fR handler.
.PP
\fIbegin\fR
.IX Subsection "begin"
.PP
Final \f(CW\*(C`begin\*(C'\fR block, if provided, will be assumed to be javascript code to further configure the heartbeat object (code is preceded by \f(CW\*(C`$().heartbeat()\*(C'\fR), typically to add \f(CW\*(C`on_hb\*(C'\fR or \f(CW\*(C`on_finish\*(C'\fR handlers
.SH "SECURITY CONSIDERATIONS"
.IX Header "SECURITY CONSIDERATIONS"
In a typical desktop application, traffic between the user interface and the application code will be invisible to remote attackers and code running in different processes.  Structuring your application as a Mojolicious server with \s-1UI\s0 provided by an internet browser using this plugin will, in some cases, expose this traffic and make additional interferences possible.
.PP
What follows is a (necessarily incomplete) listing of vulnerabilities you may need to address.
.IP "Listening on Network-accessible Interfaces/Ports" 4
.IX Item "Listening on Network-accessible Interfaces/Ports"
Using a listening point that is network accessible means the server will (at least initially) accept incoming connection attempts from untrusted remote sites unless you have a reliable firewall to block these.  If, in addition, \*(L"allow_other_sessions\*(R" is also set, then these remote clients will be able to obtain working sessions.
.Sp
By default, Mojolicious servers listen at \f(CW\*(C`http://*:3000\*(C'\fR, where \f(CW\*(C`*\*(C'\fR means all available interfaces, so you need to change this (\f(CW\*(C`localhost\*(C'\fR, \f(CW127.0.0.1\fR, or \f(CW\*(C`[::1]\*(C'\fR) using either \f(CW$ENV{MOJO_LISTEN}\fR or the \f(CW\*(C`\-l\*(C'\fR command line argument that the daemon allows.
.IP "Cross-Site Scripting" 4
.IX Item "Cross-Site Scripting"
Style-sheets or script pages served by your application should not reveal application secrets (e.g., the current \f(CW\*(C`csrf_token\*(C'\fR).
.Sp
Pages/templates should not incorporate scripts from untrusted sources.
.Sp
Use a browser that enforces domain restrictions so that \s-1HTML\s0 page content and cookies are not observable from scripts running in other domains (most current browsers do this correctly).
.IP "Cross-Site Request Forgery" 4
.IX Item "Cross-Site Request Forgery"
Since any webpage may potentially contain links, buttons, or forms targeting your application, you should use and check \f(CW\*(C`csrf_token\*(C'\fR on any requests that change application state, write to the local filesystem, or otherwise make use of privileges beyond those typically available in a browser scripting context.
.IP "Access From Other Local Processes" 4
.IX Item "Access From Other Local Processes"
With this plugin loaded, \f(CW\*(C`$c\->validation\->csrf_protect\*(C'\fR will fail on sessions other from the one created by the browser launched.
.Sp
If, however you choose to \*(L"allow_other_sessions\*(R" then it is assumed you have some independent means of authenticating them.  Your application will be receiving requests from other local processes (including other browsers you may have installed).  Special care will be needed if, e.g.,
.RS 4
.IP "\(bu" 4
You are concurrently running instances of alternative/out\-dated browsers with cross-site scripting vulnerabiliities visiting untrusted sites that can exploit them.
.IP "\(bu" 4
There are other local users on your machine.
.IP "\(bu" 4
Your application runs setuid or otherwise invokes elevated privileges (which could then be used by other processes to bypass various protections).
.RE
.RS 4
.RE
.SH "METHODS"
.IX Header "METHODS"
Mojolicious::Plugin::Loco inherits all methods from
Mojolicious::Plugin and implements the following new ones.
.SS "register"
.IX Subsection "register"
.Vb 1
\&  $plugin\->register($app, entry => \*(Aq/\*(Aq, initial_wait => 15);
.Ve
.PP
Register plugin in Mojolicious application.  Key-value pairs give default option values for this application.  Everything other than \*(L"config_key\*(R" may be overridden in the application configuration.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Mojolicious, Mojolicious::Guides, <https://mojolicious.org>.
.SH "AUTHOR"
.IX Header "AUTHOR"
Roger Crew <wrog@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2018 by Roger Crew.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Getopt::EX::termcolor 3"
.TH Getopt::EX::termcolor 3 "2020-07-06" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Getopt::EX::termcolor \- Getopt::EX termcolor module
.SH "VERSION"
.IX Header "VERSION"
Version 1.07
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 4
\&    use Getopt::EX::Loader;
\&    my $rcloader = Getopt::EX::Loader\->new(
\&        BASECLASS => [ \*(AqApp::command\*(Aq, \*(AqGetopt::EX\*(Aq ],
\&        );
\&
\&    or
\&
\&    use Getopt::EX::Long qw(:DEFAULT ExConfigure);
\&    ExConfigure BASECLASS => [ "App::command", "Getopt::EX" ];
\&
\&    then
\&
\&    $ command \-Mtermcolor::bg=
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This is a common module for command using Getopt::EX to manipulate
system dependent terminal color.
.PP
Actual action is done by sub-module under Getopt::EX::termcolor,
such as Getopt::EX::termcolor::Apple_Terminal.
.PP
Each sub-module is expected to have \f(CW&get_color\fR function which
return the list of \s-1RGB\s0 values for requested name, but currently name
\&\f(CW\*(C`background\*(C'\fR is only supported.  Each \s-1RGB\s0 values are expected in a
range of 0 to 255 by default.  If the list first entry is a \s-1HASH\s0
reference, it may include maximum number indication like \f(CW\*(C`{ max =>
65535 }\*(C'\fR.
.PP
Terminal luminance is calculated from \s-1RGB\s0 values by this equation and
produces decimal value from 0 to 100.
.PP
.Vb 1
\&    ( 30 * R + 59 * G + 11 * B ) / MAX
.Ve
.PP
If the environment variable \f(CW\*(C`TERM_BGCOLOR\*(C'\fR is defined, it is used as
a background \s-1RGB\s0 value without calling sub-modules.  \s-1RGB\s0 value is a
combination of integer described in 24bit/12bit hex, 24bit decimal or
6x6x6 216 color format.  \s-1RGB\s0 color notation is compatible with
Getopt::EX::Colormap.
.PP
.Vb 4
\&    24bit hex     #000000 .. #FFFFFF
\&    12bit hex     #000    .. #FFF
\&    24bit decimal 0,0,0   .. 255,255,255
\&    6x6x6 216     000     .. 555
.Ve
.PP
You can set \f(CW\*(C`TERM_BGCOLOR\*(C'\fR in you start up file of shell.  This
module has utility function \f(CW\*(C`bgcolor\*(C'\fR which can be used like this:
.PP
.Vb 2
\&    export TERM_BGCOLOR=\`perl \-MGetopt::EX::termcolor=bgcolor \-e bgcolor\`
\&    : ${TERM_BGCOLOR:=#FFFFFF}
.Ve
.SH "MODULE FUNCTION"
.IX Header "MODULE FUNCTION"
.IP "\fBbg\fR" 7
.IX Item "bg"
Call this function with module option:
.Sp
.Vb 1
\&    $ command \-Mtermcolor::bg=
.Ve
.Sp
If the terminal luminance is unknown, nothing happens.  Otherwise, the
module insert \fB\-\-light\-terminal\fR or \fB\-\-dark\-terminal\fR option
according to the luminance value.
.Sp
You can change the behavior by optional parameters:
.Sp
.Vb 4
\&    threshold : threshold of light/dark  (default 50)
\&    default   : default luminance value  (default none)
\&    light     : light terminal option    (default "\-\-light\-terminal")
\&    dark      : dark terminal option     (default "\-\-dark\-terminal")
.Ve
.Sp
Use like this:
.Sp
.Vb 2
\&    option default \e
\&        \-Mtermcolor::bg(default=100,light=\-\-light,dark=\-\-dark)
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Getopt::EX
.PP
Getopt::EX::termcolor::Apple_Terminal
.PP
Getopt::EX::termcolor::iTerm
.PP
Getopt::EX::termcolor::XTerm
.SH "AUTHOR"
.IX Header "AUTHOR"
Kazumasa Utashiro
.SH "LICENSE"
.IX Header "LICENSE"
Copyright (C) 2020 Kazumasa Utashiro.
.PP
You can redistribute it and/or modify it under the same terms
as Perl itself.

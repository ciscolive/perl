.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Net::DNS::SEC 3"
.TH Net::DNS::SEC 3 "2020-10-02" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Net::DNS::SEC \- DNSSEC extensions to Net::DNS
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    use Net::DNS::SEC;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Net::DNS::SEC is installed as an extension to an existing Net::DNS
installation providing packages to support \s-1DNSSEC\s0 as specified in
\&\s-1RFC4033, RFC4034, RFC4035\s0 and related documents.
.PP
It also provides support for \s-1SIG0\s0 which is useful for dynamic updates.
.PP
Implements cryptographic signature generation and verification functions
using \s-1RSA, DSA, ECDSA,\s0 and Edwards curve algorithms.
.PP
The extended features are made available by replacing Net::DNS by
Net::DNS::SEC in the use declaration.
.SH "UTILITY FUNCTIONS"
.IX Header "UTILITY FUNCTIONS"
.SS "algorithm"
.IX Subsection "algorithm"
.Vb 4
\&    $mnemonic = algorithm( 5 );
\&    $numeric  = algorithm( \*(AqRSA\-SHA1\*(Aq );
\&    print "algorithm mnemonic\et", $mnemonic, "\en";
\&    print "algorithm number:\et",  $numeric,  "\en";
.Ve
.PP
\&\fBalgorithm()\fR provides conversions between an algorithm code number and
the corresponding mnemonic.
.SS "digtype"
.IX Subsection "digtype"
.Vb 4
\&    $mnemonic = digtype( 2 );
\&    $numeric  = digtype( \*(AqSHA\-256\*(Aq );
\&    print "digest type mnemonic\et", $mnemonic, "\en";
\&    print "digest type number:\et",  $numeric,  "\en";
.Ve
.PP
\&\fBdigtype()\fR provides conversions between a digest type number and the
corresponding mnemonic.
.SS "key_difference"
.IX Subsection "key_difference"
.Vb 1
\&    @result = key_difference( \e@a, \e@b );
.Ve
.PP
Fills \f(CW@result\fR with all keys in array \f(CW@a\fR that are not in array \f(CW@b\fR.
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c)2014\-2018 Dick Franks
.PP
Copyright (c)2001\-2005 \s-1RIPE NCC.\s0 Author Olaf M. Kolkman
.PP
All Rights Reserved
.SH "LICENSE"
.IX Header "LICENSE"
Permission to use, copy, modify, and distribute this software and its
documentation for any purpose and without fee is hereby granted, provided
that the above copyright notice appear in all copies and that both that
copyright notice and this permission notice appear in supporting
documentation, and that the name of the author not be used in advertising
or publicity pertaining to distribution of the software without specific
prior written permission.
.PP
\&\s-1THE SOFTWARE IS PROVIDED \*(L"AS IS\*(R", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
DEALINGS IN THE SOFTWARE.\s0
.SH "SEE ALSO"
.IX Header "SEE ALSO"
perl, Net::DNS, \s-1RFC4033, RFC4034, RFC4035,\s0
OpenSSL <http://www.openssl.org/docs>

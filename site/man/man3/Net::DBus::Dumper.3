.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Net::DBus::Dumper 3"
.TH Net::DBus::Dumper 3 "2013-08-30" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Net::DBus::Dumper \- Stringify Net::DBus objects suitable for printing
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  use Net::DBus::Dumper;
\&
\&  use Net::DBus;
\&
\&  # Dump out info about the bus
\&  my $bus = Net::DBus\->find;
\&  print dbus_dump($bus);
\&
\&  # Dump out info about a service
\&  my $service = $bus\->get_service("org.freedesktop.DBus");
\&  print dbus_dump($service);
\&
\&  # Dump out info about an object
\&  my $object = $service\->get_object("/org/freedesktop/DBus");
\&  print dbus_dump($object);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module serves as a debugging aid, providing a means to stringify
a DBus related object in a form suitable for printing out. It can
stringify any of the Net::DBus:* objects, generating the following
information for each
.IP "Net::DBus" 4
.IX Item "Net::DBus"
A list of services registered with the bus
.IP "Net::DBus::Service =item Net::DBus::RemoteService" 4
.IX Item "Net::DBus::Service =item Net::DBus::RemoteService"
The service name
.IP "Net::DBus::Object =item Net::DBus::RemoteObject" 4
.IX Item "Net::DBus::Object =item Net::DBus::RemoteObject"
The list of all exported methods, and signals, along with their
parameter and return types.
.SH "METHODS"
.IX Header "METHODS"
.ie n .IP "my @data = dbus_dump($object);" 4
.el .IP "my \f(CW@data\fR = dbus_dump($object);" 4
.IX Item "my @data = dbus_dump($object);"
Generates a stringified representation of an object. The object
passed in as the parameter must be an instance of one of Net::DBus,
Net::DBus::RemoteService, Net::DBus::Service,
Net::DBus::RemoteObject, Net::DBus::Object. The stringified
representation will be returned as a list of strings, with newlines
in appropriate places, such that it can be passed string to the \f(CW\*(C`print\*(C'\fR
method.
.SH "BUGS"
.IX Header "BUGS"
It should print out a list of object paths registered against a
service, but this only currently works for service implemented
in Perl
.SH "AUTHOR"
.IX Header "AUTHOR"
Daniel P. Berrange
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2005\-2011 Daniel P. Berrange
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Net::DBus, Net::DBus::RemoteService, Net::DBus::Service,
Net::DBus::RemoteObject, Net::DBus::Object, Data::Dumper.

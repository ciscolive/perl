.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Infoblox::DNS::Ruleset::NxdomainRule 3"
.TH Infoblox::DNS::Ruleset::NxdomainRule 3 "2018-06-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Infoblox::DNS::Ruleset::NxdomainRule \- Rule of Ruleset object
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Represents a rule that is used to match domain names.
.SH "CONSTRUCTOR"
.IX Header "CONSTRUCTOR"
.Vb 4
\& my $rule = Infoblox::DNS::Ruleset::NxdomainRule\->new(
\&              pattern => $string,                   #Required
\&              action => $string,                    #Required
\& );
.Ve
.SH "MODULE METHODS"
.IX Header "MODULE METHODS"
The following functions can be applied to an Infoblox::DNS::Ruleset::NxdomainRule object.
.SS "Infoblox::DNS::Ruleset\->nxdomain_rules( )"
.IX Subsection "Infoblox::DNS::Ruleset->nxdomain_rules( )"
.RS 4
Use this method to add a list of Infoblox::DNS::Ruleset::NxdomainRule objects to the Ruleset object of an Infoblox appliance. See Infoblox::DNS::Ruleset\->\fBnxdomain_rules()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
#Construct a rule
 my \f(CW$rule1\fR = Infoblox::DNS::Ruleset::NxdomainRule\->new(
              pattern  => \*(L"www.a.zone.com\*(R",
              action => \*(L"\s-1PASS\*(R"\s0
 );
.Sp
# Configure a rule for the Ruleset object
 \f(CW$ruleset\fR\->nxdomain_rules([$rule1]);
.RE
.RS 4
.RE
.SH "METHODS"
.IX Header "METHODS"
This section describes all the methods you can use to configure and retrieve the attribute values of a Rule object.
.SS "pattern( )"
.IX Subsection "pattern( )"
.RS 4
Use this method to specify the pattern that is used to match domain names.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The pattern in string format, with a maximum of 1024 characters.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get pattern
\& my $pattern = $ruleset_item\->pattern();
\& #Modify pattern
\& $ruleset_item\->pattern("^*$");
.Ve
.RE
.RS 4
.RE
.SS "action( )"
.IX Subsection "action( )"
.RS 4
Use this method to specify the action to perform when a domain name matches the pattern defined in this Infoblox::DNS::Ruleset::NxdomainRule object.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is \*(L"\s-1PASS\*(R", \*(L"REDIRECT\*(R"\s0 or \*(L"\s-1MODIFY\*(R".\s0
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get action
\& my $action = $ruleset_item\->action();
\& #Modify action
\& $ruleset_item\->action("PASS");
.Ve
.RE
.RS 4
.RE
.SH "AUTHOR"
.IX Header "AUTHOR"
Infoblox Inc. <http://www.infoblox.com/>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Infoblox::Session, Infoblox::DNS::Ruleset
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2017 Infoblox Inc.

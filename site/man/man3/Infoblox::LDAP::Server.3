.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Infoblox::LDAP::Server 3"
.TH Infoblox::LDAP::Server 3 "2018-06-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Infoblox::LDAP::Server \- An LDAP Server object.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The \s-1LDAP\s0 Server is used for authentication.
.SH "CONSTRUCTOR"
.IX Header "CONSTRUCTOR"
.Vb 10
\& my $server = Infoblox::LDAP::Server\->new(
\&     address             => $address_or_fqdn,                # Required
\&     base_dn             => $string,                         # Required
\&     bind_user_dn        => $string,                         # Required if authentication_type is \*(AqAUTHENTICATED\*(Aq
\&     bind_password       => $string,                         # Required if authentication_type is \*(AqAUTHENTICATED\*(Aq, write\-only
\&     port                => $uint,                           # Optional, Default is 636
\&     version             => \*(AqV2\*(Aq | \*(AqV3\*(Aq,                     # Optional, Default is \*(AqV3\*(Aq
\&     comment             => $string,                         # Optional
\&     authentication_type => \*(AqANONYMOUS\*(Aq | \*(AqAUTHENTICATED\*(Aq,   # Optional, Default is \*(AqANONYMOUS\*(Aq
\&     encryption          => \*(AqNONE\*(Aq | \*(AqSSL\*(Aq,                  # Optional, Default is \*(AqSSL\*(Aq
\&     use_mgmt_port       => \*(Aqtrue\*(Aq | \*(Aqfalse\*(Aq,                # Optional, Default is \*(Aqfalse\*(Aq
\&     disable             => \*(Aqtrue\*(Aq | \*(Aqfalse\*(Aq,                # Optional, Default is \*(Aqfalse\*(Aq
\& );
.Ve
.SH "SESSION METHODS"
.IX Header "SESSION METHODS"
The \s-1LDAP\s0 Server object does not support any session methods.
.SH "METHODS"
.IX Header "METHODS"
This section describes all the methods that you can use to configure and retrieve the attribute values of an \s-1LDAP\s0 server object.
.SS "address( )"
.IX Subsection "address( )"
.RS 4
Use this method to set or retrieve an \s-1IP\s0 address or \s-1FQDN\s0 of an \s-1LDAP\s0 server.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
An \s-1IP\s0 address or \s-1FQDN\s0 of an \s-1LDAP\s0 server in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get attribute value
\& my $value = $server\->address();
\& #Modify attribute value
\& $server\->address(\*(Aq10.0.0.1\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "authentication_type( )"
.IX Subsection "authentication_type( )"
.RS 4
Use this method to set or retrieve an authentication type.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid values are '\s-1ANONYMOUS\s0' and '\s-1AUTHENTICATED\s0'. The default value is '\s-1ANONYMOUS\s0'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get attribute value
\& my $value = $server\->authentication_type();
\& #Modify attribute value
\& $server\->authentication_type(\*(AqAUTHENTICATED\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "base_dn( )"
.IX Subsection "base_dn( )"
.RS 4
Use this method to set or retrieve a base \s-1DN\s0 for the \s-1LDAP\s0 server.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
A base \s-1DN\s0 in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get attribute value
\& my $value = $server\->base_dn();
\& #Modify attribute value
\& $server\->base_dn(\*(Aqdc=infoblox,dc=com\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "bind_password( )"
.IX Subsection "bind_password( )"
.RS 4
Use this method to set a user password for authentication. This attribute is required if authentication_type attribute value is '\s-1AUTHENTICATED\s0'. This is a write-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
An user password in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Modify attribute value
\& $server\->bind_password(\*(Aqpassword\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "bind_user_dn( )"
.IX Subsection "bind_user_dn( )"
.RS 4
Use this method to set or retrieve an user \s-1DN\s0 for authentication. This attribute is required if authentication_type attribute value is '\s-1AUTHENTICATED\s0'.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
An user \s-1DN\s0 in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get attribute value
\& my $value = $server\->bind_user_dn();
\& #Modify attribute value
\& $server\->bind_user_dn(\*(Aqcn=user,dc=infoblox,dc=com\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "comment( )"
.IX Subsection "comment( )"
.RS 4
Use this method to set or retrieve a descriptive comment.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
A desired comment in string format with a maximum of 256 bytes.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get attribute value
\& my $value = $server\->comment();
\& #Modify attribute value
\& $server\->comment(\*(AqLDAP object\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "encryption( )"
.IX Subsection "encryption( )"
.RS 4
Use this method to set or retrieve an encryption type.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid values are '\s-1NONE\s0' and '\s-1SSL\s0'. The default value is '\s-1SSL\s0'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get attribute value
\& my $value = $server\->encryption();
\& #Modify attribute value
\& $server\->encryption(\*(AqSSL\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "disable( )"
.IX Subsection "disable( )"
.RS 4
Use this method to enable or disable an \s-1LDAP\s0 server.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to disable an \s-1LDAP\s0 server or \*(L"false\*(R" to enable it. The default value is 'false'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get attribute value
\& my $value = $server\->disable();
\& #Modify attribute value
\& $server\->disable(\*(Aqtrue\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "port( )"
.IX Subsection "port( )"
.RS 4
Use this method to set or retrieve a port number.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
A port number. The default value is 636.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get attribute value
\& my $value = $server\->port();
\& #Modify attribute value
\& $server\->port(389);
.Ve
.RE
.RS 4
.RE
.SS "use_mgmt_port( )"
.IX Subsection "use_mgmt_port( )"
.RS 4
Use this method to set or retrieve the flag that allows connections through the management interface.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to allow or \*(L"false\*(R" to deny it. The default value is 'false'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get attribute value
\& my $value = $server\->use_mgmt_port();
\& #Modify attribute value
\& $server\->use_mgmt_port(\*(Aqtrue\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "version( )"
.IX Subsection "version( )"
.RS 4
Use this method to set or retrieve an \s-1LDAP\s0 server version.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid values are 'V2' and 'V3'. The default value is 'V3'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get attribute value
\& my $value = $server\->version();
\& #Modify attribute value
\& $server\->version(\*(AqV2\*(Aq);
.Ve
.RE
.RS 4
.RE
.SH "AUTHOR"
.IX Header "AUTHOR"
Infoblox Inc. <http://www.infoblox.com/>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Infoblox::LDAP::AuthService
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2017 Infoblox Inc.

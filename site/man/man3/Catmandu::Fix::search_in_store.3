.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Catmandu::Fix::search_in_store 3"
.TH Catmandu::Fix::search_in_store 3 "2020-07-11" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Catmandu::Fix::search_in_store \- use the value as query, and replace it by a search object
.SH "SYNTAX"
.IX Header "SYNTAX"
search_in_store(path)
.PP
search_in_store(path,store: 'store', bag: 'bag', limit: 0, start: 0, sort: 'title desc')
.SH "RETURN VALUE"
.IX Header "RETURN VALUE"
.Vb 6
\&    {
\&        start: 0,
\&        limit: 0,
\&        hits: [],
\&        total: 1000
\&    }
.Ve
.PP
cf. Catmandu::Hits
.SH "PARAMETERS"
.IX Header "PARAMETERS"
.SS "path"
.IX Subsection "path"
The location in the perl hash where the query is stored.
.PP
See \*(L"\s-1PATHS\*(R"\s0 in Catmandu::Fix for more information about paths.
.SS "store"
.IX Subsection "store"
The name of the store.
.PP
This store \s-1MUST\s0 be an implementation of Catmandu::Searchable.
.PP
There are several ways to refer to a store:
.PP
.Vb 3
\&    * by full package name ( e.g. \*(AqCatmandu::Store::Solr\*(Aq )
\&    * by short package name ( e.g. \*(AqSolr\*(Aq )
\&    * by name defined in the Catmandu configuration
.Ve
.PP
See \*(L"store-NAME\*(R" in Catmandu for more information.
.PP
Default is 'default'.
.SS "bag"
.IX Subsection "bag"
Name of bag.
.PP
Default is 'data'.
.SS "limit"
.IX Subsection "limit"
only return \f(CW$limit\fR number of records.
.SS "start"
.IX Subsection "start"
offset of records to return
.SS "sort"
.IX Subsection "sort"
sort records before slicing them.
.PP
This parameter is store specific.
.SH "OTHER PARAMETERS"
.IX Header "OTHER PARAMETERS"
other parameters are given to the contructor of the Catmandu::Store
.PP
e.g. catmandu.yml:
.PP
.Vb 3
\&    store:
\&        catalog:
\&            package: "Catmandu::Store::Solr"
.Ve
.PP
e.g. fix:
.PP
.Vb 1
\&    search_in_store(\*(Aqfoo.query\*(Aq, store:\*(Aqcatalog\*(Aq, bag: \*(Aqdata\*(Aq, url: \*(Aqhttp://localhost:8983/solr/catalog\*(Aq)
.Ve
.SH "EXAMPLES"
.IX Header "EXAMPLES"
.Vb 2
\&    #search in Catmandu\->store\->bag, and store first 20 results in the foo.query.hits
\&    search_in_store(\*(Aqfoo.query\*(Aq)
\&
\&    #search in Catmandu\->store\->bag, and store first 20 results in the foo.query.hits
\&    search_in_store(\*(Aqfoo.query\*(Aq, store:\*(Aqdefault\*(Aq)
\&
\&    #search in Catmandu\->store\->bag; limit number of results to 10
\&    search_in_store(\*(Aqfoo.query\*(Aq, store:\*(Aqdefault\*(Aq, limit: 10)
\&
\&    #search in Catmandu\->store\->bag; limit number of result to 10, starting from 15
\&    search_in_store(\*(Aqfoo.query\*(Aq, store:\*(Aqdefault\*(Aq, limit: 10, start: 15)
\&
\&    #search in Catmandu\->store\->bag(\*(Aqpersons\*(Aq); sort by year descending, and by title ascending
\&    search_in_store(\*(Aqfoo.query\*(Aq, store:\*(Aqdefault\*(Aq, bag:\*(Aqpersons\*(Aq, sort: \*(Aqyear desc,title asc\*(Aq)
.Ve
.SH "AUTHORS"
.IX Header "AUTHORS"
Nicolas Franck \f(CW\*(C`<nicolas.franck at ugent.be>\*(C'\fR
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Catmandu::Fix
.PP
Catmandu::Store

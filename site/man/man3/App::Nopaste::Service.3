.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "App::Nopaste::Service 3"
.TH App::Nopaste::Service 3 "2019-07-23" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
App::Nopaste::Service \- base class for nopaste services
.SH "VERSION"
.IX Header "VERSION"
version 1.013
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&    package App::Nopaste::Service::Shadowcat;
\&    use parent \*(AqApp::Nopaste::Service\*(Aq;
\&
\&    sub uri { "http://paste.scsys.co.uk/" }
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\f(CW\*(C`App::Nopaste::Service\*(C'\fR defines a generic interface for uploading to nopaste
sites. It provides a default interface to that of the \s-1POE\s0 Pastebot.
.SH "METHODS"
.IX Header "METHODS"
.SS "nopaste"
.IX Subsection "nopaste"
This is the outermost method called by App::Nopaste and other clients. You
should not override this method, as it will (\s-1XXX:\s0 eventually) perform
canonicalization of arguments (such as \f(CW\*(C`lang\*(C'\fR) for you.
.SS "run args \-> (\s-1OK,\s0 message)"
.IX Subsection "run args -> (OK, message)"
This is the outermost method you should override. You'll be passed a hash of arguments. The only arguments you should pay attention to are:
.IP "text" 4
.IX Item "text"
The body of text to paste.
.IP "desc" 4
.IX Item "desc"
A short (one-line) summary of the paste.
.IP "nick" 4
.IX Item "nick"
The name of the person performing the paste.
.IP "chan" 4
.IX Item "chan"
The \s-1IRC\s0 channel to which the paste belongs.
.IP "lang" 4
.IX Item "lang"
The programming language of the body of text.
.IP "private" 4
.IX Item "private"
If false, the paste will be public (default).
.SS "get mech, args"
.IX Subsection "get mech, args"
This should \*(L"get\*(R" the form to paste using the provided WWW::Mechanize
object. By default it does just that. See \*(L"uri\*(R" below.
.SS "uri"
.IX Subsection "uri"
If you only need to call \f(CW\*(C`mech\->get(uri)\*(C'\fR then you may define this method
to provide the \s-1URI\s0 of the nopaste service.
.SS "fill_form mech, args"
.IX Subsection "fill_form mech, args"
This should have the WWW::Mechanize fill in the form using the arguments,
and submit it.
.SS "return mech, args"
.IX Subsection "return mech, args"
This should look at \f(CW\*(C`WWW::Mechanize\->content\*(C'\fR to find the \s-1URI\s0 to the
pasted text.
.SH "SUPPORT"
.IX Header "SUPPORT"
Bugs may be submitted through the \s-1RT\s0 bug tracker <https://rt.cpan.org/Public/Dist/Display.html?Name=App-Nopaste>
(or bug\-App\-Nopaste@rt.cpan.org <mailto:bug-App-Nopaste@rt.cpan.org>).
.SH "AUTHOR"
.IX Header "AUTHOR"
Shawn M Moore, <sartak at gmail.com>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2008 by Shawn M Moore.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Infoblox::Grid::ServiceRestart::Group::Schedule 3"
.TH Infoblox::Grid::ServiceRestart::Group::Schedule 3 "2018-06-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Infoblox::Grid::ServiceRestart::Group::Schedule \- A Grid Service Restart Group Schedule object.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The Grid Service Restart Group Schedule object provides information about restart service schedule settings for Service Restart Group.
.SH "CONSTRUCTOR"
.IX Header "CONSTRUCTOR"
.Vb 6
\& my $svcrst_schedule = Infoblox::Grid::ServiceRestart::Group::Schedule\->new(
\&    schedule => $schedule,                                 # Required
\&    services => $array_of_services,                        # Optional / Default is [\*(AqALL\*(Aq]
\&    mode     => \*(AqGROUPED\*(Aq | \*(AqSEQUENTIAL\*(Aq | \*(AqSIMULTANEOUS\*(Aq, # Optional / Default is \*(AqGROUPED\*(Aq
\&    force    => \*(Aqtrue\*(Aq | \*(Aqfalse\*(Aq,                          # Optional / Default is \*(Aqfalse\*(Aq
\& );
.Ve
.SH "MODULE METHODS"
.IX Header "MODULE METHODS"
.SS "Infoblox::Grid::ServiceRestart::Group\->recurring_schedule( )"
.IX Subsection "Infoblox::Grid::ServiceRestart::Group->recurring_schedule( )"
.RS 4
Use this method to set or retrieve the Grid Service Restart Group Schedule. See Infoblox::Grid::ServiceRestart::Group\->\fBrecurring_schedule()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get recurring_schedule
\& my $recurring_schedule = $svcrst_group\->recurring_schedule();
\& #Modify recurring_schedule
\& $svcrst_group\->recurring_schedule($sched);
.Ve
.RE
.RS 4
.RE
.SH "METHODS"
.IX Header "METHODS"
This section describes all the methods that you can use to set or retrieve the attribute values of the object.
.SS "services( )"
.IX Subsection "services( )"
.RS 4
Use this method to set or retrieve the list of services for a scheduled restart for a particular Grid Service Restart Group.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an array which contains following values: '\s-1ALL\s0', '\s-1DNS\s0', '\s-1DHCP\s0', '\s-1DHCPV4\s0', '\s-1DHCPV6\s0'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns 'true' when the modification succeeds, and returns 'false' when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get services
\& my $services = $svcrst_schedule\->services();
\& #Modify services
\& $svcrst_schedule\->services(\*(AqDHCP\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "mode( )"
.IX Subsection "mode( )"
.RS 4
Use this method to set or retrieve the service restart mode for a scheduled restart for a particular Grid Service Restart Group.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid values are '\s-1GROUPED\s0', '\s-1SEQUENTIAL\s0' and '\s-1SIMULTANEOUS\s0'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns 'true' when the modification succeeds, and returns 'false' when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get mode
\& my $mode = $svcrst_schedule\->mode();
\& #Modify mode
\& $svcrst_schedule\->mode(\*(AqSEQUENTIAL\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "force( )"
.IX Subsection "force( )"
.RS 4
Use this method to set or retrieve the flag that indicates whether a forced scheduled restart will be performed for a particular Grid Service Restart Group.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify 'true' to set the flag, and 'false' to unset/deactivate it. The default value is 'false'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns 'true' when the modification succeeds, and returns 'false' when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get force
\& my $force = $svcrst_schedule\->force();
\& #Modify force
\& $svcrst_schedule\->force(\*(Aqtrue\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "schedule( )"
.IX Subsection "schedule( )"
.RS 4
Use this method to set or retrieve the schedule settings for a particular Grid Service Restart Group.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an Infoblox::Grid::ScheduleSetting object.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns 'true' when the modification succeeds, and returns 'false' when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get schedule
\& my $schedule = $svcrst_schedule\->schedule();
\& #Modify schedule
\& $svcrst_schedule\->schedule($sched);
.Ve
.RE
.RS 4
.RE
.SH "AUTHOR"
.IX Header "AUTHOR"
Infoblox Inc. <http://www.infoblox.com/>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Infoblox::Grid::ServiceRestart::Group, Infoblox::Grid::ServiceRestart::Group\->\fBrecurring_schedule()\fR, Infoblox::Grid::ScheduleSetting.
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2017 Infoblox Inc.

.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Module::CPANTS::Analyse 3"
.TH Module::CPANTS::Analyse 3 "2019-08-08" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Module::CPANTS::Analyse \- Generate Kwalitee ratings for a distribution
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    use Module::CPANTS::Analyse;
\&
\&    my $analyser = Module::CPANTS::Analyse\->new({
\&        dist => \*(Aqpath/to/Foo\-Bar\-1.42.tgz\*(Aq,
\&    });
\&    $analyser\->run;
\&    # results are in $analyser\->d;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
.SS "Methods"
.IX Subsection "Methods"
\fInew\fR
.IX Subsection "new"
.PP
.Vb 1
\&  my $analyser = Module::CPANTS::Analyse\->new({dist => \*(Aqpath/to/file\*(Aq});
.Ve
.PP
Plain old constructor.
.PP
\fIunpack\fR
.IX Subsection "unpack"
.PP
Unpack the distribution into a temporary directory.
.PP
Returns an error if something went wrong, \f(CW\*(C`undef\*(C'\fR if all went well.
.PP
\fIanalyse\fR
.IX Subsection "analyse"
.PP
Run all analysers (defined in \f(CW\*(C`Module::CPANTS::Kwalitee::*\*(C'\fR on the dist.
.PP
\fIcalc_kwalitee\fR
.IX Subsection "calc_kwalitee"
.PP
Check if the dist conforms to the Kwalitee indicators.
.PP
\fIrun\fR
.IX Subsection "run"
.PP
Unpacks, analyses, and calculates kwalitee, and returns a resulting stash.
.SS "Helper Methods"
.IX Subsection "Helper Methods"
\fItestdir\fR
.IX Subsection "testdir"
.PP
Returns the path to the unique temp directory.
.PP
\fItestfile\fR
.IX Subsection "testfile"
.PP
Returns the location of the unextracted tarball.
.PP
\fItarball\fR
.IX Subsection "tarball"
.PP
Returns the filename of the tarball.
.PP
\fIx_opts\fR
.IX Subsection "x_opts"
.PP
Returns a hash reference that holds normalized information set in the \*(L"x_cpants\*(R" custom \s-1META\s0 field.
.SH "WEBSITE"
.IX Header "WEBSITE"
<https://cpants.cpanauthors.org/>
.SH "BUGS"
.IX Header "BUGS"
Please report any bugs or feature requests, or send any patches, to
\&\f(CW\*(C`bug\-module\-cpants\-analyse at rt.cpan.org\*(C'\fR, or through the web interface at
<https://rt.cpan.org/NoAuth/ReportBug.html?Queue=Module\-CPANTS\-Analyse>.
I will be notified, and then you'll automatically be notified of progress
on your bug as I make changes.
.SH "AUTHOR"
.IX Header "AUTHOR"
Thomas Klausner <https://metacpan.org/author/domm>
.PP
Please use the \f(CW\*(C`perl\-qa\*(C'\fR mailing list for discussing all things \s-1CPANTS:\s0
<https://lists.perl.org/list/perl\-qa.html>
.PP
Based on work by Léon Brocard <https://metacpan.org/author/lbrocard> and the
original idea proposed by
Michael G. Schwern <https://metacpan.org/author/schwern>.
.SH "LICENSE"
.IX Header "LICENSE"
This code is Copyright © 2003–2006
Thomas Klausner <https://metacpan.org/author/domm>.
All rights reserved.
.PP
You may use and distribute this module according to the same terms
that Perl is distributed under.

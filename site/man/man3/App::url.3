.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "App::url 3"
.TH App::url 3 "2020-04-23" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
App::url \- format a URL according to a sprintf\-like template
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&        $ url \*(Aq%h\*(Aq http://www.example.com/a/b/c
\&        www.example.com
\&
\&        $ url \*(Aq%H\*(Aq http://www.example.com/a/b/c
\&        www
\&
\&        $ url \*(Aq%P\*(Aq http://www.example.com/a/b/c
\&        /a/b/c
\&
\&        $ url \*(Aq%P\*(Aq http://www.example.com/a/b/c
\&        /a/b/c
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Decompose the \s-1URL\s0 and reformat it according to
.SS "The formats"
.IX Subsection "The formats"
.IP "\(bu" 4
\&\f(CW%a\fR \- the path
.IP "\(bu" 4
\&\f(CW%f\fR \- the fragment
.IP "\(bu" 4
\&\f(CW%h\fR \- the hostname, with domain info
.IP "\(bu" 4
\&\f(CW%H\fR \- the hostname without domain info
.IP "\(bu" 4
\&\f(CW%i\fR \- the hostname in punycode
.IP "\(bu" 4
\&\f(CW%I\fR \- space-separated list of \s-1IP\s0 addresses for the host
.IP "\(bu" 4
\&\f(CW%P\fR \- the password of the userinfo portion
.IP "\(bu" 4
\&\f(CW%p\fR \- the port
.IP "\(bu" 4
\&\f(CW%q\fR \- the query string
.IP "\(bu" 4
\&\f(CW%s\fR \- the scheme
.IP "\(bu" 4
\&\f(CW%S\fR \- the public suffix
.IP "\(bu" 4
\&\f(CW%u\fR \- the complete \s-1URL\s0
.IP "\(bu" 4
\&\f(CW%U\fR \- the username of the userinfo portion
.PP
There are also some bonus formats unrelated to the \s-1URL:\s0
.IP "\(bu" 4
\&\f(CW%n\fR \- newline
.IP "\(bu" 4
\&\f(CW%t\fR \- tab
.IP "\(bu" 4
\&\f(CW\*(C`%%\*(C'\fR \- literal percent
.SS "Methods"
.IX Subsection "Methods"
.IP "\(bu" 4
run( \s-1TEMPLATE, ARRAY\s0 )
.Sp
Format each \s-1URL\s0 in \s-1ARRAY\s0 according to \s-1TEMPLATE\s0 and return an array
reference
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright Â© 2020, brian d foy, all rights reserved.
.SH "LICENSE"
.IX Header "LICENSE"
You can use this code under the terms of the Artistic License 2.

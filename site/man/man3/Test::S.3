.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Test::S 3"
.TH Test::S 3 "2013-04-19" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Test::S \- Change test settings on the command line
.SH "VERSION"
.IX Header "VERSION"
version 0.003
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
Run author test
.PP
.Vb 1
\&  perl \-MTest::S=author test.t
.Ve
.PP
Or with prove
.PP
.Vb 1
\&  prove \-MTest::S=author \-r .
.Ve
.PP
Change a few settings
.PP
.Vb 1
\&  prove \-MTest::S=author,smoke
.Ve
.PP
Or disable certain kinds explicitly
.PP
.Vb 1
\&  prove \-MTest::S=no_smoke
.Ve
.PP
Don't run interactive tests
.PP
.Vb 1
\&  prove \-MTest::S=non_interactive \-r .
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Test::S is a shortened interface to the functionality provided by 
Test::Settings for use on the command line to modify the environment on the 
fly. \fBThis should not be used in modules! It will not behave!\fR
.PP
This allows one to enable or disable certain types of tests on the command line 
without needing to set environment variables by hand.
.SS "Allowed modifiers"
.IX Subsection "Allowed modifiers"
To use the modifiers on the command line, with many tools you can load the 
module with \f(CW\*(C`\-M\*(C'\fR and provide a comma separated list of the modifiers you want:
.PP
.Vb 1
\&  perl \-MTest::S=all,no_smoke
.Ve
.PP
The following can all be used in combination with each other (though some 
combinations obviously cancel each other out)
.IP "\(bu" 4
smoke
.IP "\(bu" 4
non_interactive
.IP "\(bu" 4
extended
.IP "\(bu" 4
author
.IP "\(bu" 4
release
.IP "\(bu" 4
all
.IP "\(bu" 4
no_smoke
.IP "\(bu" 4
no_non_interactive
.IP "\(bu" 4
no_extended
.IP "\(bu" 4
no_author
.IP "\(bu" 4
no_release
.IP "\(bu" 4
none
.SS "Notes"
.IX Subsection "Notes"
\&\fBnon_interactive\fR means do not run interactive tests, and \fBno_non_interactive\fR 
means run interactive tests. This can be slightly confusing.
.PP
\&\fBall\fR and \fBnone\fR, if used, should be the first items in the list else they 
will override the other settings.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Test::Settings \- Ask or tell when certain types of tests should be run
.PP
Test::DescribeMe \- Tell test runners what kind of test you are
.PP
Test::Is \- Skip test in a declarative way, following the Lancaster Consensus
.SH "AUTHOR"
.IX Header "AUTHOR"
Matthew Horsfall (alh) \- <wolfsage@gmail.com>
.SH "LICENSE"
.IX Header "LICENSE"
You may distribute this code under the same terms as Perl itself.

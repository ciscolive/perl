.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Net::DHCP::Config::Utilities::INI_check 3"
.TH Net::DHCP::Config::Utilities::INI_check 3 "2020-05-04" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Net::DHCP::Config::Utilities::INI_check \- Runs various checks for DHCP info stored via INI.
.SH "VERSION"
.IX Header "VERSION"
Version 0.0.1
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&    use Net::DHCP::Config::Utilities::Options
\&    use Data::Dumper;
\&
\&    my $ini_checker;
\&    eval { $ini_checker=Net::DHCP::Config::Utilities::INI_check\->new( $dir )) };
\&    if ( $@ ){
\&        die "Initing the checker failed with... ".$@;
\&    }
\&
\&    my %overlaps;
\&    eval { %overlaps = $ini_checker\->overlap_check; };
\&    if ($@){
\&        warn(\*(AqOverlap check failed... \*(Aq);
\&    }else{
\&        use Data::Dumper;
\&        $Data::Dumper::Terse=1;
\&        print Dumper( \e%overlaps );
\&    }
.Ve
.SH "METHODS"
.IX Header "METHODS"
.SS "new"
.IX Subsection "new"
This initiates the object.
.PP
One arguments is required and that is the directory to process.
.PP
The section optional argument is the glob to use to match the files to process.
If left undefined, \*(L"*.dhcp.ini\*(R" is used.
.PP
.Vb 5
\&    my $checker;
\&    eval { $checker=Net::DHCP::Config::Utilities::INI_check\->new( $dir )) };
\&    if ( $@ ){
\&        die "Initing the checker failed with... ".$@;
\&    }
.Ve
.SS "overlap_check"
.IX Subsection "overlap_check"
Finds every \s-1DHCP INI\s0 file in the directory file in the directory and
checks for overlaps.
.PP
.Vb 1
\&    $returned{$file}{$section}{$file_containing_conflicts}[$sections]
.Ve
.PP
The returned values is a hash. \f(CW$file\fR is the name of file containing the checked
subnet. \f(CW$subnet\fR is the name of subnet in conflict. \f(CW$file_containing_conflicts\fR them
the name of the file containing the conflict. \f(CW$sections\fR is the name of the \s-1INI\s0
sections in the previously mentioned file containing the conflict.
.PP
.Vb 9
\&    my %overlaps;
\&    eval { %overlaps = $ini_checker\->overlap_check; };
\&    if ($@){
\&        warn(\*(AqOverlap check failed... \*(Aq);
\&    }else{
\&        use Data::Dumper;
\&        $Data::Dumper::Terse=1;
\&        print Dumper( \e%overlaps );
\&    }
.Ve
.SS "cidr_in_file"
.IX Subsection "cidr_in_file"
This goes through the \s-1INI\s0 file and checks the subnets there for any
overlap with the specified \s-1CIDR.\s0
.PP
Two arguments are required. The first is the \s-1CIDR\s0 to check for and the
second is the \s-1INI DHCP\s0 file to check for overlaps in.
.PP
Any subnets with bad base/mask that don't convert properly to a \s-1CIDR\s0
are skipped.
.PP
The returned value is a array reference of any found conflicts.
.PP
.Vb 4
\&    my $overlaps=$ini_check\->cidr_in_file( $cidr, $file );
\&    if ( defined( $overlaps\->[0] ) ){
\&        print "Overlap(s) found\en";
\&    }
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Zane C. Bowers-Hadley, \f(CW\*(C`<vvelox at vvelox.net>\*(C'\fR
.SH "BUGS"
.IX Header "BUGS"
Please report any bugs or feature requests to \f(CW\*(C`bug\-net\-dhcp\-config\-utilities at rt.cpan.org\*(C'\fR, or through
the web interface at <https://rt.cpan.org/NoAuth/ReportBug.html?Queue=Net\-DHCP\-Config\-Utilities>.  I will be notified, and then you'll
automatically be notified of progress on your bug as I make changes.
.SH "SUPPORT"
.IX Header "SUPPORT"
You can find documentation for this module with the perldoc command.
.PP
.Vb 1
\&    perldoc Net::DHCP::Config::Utilities
.Ve
.PP
You can also look for information at:
.IP "\(bu" 4
\&\s-1RT: CPAN\s0's request tracker (report bugs here)
.Sp
<https://rt.cpan.org/NoAuth/Bugs.html?Dist=Net\-DHCP\-Config\-Utilities>
.IP "\(bu" 4
AnnoCPAN: Annotated \s-1CPAN\s0 documentation
.Sp
<http://annocpan.org/dist/Net\-DHCP\-Config\-Utilities>
.IP "\(bu" 4
\&\s-1CPAN\s0 Ratings
.Sp
<https://cpanratings.perl.org/d/Net\-DHCP\-Config\-Utilities>
.IP "\(bu" 4
Search \s-1CPAN\s0
.Sp
<https://metacpan.org/release/Net\-DHCP\-Config\-Utilities>
.SH "ACKNOWLEDGEMENTS"
.IX Header "ACKNOWLEDGEMENTS"
.SH "LICENSE AND COPYRIGHT"
.IX Header "LICENSE AND COPYRIGHT"
This software is Copyright (c) 2020 by Zane C. Bowers-Hadley.
.PP
This is free software, licensed under:
.PP
.Vb 1
\&  The Artistic License 2.0 (GPL Compatible)
.Ve

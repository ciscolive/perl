.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.41)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "App::Netdisco::Worker::Plugin::MakeRancidConf 3"
.TH App::Netdisco::Worker::Plugin::MakeRancidConf 3 "2020-11-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
MakeRancidConf \- Generate rancid Configuration
.SH "INTRODUCTION"
.IX Header "INTRODUCTION"
This worker will generate a rancid configuration for all devices in Netdisco.
.PP
Optionally you can provide configuration to control the output, however the
defaults are sane for rancid versions 3.x and will create one rancid group
called \f(CW\*(C`default\*(C'\fR which contains all devices. Those devices not discovered
successfully within the past day will be marked as \f(CW\*(C`down\*(C'\fR for rancid to skip.
Configuration is saved to the \fI~/rancid\fR subdirectory of Netdisco's home folder.
.PP
Note that this only generates the router.db files, you will still need to
configure rancid's \fI.cloginrc\fR and schedule \f(CW\*(C`rancid\-run\*(C'\fR to run.
.PP
You could run this worker at 09:05 each day using the following configuration:
.PP
.Vb 3
\& schedule:
\&   makerancidconf:
\&     when: \*(Aq5 9 * * *\*(Aq
.Ve
.PP
Since MakeRancidConf is a worker module it can also be run via \f(CW\*(C`netdisco\-do\*(C'\fR:
.PP
.Vb 1
\& ~/bin/netdisco\-do makerancidconf
.Ve
.PP
Skipped devices and the reason for skipping them can be seen by using \f(CW\*(C`\-D\*(C'\fR:
.PP
.Vb 1
\& ~/bin/netdisco\-do makerancidconf \-D
.Ve
.SH "CONFIGURATION"
.IX Header "CONFIGURATION"
Here is a complete example of the configuration, which must be called
\&\f(CW\*(C`rancid\*(C'\fR. All keys are optional:
.PP
.Vb 10
\& rancid:
\&   rancid_cvsroot:  \*(Aq$ENV{NETDISCO_HOME}/rancid\*(Aq # default
\&   rancid_conf:     \*(Aq/etc/rancid\*(Aq                # default
\&   down_age:        \*(Aq1 day\*(Aq                      #\ default
\&   delimiter:       \*(Aq;\*(Aq                          #\ default
\&   default_group:   \*(Aqdefault\*(Aq                    # default 
\&   groups:
\&     groupname1:    \*(Aqhost_group1_acl\*(Aq
\&     groupname2:    \*(Aqhost_group2_acl\*(Aq
\&   vendormap:
\&     vname1:        \*(Aqhost_group3_acl\*(Aq
\&     vname2:        \*(Aqhost_group4_acl\*(Aq
\&   excluded:
\&     \- \*(Aqhost_group5_acl\*(Aq
\&     \- \*(Aqanother.host.example.com\*(Aq
\&   by_ip:           \*(Aqhost_group6_acl\*(Aq
\&   by_hostname:     \*(Aqhost_group7_acl\*(Aq
.Ve
.PP
Note that the default directory for writing files is not \fI/var/lib/rancid\fR so
you may wish to set this in \f(CW\*(C`rancid_cvsroot\*(C'\fR, (especially if migrating from the old
\&\f(CW\*(C`netdisco\-rancid\-export\*(C'\fR script).
.PP
Any values above that are a host group \s-1ACL\s0 will take either a single item or
a list of network identifiers or device properties. See the \s-1ACL\s0
documentation <https://github.com/netdisco/netdisco/wiki/Configuration#access-control-lists>
wiki page for full details. We advise you to use the \f(CW\*(C`host_groups\*(C'\fR setting
and then refer to named entries in that, for example:
.PP
.Vb 4
\& host_groups:
\&   coredevices: \*(Aq192.0.2.0/24\*(Aq
\&   edgedevices: \*(Aq172.16.0.0/16\*(Aq
\&   grp\-nxos:    \*(Aqos:nx\-os\*(Aq
\&
\& rancid:
\&   groups:
\&     core_devices: \*(Aqgroup:coredevices\*(Aq
\&     edge_devices: \*(Aqgroup:edgedevices\*(Aq
\&   vendormap:
\&     cisco\-nx:     \*(Aqgroup:grp\-nxos\*(Aq
\&   by_ip:          \*(Aqany\*(Aq
.Ve
.PP
Do not forget that rancid also needs configuring when adding a new group,
such as scheduling the group to run, adding it to \fIrancid.conf\fR, setting up the
email config and creating the repository with \f(CW\*(C`rancid\-cvs\*(C'\fR.
.ie n .SS """rancid_conf"""
.el .SS "\f(CWrancid_conf\fP"
.IX Subsection "rancid_conf"
The location where the rancid configuration (\fIrancid.types.base\fR and
\&\fIrancid.types.conf\fR) is installed. It will be used to check the existence
of device types before exporting the devices to the rancid configuration. If no match
is found the device will not be added to rancid.
.ie n .SS """rancid_cvsroot"""
.el .SS "\f(CWrancid_cvsroot\fP"
.IX Subsection "rancid_cvsroot"
The location to write rancid group configuration files (\fIrouter.db\fR) into. A
subdirectory for each group will be created.
.ie n .SS """down_age"""
.el .SS "\f(CWdown_age\fP"
.IX Subsection "down_age"
This should be the same or greater than the interval between regular discover
jobs on your network. Devices which have not been discovered within this time
will be marked as \f(CW\*(C`down\*(C'\fR to rancid.
.PP
The format is any time interval known and understood by PostgreSQL, such as at
<https://www.postgresql.org/docs/10/static/functions\-datetime.html>.
.ie n .SS """delimiter"""
.el .SS "\f(CWdelimiter\fP"
.IX Subsection "delimiter"
Set this to the delimiter character for your \fIrouter.db\fR entries if needed to
be different from the default, the default is \f(CW\*(C`;\*(C'\fR.
.ie n .SS """default_group"""
.el .SS "\f(CWdefault_group\fP"
.IX Subsection "default_group"
Put devices into this group if they do not match any other groups defined.
.ie n .SS """groups"""
.el .SS "\f(CWgroups\fP"
.IX Subsection "groups"
This dictionary maps rancid group names with configuration which will match
devices in the Netdisco database.
.PP
The left hand side (key) should be the rancid group name, the right hand side
(value) should be a Netdisco
\&\s-1ACL\s0 <https://github.com/netdisco/netdisco/wiki/Configuration#access-control-lists>
to select devices in the Netdisco database.
.ie n .SS """vendormap"""
.el .SS "\f(CWvendormap\fP"
.IX Subsection "vendormap"
If the device vendor in Netdisco is not the same as the rancid vendor script or
device type, configure a mapping here.
.PP
The left hand side (key) should be the rancid device type, the right hand side
(value) should be a Netdisco
\&\s-1ACL\s0 <https://github.com/netdisco/netdisco/wiki/Configuration#access-control-lists>
to select devices in the Netdisco database.
.PP
Note that vendors might have a large array of operating systems which require
different rancid modules. Mapping operating systems to rancid device types is
a good solution to use the correct device type. Example:
.PP
.Vb 2
\& host_groups:
\&   grp\-ciscosb:   \*(Aqos:ros\*(Aq
\&
\& rancid:
\&   vendormap:
\&     cisco\-sb:    \*(Aqgroup:grp\-ciscosb\*(Aq
.Ve
.ie n .SS """excluded"""
.el .SS "\f(CWexcluded\fP"
.IX Subsection "excluded"
Netdisco
\&\s-1ACL\s0 <https://github.com/netdisco/netdisco/wiki/Configuration#access-control-lists>
to identify devices that will be excluded from the rancid configuration.
.ie n .SS """by_ip"""
.el .SS "\f(CWby_ip\fP"
.IX Subsection "by_ip"
Netdisco
\&\s-1ACL\s0 <https://github.com/netdisco/netdisco/wiki/Configuration#access-control-lists>
to select devices which will be written to the rancid config as an \s-1IP\s0 address,
instead of the \s-1DNS FQDN\s0 or \s-1SNMP\s0 hostname.
.ie n .SS """by_hostname"""
.el .SS "\f(CWby_hostname\fP"
.IX Subsection "by_hostname"
Netdisco
\&\s-1ACL\s0 <https://github.com/netdisco/netdisco/wiki/Configuration#access-control-lists>
to select devices which will have the unqualified hostname written to the
rancid config. This is done simply by stripping the \f(CW\*(C`domain_suffix\*(C'\fR
configuration setting from the device \s-1FQDN.\s0
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.IP "\(bu" 4
<http://www.shrubbery.net/rancid/>
.IP "\(bu" 4
<https://github.com/ytti/oxidized>
.IP "\(bu" 4
<https://github.com/netdisco/netdisco/wiki/Configuration#access\-control\-lists>

.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Infoblox::Notification::REST::TemplateInstance 3"
.TH Infoblox::Notification::REST::TemplateInstance 3 "2018-06-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Infoblox::Notification::REST::TemplateInstance \- A REST API template instance.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The \s-1REST API\s0 template instance is used to configure \s-1REST API\s0 template setting for notification rule and \s-1REST API\s0 endpoint.
.SH "CONSTRUCTOR"
.IX Header "CONSTRUCTOR"
.Vb 4
\& my $templ_instance = Infoblox::Notification::REST::TemplateInstance\->new(
\&     template   => $string,                 #Required
\&     parameters => [$param1, $param2, ...], #Optional / Default is empty list
\& );
.Ve
.SH "SESSION METHODS"
.IX Header "SESSION METHODS"
The object does not have any session methods.
.SH "MODULE METHODS"
.IX Header "MODULE METHODS"
This section describes all the functions that you can apply to \s-1REST API\s0 template instance object.
.SS "Infoblox::Notification::Rule\->template_instance( )"
.IX Subsection "Infoblox::Notification::Rule->template_instance( )"
.RS 4
Use this method to set or retrieve the \s-1REST API\s0 template instance.
See Infoblox::Notification::Rule\->\fBtemplate_instance()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get template_instance value
\& my $template_instance = $object\->template_instance();
\&
\& #Modify template_instance value
\& $object\->template_instance($instance);
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Notification::REST::Endpoint\->template_instance( )"
.IX Subsection "Infoblox::Notification::REST::Endpoint->template_instance( )"
.RS 4
Use this method to set or retrieve the \s-1REST API\s0 template instance.
See Infoblox::Notification::REST::Endpoint\->\fBtemplate_instance()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get template_instance value
\& my $template_instance = $object\->template_instance();
\&
\& #Modify template_instance value
\& $object\->template_instance($instance);
.Ve
.RE
.RS 4
.RE
.SH "METHODS"
.IX Header "METHODS"
This section describes all the methods that you can use to configure and retrieve the attribute values of a \s-1REST API\s0 template instance object.
.SS "template( )"
.IX Subsection "template( )"
.RS 4
Use this method to set or retrieve the \s-1REST API\s0 template name.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an Infoblox::Notification::REST::Template object name.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you have specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get template value
\& my $template = $object\->template();
\&
\& #Modify template value
\& $object\->template(\*(Aqtemplate1\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "parameters( )"
.IX Subsection "parameters( )"
.RS 4
Use this method to set or retrieve the list of template parameters.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is array of Infoblox::Notification::REST::TemplateParameter objects.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you have specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get parameters value
\& my $parameters = $object\->parameters();
\&
\& #Modify parameters value
\& $object\->parameters([$param1, $param2]);
.Ve
.RE
.RS 4
.RE
.SH "AUTHOR"
.IX Header "AUTHOR"
Infoblox Inc. <http://www.infoblox.com/>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Infoblox::Notification::REST::Template,
Infoblox::Notification::REST::TemplateParameter
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2017 Infoblox Inc.

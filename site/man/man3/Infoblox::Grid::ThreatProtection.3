.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Infoblox::Grid::ThreatProtection 3"
.TH Infoblox::Grid::ThreatProtection 3 "2018-06-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Infoblox::Grid::ThreatProtection \- Grid Threat Protection object.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This object provides information about the Grid Threat protection settings.
.SH "SESSION METHODS"
.IX Header "SESSION METHODS"
The following functions can be applied to a Grid::ThreatProtection object.
.SS "Infoblox::Session\->get( )"
.IX Subsection "Infoblox::Session->get( )"
.RS 4
Use this method to retrieve all the matching objects from the Infoblox appliance. See Infoblox::Session\->\fBget()\fR for parameters and return values.
.IP "\fBKey References\fR" 4
.IX Item "Key References"
.Vb 2
\& Apply the following attributes to get a specific Grid Threat Protection object
\&  object \- Required. It must be set to "Infoblox::Grid::ThreatProtection".
.Ve
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 3
\& my @retrieved_objs = $session\->get(
\&     \*(Aqobject\*(Aq => \*(AqInfoblox::Grid::ThreatProtection\*(Aq,
\& );
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->modify( )"
.IX Subsection "Infoblox::Session->modify( )"
.RS 4
Use this method to modify an object in the Infoblox appliance. See Infoblox::Session\->\fBmodify()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 5
\& # Use this method to modify some of the attributes of the retrieved_objs object.
\& $retrieved_objs\->events_per_second_per_rule(\*(Aq2\*(Aq);
\& $retrieved_objs\->rule_update_policy(\*(AqMANUAL\*(Aq);
\& # Submit modification
\& my $response = $session\->modify( $retrieved_objs );
.Ve
.RE
.RS 4
.RE
.SH "METHODS"
.IX Header "METHODS"
This section describes all the methods that you can use to configure and retrieve values of the Threat Protection object.
.SS "current_ruleset( )"
.IX Subsection "current_ruleset( )"
.RS 4
Use this method to set or retrieve the current Grid ruleset.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is an Infoblox::Grid::ThreatProtection::Ruleset object.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get attribute value
\& my $value = $obj\->current_ruleset();
\& #Modify attribute value
\& $obj\->current_ruleset($rs);
.Ve
.RE
.RS 4
.RE
.SS "enable_nat_rules( )"
.IX Subsection "enable_nat_rules( )"
.RS 4
Use this method to enable or disable the \s-1NAT\s0 Threat Protection feature.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParamter\fR" 4
.IX Item "Paramter"
Specify 'true' to enable \s-1NAT\s0 mapping support for threat protection or 'false' to disable it. The default value is 'false'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get attribute value
\& my $value = $object\->enable_nat_rules();
\&
\& #Modify attribute value
\& $object\->enable_nat_rules(\*(Aqtrue\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "events_per_second_per_rule( )"
.IX Subsection "events_per_second_per_rule( )"
.RS 4
Use this method to set or retrieve the number of events logged per second per rule.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The number of events logged per second per rule in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->events_per_second_per_rule();
\& # Modify attribute value
\& $object\->events_per_second_per_rule(\*(Aq2\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "enable_auto_download( )"
.IX Subsection "enable_auto_download( )"
.RS 4
Use this method to enable or disable the auto download service.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify 'true' to enable the auto download service or 'false' to disable it. The default value is 'false'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get attribute value
\& my $value = $obj\->enable_auto_download();
\& #Modify attribute value
\& $obj\->enable_auto_download(\*(Aqtrue\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "enable_scheduled_download( )"
.IX Subsection "enable_scheduled_download( )"
.RS 4
Use this method to enable or disable the scheduled download. The default frequency is once every 24 hours if it is disabled.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify 'true' to enable the scheduled download or 'false' to disable it. The default value is 'false'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get attribute value
\& my $value = $obj\->enable_scheduled_download();
\& #Modify attribute value
\& $obj\->enable_scheduled_download(\*(Aqtrue\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "rule_update_policy( )"
.IX Subsection "rule_update_policy( )"
.RS 4
Use this method to set or retrieve the updated rule policy.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is '\s-1AUTOMATIC\s0' or '\s-1MANUAL\s0'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->rule_update_policy();
\& # Modify attribute value
\& $object\->rule_update_policy(\*(AqMANUAL\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "last_checked_for_update( )"
.IX Subsection "last_checked_for_update( )"
.RS 4
Use this method to retrieve the time when the Grid last checked for updates.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value, the number of seconds that have elapsed since January 1st, 1970 \s-1UTC.\s0
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $object\->last_checked_for_update();
.Ve
.RE
.RS 4
.RE
.SS "last_rule_update_version( )"
.IX Subsection "last_rule_update_version( )"
.RS 4
Use this method to retrieve the last rule update version. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $object\->last_rule_update_version();
.Ve
.RE
.RS 4
.RE
.SS "nat_rules( )"
.IX Subsection "nat_rules( )"
.RS 4
Use this method to set or retrieve the list of \s-1NAT\s0 mapping rules for threat protection.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an array of Infoblox::Grid::ThreatProtection::NATRule objects.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get attribute value
\& my $value = $obj\->nat_rules();
\& #Modify attribute value
\& $obj\->nat_rules($nat_rules);
.Ve
.RE
.RS 4
.RE
.SS "scheduled_download( )"
.IX Subsection "scheduled_download( )"
.RS 4
Use this method to set or retrieve the schedule setting for automatic rule update.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is an Infoblox::Grid::ScheduleSetting object.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get attribute value
\& my $value = $obj\->scheduled_download();
\& #Modify attribute value
\& $obj\->scheduled_download($schedule);
.Ve
.RE
.RS 4
.RE
.SS "test_threat_protection_server_connectivity( )"
.IX Subsection "test_threat_protection_server_connectivity( )"
.RS 4
Use this method ot test the connectivity with the Infoblox threat protection server.
.IP "\fBKey Reference\fR" 4
.IX Item "Key Reference"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns an Infoblox::Grid::TestResult object if connectivity test occurs and 0 otherwise.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 1
\& my $res = $obj\->test_threat_protection_server_connectivity();
.Ve
.RE
.RS 4
.RE
.SS "disable_multiple_dns_tcp_request( )"
.IX Subsection "disable_multiple_dns_tcp_request( )"
.RS 4
Use this method to disable multiple \s-1BIND\s0 responses via \s-1TCP\s0 connection.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Set the parameter to \*(L"true\*(R" to disable multiple \s-1TCP\s0 requests. Set the parameter to \*(L"false\*(R" to enable multiple \s-1TCP\s0 requests.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->disable_multiple_dns_tcp_request();
\& # Modify attribute value
\& $object\->disable_multiple_dns_tcp_request(\*(Aqtrue\*(Aq);
.Ve
.RE
.RS 4
.RE
.SH "AUTHOR"
.IX Header "AUTHOR"
Infoblox Inc. <http://www.infoblox.com/>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Infoblox::Session, Infoblox::Grid::Member::ThreatProtection, Infoblox::Grid::ScheduleSetting, Infoblox::Grid::ThreatProtection::NATRule
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2017 Infoblox Inc.

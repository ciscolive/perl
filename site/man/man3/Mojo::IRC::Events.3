.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Mojo::IRC::Events 3"
.TH Mojo::IRC::Events 3 "2015-08-09" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mojo::IRC::Events \- Example IRC events
.SH "EVENTS"
.IX Header "EVENTS"
.SS "err_nicknameinuse"
.IX Subsection "err_nicknameinuse"
.Vb 6
\&  $self\->$callback({
\&    command => 401,
\&    params => [ \*(Aqnick\*(Aq, \*(Aqothernick\*(Aq, \*(AqNo such nick/channel\*(Aq ],
\&    prefix => \*(Aq1.2.3.4\*(Aq,
\&    raw_line => \*(Aq:1.2.3.4 401 nick othernick :No such nick/channel\*(Aq,
\&  });
.Ve
.SS "irc_join"
.IX Subsection "irc_join"
.Vb 6
\&  $self\->$callback({
\&    params => [\*(Aq#html\*(Aq],
\&    raw_line => \*(Aq:somenick!~someuser@1.2.3.4 JOIN #html\*(Aq,
\&    command => \*(AqJOIN\*(Aq,
\&    prefix => \*(Aqsomenick!~someuser@1.2.3.4\*(Aq
\&  });
.Ve
.SS "irc_nick"
.IX Subsection "irc_nick"
.Vb 6
\&  $self\->$callback({
\&    params => [\*(Aqnewnick\*(Aq],
\&    raw_line => \*(Aq:oldnick!~someuser@hostname.com NICK :newnick\*(Aq,
\&    command => \*(AqNICK\*(Aq,
\&    prefix => \*(Aqsomenick!~someuser@hostname.com\*(Aq
\&  });
.Ve
.SS "irc_mode"
.IX Subsection "irc_mode"
.Vb 6
\&  $self\->$callback({
\&    params => [\*(Aqsomenick\*(Aq, \*(Aq+i\*(Aq],
\&    raw_line => \*(Aq:somenick!~someuser@hostname.com MODE somenick :+i\*(Aq,
\&    command => \*(AqMODE\*(Aq,
\&    prefix => \*(Aqsomenick!~someuser@hostname.com\*(Aq
\&  });
.Ve
.SS "irc_notice"
.IX Subsection "irc_notice"
.Vb 6
\&  $self\->$callback({
\&    params => [\*(Aqsomenick\*(Aq, \*(Aqon 1 ca 1(4) ft 10(10)\*(Aq],
\&    raw_line => \*(Aq:Zurich.CH.EU.Undernet.Org NOTICE somenick :on 1 ca 1(4) ft 10(10)\*(Aq,
\&    command => \*(AqNOTICE\*(Aq,
\&    prefix => \*(AqZurich.CH.EU.Undernet.Org\*(Aq,
\&  });
.Ve
.SS "irc_part"
.IX Subsection "irc_part"
.Vb 6
\&  $self\->$callback({
\&    command => \*(AqPART\*(Aq,
\&    params => [\*(Aq#channel\*(Aq],
\&    raw_line => \*(Aq:somenick!~someuser@host PART #channel\*(Aq,
\&    prefix => \*(Aqsomenick!~someuser@host\*(Aq,
\&  })
.Ve
.SS "irc_ping"
.IX Subsection "irc_ping"
.Vb 5
\&  $self\->$callback({
\&    params => [2687237629],
\&    raw_line => \*(AqPING :2687237629\*(Aq,
\&    command => \*(AqPING\*(Aq,
\&  })
.Ve
.SS "irc_privmsg"
.IX Subsection "irc_privmsg"
.Vb 6
\&  $self\->$callback({
\&    params => [ \*(Aq#channel\*(Aq, \*(Aqsome message\*(Aq ],
\&    raw_line => \*(Aq:nick!user@host PRIVMSG #nms :some message\*(Aq,
\&    command => \*(AqPRIVMSG\*(Aq,
\&    prefix => \*(Aqnick!user@host\*(Aq,
\&  });
.Ve
.SS "irc_rpl_created"
.IX Subsection "irc_rpl_created"
.Vb 6
\&  $self\->$callback({
\&    params => [\*(Aqsomenick\*(Aq, \*(AqThis server was created Thu Jun 21 2012 at 01:26:15 UTC\*(Aq],
\&    raw_line => \*(Aq:irc.example.com 003 somenick :This server was created Thu Jun 21 2012 at 01:26:15 UTC\*(Aq,
\&    command => \*(Aq003\*(Aq,
\&    prefix => \*(Aqirc.example.com\*(Aq
\&  });
.Ve
.SS "irc_rpl_endofmotd"
.IX Subsection "irc_rpl_endofmotd"
.SS "irc_rpl_endofnames"
.IX Subsection "irc_rpl_endofnames"
.Vb 6
\&  $self\->$callback({
\&    params => [\*(Aqsomenick\*(Aq, \*(Aq#channel\*(Aq, \*(AqEnd of /NAMES list.\*(Aq],
\&    raw_line => \*(Aq:Budapest.Hu.Eu.Undernet.org 366 somenick #channel :End of /NAMES list.\*(Aq,
\&    command => \*(Aq366\*(Aq,
\&    prefix => \*(AqBudapest.Hu.Eu.Undernet.org\*(Aq
\&  });
.Ve
.SS "irc_rpl_isupport"
.IX Subsection "irc_rpl_isupport"
.Vb 6
\&  $self\->$callback({
\&    params => [\*(Aqsomenick\*(Aq, \*(AqWHOX\*(Aq, \*(AqWALLCHOPS\*(Aq, \*(AqWALLVOICES\*(Aq, \*(AqUSERIP\*(Aq, \*(AqCPRIVMSG\*(Aq, \*(AqCNOTICE\*(Aq, \*(AqSILENCE=25\*(Aq, \*(AqMODES=6\*(Aq, \*(AqMAXCHANNELS=20\*(Aq, \*(AqMAXBANS=50\*(Aq, \*(AqNICKLEN=12\*(Aq, \*(Aqare supported by this server\*(Aq],
\&    raw_line => \*(Aq:irc.example.com 005 somenick WHOX WALLCHOPS WALLVOICES USERIP CPRIVMSG CNOTICE SILENCE=25 MODES=6 MAXCHANNELS=20 MAXBANS=50 NICKLEN=12 :are supported by this server\*(Aq,
\&    command => \*(Aq005\*(Aq,
\&    prefix => \*(Aqirc.example.com\*(Aq
\&  })
.Ve
.SS "irc_rpl_luserchannels"
.IX Subsection "irc_rpl_luserchannels"
.Vb 6
\&  $self\->$callback({
\&    params => [\*(Aqsomenick\*(Aq, \*(Aq13700\*(Aq, \*(Aqchannels formed\*(Aq],
\&    raw_line => \*(Aq:irc.example.com 254 somenick 13700 :channels formed\*(Aq,
\&    command => \*(Aq254\*(Aq,
\&    prefix => \*(Aqirc.example.com\*(Aq
\&  })
.Ve
.SS "irc_rpl_luserclient"
.IX Subsection "irc_rpl_luserclient"
.Vb 6
\&  $self\->$callback({
\&    params => [\*(Aqsomenick\*(Aq, \*(AqThere are 3400 users and 46913 invisible on 18 servers\*(Aq],
\&    raw_line => \*(Aq:irc.example.com 251 somenick :There are 3400 users and 46913 invisible on 18 servers\*(Aq,
\&    command => \*(Aq251\*(Aq,
\&    prefix => \*(Aqirc.example.com\*(Aq
\&  });
.Ve
.SS "irc_rpl_luserme"
.IX Subsection "irc_rpl_luserme"
.Vb 6
\&  $self\->$callback({
\&    params => [\*(Aqsomenick\*(Aq, \*(AqI have 12000 clients and 1 servers\*(Aq],
\&    raw_line => \*(Aq:irc.example.com 255 somenick :I have 12000 clients and 1 servers\*(Aq,
\&    command => \*(Aq255\*(Aq,
\&    prefix => \*(Aqirc.example.com\*(Aq
\&  });
.Ve
.SS "irc_rpl_luserop"
.IX Subsection "irc_rpl_luserop"
.Vb 6
\&  $self\->$callback({
\&    params => [\*(Aqsomenick\*(Aq, \*(Aq19\*(Aq, \*(Aqoperator(s) online\*(Aq],
\&    raw_line => \*(Aq:irc.example.com 252 somenick 19 :operator(s) online\*(Aq,
\&    command => \*(Aq252\*(Aq,
\&    prefix => \*(Aqirc.example.com\*(Aq
\&  });
.Ve
.SS "irc_rpl_luserunknown"
.IX Subsection "irc_rpl_luserunknown"
.Vb 6
\&  $self\->$callback({
\&    params => [\*(Aqsomenick\*(Aq, \*(Aq305\*(Aq, \*(Aqunknown connection(s)\*(Aq],
\&    raw_line => \*(Aq:irc.example.com 253 somenick 305 :unknown connection(s)\*(Aq,
\&    command => \*(Aq253\*(Aq,
\&    prefix => \*(Aqirc.example.com\*(Aq
\&  })
.Ve
.SS "irc_rpl_motd"
.IX Subsection "irc_rpl_motd"
.SS "irc_rpl_motdstart"
.IX Subsection "irc_rpl_motdstart"
.SS "irc_rpl_myinfo"
.IX Subsection "irc_rpl_myinfo"
.Vb 6
\&  $self\->$callback({
\&    params => [\*(Aqsomenick\*(Aq, \*(Aqirc.example.com\*(Aq, \*(Aqu2.10.12.14\*(Aq, \*(Aqdioswkgx\*(Aq, \*(AqbiklmnopstvrDR\*(Aq, \*(Aqbklov\*(Aq],
\&    raw_line => \*(Aq:irc.example.com 004 somenick irc.example.com u2.10.12.14 dioswkgx biklmnopstvrDR bklov\*(Aq,
\&    command => \*(Aq004\*(Aq,
\&    prefix => \*(Aqirc.example.com\*(Aq,
\&  })
.Ve
.SS "irc_rpl_namreply"
.IX Subsection "irc_rpl_namreply"
.Vb 6
\&  $self\->$callback({
\&    params => [\*(Aqsomenick\*(Aq, \*(Aq=\*(Aq, \*(Aq#html\*(Aq, \*(Aqsomenick Indig0 Wildblue @HTML @CSS @Luch1an @Steaua_ Indig0_ Pilum @fade\*(Aq],
\&    raw_line => \*(Aq:Budapest.Hu.Eu.Undernet.org 353 somenick = #html :somenick Indig0 Wildblue @HTML @CSS @Luch1an @Steaua_ Indig0_ Pilum @fade\*(Aq,
\&    command => \*(Aq353\*(Aq,
\&    prefix => \*(AqBudapest.Hu.Eu.Undernet.org\*(Aq
\&  })
.Ve
.SS "irc_rpl_welcome"
.IX Subsection "irc_rpl_welcome"
.Vb 6
\&  $self\->$callback({
\&    command => \*(Aq001\*(Aq,
\&    params => [\*(Aqsomenick\*(Aq, \*(AqWelcome to the UnderNet IRC Network, somenick\*(Aq],
\&    prefix => \*(AqZurich.CH.EU.Undernet.Org\*(Aq
\&    raw_line => \*(Aq:Zurich.CH.EU.Undernet.Org 001 somenick :Welcome to the UnderNet IRC Network, somenick\*(Aq,
\&  })
.Ve
.SS "irc_rpl_yourhost"
.IX Subsection "irc_rpl_yourhost"
.Vb 6
\&  $self\->$callback({
\&    command => \*(Aq002\*(Aq,
\&    params => [\*(Aqsomenick\*(Aq, \*(AqYour host is irc.example.com, running version u2.10.12.14\*(Aq],
\&    prefix => \*(Aqirc.example.com\*(Aq
\&    raw_line => \*(Aq:irc.example.com 002 somenick :Your host is irc.example.com, running version u2.10.12.14\*(Aq,
\&  });
.Ve
.SS "irc_479"
.IX Subsection "irc_479"
.Vb 6
\&  $self\->$callback({
\&    command => \*(Aq479\*(Aq,
\&    params => [ \*(Aqnickname\*(Aq, \*(Aq1\*(Aq, \*(AqIllegal channel name\*(Aq ],
\&    prefix => \*(Aqexample.com\*(Aq,
\&    raw_line => \*(Aq:example.com 479 nickname 1 :Illegal channel name\*(Aq,
\&  });
.Ve
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
This program is free software, you can redistribute it and/or modify it under
the terms of the Artistic License version 2.0.
.SH "AUTHOR"
.IX Header "AUTHOR"
Marcus Ramberg \- \f(CW\*(C`mramberg@cpan.org\*(C'\fR
.PP
Jan Henning Thorsen \- \f(CW\*(C`jhthorsen@cpan.org\*(C'\fR

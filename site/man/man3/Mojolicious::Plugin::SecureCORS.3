.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Mojolicious::Plugin::SecureCORS 3"
.TH Mojolicious::Plugin::SecureCORS 3 "2018-08-19" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mojolicious::Plugin::SecureCORS \- Complete control over CORS
.SH "VERSION"
.IX Header "VERSION"
This document describes Mojolicious::Plugin::SecureCORS version v2.0.2
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 4
\&    # in Mojolicious app
\&    sub startup {
\&        my $app = shift;
\&        X
\&
\&        # load and configure
\&        $app\->plugin(\*(AqSecureCORS\*(Aq);
\&        $app\->plugin(\*(AqSecureCORS\*(Aq, { max_age => undef });
\&
\&        # set app\-wide CORS defaults
\&        $app\->routes\->to(\*(Aqcors.credentials\*(Aq=>1);
\&
\&        # set default CORS options for nested routes
\&        $r = $r\->under(X, {\*(Aqcors.origin\*(Aq => \*(Aq*\*(Aq}, X);
\&
\&        # set CORS options for this route (at least "origin" option must be
\&        # defined to allow CORS, either here or in parent routes)
\&        $r\->get(X, {\*(Aqcors.origin\*(Aq => \*(Aq*\*(Aq}, X);
\&        $r\->route(X)\->to(\*(Aqcors.origin\*(Aq => \*(Aq*\*(Aq);
\&
\&        # allow non\-simple (with preflight) CORS on this route
\&        $r\->cors(X);
\&
\&        # create under to protect all nested routes
\&        $r = $app\->routes\->under_strict_cors(\*(Aq/resource\*(Aq);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Mojolicious::Plugin::SecureCORS is a plugin that allow you to configure
Cross Origin Resource Sharing for routes in Mojolicious app.
.PP
Implements this spec: <http://www.w3.org/TR/2014/REC\-cors\-20140116/>.
.SS "\s-1SECURITY\s0"
.IX Subsection "SECURITY"
Don't use the lazy \f(CW\*(Aqcors.origin\*(Aq=>\*(Aq*\*(Aq\fR for resources which should be
available only for intranet or which behave differently when accessed from
intranet \- otherwise malicious website opened in browser running on
workstation in intranet will get access to these resources.
.PP
Don't use the lazy \f(CW\*(Aqcors.origin\*(Aq=>\*(Aq*\*(Aq\fR for resources which should be
available only from some known websites \- otherwise other malicious website
will be able to attack your site by injecting JavaScript into the victim's
browser.
.PP
Consider using \f(CW\*(C`under_strict_cors()\*(C'\fR \- it won't \*(L"save\*(R" you but may helps.
.SH "INTERFACE"
.IX Header "INTERFACE"
.SS "\s-1CORS\s0 options"
.IX Subsection "CORS options"
To allow \s-1CORS\s0 on some route you should define relevant \s-1CORS\s0 options for
that route. These options will be processed automatically using
\&\*(L"after_render\*(R" in Mojolicious hook and result in adding corresponding \s-1HTTP\s0
headers to the response.
.PP
Options should be added into default parameters for the route or it parent
routes. Defining \s-1CORS\s0 options on parent route allow you to set some
predefined defaults for their nested routes.
.ie n .IP "\*(Aqcors.origin\*(Aq => \*(Aq*\*(Aq" 4
.el .IP "\f(CW\*(Aqcors.origin\*(Aq => \*(Aq*\*(Aq\fR" 4
.IX Item "cors.origin => *"
.PD 0
.ie n .IP "\*(Aqcors.origin\*(Aq => \*(Aqnull\*(Aq" 4
.el .IP "\f(CW\*(Aqcors.origin\*(Aq => \*(Aqnull\*(Aq\fR" 4
.IX Item "cors.origin => null"
.ie n .IP "\*(Aqcors.origin\*(Aq => \*(Aqhttp://example.com\*(Aq" 4
.el .IP "\f(CW\*(Aqcors.origin\*(Aq => \*(Aqhttp://example.com\*(Aq\fR" 4
.IX Item "cors.origin => http://example.com"
.ie n .IP "\*(Aqcors.origin\*(Aq => \*(Aqhttps://example.com http://example.com:8080 null\*(Aq" 4
.el .IP "\f(CW\*(Aqcors.origin\*(Aq => \*(Aqhttps://example.com http://example.com:8080 null\*(Aq\fR" 4
.IX Item "cors.origin => https://example.com http://example.com:8080 null"
.ie n .IP """\*(Aqcors.origin\*(Aq => qr/\e.local\ez/ms""" 4
.el .IP "\f(CW\*(Aqcors.origin\*(Aq => qr/\e.local\ez/ms\fR" 4
.IX Item "cors.origin => qr/.localz/ms"
.ie n .IP """\*(Aqcors.origin\*(Aq => undef"" (default)" 4
.el .IP "\f(CW\*(Aqcors.origin\*(Aq => undef\fR (default)" 4
.IX Item "cors.origin => undef (default)"
.PD
This option is required to enable \s-1CORS\s0 support for the route.
.Sp
Only matched origins will be allowed to process returned response
(\f(CW\*(Aq*\*(Aq\fR will match any origin).
.Sp
When set to false value no origins will match, so it effectively disable
\&\s-1CORS\s0 support (may be useful if you've set this option value on parent
route).
.ie n .IP """\*(Aqcors.credentials\*(Aq => 1""" 4
.el .IP "\f(CW\*(Aqcors.credentials\*(Aq => 1\fR" 4
.IX Item "cors.credentials => 1"
.PD 0
.ie n .IP """\*(Aqcors.credentials\*(Aq => undef"" (default)" 4
.el .IP "\f(CW\*(Aqcors.credentials\*(Aq => undef\fR (default)" 4
.IX Item "cors.credentials => undef (default)"
.PD
While handling preflight request true/false value will tell browser to
send or not send credentials (cookies, http auth, \s-1SSL\s0 certificate) with
actual request.
.Sp
While handling simple/actual request if set to false and browser has sent
credentials will disallow to process returned response.
.ie n .IP "\*(Aqcors.expose\*(Aq => \*(AqX\-Some\*(Aq" 4
.el .IP "\f(CW\*(Aqcors.expose\*(Aq => \*(AqX\-Some\*(Aq\fR" 4
.IX Item "cors.expose => X-Some"
.PD 0
.ie n .IP "\*(Aqcors.expose\*(Aq => \*(AqX\-Some, X\-Other, Server\*(Aq" 4
.el .IP "\f(CW\*(Aqcors.expose\*(Aq => \*(AqX\-Some, X\-Other, Server\*(Aq\fR" 4
.IX Item "cors.expose => X-Some, X-Other, Server"
.ie n .IP """\*(Aqcors.expose\*(Aq => undef"" (default)" 4
.el .IP "\f(CW\*(Aqcors.expose\*(Aq => undef\fR (default)" 4
.IX Item "cors.expose => undef (default)"
.PD
Allow access to these headers while processing returned response.
.Sp
These headers doesn't need to be included in this option:
.Sp
.Vb 6
\&  Cache\-Control
\&  Content\-Language
\&  Content\-Type
\&  Expires
\&  Last\-Modified
\&  Pragma
.Ve
.ie n .IP "\*(Aqcors.headers\*(Aq => \*(AqX\-Requested\-With\*(Aq" 4
.el .IP "\f(CW\*(Aqcors.headers\*(Aq => \*(AqX\-Requested\-With\*(Aq\fR" 4
.IX Item "cors.headers => X-Requested-With"
.PD 0
.ie n .IP "\*(Aqcors.headers\*(Aq => \*(AqX\-Requested\-With, Content\-Type, X\-Some\*(Aq" 4
.el .IP "\f(CW\*(Aqcors.headers\*(Aq => \*(AqX\-Requested\-With, Content\-Type, X\-Some\*(Aq\fR" 4
.IX Item "cors.headers => X-Requested-With, Content-Type, X-Some"
.ie n .IP """\*(Aqcors.headers\*(Aq => qr/\eAX\-|\eAContent\-Type\ez/msi""" 4
.el .IP "\f(CW\*(Aqcors.headers\*(Aq => qr/\eAX\-|\eAContent\-Type\ez/msi\fR" 4
.IX Item "cors.headers => qr/AX-|AContent-Typez/msi"
.ie n .IP """\*(Aqcors.headers\*(Aq => undef"" (default)" 4
.el .IP "\f(CW\*(Aqcors.headers\*(Aq => undef\fR (default)" 4
.IX Item "cors.headers => undef (default)"
.PD
Define headers which browser is allowed to send. Work only for non-simple
\&\s-1CORS\s0 because it require preflight.
.ie n .IP "\*(Aqcors.methods\*(Aq => \*(AqPOST\*(Aq" 4
.el .IP "\f(CW\*(Aqcors.methods\*(Aq => \*(AqPOST\*(Aq\fR" 4
.IX Item "cors.methods => POST"
.PD 0
.ie n .IP "\*(Aqcors.methods\*(Aq => \*(AqGET, POST, PUT, DELETE\*(Aq" 4
.el .IP "\f(CW\*(Aqcors.methods\*(Aq => \*(AqGET, POST, PUT, DELETE\*(Aq\fR" 4
.IX Item "cors.methods => GET, POST, PUT, DELETE"
.PD
This option can be used only for \f(CW\*(C`cors()\*(C'\fR route. It's needed in complex
cases when it's impossible to automatically detect \s-1CORS\s0 option while
handling preflight \- see below for example.
.SS "cors"
.IX Subsection "cors"
.Vb 1
\&    $app\->routes\->cors(...);
.Ve
.PP
Accept same params as \*(L"route\*(R" in Mojolicious::Routes::Route.
.PP
Add handler for preflight (\s-1OPTIONS\s0) \s-1CORS\s0 request \- it's required to allow
non-simple \s-1CORS\s0 requests on given path.
.PP
To be able to respond on preflight request this handler should know \s-1CORS\s0
options for requested method/path. In most cases it will be able to detect
them automatically by searching for route defined for same path and \s-1HTTP\s0
method given in \s-1CORS\s0 request. Example:
.PP
.Vb 3
\&    $r\->cors(\*(Aq/rpc\*(Aq);
\&    $r\->get(\*(Aq/rpc\*(Aq, { \*(Aqcors.origin\*(Aq => \*(Aqhttp://example.com\*(Aq });
\&    $r\->put(\*(Aq/rpc\*(Aq, { \*(Aqcors.origin\*(Aq => qr/\e.local\ez/ms });
.Ve
.PP
But in some cases target route can't be detected, for example if you've
defined several routes for same path using different conditions which
can't be checked while processing preflight request because browser didn't
sent enough information yet (like \f(CW\*(C`Content\-Type:\*(C'\fR value which will be
used in actual request). In this case you should manually define all
relevant \s-1CORS\s0 options on preflight route \- in addition to \s-1CORS\s0 options
defined on target routes. Because you can't know which one of defined
routes will be used to handle actual request, in case they use different
\&\s-1CORS\s0 options you should use combined in less restrictive way options for
preflight route. Example:
.PP
.Vb 10
\&    $r\->cors(\*(Aq/rpc\*(Aq)\->to(
\&        \*(Aqcors.methods\*(Aq      => \*(AqGET, POST\*(Aq,
\&        \*(Aqcors.origin\*(Aq       => \*(Aqhttp://localhost http://example.com\*(Aq,
\&        \*(Aqcors.credentials\*(Aq  => 1,
\&    );
\&    $r\->any([qw(GET POST)] => \*(Aq/rpc\*(Aq,
\&        headers => { \*(AqContent\-Type\*(Aq => \*(Aqapplication/json\-rpc\*(Aq },
\&    )\->to(\*(Aqjsonrpc#handler\*(Aq,
\&        \*(Aqcors.origin\*(Aq       => \*(Aqhttp://localhost\*(Aq,
\&    );
\&    $r\->post(\*(Aq/rpc\*(Aq,
\&        headers => { \*(AqContent\-Type\*(Aq => \*(Aqapplication/soap+xml\*(Aq },
\&    )\->to(\*(Aqsoaprpc#handler\*(Aq,
\&        \*(Aqcors.origin\*(Aq       => \*(Aqhttp://example.com\*(Aq,
\&        \*(Aqcors.credentials\*(Aq  => 1,
\&    );
.Ve
.PP
This route use \*(L"headers\*(R" condition, so you can add your own handler for
\&\s-1OPTIONS\s0 method on same path after this one, to handle non-CORS \s-1OPTIONS\s0
requests on same path.
.SS "under_strict_cors"
.IX Subsection "under_strict_cors"
.Vb 1
\&    $route = $app\->routes\->under_strict_cors(...)
.Ve
.PP
Accept same params as \*(L"under\*(R" in Mojolicious::Routes::Route.
.PP
Under returned route \s-1CORS\s0 requests to any route which isn't configured
for \s-1CORS\s0 (i.e. won't have \f(CW\*(Aqcors.origin\*(Aq\fR in route's default parameters)
will be rendered as \*(L"403 Forbidden\*(R".
.PP
This feature should make it harder to attack your site by injecting
JavaScript into the victim's browser on vulnerable website. More details:
<https://code.google.com/p/html5security/wiki/CrossOriginRequestSecurity#Processing_rogue_COR:>.
.SH "OPTIONS"
.IX Header "OPTIONS"
Mojolicious::Plugin::SecureCORS supports the following options.
.SS "max_age"
.IX Subsection "max_age"
.Vb 1
\&  $app\->plugin(\*(AqSecureCORS\*(Aq, { max_age => undef });
.Ve
.PP
Value for \f(CW\*(C`Access\-Control\-Max\-Age:\*(C'\fR sent by preflight \s-1OPTIONS\s0 handler.
If set to \f(CW\*(C`undef\*(C'\fR this header will not be sent.
.PP
Default is 1800 (30 minutes).
.SH "METHODS"
.IX Header "METHODS"
Mojolicious::Plugin::SecureCORS inherits all methods from
Mojolicious::Plugin and implements the following new ones.
.SS "register"
.IX Subsection "register"
.Vb 2
\&  $plugin\->register(Mojolicious\->new);
\&  $plugin\->register(Mojolicious\->new, { max_age => undef });
.Ve
.PP
Register hooks in Mojolicious application.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Mojolicious.
.SH "SUPPORT"
.IX Header "SUPPORT"
.SS "Bugs / Feature Requests"
.IX Subsection "Bugs / Feature Requests"
Please report any bugs or feature requests through the issue tracker
at <https://github.com/powerman/perl\-Mojolicious\-Plugin\-SecureCORS/issues>.
You will be notified automatically of any progress on your issue.
.SS "Source Code"
.IX Subsection "Source Code"
This is open source software. The code repository is available for
public review and contribution under the terms of the license.
Feel free to fork the repository and submit pull requests.
.PP
<https://github.com/powerman/perl\-Mojolicious\-Plugin\-SecureCORS>
.PP
.Vb 1
\&    git clone https://github.com/powerman/perl\-Mojolicious\-Plugin\-SecureCORS.git
.Ve
.SS "Resources"
.IX Subsection "Resources"
.IP "\(bu" 4
MetaCPAN Search
.Sp
<https://metacpan.org/search?q=Mojolicious\-Plugin\-SecureCORS>
.IP "\(bu" 4
\&\s-1CPAN\s0 Ratings
.Sp
<http://cpanratings.perl.org/dist/Mojolicious\-Plugin\-SecureCORS>
.IP "\(bu" 4
AnnoCPAN: Annotated \s-1CPAN\s0 documentation
.Sp
<http://annocpan.org/dist/Mojolicious\-Plugin\-SecureCORS>
.IP "\(bu" 4
\&\s-1CPAN\s0 Testers Matrix
.Sp
<http://matrix.cpantesters.org/?dist=Mojolicious\-Plugin\-SecureCORS>
.IP "\(bu" 4
\&\s-1CPANTS: A CPAN\s0 Testing Service (Kwalitee)
.Sp
<http://cpants.cpanauthors.org/dist/Mojolicious\-Plugin\-SecureCORS>
.SH "AUTHOR"
.IX Header "AUTHOR"
Alex Efros <powerman@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is Copyright (c) 2014\- by Alex Efros <powerman@cpan.org>.
.PP
This is free software, licensed under:
.PP
.Vb 1
\&  The MIT (X11) License
.Ve

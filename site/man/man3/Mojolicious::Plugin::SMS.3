.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Mojolicious::Plugin::SMS 3"
.TH Mojolicious::Plugin::SMS 3 "2015-03-09" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mojolicious::Plugin::SMS \- Easy SMS sending from Mojolicious apps
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 4
\&  # Mojolicious::Lite
\&  plugin \*(AqSMS\*(Aq => {
\&    driver    => \*(AqTest\*(Aq
\&  };
\&
\&  # Mojolicious
\&  $self\->plugin(SMS => {
\&    driver    => \*(AqNexmo\*(Aq,
\&    _username => \*(Aqtestuser\*(Aq,
\&    _password => \*(Aqtestpassword\*(Aq
\&    _from     => \*(AqBender\*(Aq
\&  });
\&
\&  # in controller named params
\&  $self\->sms(
\&    to   => \*(Aq+380506022375\*(Aq,
\&    text => \*(Aquse Perl or die;\*(Aq
\&  );
\&
\&  # in controller positional params
\&  $self\->sms(\*(Aq+380506022375\*(Aq, \*(Aquse Perl or die;\*(Aq);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Provides a quick and easy way to send \s-1SMS\s0 messages using SMS::Send drivers
(of which there are many, so chances are the service you want to use is already
supported; if not, they're easy to write, and if you want to change providers
later, you can simply update a few lines in your config file, and you're done.
.SH "OPTIONS"
.IX Header "OPTIONS"
Mojolicious::Plusin::SMS has one required option 'driver', all other options
are passed to appropriate SMS::Send driver.
.ie n .SS """driver"""
.el .SS "\f(CWdriver\fP"
.IX Subsection "driver"
SMS::Send driver name. This is a required option. You may specify 'Test' if
you need a testing driver.
.SH "HELPERS"
.IX Header "HELPERS"
Mojolicious::Plugin::SMS implements one helper.
.SS "sms"
.IX Subsection "sms"
Send an \s-1SMS\s0 message.  You can pass the destination and message as positional
params:
.PP
.Vb 1
\&    sms $to, $message;
.Ve
.PP
Or, you can use named params:
.PP
.Vb 1
\&    sms to => $to, text => $message;
.Ve
.PP
The latter form may be clearer, and would allow any additional driver-specific
parameters to be passed too, but the former is terser.  The choice is yours.
.SH "METHODS"
.IX Header "METHODS"
Mojolicious::Plugin::SMS inherits all methods from Mojolicious::Plugin
and implements the following new ones.
.ie n .SS """register"""
.el .SS "\f(CWregister\fP"
.IX Subsection "register"
\&\f(CW$plugin\fR\->register;
.PP
Register plugin hooks and helpers in Mojolicious application.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Mojolicious, SMS::Send, SMS::Send::Test.
.SH "AUTHOR"
.IX Header "AUTHOR"
Yuriy Syrota <ysyrota@gmail.com>
.SH "COPYRIGHT & LICENSE"
.IX Header "COPYRIGHT & LICENSE"
Copyright (C) 2011 by Yuriy Syrota.
.PP
This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.

.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Pod::Weaver 3"
.TH Pod::Weaver 3 "2016-10-15" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Pod::Weaver \- weave together a Pod document from an outline
.SH "VERSION"
.IX Header "VERSION"
version 4.015
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  my $weaver = Pod::Weaver\->new_with_default_config;
\&
\&  my $document = $weaver\->weave_document({
\&    pod_document => $pod_elemental_document,
\&    ppi_document => $ppi_document,
\&
\&    license  => $software_license,
\&    version  => $version_string,
\&    authors  => \e@author_names,
\&  })
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Pod::Weaver is a system for building Pod documents from templates.  It doesn't
perform simple text substitution, but instead builds a
Pod::Elemental::Document.  Its plugins sketch out a series of sections
that will be produced based on an existing Pod document or other provided
information.
.SH "ATTRIBUTES"
.IX Header "ATTRIBUTES"
.SS "logger"
.IX Subsection "logger"
This attribute stores the logger, which must provide a log method.  The
weaver's log method delegates to the logger's log method.
.SS "plugins"
.IX Subsection "plugins"
This attribute is an arrayref of objects that can perform the
Pod::Weaver::Role::Plugin role.  In general, its contents are found through
the \f(CW"plugins_with"\fR method.
.SH "METHODS"
.IX Header "METHODS"
.SS "plugins_with"
.IX Subsection "plugins_with"
.Vb 1
\&  my $plugins_array_ref = $weaver\->plugins_with(\*(Aq\-Section\*(Aq);
.Ve
.PP
This method will return an arrayref of plugins that perform the given role, in
the order of their registration.  If the role name begins with a hyphen, the
method will prepend \f(CW\*(C`Pod::Weaver::Role::\*(C'\fR.
.SS "weave_document"
.IX Subsection "weave_document"
.Vb 1
\&  my $document = $weaver\->weave_document(\e%input);
.Ve
.PP
This is the most important method in Pod::Weaver.  Given a set of input
parameters, it will weave a new document.  Different section plugins will
expect different input parameters to be present, but some common ones include:
.PP
.Vb 4
\&  pod_document \- a Pod::Elemental::Document for the original Pod document
\&  ppi_document \- a PPI document for the source of the module being documented
\&  license      \- a Software::License object for the source module\*(Aqs license
\&  version      \- a version (string) to use in produced documentation
.Ve
.PP
The \f(CW\*(C`pod_document\*(C'\fR should have gone through a Pod5
transformer, and should probably have had
its \f(CW\*(C`=head1\*(C'\fR elements nested.
.PP
The method will return a new Pod::Elemental::Document.  The input documents may
be destructively altered during the weaving process.  If they should be
untouched, pass in copies.
.SS "new_with_default_config"
.IX Subsection "new_with_default_config"
This method returns a new Pod::Weaver with a stock configuration by using only
Pod::Weaver::PluginBundle::Default.
.SH "AUTHOR"
.IX Header "AUTHOR"
Ricardo \s-1SIGNES\s0 <rjbs@cpan.org>
.SH "CONTRIBUTORS"
.IX Header "CONTRIBUTORS"
.IP "\(bu" 4
Alex Peters <lxp@cpan.org>
.IP "\(bu" 4
Apocalypse <perl@0ne.us>
.IP "\(bu" 4
Blabos de Blebe <blabos@cpan.org>
.IP "\(bu" 4
Caleb Cushing <xenoterracide@gmail.com>
.IP "\(bu" 4
Christian Walde <walde.christian@googlemail.com>
.IP "\(bu" 4
Christopher J. Madsen <perl@cjmweb.net>
.IP "\(bu" 4
Chris Weyl <cweyl@alumni.drew.edu>
.IP "\(bu" 4
Dave Houston <dave.houston@gmail.com>
.IP "\(bu" 4
Dave Rolsky <autarch@urth.org>
.IP "\(bu" 4
David E. Wheeler <david@justatheory.com>
.IP "\(bu" 4
David Golden <dagolden@cpan.org>
.IP "\(bu" 4
David Zurborg <post@david\-zurb.org>
.IP "\(bu" 4
Doug Bell <doug@preaction.me>
.IP "\(bu" 4
Florian Ragwitz <rafl@debian.org>
.IP "\(bu" 4
Jonathan \*(L"Duke\*(R" Leto <jonathan@leto.net>
.IP "\(bu" 4
Joshua Keroes <joshua.keroes@integratelecom.com>
.IP "\(bu" 4
Karen Etheridge <ether@cpan.org>
.IP "\(bu" 4
Kent Fredric <kentfredric@gmail.com>
.IP "\(bu" 4
Marcel Gruenauer <hanekomu@gmail.com>
.IP "\(bu" 4
Randy Stauner <randy@magnificent\-tears.com>
.IP "\(bu" 4
Sam Graham <git@illusori.co.uk>
.IP "\(bu" 4
Shlomi Fish <shlomif@shlomifish.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2016 by Ricardo \s-1SIGNES.\s0
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

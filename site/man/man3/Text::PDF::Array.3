.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Text::PDF::Array 3"
.TH Text::PDF::Array 3 "2016-08-04" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Text::PDF::Array \- Corresponds to a PDF array. Inherits from PDF::Objind
.SH "INSTANCE VARIABLES"
.IX Header "INSTANCE VARIABLES"
This object is not an array but an associative array containing the array of
elements. Thus, there are special instance variables for an array object, beginning
with a space
.IP "var" 4
.IX Item "var"
Contains the actual array of elements
.SH "METHODS"
.IX Header "METHODS"
.ie n .SS "PDF::Array\->new($parent, @vals)"
.el .SS "PDF::Array\->new($parent, \f(CW@vals\fP)"
.IX Subsection "PDF::Array->new($parent, @vals)"
Creates an array with the given storage parent and an optional list of values to
initialise the array with.
.ie n .SS "$a\->outobjdeep($fh, $pdf)"
.el .SS "\f(CW$a\fP\->outobjdeep($fh, \f(CW$pdf\fP)"
.IX Subsection "$a->outobjdeep($fh, $pdf)"
Outputs an array as a \s-1PDF\s0 array to the given filehandle.
.ie n .SS "$a\->removeobj($elem)"
.el .SS "\f(CW$a\fP\->removeobj($elem)"
.IX Subsection "$a->removeobj($elem)"
Removes all occurrences of an element from an array.
.ie n .SS "$a\->elementsof"
.el .SS "\f(CW$a\fP\->elementsof"
.IX Subsection "$a->elementsof"
Returns a list of all the elements in the array. Notice that this is
not the array itself but the elements in the array.
.ie n .SS "$a\->add_elements"
.el .SS "\f(CW$a\fP\->add_elements"
.IX Subsection "$a->add_elements"
Appends the given elements to the array. An element is only added if it
is defined.
.ie n .SS "$a\->val"
.el .SS "\f(CW$a\fP\->val"
.IX Subsection "$a->val"
Returns the value of the array, this is a reference to the actual array
containing the elements.
.ie n .SS "$d\->copy($inpdf, $res, $unique, $outpdf, %opts)"
.el .SS "\f(CW$d\fP\->copy($inpdf, \f(CW$res\fP, \f(CW$unique\fP, \f(CW$outpdf\fP, \f(CW%opts\fP)"
.IX Subsection "$d->copy($inpdf, $res, $unique, $outpdf, %opts)"
Copies an object. See \fBText::PDF::Objind::Copy()\fR for details

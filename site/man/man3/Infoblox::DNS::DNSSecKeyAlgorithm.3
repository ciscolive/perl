.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Infoblox::DNS::DNSSecKeyAlgorithm 3"
.TH Infoblox::DNS::DNSSecKeyAlgorithm 3 "2018-06-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Infoblox::DNS::DNSSecKeyAlgorithm \- DNSSEC key algorithm object.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The \s-1DNSSEC\s0 key algorithm structure provides for configuring algorithms for Key-signing and Zone-signing keys. Multiple algorithms can be used at the same time per Grid or per zone.
.SH "CONSTRUCTOR"
.IX Header "CONSTRUCTOR"
.Vb 5
\& #Constructor for an DNSSEC key algorithm object
\&  my $algorithm = Infoblox::DNS::DNSSecKeyAlgorithm\->new(
\&     algorithm => "RSAMD5" | "DSA" | "RSASHA1" | "RSASHA256" | "RSASHA512" ,  #Optional / Default is undefined
\&     size      => $num,                                                       #Optional / Default is undefined
\&   );
.Ve
.SH "MODULE METHODS"
.IX Header "MODULE METHODS"
The following functions are available to be applied to an DNSSecKeyAlgorithm object.
.SS "Infoblox::Grid::DNS\->dnssec_ksk_algorithms( )"
.IX Subsection "Infoblox::Grid::DNS->dnssec_ksk_algorithms( )"
.RS 4
Use this function to specify a \s-1DNSSEC\s0 key signing key algorithm at the grid level on the Infoblox appliance. See Infoblox::Grid::DNS\->\fBdnssec_ksk_algorithms()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 5
\& #Create a DNSSEC key algorithm object.
\& my $algorithm = Infoblox::DNS::DNSSecKeyAlgorithm\->new(
\&     algorithm => \*(AqRSASHA256\*(Aq,
\&     size      => 512,
\& );
\&
\& #Configure DNSSEC key signing key algorithms on the Infoblox grid object
\& my $response = $grid\->dnssec_ksk_algorithms([$algorithm]);
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Grid::DNS\->dnssec_zsk_algorithms( )"
.IX Subsection "Infoblox::Grid::DNS->dnssec_zsk_algorithms( )"
.RS 4
Use this function to specify a \s-1DNSSEC\s0 zone signing key algorithm at the grid level on the Infoblox appliance. See Infoblox::Grid::DNS\->\fBdnssec_zsk_algorithms()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 5
\& #Create a DNSSEC key algorithm object.
\& my $algorithm = Infoblox::DNS::DNSSecKeyAlgorithm\->new(
\&     algorithm => \*(AqRSASHA512\*(Aq,
\&     size      => 1024,
\& );
\&
\& #Configure DNSSEC zone signing key algorithms on the Infoblox grid object
\& my $response = $grid\->dnssec_zsk_algorithms([$algorithm]);
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Grid::Member::DNS\->dnssec_ksk_algorithms( )"
.IX Subsection "Infoblox::Grid::Member::DNS->dnssec_ksk_algorithms( )"
.RS 4
Use this function to specify a \s-1DNSSEC\s0 key signing key at the member level on the Infoblox appliance. See Infoblox::Grid::Member::DNS\->\fBdnssec_ksk_algorithms()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 5
\& #Create a DNSSEC key algorithm object.
\& my $algorithm = Infoblox::DNS::DNSSecKeyAlgorithm\->new(
\&     algorithm => \*(AqRSASHA512\*(Aq,
\&     size      => 1024,
\& );
\&
\& #Configure DNSSEC key signing key algorithms on the Infoblox member object
\& my $response = $member\->dnssec_ksk_algorithms([$algorithm]);
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Grid::Member::DNS\->dnssec_zsk_algorithms( )"
.IX Subsection "Infoblox::Grid::Member::DNS->dnssec_zsk_algorithms( )"
.RS 4
Use this function to specify a \s-1DNSSEC\s0 zone signing key at the member level on the Infoblox appliance. See Infoblox::Grid::Member::DNS\->\fBdnssec_zsk_algorithms()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 5
\& #Create a DNSSEC key algorithm object.
\& my $algorithm = Infoblox::DNS::DNSSecKeyAlgorithm\->new(
\&     algorithm => \*(AqRSASHA512\*(Aq,
\&     size      => 1024,
\& );
\&
\& #Configure DNSSEC zone signing key algorithms on the Infoblox member object
\& my $response = $member\->dnssec_zsk_algorithms([$algorithm]);
.Ve
.RE
.RS 4
.RE
.SH "SESSION METHODS"
.IX Header "SESSION METHODS"
The object does not support any session methods.
.SH "METHODS"
.IX Header "METHODS"
this section describes all the methods that you can use to set or retrieve the attribute values of the object.
.SS "algorithm( )"
.IX Subsection "algorithm( )"
.RS 4
Use this method to set or retrieve signing key algorithm.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is '\s-1RSAMD5\s0', '\s-1DSA\s0', '\s-1RSASHA1\s0', '\s-1RSASHA256\s0' or '\s-1RSASHA512\s0'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get algorithm value
\& my $algorithm = $dnssec_key_algorithm\->algorithm();
\& #Modify algorithm value
\& $dnssec_key_algorithm\->algorithm(\*(AqRSASHA512\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "size( )"
.IX Subsection "size( )"
.RS 4
Use this method to set or retrieve signing key size, in bits.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The \s-1DNSSEC\s0 key-signing key possible size depends on the algorithm. Use the following table to determine the possible values for key sizes:
.Sp
.Vb 12
\&    Algorithm    Key size     Additional restrictions
\&  NSEC
\&    RSA/MD5      512\-4096
\&    DSA/SHA1     512\-1024     Key size must be divisible by 64
\&    RSA/SHA1     512\-4096
\&    RSA256/SHA2  512\-4096
\&    RSA512/SHA2  1024\-4096
\&  NSEC3
\&    DSA/SHA1     512\-1024     Key size must be divisible by 64
\&    RSA/SHA1     512\-4096
\&    RSA256/SHA2  512\-4096
\&    RSA512/SHA2  1024\-4096
.Ve
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get size value
\& my $size = $dnssec_key_algorithm\->size();
\& #Modify size value
\& $dnssec_key_algorithm\->size(1024);
.Ve
.RE
.RS 4
.RE
.SH "AUTHOR"
.IX Header "AUTHOR"
Infoblox Inc. <http://www.infoblox.com/>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Infoblox::Grid::DNS, Infoblox::Grid::Member::DNS, Infoblox::Grid::DNS\->\fBdnssec_ksk_algorithms()\fR, Infoblox::Grid::DNS\->\fBdnssec_zsk_algorithms()\fR, Infoblox::Grid::Member::DNS\->\fBdnssec_ksk_algorithms()\fR, Infoblox::Grid::Member::DNS\->\fBdnssec_zsk_algorithms()\fR
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2017 Infoblox Inc.

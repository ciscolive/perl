.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Test::Auto::Plugin 3"
.TH Test::Auto::Plugin 3 "2020-05-13" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Test::Auto::Plugin
.SH "ABSTRACT"
.IX Header "ABSTRACT"
Test-Auto Plugin Class
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  package Test::Auto::Plugin::Example;
\&
\&  use Test::More;
\&
\&  use parent \*(AqTest::Auto::Plugin\*(Aq;
\&
\&  sub tests {
\&    my ($self, @args) = @_;
\&
\&    subtest "testing example plugin", sub {
\&
\&      ok 1;
\&    };
\&
\&    return $self;
\&  }
\&
\&  1;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This package provides an abstract base class for creating Test::Auto
plugins.
.SH "LIBRARIES"
.IX Header "LIBRARIES"
This package uses type constraints from:
.PP
Test::Auto::Types
.SH "ATTRIBUTES"
.IX Header "ATTRIBUTES"
This package has the following attributes:
.SS "subtests"
.IX Subsection "subtests"
.Vb 1
\&  subtests(Subtests)
.Ve
.PP
This attribute is read-only, accepts \f(CW\*(C`(Subtests)\*(C'\fR values, and is required.
.SH "METHODS"
.IX Header "METHODS"
This package implements the following methods:
.SS "tests"
.IX Subsection "tests"
.Vb 1
\&  tests(Any @args) : Object
.Ve
.PP
This method is meant to be overridden by the superclass, and should perform
specialized subtests. While not required, ideally this method should return its
invocant.
.IP "tests example #1" 4
.IX Item "tests example #1"
.Vb 1
\&  package main;
\&
\&  use Test::Auto;
\&  use Test::Auto::Parser;
\&  use Test::Auto::Subtests;
\&
\&  my $test = Test::Auto\->new(
\&    \*(Aqt/Test_Auto_Plugin.t\*(Aq
\&  );
\&
\&  my $parser = Test::Auto::Parser\->new(
\&    source => $test
\&  );
\&
\&  my $subtests = Test::Auto::Subtests\->new(
\&    parser => $parser
\&  );
\&
\&  # Test::Auto::Plugin::ShortDescription
\&  my $example = $subtests\->plugin(\*(AqShortDescription\*(Aq);
\&
\&  $example\->tests(length => 200);
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Al Newkirk, \f(CW\*(C`awncorp@cpan.org\*(C'\fR
.SH "LICENSE"
.IX Header "LICENSE"
Copyright (C) 2011\-2019, Al Newkirk, et al.
.PP
This is free software; you can redistribute it and/or modify it under the terms
of the The Apache License, Version 2.0, as elucidated in the
\&\*(L"license file\*(R" <https://github.com/iamalnewkirk/test-auto/blob/master/LICENSE>.
.SH "PROJECT"
.IX Header "PROJECT"
Wiki <https://github.com/iamalnewkirk/test-auto/wiki>
.PP
Project <https://github.com/iamalnewkirk/test-auto>
.PP
Initiatives <https://github.com/iamalnewkirk/test-auto/projects>
.PP
Milestones <https://github.com/iamalnewkirk/test-auto/milestones>
.PP
Issues <https://github.com/iamalnewkirk/test-auto/issues>

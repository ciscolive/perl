.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Cisco::UCS::Blade 3"
.TH Cisco::UCS::Blade 3 "2016-05-25" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Cisco::UCS::Blade \- Class for operations with a Cisco UCS blade.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&        # Print all blades in chassis 1 along with their serial number
\&
\&        foreach my $blade ($ucs\->chassis(1)\->get_blades) {
\&                printf ("%1d\et: %\-20s\en", $blade\->id, $blade\->serial)
\&        }
\&
\&        # Print the memory installed and available in blade 2/3
\&
\&        print $chassis(2)\->blade(3)\->memory_available;
\&
\&        # Print all blades in all chassis along with a cacti\-style listing of 
\&        # the blades current, minimum and maximum power consumption values.
\&
\&        map { 
\&                print "Chassis: " . $_\->id ."\en";
\&                map { print "\etBlade: ". $_\->id ." \- Power consumed \-"
\&                          . " Current:". $_\->power_stats\->consumed_power 
\&                          . " Max:". $_\->power_stats\->consumed_power_max 
\&                          . " Min:". $_\->power_stats\->consumed_power_min ."\en" 
\&                } 
\&                sort { $a\->id <=> $b\->id } $_\->get_blades 
\&        } 
\&        sort { 
\&                $a\->id <=> $b\->id 
\&        } $ucs\->get_chassiss;
\&
\&        # Prints something like:
\&        #
\&        # Chassis: 1
\&        #       Blade: 1 \- Power consumed \- Current:115.656647 Max:120.913757 Min:110.399513
\&        #       Blade: 2 \- Power consumed \- Current:131.427994 Max:139.313675 Min:126.170883
\&        #       Blade: 3 \- Power consumed \- Current:131.427994 Max:157.713593 Min:126.170883
\&        #       Blade: 4 \- Power consumed \- Current:0.000000 Max:0.000000 Min:0.000000
\&        #       Blade: 5 \- Power consumed \- Current:0.000000 Max:0.000000 Min:0.000000
\&        #       Blade: 6 \- Power consumed \- Current:0.000000 Max:0.000000 Min:0.000000
\&        #       Blade: 7 \- Power consumed \- Current:0.000000 Max:0.000000 Min:0.000000
\&        #       Blade: 8 \- Power consumed \- Current:0.000000 Max:0.000000 Min:0.000000
\&        # Chassis: 2
\&        #       Blade: 1 \- Power consumed \- Current:131.427994 Max:136.685120 Min:128.799438
\&        #       Blade: 2 \- Power consumed \- Current:126.170883 Max:131.427994 Min:123.542320
\&        #       Blade: 3 \- Power consumed \- Current:134.056564 Max:155.085037 Min:131.427994
\&        # ...etc.
.Ve
.SH "DECRIPTION"
.IX Header "DECRIPTION"
Cisco::UCS::Blade is a class providing operations with a Cisco \s-1UCS\s0 Blade.
.PP
Note that you are not supposed to call the constructor yourself, rather a 
Cisco::UCS::Blade object is created automatically by method calls to a 
Cisco::UCS::Chassis object.
.SH "METHODS"
.IX Header "METHODS"
\fIadmin_state\fR
.IX Subsection "admin_state"
.PP
Returns the administrative state of the specified blade.
.PP
\fIassignment\fR
.IX Subsection "assignment"
.PP
Returns the dn of the service profile currently assigned to the specified 
blade.
.PP
\fIassociation\fR
.IX Subsection "association"
.PP
Returns the association status of the specified blade.
.PP
\fIavailability\fR
.IX Subsection "availability"
.PP
Returns the availability status of the specified blade.
.PP
\fIconn_path\fR
.IX Subsection "conn_path"
.PP
Returns the connectivity path detail of the specified blade.
.PP
\fIconn_status\fR
.IX Subsection "conn_status"
.PP
Returns the connectivity path status of the specified blade.
.PP
\fIcores_enabled\fR
.IX Subsection "cores_enabled"
.PP
Returns the number of enabled cores for the specified blade.
.PP
\fIchassis\fR
.IX Subsection "chassis"
.PP
Returns the chassis \s-1ID\s0 of the chassis in which the specified blade is located.
.PP
\fIcheckpoint\fR
.IX Subsection "checkpoint"
.PP
returns the checkpoint status of the specified blade.
.PP
\fIadaptor ( \f(CI$id\fI )\fR
.IX Subsection "adaptor ( $id )"
.PP
Returns the specified adaptor designated by the value of the \f(CW$id\fR parameter as 
a Cisco::UCS::Blade::Adaptor object.
.PP
\&\fBNote\fR that this is a caching method and will return a previously retrieved 
and cached object if one is available.  See the method description for 
\&\fBget_adaptor\fR below for non-caching behaviour.
.PP
\fIget_adaptor ( \f(CI$id\fI )\fR
.IX Subsection "get_adaptor ( $id )"
.PP
This is a functionally equivalent non-caching implementation of the 
\&\fBadaptor\fR method.
.PP
\fIget_adaptors ( \f(CI$id\fI )\fR
.IX Subsection "get_adaptors ( $id )"
.PP
Returns all CPUs in the target blade as an array of 
Cisco::UCS::Blade::Adaptor objects.
.PP
\fIcpu ( \f(CI$id\fI )\fR
.IX Subsection "cpu ( $id )"
.PP
Returns the specified \s-1CPU\s0 in the socket designated by the value of the \f(CW$id\fR 
parameter as a Cisco::UCS::Blade::CPU object.
.PP
\&\fBNote\fR that this is a caching method and will return a previously retrieved 
and cached object if one is available.  See the method description for 
\&\fBget_cpu\fR below for non-caching behaviour.
.PP
\fIget_cpu ( \f(CI$id\fI )\fR
.IX Subsection "get_cpu ( $id )"
.PP
This is a functionally equivalent non-caching implementation of the \fBcpu\fR 
method.
.PP
\fIget_cpus ( \f(CI$id\fI )\fR
.IX Subsection "get_cpus ( $id )"
.PP
Returns all CPUs in the target blade as an array of Cisco::UCS::Blade::CPU 
objects.
.PP
\fIdescription\fR
.IX Subsection "description"
.PP
Returns the value of the user description field for the specified blade.
.PP
\fIdiscovery\fR
.IX Subsection "discovery"
.PP
Returns the discovery status of the specified blade.
.PP
\fIdn\fR
.IX Subsection "dn"
.PP
Returns the dn (distinguished name) of the specified blade in the \s-1UCS\s0 
management heirarchy.
.PP
\fIid\fR
.IX Subsection "id"
.PP
Returns the id of the specified blade in the chassis  \- this is equivalent to 
the slot \s-1ID\s0 number (e.g. 1 .. 8).
.PP
\fIled ( \f(CI$state\fI )\fR
.IX Subsection "led ( $state )"
.PP
Sets the locator led of the blade to the desired state; either on or off;
.PP
\fImanaging_instance\fR
.IX Subsection "managing_instance"
.PP
Returns the managing instance for the specified blade (either A or B).
.PP
\fImemory_available\fR
.IX Subsection "memory_available"
.PP
Returns the amount of available memory (in Mb) for the specified blade.
.PP
\fImemory_speed\fR
.IX Subsection "memory_speed"
.PP
Returns the operational memory speed (in MHz) of the specified blade.
.PP
\fImemory_total\fR
.IX Subsection "memory_total"
.PP
Returns the total amount of memory installed (in Mb) in the specified blade.
.PP
\fImodel\fR
.IX Subsection "model"
.PP
Returns the model number of the specified blade.
.PP
\fIname\fR
.IX Subsection "name"
.PP
Returns the name of the specified blade.
.PP
\fInum_adaptors\fR
.IX Subsection "num_adaptors"
.PP
Returns the number of adaptors in the specified blade.
.PP
\fInum_cores\fR
.IX Subsection "num_cores"
.PP
Returns the number of \s-1CPU\s0 cores in the specified blade.
.PP
\fInum_cpus\fR
.IX Subsection "num_cpus"
.PP
Returns the number of CPUs in the specified blade.
.PP
\fInum_eth_ifs\fR
.IX Subsection "num_eth_ifs"
.PP
Returns the number of Ethernet interfaces configured on teh specified blade.
.PP
\fInum_fc_ifs\fR
.IX Subsection "num_fc_ifs"
.PP
Returns the number of Fibre Channel interfaces configured on teh specified 
blade.
.PP
\fInum_threads\fR
.IX Subsection "num_threads"
.PP
Returns the number of execution threads available on the specified blade.
.PP
\fIoperability\fR
.IX Subsection "operability"
.PP
Returns the operability status of the specified blade.
.PP
\fIoper_power\fR
.IX Subsection "oper_power"
.PP
Returns the operational power state of the specified blade.
.PP
\fIoper_state\fR
.IX Subsection "oper_state"
.PP
Returns the operational status of the specified blade.
.PP
\fIpresence\fR
.IX Subsection "presence"
.PP
Returns the presence status of the specified blade.
.PP
\fIpower_budget\fR
.IX Subsection "power_budget"
.PP
Returns a Cisco::UCS::Blade::PowerBudget object representing the power 
budget values for the specified blade.
.PP
\fIpower_stats\fR
.IX Subsection "power_stats"
.PP
Returns a Cisco::UCS::Common::PowerStats object representing the power 
usage statistics of the specified blade.
.PP
\fIrevision\fR
.IX Subsection "revision"
.PP
Returns the revision level of the specified blade.
.PP
\fIserial\fR
.IX Subsection "serial"
.PP
Returns the serial number of the specified blade.
.PP
\fIserver_id\fR
.IX Subsection "server_id"
.PP
Returns the \s-1ID\s0 of the specified blade in chassis/slot notation (e.g. this value 
would be 2/8 for a server in the eight slot of the second chassis).
.PP
\fIslot_id\fR
.IX Subsection "slot_id"
.PP
Returns the slot \s-1ID\s0 of the specified blade \- this is the same value as 
returned by the \fIid\fR method.
.PP
\fIuser_label\fR
.IX Subsection "user_label"
.PP
Returns the value for the user-specified label of the designated blade.
.PP
\fIuuid\fR
.IX Subsection "uuid"
.PP
Returns the \s-1UUID\s0 of the specified blade \- note that this \s-1UUID\s0 value is the 
user-specified value and may differ to the original \s-1UUID\s0 value of the blade 
(see \fIuuid_original\fR).
.PP
\fIuuid_original\fR
.IX Subsection "uuid_original"
.PP
Returns the original \s-1UUID\s0 value of the specified blade \- this value is the 
\&\*(L"burned-in\*(R" \s-1UUID\s0 for the blade.
.PP
\fIvendor\fR
.IX Subsection "vendor"
.PP
Returns the vendor identifier of the specified blade.
.SH "AUTHOR"
.IX Header "AUTHOR"
Luke Poskitt, \f(CW\*(C`<ltp at cpan.org>\*(C'\fR
.SH "BUGS"
.IX Header "BUGS"
Please report any bugs or feature requests to 
\&\f(CW\*(C`bug\-cisco\-ucs\-blade at rt.cpan.org\*(C'\fR, or through the web interface at 
<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=Cisco\-UCS\-Blade>.  I will be 
notified, and then you'll automatically be notified of progress on your bug as 
I make changes.
.SH "SUPPORT"
.IX Header "SUPPORT"
You can find documentation for this module with the perldoc command.
.PP
.Vb 1
\&    perldoc Cisco::UCS::Blade
.Ve
.PP
You can also look for information at:
.IP "\(bu" 4
\&\s-1RT: CPAN\s0's request tracker
.Sp
<http://rt.cpan.org/NoAuth/Bugs.html?Dist=Cisco\-UCS\-Blade>
.IP "\(bu" 4
AnnoCPAN: Annotated \s-1CPAN\s0 documentation
.Sp
<http://annocpan.org/dist/Cisco\-UCS\-Blade>
.IP "\(bu" 4
\&\s-1CPAN\s0 Ratings
.Sp
<http://cpanratings.perl.org/d/Cisco\-UCS\-Blade>
.IP "\(bu" 4
Search \s-1CPAN\s0
.Sp
<http://search.cpan.org/dist/Cisco\-UCS\-Blade/>
.SH "ACKNOWLEDGEMENTS"
.IX Header "ACKNOWLEDGEMENTS"
.SH "LICENSE AND COPYRIGHT"
.IX Header "LICENSE AND COPYRIGHT"
Copyright 2012 Luke Poskitt.
.PP
This program is free software; you can redistribute it and/or modify it
under the terms of either: the \s-1GNU\s0 General Public License as published
by the Free Software Foundation; or the Artistic License.
.PP
See http://dev.perl.org/licenses/ for more information.

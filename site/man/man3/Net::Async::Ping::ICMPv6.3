.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Net::Async::Ping::ICMPv6 3"
.TH Net::Async::Ping::ICMPv6 3 "2018-01-24" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Net::Async::Ping::ICMPv6
.SH "VERSION"
.IX Header "VERSION"
version 0.004001
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This is the ICMPv6 part of Net::Async::Ping. See that documentation for full
details.
.SS "ICMPv6 methods"
.IX Subsection "ICMPv6 methods"
This module will first attempt to use a ping socket to send its ICMPv6 packets,
which does not need root privileges. These are only supported on Linux, and
only when the group is stipulated in \f(CW\*(C`/proc/sys/net/ipv4/ping_group_range\*(C'\fR
(yes, the IPv4 setting also controls the IPv6 socket).
Failing that, the module will use a raw socket limited to the ICMPv6 protocol,
which will fail if attempted from a non-privileged account.
.PP
\fIping socket advantages\fR
.IX Subsection "ping socket advantages"
.IP "doesn't require root/admin privileges" 4
.IX Item "doesn't require root/admin privileges"
.PD 0
.IP "better performance, as the kernel is handling the reply to request packet matching" 4
.IX Item "better performance, as the kernel is handling the reply to request packet matching"
.PD
.PP
\fIraw socket advantages\fR
.IX Subsection "raw socket advantages"
.IP "supports echo replies, no icmp error messages" 4
.IX Item "supports echo replies, no icmp error messages"
.SS "Additional options"
.IX Subsection "Additional options"
To disable the attempt to send from a ping socket, set \f(CW\*(C`use_ping_socket\*(C'\fR to
0 when initiating the object:
.PP
.Vb 5
\& my $p = Net::Async::Ping\->new(
\&   icmpv6 => {
\&      use_ping_socket => 0,
\&   },
\& );
.Ve
.SS "Return value"
.IX Subsection "Return value"
Net::Async::Ping::ICMPv6 will return the hires time on success. On failure, it
will return the future from IO::Async::Resolver if that failed. Otherwise,
it will return as a future failure:
.ie n .IP """ICMPv6 Unreachable""" 4
.el .IP "``ICMPv6 Unreachable''" 4
.IX Item "ICMPv6 Unreachable"
ICMPv6 response was ICMPv6_UNREACHABLE
.ie n .IP """ICMPv6 Timeout""" 4
.el .IP "``ICMPv6 Timeout''" 4
.IX Item "ICMPv6 Timeout"
ICMPv6 response was ICMPv6_TIME_EXCEEDED
.ie n .IP """Receive error""" 4
.el .IP "``Receive error''" 4
.IX Item "Receive error"
An error was received from IO::Async::Socket.
.SH "NAME"
Net::Async::Ping::ICMPv6
.SH "AUTHORS"
.IX Header "AUTHORS"
.IP "\(bu" 4
Arthur Axel \*(L"fREW\*(R" Schmidt <frioux+cpan@gmail.com>
.IP "\(bu" 4
Alexander Hartmaier <abraxxa@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2018 by Arthur Axel \*(L"fREW\*(R" Schmidt, Alexander Hartmaier.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

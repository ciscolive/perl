.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "WWW::Mechanize::FormFiller::Value::Keep 3"
.TH WWW::Mechanize::FormFiller::Value::Keep 3 "2017-01-19" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
WWW::Mechanize::FormFiller::Value::Keep \- Leave an HTML field alone
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&  use WWW::Mechanize::FormFiller;
\&  use WWW::Mechanize::FormFiller::Value::Keep;
\&
\&  my $f = WWW::Mechanize::FormFiller\->new();
\&
\&  # Leave the login field untouched
\&  my $login = WWW::Mechanize::FormFiller::Value::Keep\->new( \*(Aqlogin\*(Aq );
\&  $f\->add_value( login => $login );
\&
\&  # Alternatively take the following shorthand, which adds the
\&  # field to the list as well :
\&  my $sessionid = $f\->add_filler( session => \*(AqKeep\*(Aq );
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This class provides a way to keep a value in an \s-1HTML\s0 field.
.IP "new \s-1NAME\s0" 4
.IX Item "new NAME"
Creates a new value which will correspond to the \s-1HTML\s0 field \f(CW\*(C`NAME\*(C'\fR.
.IP "name [\s-1NEWNAME\s0]" 4
.IX Item "name [NEWNAME]"
Gets and sets the name of the \s-1HTML\s0 field this value corresponds to.
.IP "value \s-1FIELD\s0" 4
.IX Item "value FIELD"
Returns whatever \f(CW\*(C`FIELD\-\*(C'\fR\fBvalue()\fR> returns.
.SS "\s-1EXPORT\s0"
.IX Subsection "EXPORT"
None by default.
.SS "\s-1COPYRIGHT AND LICENSE\s0"
.IX Subsection "COPYRIGHT AND LICENSE"
This library is free software; you can redistribute it and/or modify it under the same terms as Perl itself.
.PP
Copyright (C) 2002,2003 Max Maischein
.SH "AUTHOR"
.IX Header "AUTHOR"
Max Maischein, <corion@cpan.org>
.PP
Please contact me if you find bugs or otherwise improve the module. More tests are also very welcome !
.SH "SEE ALSO"
.IX Header "SEE ALSO"
WWW::Mechanize,WWW::Mechanize::Shell,
WWW::Mechanize::FormFiller,WWW::Mechanize::FormFiller::Value,
WWW::Mechanize::FormFiller::Value::Fixed,
WWW::Mechanize::FormFiller::Value::Default,
WWW::Mechanize::FormFiller::Value::Random,
WWW::Mechanize::FormFiller::Value::Interactive

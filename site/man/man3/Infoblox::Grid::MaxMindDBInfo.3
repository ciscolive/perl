.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Infoblox::Grid::MaxMindDBInfo 3"
.TH Infoblox::Grid::MaxMindDBInfo 3 "2018-06-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Infoblox::Grid::MaxMindDBInfo \- an MaxMind Database information object.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The object provides information about the MaxMind database.
.SH "SESSION METHODS"
.IX Header "SESSION METHODS"
This section describes all the methods in a Session module that you can apply to a MaxMindDBInfo object. Note that the object supports only the get method since there is only one such object in the database.
.SS "Infoblox::Session\->get( )"
.IX Subsection "Infoblox::Session->get( )"
.RS 4
Use this method to retrieve all the matching objects from the Infoblox appliance. See Infoblox::Session\->\fBget()\fR for parameters and return values.
.IP "\fBKey Reference\fR" 4
.IX Item "Key Reference"
.Vb 1
\& Apply the following attribute to get a specific object:
\&
\&   binary_major_version \- Optional. The major binary version of MaxMind database.
\&   binary_minor_version \- Optional. The minor binary version of MaxMind database.
\&   build_time           \- Optional. The time at which the MaxMind database was built.
\&   database_type        \- Optional. The structure of data records.
\&   deployment_time      \- Optional. The time at which the current MaxMind database was deployed.
\&   topology_type        \- Optional. The MaxMind database topology type.
.Ve
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& my @retrieved_objs = $session\->get(
\&     object => \*(AqInfoblox::DTC::Monitor::TCP\*(Aq,
\&     database_type => \*(AqGeoLite2\-Country\*(Aq,
\& );
.Ve
.RE
.RS 4
.RE
.SH "MODULE METHODS"
.IX Header "MODULE METHODS"
.SS "Infoblox::DTC\->import_maxminddb( )"
.IX Subsection "Infoblox::DTC->import_maxminddb( )"
.SS "import_maxminddb( )"
.IX Subsection "import_maxminddb( )"
.RS 4
Use this method to upload MaxMind Database.
.IP "\fBKey Reference\fR" 4
.IX Item "Key Reference"
.Vb 1
\& Apply the following attribute to upload a MaxMind Database:
\&
\&     path \- Required. The path to a tar archive that contains the MaxMind Database.
.Ve
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns \*(L"true\*(R" when an upload of a MaxMind Database has been performed successfully, and returns \*(L"false\*(R" when the operation fails.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #upload MaxMind DB
\& my $res = $dtc\->import_maxminddb(path => $path_to_maxminddb);
.Ve
.RE
.RS 4
.RE
.SH "METHODS"
.IX Header "METHODS"
This section describes all the methods that you can use to set or retrieve the attribute values of the object.
.SS "binary_major_version( )"
.IX Subsection "binary_major_version( )"
.RS 4
Use this method to retrieve the major version of the MaxMind database binary format. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #get binary_major_version value
\& my $binary_major_version = $maxminddbinfo\->binary_major_version();
.Ve
.RE
.RS 4
.RE
.SS "binary_minor_version( )"
.IX Subsection "binary_minor_version( )"
.RS 4
Use this method to retrieve the minor version of the MaxMind database binary format. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #get binary_minor_version value
\& my $binary_minor_version = $maxminddbinfo\->binary_minor_version();
.Ve
.RE
.RS 4
.RE
.SS "build_time( )"
.IX Subsection "build_time( )"
.RS 4
Use this method to retrieve the time when the MaxMind database was built. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #get build_time value
\& my $build_time = $maxminddbinfo\->build_time();
.Ve
.RE
.RS 4
.RE
.SS "database_type( )"
.IX Subsection "database_type( )"
.RS 4
Use this method to retrieve the structure of MaxMind database records. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #get database_type value
\& my $database_type = $maxminddbinfo\->database_type();
.Ve
.RE
.RS 4
.RE
.SS "deployment_time( )"
.IX Subsection "deployment_time( )"
.RS 4
Use this method to retrieve the time when the current MaxMind database was deployed. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #get deployment_time value
\& my $deployment_time = $maxminddbinfo\->deployment_time();
.Ve
.RE
.RS 4
.RE
.SS "member( )"
.IX Subsection "member( )"
.RS 4
Use this method to retrieve the Grid member name on which the current MaxMind database was deployed. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get member value
\& my $value = $object\->member();
.Ve
.RE
.RS 4
.RE
.SS "topology_type( )"
.IX Subsection "topology_type( )"
.RS 4
Use this method to retrieve the MaxMind database topology type. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value. The valid return values are '\s-1GEOIP\s0' and '\s-1EA\s0'.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #get topology_type value
\& my $topology_type = $maxminddbinfo\->topology_type();
.Ve
.RE
.RS 4
.RE
.SH "AUTHOR"
.IX Header "AUTHOR"
Infoblox Inc. <http://www.infoblox.com/>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Infoblox::Session, Infoblox::Session\->\fBget()\fR, Infoblox::DTC\->\fBimport_maxminddb()\fR
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2017 Infoblox Inc.

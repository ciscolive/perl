.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "MCE::Channel::Simple 3"
.TH MCE::Channel::Simple 3 "2020-08-18" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
MCE::Channel::Simple \- Channel tuned for one producer and one consumer
.SH "VERSION"
.IX Header "VERSION"
This document describes MCE::Channel::Simple version 1.874
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
A channel class providing queue-like and two-way communication
for one process or thread on either end; no locking needed.
.PP
The \s-1API\s0 is described in MCE::Channel.
.IP "new" 3
.IX Item "new"
.Vb 1
\& use MCE::Channel;
\&
\& my $chnl = MCE::Channel\->new( impl => \*(AqSimple\*(Aq );
.Ve
.SH "QUEUE-LIKE BEHAVIOR"
.IX Header "QUEUE-LIKE BEHAVIOR"
.IP "enqueue" 3
.IX Item "enqueue"
.PD 0
.IP "dequeue" 3
.IX Item "dequeue"
.IP "dequeue_nb" 3
.IX Item "dequeue_nb"
.IP "end" 3
.IX Item "end"
.PD
.SH "TWO-WAY IPC \- PRODUCER TO CONSUMER"
.IX Header "TWO-WAY IPC - PRODUCER TO CONSUMER"
.IP "send" 3
.IX Item "send"
.PD 0
.IP "recv" 3
.IX Item "recv"
.IP "recv_nb" 3
.IX Item "recv_nb"
.PD
.SH "TWO-WAY IPC \- CONSUMER TO PRODUCER"
.IX Header "TWO-WAY IPC - CONSUMER TO PRODUCER"
.IP "send2" 3
.IX Item "send2"
.PD 0
.IP "recv2" 3
.IX Item "recv2"
.IP "recv2_nb" 3
.IX Item "recv2_nb"
.PD
.SH "AUTHOR"
.IX Header "AUTHOR"
Mario E. Roy, <marioeroy AT gmail DOT com>

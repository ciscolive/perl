.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Infoblox::Grid::HSM::ThalesGroup 3"
.TH Infoblox::Grid::HSM::ThalesGroup 3 "2018-06-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Infoblox::Grid::HSM::Thales::Group \- Thales HSM Group object
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Hardware Security Modules (HSMs) are used for secure private key storage, and key generation and zone-signing offloading.
.SH "CONSTRUCTOR"
.IX Header "CONSTRUCTOR"
.Vb 10
\& my $hsm_group = Infoblox::Grid::HSM::Thales::Group\->new(
\&     key_server_ip           => $ipv4addr,                                          #Required
\&     name                    => $string,                                            #Required
\&     thales_hsm              => [$thales1, ...],                                    #Required
\&     card_name               => $string,                                            #Required if "protection" is "SOFTCARD"
\&     pass_phrase             => $string,                                            #Required if "protection" is "SOFTCARD"
\&     comment                 => $string,                                            #Optional / Default value is empty
\&     key_server_port         => $num,                                               #Optional / Default value is 9004
\&     protection              => "MODULE" | "SOFTCARD" ,                             #Optional / Default value is Module
\& );
.Ve
.SH "SESSION METHODS"
.IX Header "SESSION METHODS"
This section describes all the methods in an Infoblox::Session module that you can apply to an \s-1HSM\s0 Group object.
.SS "Infoblox::Session\->add( )"
.IX Subsection "Infoblox::Session->add( )"
.RS 4
Use this method to add an object to the Infoblox appliance. See Infoblox::Session\->\fBadd()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 8
\& #Construct an object
\& my $hsm_group = Infoblox::Grid::HSM::Thales::Group\->new(
\&     name                    => "HSM Group",
\&     key_server_ip           => "10.0.0.1",
\&     key_server_port         => 9004,
\&     comment                 => "A new HSM Group ",
\&     thales_hsm              => [$thales1]
\&     );
\&
\& #Submit for addition
\& my $response = $session\->add($hsm_group);
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->get( )"
.IX Subsection "Infoblox::Session->get( )"
.RS 4
Use this method to retrieve all the matching objects from the Infoblox appliance. See Infoblox::Session\->\fBget()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 3
\& my @retrieved_objs = $session\->get(
\&     object => "Infoblox::Grid::HSM::Thales::Group",
\&     key_server_ip   => "10.0.0.1");
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->modify( )"
.IX Subsection "Infoblox::Session->modify( )"
.RS 4
Use this method to modify an object in the Infoblox appliance. See Infoblox::Session\->\fBmodify()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Use this method to modify the comment of an HSM Group object.
\& $hsm_group\->comment("This is modified HSM Group object");
\& # Submit modification
\& my $response = $session\->modify($hsm_group );
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->remove( )"
.IX Subsection "Infoblox::Session->remove( )"
.RS 4
Use this method to remove an object from the Infoblox appliance. See Infoblox::Session\->\fBremove()\fR for parameters and return values.
.Sp
To remove a specific object, first use \fBget()\fR to retrieve the object, and then submit it for removal.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get the objects with the specified key_server_ip.
\& my @retrieved_objs = $session\->get(
\&     object => "Infoblox::Grid::HSM::Thales::Group",
\&     key_server_ip   => "10.0.0.1");
\&
\& #Find the desired object on the retrieved list.
\& my $desired_hsmgroup = $retrieved_objs[0];
\&
\& # Submit for removal
\& my $response = $session\->remove($desired_hsmgroup);
.Ve
.RE
.RS 4
.RE
.SH "METHODS"
.IX Header "METHODS"
This section describes all the methods that you can use to configure and retrieve the attribute values of an \s-1HSM\s0 Group object.
.SS "card_name( )"
.IX Subsection "card_name( )"
.RS 4
Use this method to set or retrieve the name of the softcard used by the \s-1HSM\s0 Group object.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Desired name for the softcard in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get softcard name
\& my $card_name = $hsm_group\->card_name();
\& #Modify softcard name
\& $hsm_group\->card_name("Softcard 1")
.Ve
.RE
.RS 4
.RE
.SS "comment( )"
.IX Subsection "comment( )"
.RS 4
Use this method to set or retrieve a descriptive comment.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Desired comment in string format with a maximum of 256 bytes.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get comment
\& my $comment = $hsm_group\->comment();
\& #Modify comment
\& $hsm_group\->comment("Modified HSM Group");
.Ve
.RE
.RS 4
.RE
.SS "key_server_ip( )"
.IX Subsection "key_server_ip( )"
.RS 4
Use this method to set or retrieve the key file server \s-1IP\s0 address of an \s-1HSM\s0 Group object.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The IPv4 address of the key file server.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get key server IP address
\& my $key_server_ip = $hsm_group\->key_server_ip();
\& #Modify key server IP address
\& $hsm_group\->key_server_ip("10.0.0.5");
.Ve
.RE
.RS 4
.RE
.SS "key_server_port( )"
.IX Subsection "key_server_port( )"
.RS 4
Use this method to set or retrieve the port number used by the key file server configured in the \s-1HSM\s0 Group object.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is an unsigned integer ranging from 0 to 65535.The default value is 9004.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get key server port
\& my $key_server_port = $hsm_group\->key_server_port();
\& #Modify key server port
\& $hsm_group\->key_server_port(9012);
.Ve
.RE
.RS 4
.RE
.SS "name( )"
.IX Subsection "name( )"
.RS 4
Use this method to set or retrieve the name of the \s-1HSM\s0 Group object.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Desired name for the \s-1HSM\s0 Group object in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get name
\& my $name = $hsm_group\->name();
\& #Modify name
\& $hsm_group\->name("HSM GROUP 2")
.Ve
.RE
.RS 4
.RE
.SS "pass_phrase( )"
.IX Subsection "pass_phrase( )"
.RS 4
Use this method to set the passphrase that is used to unlock the key store. This is a write-only attribute.
.Sp
Include the specified parameter to set the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is a string, which cannot include a tab and carriage return.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Modify passphrase
\& $hsm_group\->pass_phrase("pass1234");
.Ve
.RE
.RS 4
.RE
.SS "protection( )"
.IX Subsection "protection( )"
.RS 4
Use this method to set or retrieve the protection type of an \s-1HSM\s0 Group object.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid values are \*(L"\s-1MODULE\*(R"\s0 and \*(L"\s-1SOFTCARD\*(R"\s0.The default value is \*(L"\s-1MODULE\*(R".\s0
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get protection
\& my $protection = $hsm_group\->protection();
\& #Modify protection
\& $grid_member\->protection("SOFTCARD");
.Ve
.RE
.RS 4
.RE
.SS "thales_hsm( )"
.IX Subsection "thales_hsm( )"
.RS 4
Use this method to set or retrieve the list of Thales servers in an \s-1HSM\s0 Group object.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an array reference that contains  Infoblox::Grid::HSM::Thales object(s).
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 7
\& #Get Thales HSM list
\& my $thales_hsm = $hsm_group\->thales_hsm();
\& #Modify Thales HSM list
\& my $thales_hsm1 = Infoblox::Grid::HSM::Thales\->new(
\&     remote_ip              => "20.0.0.1",
\&     keyhash                => "a123",
\& );
\&
\& my $thales_hsm2 = Infoblox::Grid::HSM::Thales\->new(
\&     remote_ip              => "20.0.0.5",
\&     keyhash                => "b456",
\& );
\&
\& $hsm_group\->thales_server([$thales_hsm1,$thales_hsm2]);
.Ve
.RE
.RS 4
.RE
.SS "status( )"
.IX Subsection "status( )"
.RS 4
Use this method to retrieve the status of the remote file server used in the \s-1HSM\s0 Group object.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value of \*(L"\s-1UP\*(R"\s0 or \*(L"\s-1DOWN\*(R" .\s0
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get status
\& my $status = $hsm_group\->status();
.Ve
.RE
.RS 4
.RE
.SH "SAMPLE CODE"
.IX Header "SAMPLE CODE"
The following sample code demonstrates the different functions that can be applied to an object such as add, get, modify and remove. This sample also includes error handling for the operations.
.PP
\&\fB#Preparation prior to getting and modifying a grid member object\fR
.PP
.Vb 2
\& use strict;
\& use Infoblox;
\&
\& #refers to Infoblox Appliance IP address
\& my $host_ip = "192.168.1.2";
\&
\& #Create a session to the Infoblox appliance
\&
\& my $session = Infoblox::Session\->new(
\&     master   => $host_ip,
\&     username => "admin",
\&     password => "infoblox"
\& );
\& unless ($session) {
\&        die("Construct session failed: ",
\&                Infoblox::status_code() . ":" . Infoblox::status_detail());
\& }
\& print "Session created successfully\en";
.Ve
.PP
\&\fB#Create an \s-1HSM\s0 Group object\fR
.PP
.Vb 10
\& my $thales_server = Infoblox::Grid::HSM::Thales\->new(
\&     remote_ip     => "20.0.0.1",
\&     keyhash       => "1234hash",
\&     remote_port   => 9012,
\&     );
\& unless ($thales_server) {
\&        die("Construct thales server object failed: ",
\&                Infoblox::status_code() . ":" . Infoblox::status_detail());
\& }
\& print "Thales server object created successfully\en";
\&
\& my $hsm_group = Infoblox::Grid::HSM::Thales::Group\->new(
\&     key_server_ip     => "20.0.0.1",
\&     key_server_port   => 9007,
\&     );
\& unless ($hsm_group) {
\&        die("Construct HSM Group object failed: ",
\&                Infoblox::status_code() . ":" . Infoblox::status_detail());
\& }
\& print "HSM Group object created successfully\en";
\&
\& #Add the HSM object to appliance through session
\& my $response = $session\->add( $hsm_group );
\&
\& unless ($response) {
\&     die("Add HSM Group failed: ",
\&            $session\->status_code() . ":" . $session\->status_detail());
\& }
\& print"HSM Group added successfully \en";
.Ve
.PP
\&\fB#Get and modify the \s-1HSM\s0 Group object\fR
.PP
.Vb 6
\& #Get HSM Group through session
\& my @retrieved_objs = $session\->get(
\&     object => "Infoblox::Grid::HSM::Thales::Group",
\&     key_server_ip     => "20.0.0.1",
\&     );
\& my $hsm_group = $retrieved_objs[0];
\&
\& unless ($hsm_group) {
\&     die("Get HSM Group object failed: ",
\&            $session\->status_code() . ":" . $session\->status_detail());
\& }
\& print"Get HSM Group successful \en";
\&
\& # Modify one of the attributes of the selected HSM Group.
\&
\& $hsm group\->comment("Modified hsm group object");
\&
\& #Applying the changes
\& $session\->modify($hsm_group)
\&    or die("Modify HSM Group failed",
\&             $session\->status_code() . ":" . $session\->status_detail());
\& print"HSM Group modified successfully \en";
.Ve
.PP
\&\fB#Remove the grid member object\fR
.PP
.Vb 6
\& #Get HSM Group through session
\& my @retrieved_objs = $session\->get(
\&     object => "Infoblox::Grid::HSM::Thales::Group",
\&     key_server_ip     => "20.0.0.1"
\&     );
\& my $desired_hsm_group = $retrieved_objs[0];
\&
\& unless ($desired_hsm_group) {
\&     die("Get HSM Group object failed: ",
\&            $session\->status_code() . ":" . $session\->status_detail());
\& }
\& print"Get HSM Group successful \en";
\&
\& #Submit the object for removal
\& $session\->remove( $desired_hsm_group )
\&     or die("Remove HSM Group failed",
\&            $session\->status_code() . ":" . $session\->status_detail());
\& print"HSM Group removed successfully \en";
\&
\& ####PROGRAM ENDS####
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Infoblox Inc. <http://www.infoblox.com/>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Infoblox::Grid::HSM::Thales
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2017 Infoblox Inc.

.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "MooX::Role::CachedURL 3"
.TH MooX::Role::CachedURL 3 "2015-11-04" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
MooX::Role::CachedURL \- a role providing a locally cached copy of a remote file
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 4
\& package MyClass;
\& use Moo;
\& with \*(AqMooX::Role::CachedURL\*(Aq;
\& has \*(Aq+url\*(Aq => (default => sub { \*(Aqhttp://www.cpan.org/robots.txt\*(Aq });
\&
\& sub my_method {
\&    my $self = shift;
\&    my $fh   = $self\->open_file;
\&
\&    while (<$fh>) {
\&        ...
\&    }
\&    $self\->close_file($fh);
\& }
.Ve
.PP
Then in the user of MyClass:
.PP
.Vb 2
\& use MyClass;
\& my $object = MyClass\->new(max_age => \*(Aq2 days\*(Aq);
\&
\& print "local file is ", $object\->cache_path, "\en";
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This role represents a remote file that you want to cache locally,
and then process.
This is common functionality that I'm pulling out of my PAUSE::Users,
PAUSE::Permissions and PAUSE::Packages modules.
.PP
PAUSE::Users provides a simple interface to the \f(CW\*(C`00whois.xml\*(C'\fR file
that is generated by \s-1PAUSE.\s0
It caches the file locally,
then provides a mechanism for iterating over all users in the file.
.SH "ATTRIBUTES"
.IX Header "ATTRIBUTES"
.SS "cache_path"
.IX Subsection "cache_path"
The full path to the local file where the content of the remote \s-1URL\s0
will be cached. You can provide your own path, but if you don't,
then an appropriate path for your operating system will be generated.
.SS "path"
.IX Subsection "path"
A full or relative path to your own copy of the cached content.
If you provide this, then your content will be used,
without checking the remote \s-1URL.\s0
If the file you pass doesn't exist, the module will \f(CW\*(C`croak()\*(C'\fR.
.SS "url"
.IX Subsection "url"
This specifies the \s-1URL\s0 that should be cached locally.
It should be over-ridden in the composing class, as shown in the \s-1SYNOPSIS\s0 above.
.SS "max_age"
.IX Subsection "max_age"
Specifies the maximum age of the local copy, in seconds.
We won't even look for a new remote copy if the cached copy is younger than this.
.PP
You can specify max_age using any of the notations supported by Time::Duration::Parse.
For example:
.PP
.Vb 1
\& max_age => \*(Aq2 hours\*(Aq,
.Ve
.SH "Support for gzip'd files"
.IX Header "Support for gzip'd files"
If the \f(CW\*(C`cache_path\*(C'\fR or \f(CW\*(C`path\*(C'\fR attribute ends in \f(CW\*(C`.gz\*(C'\fR,
then the file is assumed to be gzip'd, and will be transparently handled
using PerlIO::gzip.
.SH "TODO"
.IX Header "TODO"
.IP "\(bu" 4
Switch to \s-1LWP\s0 for general \s-1URL\s0 handling, not just \s-1HTTP\s0
.IP "\(bu" 4
Ability for a class to transform content when caching
.SH "REPOSITORY"
.IX Header "REPOSITORY"
<https://github.com/neilb/MooX\-Role\-CachedURL>
.SH "AUTHOR"
.IX Header "AUTHOR"
Neil Bowers <neilb@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2014 by Neil Bowers <neilb@cpan.org>.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

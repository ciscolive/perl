.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "File::Policy::Default 3"
.TH File::Policy::Default 3 "2005-06-15" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
File::Policy::Default \- Default policy for file I/O functions
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 3
\&        use File::Policy;
\&        use File::Policy qw/check_safe/;   # to import a specific subroutine
\&        use File::Policy qw/:all/;         # to import all subroutines
\&
\&        #Checking I/O policy
\&        check_safe($filename, \*(Aqr\*(Aq);
\&        check_safe($filename, \*(Aqw\*(Aq);
\&
\&        #Portable directory locations
\&        $logdir = get_log_dir();
\&        $tmpdir = get_temp_dir();
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This defines the default (unrestricted) policy for file I/O with modules such as File::Slurp::WithinPolicy.
You may replace this default policy with one for your organisation.
.SH "FUNCTIONS"
.IX Header "FUNCTIONS"
.IP "check_safe" 4
.IX Item "check_safe"
.Vb 1
\&        check_safe( FILENAME , MODE );
.Ve
.Sp
Checks a filename is safe \- dies if not.  \s-1MODE\s0 is r (read) or w (write).
Default is no restrictions on file I/O.
.IP "get_temp_dir" 4
.IX Item "get_temp_dir"
.Vb 1
\&        $temporary_directory = get_temp_dir();
.Ve
.Sp
Returns the path to temporary directory from the \s-1TEMP\s0 environment variable or \fBFile::Spec::Functions::tmpdir()\fR.
Note that any return value will have been cleared of a trailing slash.
.IP "get_log_dir" 4
.IX Item "get_log_dir"
.Vb 1
\&        $log_directory = get_log_dir();
.Ve
.Sp
Returns the path to log directory from the \s-1LOGDIR\s0 environment variable or the current directory.
Note that any return value will have been cleared of a trailing slash.
.SH "VERSION"
.IX Header "VERSION"
\&\f(CW$Revision:\fR 1.6 $ on \f(CW$Date:\fR 2005/05/18 15:57:28 $ by \f(CW$Author:\fR johna $
.SH "AUTHOR"
.IX Header "AUTHOR"
John Alden <cpan _at_ bbc _dot_ co _dot_ uk>
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
(c) \s-1BBC 2005.\s0 This program is free software; you can redistribute it and/or modify it under the \s-1GNU GPL.\s0
.PP
See the file \s-1COPYING\s0 in this distribution, or http://www.gnu.org/licenses/gpl.txt

.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "WWW::Mechanize::Firefox::FAQ 3"
.TH WWW::Mechanize::Firefox::FAQ 3 "2018-10-28" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
WWW::Mechanize::Firefox::FAQ \- Frequently Asked Questions on WWW::Mechanize::Firefox
.SH "Firefox"
.IX Header "Firefox"
.SS "How Dependent On The Firefox Version Is The Module?"
.IX Subsection "How Dependent On The Firefox Version Is The Module?"
The module itself should work with any version of Firefox
starting from version 2.0. Depending on how deep your Perl
code interacts with the application structure of Firefox,
you will or will not encounter version specific problems.
.PP
If you are only using WWW::Mechanize::Firefox to access
the \s-1DOM\s0 of web pages, you will not notice any version dependencies.
.PP
If you use WWW::Mechanize::Firefox to modify the behaviour
of Firefox itself, for example by changing settings
through Perl code, you will likely be affected by
reorganizations of the application structure.
.SS "Do I Need An X Session To Run Firefox?"
.IX Subsection "Do I Need An X Session To Run Firefox?"
Yes.
.PP
If you run a unixish operating system, like \s-1OSX\s0 or Ubuntu or some other
Linux distribution, then Firefox will connect to your X server and display
a window there. If you do not
want Firefox to actually display on your monitor, many people have had success
by running Firefox on another X server separate from the main X server,
like Xvfb.
.PP
Personally, I would prefer to have a \*(L"headless Firefox\*(R" that does not
need a windowing environment. So far, I am unaware of this actually existing.
.SS "How do I use a separate instance of Firefox?"
.IX Subsection "How do I use a separate instance of Firefox?"
The easiest way is to install a \*(L"portable\*(R" version (or two) of Firefox.
This instance will not pollute your main profile and can use separate
add-ons and settings. Use the following code to launch and connect to your
separate instance:
.PP
.Vb 1
\&    my $instance_port = 4243; # 4242 is likely occupied by your main Firefox instance
\&    
\&    $ff = Firefox::Application\->new(
\&        autodie => 0,
\&        #log => [qw[debug]],
\&        
\&        launch => [\*(Aqc:/Path/to/portable/FirefoxPortable.exe\*(Aq,
\&                   \*(Aq\-P\*(Aq, "ProfileName",
\&                   \*(Aq\-repl\*(Aq, $instance_port
\&                  ],
\&        repl => "localhost:$instance_port",
\&    );
.Ve
.SH "Other Browsers"
.IX Header "Other Browsers"
.SS "Is There WWW::Mechanize::Firefox for Internet Explorer?"
.IX Subsection "Is There WWW::Mechanize::Firefox for Internet Explorer?"
No.
.PP
If you want to automate Internet Explorer, there is
Win32::IE::Mechanize. This module is not \s-1API\s0 compatible
and does not let you conveniently get at the \s-1DOM\s0 methods.
.SS "Is There WWW::Mechanize::Firefox for Google Chrome?"
.IX Subsection "Is There WWW::Mechanize::Firefox for Google Chrome?"
There is a plugin called \*(L"chromerepl\*(R" for Google Chrome. This
claims to be what \f(CW\*(C`mozrepl\*(C'\fR is for Firefox. The problem is
that the Chrome plugin does not download, so I cannot tell you
whether it would work.
.PP
In principle, it should be possible to write a similar
module, WWW::Mechanize::Chrome (or maybe WWW::Mechanize::Chromatic)
once the plugin is proven to work. The deeper interaction with
the application won't work immediately because Chrome and Firefox
still have a different application structure.
.SH "SUPPORT AND BUG REPORTS"
.IX Header "SUPPORT AND BUG REPORTS"
.SS "Where Can I Ask For Help?"
.IX Subsection "Where Can I Ask For Help?"
If you encounter problems with a website or want feedback on
how to approach extracting data from a website, please post your
question on <http://perlmonks.org>. Many competent people and I
read this site and will answer your questions.
.PP
You do not need to sign up there. You can just go to
<http://perlmonks.org/?node=SoPW> and post your question directly.
.PP
I do not monitor other forums, so Perlmonks is the best site to
get answers about WWW::Mechanize::Firefox.
.SS "Where Can I Report Bugs?"
.IX Subsection "Where Can I Report Bugs?"
Please use the \s-1CPAN RT\s0 queue to report and review bugs:
.PP
https://rt.cpan.org/dist/www\-mechanize\-firefox
.PP
or send a mail with your bug report to
\&\f(CW\*(C`www\-mechanize\-firefox\-Bugs@rt.cpan.org\*(C'\fR
.PP
Please do make sure that you include a small, self-contained
program that reproduces the problem and shows what you expect
to happen and what happens instead. This makes it much easier
for me to help you better in resolving the problem.
.SH "AUTHOR"
.IX Header "AUTHOR"
Max Maischein \f(CW\*(C`corion@cpan.org\*(C'\fR
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright 2010\-2014 by Max Maischein \f(CW\*(C`corion@cpan.org\*(C'\fR.
.PP
All Rights Reserved. This module is free software. It may be used,
redistributed and/or modified under the same terms as Perl itself.

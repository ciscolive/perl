.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Mojolicious::Plugin::Humane 3"
.TH Mojolicious::Plugin::Humane 3 "2020-07-27" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mojolicious::Plugin::Humane \- Mojolicious integration for humane.js
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 4
\&  # Mojolicious
\&  $app\->plugin(\*(AqHumane\*(Aq);
\&  # then elsewhere
\&  $c\->humane_flash(\*(AqNot authorized\*(Aq);
\&
\&  # Mojolicious::Lite
\&  plugin \*(AqHumane\*(Aq;
\&  get \*(Aq/\*(Aq => sub {
\&    my $c = shift;
\&    $c\->humane_stash(\*(AqWelcome back!\*(Aq);
\&  ...
\&
\&  # Without \*(Aqauto\*(Aq feature
\&  plugin \*(AqHumane\*(Aq, auto => 0;
\&  ...
\&  _\|_DATA_\|_
\&  ...
\&  %= humane_include
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Mojolicious::Plugin::Humane is a Mojolicious plugin allowing easy use of humane.js, a browser notification handler (<http://wavded.github.com/humane\-js/>).
.PP
By default the template needed to render the messages is injected only if needed. For infrequent use, this is less costly overall and less to think about. If messages are to be used frequently or perhaps humane.js is to also be used without reloading the page (via websockets perhaps) then turn the \f(CW\*(C`auto\*(C'\fR feature off and add the template to your layout manually.
.PP
Internally this plugin uses the (non-localized) stash keys \f(CW\*(C`humane.stash\*(C'\fR and \f(CW\*(C`humane.flash\*(C'\fR. Other stash keys starting with \f(CW\*(C`humane.\*(C'\fR are reserved for future use should be avoided.
.SH "ATTRIBUTES"
.IX Header "ATTRIBUTES"
.SS "humane_version"
.IX Subsection "humane_version"
Version of humane.js (to be) loaded. Defaults to the highest bundled version. Currently version 3.2.0 is bundled.
.PP
In future, non-breaking releases will be silently upgraded, while breaking versions will be kept and left at the highest version that had been bundled.
.SS "static_path"
.IX Subsection "static_path"
The path to the folder containing the bundled version of humane to be used. This path is added to the static rendering path.
The default is \f(CW\*(C`$plugin\->path(\*(Aqhumane\-\*(Aq . $self\->humane_version);\*(C'\fR.
.SS "template"
.IX Subsection "template"
The name of the template to be used. This allows the user to supply their own template name if desired.
.SS "theme"
.IX Subsection "theme"
Selects the humane.js theme. This should be chosen from the available themes (see \*(L"all_themes\*(R"). The default is \f(CW\*(C`libnotify\*(C'\fR.
.SH "METHODS"
.IX Header "METHODS"
Mojolicious::Plugin::Humane inherits all methods from
Mojolicious::Plugin and implements the following new ones.
.ie n .SS """all_themes"""
.el .SS "\f(CWall_themes\fP"
.IX Subsection "all_themes"
.Vb 1
\&  $plugin\->all_themes();
.Ve
.PP
Get a list of all the available themes for humane.js.
.ie n .SS """path"""
.el .SS "\f(CWpath\fP"
.IX Subsection "path"
.Vb 1
\&  $plugin\->path($directory);
.Ve
.PP
Find the path to a directory relative to the shared data directory. This isn't likely to be needed.
.ie n .SS """register"""
.el .SS "\f(CWregister\fP"
.IX Subsection "register"
.Vb 1
\&  $plugin\->register($app);
.Ve
.PP
Register plugin in Mojolicious application. Optionally key-value pairs or a hashreference of the same may be passed. Those options are:
.IP "auto" 4
.IX Item "auto"
Set to a true value, the template necessary for humane.js will be automatically added to the \f(CW\*(C`<head>\*(C'\fR tag of the rendered document if needed. Note that this will be skipped if no \f(CW\*(C`<head>\*(C'\fR tag is found or if no messages are waiting to be added. Default is true.
.SH "HELPERS"
.IX Header "HELPERS"
This plugin provides several helpers which are available as methods to the application and controllers and as functions to the templates (and lite apps).
.ie n .SS """humane"""
.el .SS "\f(CWhumane\fP"
.IX Subsection "humane"
.Vb 1
\&  $app\->humane\->theme($newtheme);
.Ve
.PP
Holds the instance of the plugin.
.ie n .SS """humane_stash""/""humane_flash"""
.el .SS "\f(CWhumane_stash\fP/\f(CWhumane_flash\fP"
.IX Subsection "humane_stash/humane_flash"
.Vb 2
\&  $app\->humane_stash(\*(AqWelcome back\*(Aq);
\&  $app\->humane_flash(\*(AqNot authorized\*(Aq);
.Ve
.PP
Take a message or list of messages and adds them to the stack of messages to be rendered during the current or next rendering respectively. Returns an array reference of all the buffered messages in that stack. May be called without argument to get the stack while not adding messages.
.PP
Note that each stack is rendered first-in first-out, however all flashed messages are shown before stashed messages.
.ie n .SS """humane_include"""
.el .SS "\f(CWhumane_include\fP"
.IX Subsection "humane_include"
Behaves like \f(CW\*(C`include\*(C'\fR inserting the template needed to render the messages. You need to use this when setting \f(CW\*(C`auto => 0\*(C'\fR.
.ie n .SS """humane_messages"""
.el .SS "\f(CWhumane_messages\fP"
.IX Subsection "humane_messages"
Returns a list of all the messages to be rendered in this rendering, in order; flashed messages first, then stashed.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Mojolicious, <http://wavded.github.com/humane\-js/>
.SH "SOURCE REPOSITORY"
.IX Header "SOURCE REPOSITORY"
<http://github.com/jberger/Mojolicious\-Plugin\-Humane>
.SH "AUTHOR"
.IX Header "AUTHOR"
Joel Berger, <joel.a.berger@gmail.com>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Mojolicious::Plugin::Humane is
.PP
Copyright (C) 2013 by Joel Berger
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
.PP
humane.js bears the license
.PP
(The \s-1MIT\s0 License)
.PP
Copyright (c) 2011 Marc Harter <wavded@gmail.com>
.PP
See <http://wavded.github.com/humane\-js/> for terms of use.

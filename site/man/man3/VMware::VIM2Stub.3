.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "VMware::VIM2Stub 3"
.TH VMware::VIM2Stub 3 "2020-08-23" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
VMware::VIStub \- Perl binding for VMware Infrastructure API
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  use VMware::VIStub;
\&
\&  # service object
\&  my $vim_service = VimService\->new(\*(Aqhttps://<host>/sdk\*(Aq);
\&
\&  # get service content
\&  my $mo = ManagedObjectReference\->new(type => \*(AqServiceInstance\*(Aq, value => \*(AqServiceInstance\*(Aq);
\&  my $service_content = $vim_service\->RetrieveServiceContent(_this => $mo)\->result;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module provides Perl binding for VMware Infrastructure \s-1API.\s0  It provides type
and operation definitions as specified by the VMware Infrastructure \s-1API.\s0
For detailed documentation, refer to reference guide in \s-1VI SDK\s0 distribution
downloadable at <http://www.vmware.com/download/sdk/>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\s-1VI\s0 Perl Toolkit Guide is available at ./doc/guide.html in module package.
.PP
\&\s-1VI API\s0 Programming guide and reference guide is available for download at
<http://www.vmware.com/download/sdk/>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
The Original Software is licensed under the \s-1CDDL\s0 v. 1.0 only and cannot 
be distributed or otherwise made available under any subsequent version 
of the license.  This License hall be governed by and construed in 
accordance with the laws of the State of California, excluding its 
conflict-of-law provisions.  Any litigation relating to this License 
will be brought solely in the federal court in the Northern District 
of California or the state court in the County of Santa Clara.
.PP
A copy of the \s-1CDDL\s0 license is included in this distribution.
.PP
Copyright (c) 2006, VMware, Inc.  All rights not expressly granted herein 
are reserved.

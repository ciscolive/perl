.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Types::UUID 3"
.TH Types::UUID 3 "2014-09-27" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Types::UUID \- type constraints for UUIDs
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&   package FroobleStick;
\&   
\&   use Moo;
\&   use Types::UUID;
\&   
\&   has identifier => (
\&      is      => \*(Aqlazy\*(Aq,
\&      isa     => Uuid,
\&      coerce  => 1,
\&      builder => Uuid\->generator,
\&   );
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Types::UUID is a type constraint library suitable for use with
Moo/Moose attributes, Kavorka sub signatures, and so forth.
.SS "Type"
.IX Subsection "Type"
Currently the module only provides one type constraint, which is
exported by default.
.ie n .IP """Uuid""" 4
.el .IP "\f(CWUuid\fR" 4
.IX Item "Uuid"
A valid \s-1UUID\s0 string, as judged by the \f(CW\*(C`is_uuid_string()\*(C'\fR function
provided by UUID::Tiny.
.Sp
This constraint has coercions from \f(CW\*(C`Undef\*(C'\fR (generates a new \s-1UUID\s0),
\&\f(CW\*(C`Str\*(C'\fR (fixes slightly broken-looking UUIDs, adding missing dashes;
also accepts base\-64\-encoded UUIDs) and \s-1URI\s0 objects using the
\&\f(CW\*(C`urn:uuid:\*(C'\fR \s-1URI\s0 scheme.
.SS "Methods"
.IX Subsection "Methods"
The \f(CW\*(C`Uuid\*(C'\fR type constraint is actually blessed into a subclass of
Type::Tiny, and provides an aditional method:
.ie n .IP """Uuid\->generate""" 4
.el .IP "\f(CWUuid\->generate\fR" 4
.IX Item "Uuid->generate"
Generates a new \s-1UUID.\s0 \f(CW\*(C`Uuid\->coerce(undef)\*(C'\fR would also work, but
looks a little odd.
.ie n .IP """Uuid\->generator""" 4
.el .IP "\f(CWUuid\->generator\fR" 4
.IX Item "Uuid->generator"
Returns a coderef which generates a new \s-1UUID.\s0 For an example usage, see
the \*(L"\s-1SYNOPSIS\*(R"\s0.
.SH "BUGS"
.IX Header "BUGS"
Please report any bugs to
<http://rt.cpan.org/Dist/Display.html?Queue=Types\-UUID>.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Type::Tiny::Manual, UUID::Tiny.
.SH "AUTHOR"
.IX Header "AUTHOR"
Toby Inkster <tobyink@cpan.org>.
.SH "COPYRIGHT AND LICENCE"
.IX Header "COPYRIGHT AND LICENCE"
This software is copyright (c) 2014 by Toby Inkster.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
.SH "DISCLAIMER OF WARRANTIES"
.IX Header "DISCLAIMER OF WARRANTIES"
\&\s-1THIS PACKAGE IS PROVIDED \*(L"AS IS\*(R" AND WITHOUT ANY EXPRESS OR IMPLIED
WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
MERCHANTIBILITY AND FITNESS FOR A PARTICULAR PURPOSE.\s0

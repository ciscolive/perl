.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "DBIx::Simple::Result::RowObject 3"
.TH DBIx::Simple::Result::RowObject 3 "2010-12-06" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
DBIx::Simple::Result::RowObject \- Simple result row object class
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This class is the default for the \f(CW\*(C`object\*(C'\fR and \f(CW\*(C`objects\*(C'\fR result object
methods. Mainly, it provides syntactic sugar at the expense of performance.
.PP
Instead of writing
.PP
.Vb 2
\&    my $r = $db\->query(\*(AqSELECT foo, bar FROM baz\*(Aq)\->hash;
\&    do_something_with $r\->{foo}, $r\->{bar};
.Ve
.PP
you may write
.PP
.Vb 2
\&    my $r = $db\->query(\*(AqSELECT foo, bar FROM baz\*(Aq)\->object;
\&    do_something_with $r\->foo, $r\->bar;
.Ve
.PP
This class is a subclass of Object::Accessor, which provides per-object (rather
than per-class) accessors. Your records must not have columns names like these:
.PP
.Vb 10
\&    * can
\&    * ls_accessors
\&    * ls_allow
\&    * mk_accessor
\&    * mk_clone
\&    * mk_flush
\&    * mk_verify
\&    * new
\&    * register_callback
\&    * _\|_\|_autoload
\&    * _\|_\|_callback
\&    * _\|_\|_debug
\&    * _\|_\|_error
\&    * _\|_\|_get
\&    * _\|_\|_set
.Ve
.PP
And of course \s-1DESTROY\s0 and \s-1AUTOLOAD,\s0 and anything that new versions of
Object::Accessor might add.
.SH "DBIx::Simple::OO"
.IX Header "DBIx::Simple::OO"
DBIx::Simple::OO is a third party module by Jos Boumans that provided \f(CW\*(C`object\*(C'\fR
and \f(CW\*(C`objects\*(C'\fR to DBIx::Simple. Similar functionality is now built in, in part
inspired by DBIx::Simple:OO.
.PP
Using DBIx::Simple 1.33 or newer together with DBIx::Simple::OO 0.01 will
result in method name clash. DBIx::Simple::Result::RowObject was written to be
compatible with DBIx::Simple::OO::Item, except for the name, so \f(CW\*(C`isa\*(C'\fR calls
still need to be changed.
.PP
In practice, DBIx::Simple 1.33 makes DBIx::Simple::OO obsolete.
.SH "AUTHOR"
.IX Header "AUTHOR"
Juerd Waalboer <juerd@cpan.org> <http://juerd.nl/>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
DBIx::Simple

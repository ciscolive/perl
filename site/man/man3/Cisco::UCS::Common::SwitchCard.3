.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Cisco::UCS::Common::SwitchCard 3"
.TH Cisco::UCS::Common::SwitchCard 3 "2016-05-25" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Cisco::UCS::Common::SwitchCard \- Class for operations with a Cisco UCS 
switch card.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&        print $ucs\->interconnect(A)\->card(1)\->operability;
\&        print $ucs\->interconnect(A)\->card(1)\->serial;
\&
\&        my $switchcard = $ucs\->interconnect(A)\->card(1);
\&
\&        print $switchcard\->num_ports;
\&        print $switchcard\->description;
.Ve
.PP
Cisco::UCS::Common::SwitchCard is a class used to represent a single Ethernet 
port in a Cisco::UCS system.  This class provides functionality to retrieve 
information and statistics for Ethernet ports.
.PP
Please note that you should not need to call the constructor directly as 
Cisco::UCS::Common::SwitchCard objects are created for you by the methods in 
other Cisco::UCS packages like Cisco::UCS::Interconnect.
.PP
Dependent on \s-1UCSM\s0 version, some attributes of the Ethernet port may not be 
provided and hence the accessor methods may return an empty string.
.SH "METHODS"
.IX Header "METHODS"
.SS "description"
.IX Subsection "description"
Returns the vendor description of the switchcard.
.SS "dn"
.IX Subsection "dn"
Returns the distinguished name of the switchcard object in the \s-1UCSM\s0 management 
information model.
.ie n .SS "eth_port ( $id )"
.el .SS "eth_port ( \f(CW$id\fP )"
.IX Subsection "eth_port ( $id )"
Returns a Cisco::UCS::Common::EthernetPort object representing the requested 
Ethernet port (given by the value of \f(CW$id\fR) on the switchcard.
.PP
Note that this is a caching method and a previously retrieved Ethernet port 
object will be returned if present.  Should you require a fresh object, use 
the \fBget_eth_port\fR method described below.
.ie n .SS "get_eth_port ( $id )"
.el .SS "get_eth_port ( \f(CW$id\fP )"
.IX Subsection "get_eth_port ( $id )"
Returns a Cisco::UCS::Common::EthernetPort object representing the requested 
Ethernet port (given by the value of \f(CW$id\fR) on the switchcard.
.PP
Note that this is a non-caching method and the \s-1UCSM\s0 will always be queried 
when this method is invoked. Subsequently, this method may be more expensive 
than the caching method \fBeth_port\fR described above.
.SS "get_eth_ports"
.IX Subsection "get_eth_ports"
Returns an array of Cisco::UCS::Common::EthernetPort objects representing all 
Etehrnet ports present on the specified card.
.SS "id"
.IX Subsection "id"
Returns the numerical identifier of the switchcard within the fabric 
interconnect.
.SS "model"
.IX Subsection "model"
Returns the model identifier of the switchcard.
.SS "num_ports"
.IX Subsection "num_ports"
Returns the number of ports present on the switchcard.
.SS "operability"
.IX Subsection "operability"
Returns the operability status of the switchcard.
.SS "performance"
.IX Subsection "performance"
Returns the performance status of teh switchcard.
.SS "power"
.IX Subsection "power"
Returns the power status of the switchcard.
.SS "presence"
.IX Subsection "presence"
Returns the presence status of the switchcard.
.SS "revision"
.IX Subsection "revision"
Returns the hardware revision number of the switchcard.
.SS "serial"
.IX Subsection "serial"
Returns the serial number of the switchcard.
.SS "state"
.IX Subsection "state"
Returns the operational state of the switchcard.
.SS "slot"
.IX Subsection "slot"
returns the slot number of the switchcard.
.SS "thermal"
.IX Subsection "thermal"
Returns the thermal status of the switchcard.
.SS "vendor"
.IX Subsection "vendor"
Returns the vendor identification string of the switchcard.
.SS "voltage"
.IX Subsection "voltage"
Returns the voltage status of the siwtchcard.
.SH "AUTHOR"
.IX Header "AUTHOR"
Luke Poskitt, \f(CW\*(C`<ltp at cpan.org>\*(C'\fR
.SH "BUGS"
.IX Header "BUGS"
Please report any bugs or feature requests to 
\&\f(CW\*(C`bug\-cisco\-ucs\-common\-switchcard at rt.cpan.org\*(C'\fR, or through the web 
interface at 
<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=Cisco\-UCS\-Common\-SwitchCard>.  
I will be notified, and then you'll automatically be notified of progress on 
your bug as I make changes.
.SH "SUPPORT"
.IX Header "SUPPORT"
You can find documentation for this module with the perldoc command.
.PP
.Vb 1
\&    perldoc Cisco::UCS::Common::SwitchCard
.Ve
.PP
You can also look for information at:
.IP "\(bu" 4
\&\s-1RT: CPAN\s0's request tracker
.Sp
<http://rt.cpan.org/NoAuth/Bugs.html?Dist=Cisco\-UCS\-Common\-SwitchCard>
.IP "\(bu" 4
AnnoCPAN: Annotated \s-1CPAN\s0 documentation
.Sp
<http://annocpan.org/dist/Cisco\-UCS\-Common\-SwitchCard>
.IP "\(bu" 4
\&\s-1CPAN\s0 Ratings
.Sp
<http://cpanratings.perl.org/d/Cisco\-UCS\-Common\-SwitchCard>
.IP "\(bu" 4
Search \s-1CPAN\s0
.Sp
<http://search.cpan.org/dist/Cisco\-UCS\-Common\-SwitchCard/>
.SH "LICENSE AND COPYRIGHT"
.IX Header "LICENSE AND COPYRIGHT"
Copyright 2012 Luke Poskitt.
.PP
This program is free software; you can redistribute it and/or modify it
under the terms of either: the \s-1GNU\s0 General Public License as published
by the Free Software Foundation; or the Artistic License.
.PP
See http://dev.perl.org/licenses/ for more information.

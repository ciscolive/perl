.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Cisco::UCS::Common::FanModule 3"
.TH Cisco::UCS::Common::FanModule 3 "2016-05-25" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Cisco::UCS::Common::FanModule \- Class for operations with a Cisco UCS Fan 
Module.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&  print "Fan module " . $ucs\->chassis(1)\->fan_module(1)\->id .
\&        " thermal: " . $ucs\->chassis(1)\->fan_module(1)\->thermal . "\en";
\&
\&  my @fans = $ucs\->chassis(1)\->fan_module(1)\->get_fans;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Cisco::UCS::Common::FanModule is a class providing operations with a Cisco \s-1UCS\s0 
Fan Module.
.PP
Note that you are not supposed to call the constructor yourself, rather a 
Cisco::UCS::Common::FanModule is created automatically via method calls to a 
Cisco::UCS::Chassis object like \fIfan_module\fR.
.SH "METHODS"
.IX Header "METHODS"
\fIfan ($id)\fR
.IX Subsection "fan ($id)"
.PP
.Vb 1
\&  my $fan = $ucs\->chassis(1)\->fan_module(1)\->fan(2);
.Ve
.PP
Returns a Cisco::UCS::Common::Fan object for the specified fan module 
identified by the provided fan \s-1ID.\s0
.PP
Note that the default behaviour for this method is to return a cached object 
retrieved by a previous lookup if one is available.  Please see the 
\&\fBCaching Methods\fR section in \fB\s-1NOTES\s0\fR for further information.
.PP
\fIget_fan ($id)\fR
.IX Subsection "get_fan ($id)"
.PP
.Vb 1
\&  my $fan = $ucs\->chassis(2)\->fan_module(1)\->get_fan(1);
.Ve
.PP
Returns a Cisco::UCS::Common::Fan object identified by the given fan \s-1ID.\s0
.PP
This method always queries the \s-1UCSM\s0 for information on the specified fan \- 
contrast this with the behaviour of the analogous caching method \fI\f(BIfan()\fI\fR.
.PP
\fIget_fans\fR
.IX Subsection "get_fans"
.PP
.Vb 1
\&  my @fans = $ucs\->get_chassis(2)\->fan_module(1)\->get_fans;
.Ve
.PP
Returns an array of Cisco::UCS::Common::Fan objects.  This is a non-caching 
method.
.PP
\fIdn\fR
.IX Subsection "dn"
.PP
Returns the distinguished name of the Cisco::UCS::Common::FanModule in the 
Cisco \s-1UCS\s0 management hierarchy.
.PP
\fIid\fR
.IX Subsection "id"
.PP
Returns the numerical \s-1ID\s0 of the fan module.
.PP
\fImodel\fR
.IX Subsection "model"
.PP
Returns the model number of the fan module.
.PP
\fIoperability\fR
.IX Subsection "operability"
.PP
Returns the operability status of the fan module.
.PP
\fIoper_state\fR
.IX Subsection "oper_state"
.PP
Returns the operational state of the fan module.
.PP
\fIperformance\fR
.IX Subsection "performance"
.PP
Returns the performance status of the fan module.
.PP
\fIpower\fR
.IX Subsection "power"
.PP
Returns the power status of the fan module.
.PP
\fIpresence\fR
.IX Subsection "presence"
.PP
Returns the presence status of the fan module.
.PP
\fIrevision\fR
.IX Subsection "revision"
.PP
Returns the revision number of the fan module object.
.PP
\fIserial\fR
.IX Subsection "serial"
.PP
Returns the serial number of the fan module.
.PP
\fIthermal\fR
.IX Subsection "thermal"
.PP
Returns the thermal status of the fan module.
.PP
\fItray\fR
.IX Subsection "tray"
.PP
Returns the tray identifier in which the fan module is installed.
.PP
\fIvendor\fR
.IX Subsection "vendor"
.PP
Returns the vendor information for the fan module.
.PP
\fIvoltage\fR
.IX Subsection "voltage"
.PP
Returns the voltage status of the fan module.
.SH "AUTHOR"
.IX Header "AUTHOR"
Luke Poskitt, \f(CW\*(C`<ltp at cpan.org>\*(C'\fR
.SH "BUGS"
.IX Header "BUGS"
Please report any bugs or feature requests to 
\&\f(CW\*(C`bug\-cisco\-ucs\-common\-fanmodule at rt.cpan.org\*(C'\fR, or through the web interface 
at <http://rt.cpan.org/NoAuth/ReportBug.html?Queue=Cisco\-UCS\-Chassis\-FanModule>.  
I will be notified, and then you'll automatically be notified of progress on 
your bug as I make changes.
.SH "SUPPORT"
.IX Header "SUPPORT"
You can find documentation for this module with the perldoc command.
.PP
.Vb 1
\&    perldoc Cisco::UCS::Chassis::FanModule
.Ve
.PP
You can also look for information at:
.IP "\(bu" 4
\&\s-1RT: CPAN\s0's request tracker
.Sp
<http://rt.cpan.org/NoAuth/Bugs.html?Dist=Cisco\-UCS\-Chassis\-FanModule>
.IP "\(bu" 4
AnnoCPAN: Annotated \s-1CPAN\s0 documentation
.Sp
<http://annocpan.org/dist/Cisco\-UCS\-Chassis\-FanModule>
.IP "\(bu" 4
\&\s-1CPAN\s0 Ratings
.Sp
<http://cpanratings.perl.org/d/Cisco\-UCS\-Chassis\-FanModule>
.IP "\(bu" 4
Search \s-1CPAN\s0
.Sp
<http://search.cpan.org/dist/Cisco\-UCS\-Chassis\-FanModule/>
.SH "LICENSE AND COPYRIGHT"
.IX Header "LICENSE AND COPYRIGHT"
Copyright 2012 Luke Poskitt.
.PP
This program is free software; you can redistribute it and/or modify it
under the terms of either: the \s-1GNU\s0 General Public License as published
by the Free Software Foundation; or the Artistic License.
.PP
See http://dev.perl.org/licenses/ for more information.

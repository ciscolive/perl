.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Infoblox::Grid::BFD::Template 3"
.TH Infoblox::Grid::BFD::Template 3 "2018-06-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Infoblox::Grid::BFD::Template \- a Bidirectional Forwarding Detection (BFD) template object.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The \s-1BFD\s0 template is used to configure advanced \s-1BFD\s0 settings such as time intervals, authentication setting.
.SH "CONSTRUCTOR"
.IX Header "CONSTRUCTOR"
.Vb 10
\& my $bfd_template = Infoblox::Grid::BFD::Template\->new(
\&     name                  => $string,                            #Required
\&     authentication_type   => \*(AqNONE\*(Aq | \*(AqMD5\*(Aq | \*(AqMETICULOUS\-MD5\*(Aq |
\&                              \*(AqSHA1\*(Aq | \*(AqMETICULOUS\-SHA1\*(Aq,         #Optional / Default is \*(AqNONE\*(Aq
\&     authentication_key    => $string,                            #Optional / Default is undefined
\&     authentication_key_id => $string,                            #Optional / Default is undefined
\&     detection_multiplier  => $uint,                              #Optional / Default is 3
\&     min_rx_interval       => $uint,                              #Optional / Default is 100
\&     min_tx_interval       => $uint,                              #Optional / Default is 100
\& );
.Ve
.SH "SESSION METHODS"
.IX Header "SESSION METHODS"
This section describes all the methods in an Infoblox::Session module that you can apply to a \s-1BFD\s0 template object.
.SS "Infoblox::Session\->add( )"
.IX Subsection "Infoblox::Session->add( )"
.RS 4
Use this method to add the object to the Infoblox appliance.
See Infoblox::Session\->\fBadd()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 7
\& #Construct an object
\& my $object = Infoblox::Grid::BFD::Template\->new(
\&     name                  => \*(Aqbfd_template1\*(Aq,
\&     authentication_type   => \*(AqMD5\*(Aq,
\&     authentication_key    => \*(Aqsecret\*(Aq,
\&     authentication_key_id => 42,
\& );
\&
\& #Submit for addition
\& my $response = $session\->add($object);
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->get( )"
.IX Subsection "Infoblox::Session->get( )"
.RS 4
Use this method to retrieve all the matching objects from the Infoblox appliance.
See Infoblox::Session\->\fBget()\fR for parameters and return values.
.IP "\fBKey References\fR" 4
.IX Item "Key References"
.Vb 1
\& Apply the following attributes to get a specific BFD template object:
\&
\&  name \- Optional. The BFD template name in string format.
.Ve
.IP "\fBExamples\fR" 4
.IX Item "Examples"
.Vb 4
\& my @retrieved_objs = $session\->get(
\&     object => \*(AqInfoblox::Grid::BFD::Template\*(Aq,
\&     name   => \*(Aqbfd_template1\*(Aq,
\& );
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->modify( )"
.IX Subsection "Infoblox::Session->modify( )"
.RS 4
Use this method to modify the object in the Infoblox appliance.
See Infoblox::Session\->\fBmodify()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Modify min_rx value
\& $object\->min_rx_interval(100);
\&
\& #Submit modification
\& my $response = $session\->modify($object);
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->remove( )"
.IX Subsection "Infoblox::Session->remove( )"
.RS 4
Use this method to remove the object from the Infoblox appliance. See Infoblox::Session\->\fBremove()\fR for parameters and return values.
.Sp
To remove a specific object, first use \fBget()\fR or \fBsearch()\fR to retrieve the specific \s-1DHCP\s0 range object, and then submit this object for removal.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 5
\& #Get the objects
\& my @retrieved_objs = $session\->get(
\&     object => \*(AqInfoblox::Grid::BFD::Template\*(Aq,
\&     name   => \*(Aqbfd_template1\*(Aq,
\& );
\&
\& #Find the desired object from the retrieved list
\& my $desired_object = $retrieved_objs[0];
\&
\& #Submit for removal
\& my $response = $session\->remove($desired_object);
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->search( )"
.IX Subsection "Infoblox::Session->search( )"
.RS 4
Use this method to search for objects in the Infoblox appliance.
See Infoblox::Session\->\fBsearch()\fR for parameters and return values.
.IP "\fBKey References\fR" 4
.IX Item "Key References"
.Vb 1
\& Apply the following attributes to search for the BFD template object:
\&
\&  name \- Optional. The BFD template name in string format (regexp).
.Ve
.IP "\fBExamples\fR" 4
.IX Item "Examples"
.Vb 5
\& # search for objects
\& my @retrieved_objs = $session\->search(
\&     object => \*(AqInfoblox::Grid::BFD::Template\*(Aq,
\&     name   => \*(Aq.*template\*(Aq,
\&);
.Ve
.RE
.RS 4
.RE
.SH "METHODS"
.IX Header "METHODS"
This section describes all the methods that you can use to configure and retrieve the attribute values of a \s-1BFD\s0 template object.
.SS "authentication_key( )"
.IX Subsection "authentication_key( )"
.RS 4
Use this method to set or retrieve the authentication key for \s-1BFD\s0 protocol message-digest authentication. This is a write-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is a authentication key in a string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Modify authentication_key value
\& $object\->authentication_key(\*(Aqsecret\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "authentication_key_id( )"
.IX Subsection "authentication_key_id( )"
.RS 4
Use this method to set or retrieve the authentication key identifier for \s-1BFD\s0 protocol authentication.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an unsigned integer between 1 and 255. The default is 1.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get authentication_key_id value
\& my $authentication_key_id = $object\->authentication_key_id();
\&
\& #Modify authentication_key_id value
\& $object\->authentication_key_id(200);
.Ve
.RE
.RS 4
.RE
.SS "authentication_type( )"
.IX Subsection "authentication_type( )"
.RS 4
Use this method to set or retrieve the authentication type for \s-1BFD\s0 protocol.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid values are '\s-1NONE\s0', '\s-1MD5\s0', '\s-1METICULOUS\-MD5\s0', '\s-1SHA1\s0', and '\s-1METICULOUS\-SHA1\s0'. The default value is '\s-1NONE\s0'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get authentication_type value
\& my $authentication_type = $object\->authentication_type();
\&
\& #Modify authentication_type value
\& $object\->authentication_type(\*(AqSHA1\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "detection_multiplier( )"
.IX Subsection "detection_multiplier( )"
.RS 4
Use this method to set or retrieve the detection time multiplier value for \s-1BFD\s0 protocol.
.Sp
The negotiated transmit interval, multiplied by this value, provides the detection time for the receiving system in asynchronous \s-1BFD\s0 mode.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an unsigned integer between 3 and 50. The default is 3.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get detection_multiplier value
\& my $detection_multiplier = $object\->detection_multiplier();
\&
\& #Modify detection_multiplier value
\& $object\->detection_multiplier(20);
.Ve
.RE
.RS 4
.RE
.SS "is_default( )"
.IX Subsection "is_default( )"
.RS 4
Use this method to retrieve the flag that indicates whether the \s-1BFD\s0 template is a Grid default or not. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get is_default value
\& my $is_default = $object\->is_default();
.Ve
.RE
.RS 4
.RE
.SS "name( )"
.IX Subsection "name( )"
.RS 4
Use this method to set or retrieve the \s-1BFD\s0 template name.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is a \s-1BFD\s0 template name in a string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get name value
\& my $name = $object\->name();
\&
\& #Modify name value
\& $object\->name(\*(Aqtemplate1\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "min_rx_interval( )"
.IX Subsection "min_rx_interval( )"
.RS 4
Use this method to set or retrieve the minimum receive time (in seconds) for \s-1BFD\s0 protocol.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an unsigned integer between 50 and 9999. The default is 100.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get min_rx_interval value
\& my $min_rx_interval = $object\->min_rx_interval();
\&
\& #Modify min_rx_interval value
\& $object\->min_rx_interval(200);
.Ve
.RE
.RS 4
.RE
.SS "min_tx_interval( )"
.IX Subsection "min_tx_interval( )"
.RS 4
Use this method to set or retrieve the minimum transmission time (in seconds) for \s-1BFD\s0 protocol.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an unsigned integer between 50 and 9999. The default is 100.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get min_tx_interval value
\& my $min_tx_interval = $object\->min_tx_interval();
\&
\& #Modify min_tx_interval value
\& $object\->min_tx_interval(200);
.Ve
.RE
.RS 4
.RE
.SH "AUTHOR"
.IX Header "AUTHOR"
Infoblox Inc. <http://www.infoblox.com/>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Infoblox::Session,
Infoblox::Session\->\fBadd()\fR,
Infoblox::Session\->\fBget()\fR,
Infoblox::Session\->\fBmodify()\fR,
Infoblox::Session\->\fBremove()\fR,
Infoblox::Session\->\fBsearch()\fR,
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2017 Infoblox Inc.

.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "File::Slurp::WithinPolicy 3"
.TH File::Slurp::WithinPolicy 3 "2005-06-15" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
File::Slurp::WithinPolicy \- Applies filesystem policies to File::Slurp
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  use File::Slurp::WithinPolicy qw(:all);
\&
\&  my $text = read_file( \*(Aqfilename\*(Aq );
\&  my @lines = read_file( \*(Aqfilename\*(Aq );
\&  write_file( \*(Aqfilename\*(Aq, $text );
\&  append_file( \*(Aqfilename\*(Aq, $more_text );
\&  overwrite_file( \*(Aqfilename\*(Aq, $text );
\&  my @files = read_dir( \*(Aq/path/to/dir\*(Aq );
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This provides the File::Slurp interface within a policy defined by File::Policy.
By default, File::Policy is a no-op and this behaves identically to File::Slurp.
System administrators may want to override the default File::Policy implementation to enforce a local filesystem policy
(see File::Policy).
.SH "FUNCTIONS"
.IX Header "FUNCTIONS"
.SS "read_dir"
.IX Subsection "read_dir"
See \*(L"read_dir\*(R" in File::Slurp
.SS "read_file"
.IX Subsection "read_file"
See \*(L"read_file\*(R" in File::Slurp
.SS "write_file"
.IX Subsection "write_file"
See \*(L"write_file\*(R" in File::Slurp
.SS "append_file"
.IX Subsection "append_file"
See \*(L"append_file\*(R" in File::Slurp
.SS "overwrite_file"
.IX Subsection "overwrite_file"
See \*(L"overwrite_file\*(R" in File::Slurp
.SH "EXPORTS"
.IX Header "EXPORTS"
By default, nothing is exported.
The \f(CW\*(C`:all\*(C'\fR tag can be used to export everything.
Individual methods can also be exported.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
File::Slurp, File::Policy
.SH "VERSION"
.IX Header "VERSION"
\&\f(CW$Revision:\fR 1.4 $ on \f(CW$Date:\fR 2005/06/15 10:40:21 $ by \f(CW$Author:\fR simonf $
.SH "AUTHOR"
.IX Header "AUTHOR"
John Alden <cpan _at_ bbc _dot_ co _dot_ uk>
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
(c) \s-1BBC 2005.\s0 This program is free software; you can redistribute it and/or modify it under the \s-1GNU GPL.\s0
.PP
See the file \s-1COPYING\s0 in this distribution, or http://www.gnu.org/licenses/gpl.txt

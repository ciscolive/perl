.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.41)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Filter::Crypto::Decrypt 3"
.TH Filter::Crypto::Decrypt 3 "2018-07-31" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Filter::Crypto::Decrypt \- Perl source code filter to run encrypted Perl files
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    use Filter::Crypto::Decrypt;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module provides a Perl source code decryption filter for running files that
have been encrypted via the
Filter::Crypto::CryptFile module.
.PP
You should rarely, if ever, need to touch this module.  The encrypted files
produced by the Filter::Crypto::CryptFile module
will automatically have the "\f(CW\*(C`use Filter::Crypto::Decrypt;\*(C'\fR" statement added to
the start of them, which is all that is required to bring this decryption filter
into play.  See perlfilter if you want to know more about how Perl source
code filters work.
.SH "DIAGNOSTICS"
.IX Header "DIAGNOSTICS"
.SS "Warnings and Error Messages"
.IX Subsection "Warnings and Error Messages"
This module may produce the following diagnostic messages.  They are classified
as follows (a la perldiag):
.PP
.Vb 3
\&    (W) A warning (optional).
\&    (F) A fatal error (trappable).
\&    (I) An internal error that you should never see (trappable).
.Ve
.IP "Can't add \s-1MAGIC\s0 to decryption filter's \s-1SV\s0" 4
.IX Item "Can't add MAGIC to decryption filter's SV"
(F) The \s-1SV\s0 used by the source code decryption filter to maintain state could not
be assigned \s-1MAGIC\s0 to have it automatically free up allocated memory when it is
destroyed.
.ie n .IP "Can't complete decryption: %s" 4
.el .IP "Can't complete decryption: \f(CW%s\fR" 4
.IX Item "Can't complete decryption: %s"
(F) There was an error producing the final block of decrypted data.  The cipher
context structure used to perform the source code decryption could not be
finalized so the decryption could not be completed.  The last error message from
the decryption code is also given.
.ie n .IP "Can't continue decryption: %s" 4
.el .IP "Can't continue decryption: \f(CW%s\fR" 4
.IX Item "Can't continue decryption: %s"
(F) There was an error reading or decrypting a block of data from the encrypted
Perl file.  The cipher context structure used to perform the source code
decryption could not be updated so the decryption could not continue.  The last
error message from the decryption code is also given.
.IP "Can't find \s-1MAGIC\s0 in decryption filter's \s-1SV\s0" 4
.IX Item "Can't find MAGIC in decryption filter's SV"
(F) The \s-1MAGIC\s0 assigned to the \s-1SV\s0 used by the source code decryption filter to
maintain state could not be found.
.IP "Can't run with \s-1DEBUGGING\s0 flags" 4
.IX Item "Can't run with DEBUGGING flags"
(F) The encrypted Perl file is being run by a perl with \s-1DEBUGGING\s0 flags enabled,
e.g. \f(CW\*(C`perl \-Dp \f(CIfile\f(CW\*(C'\fR.  This is not allowed since it may assist in retrieving
the original unencrypted source code.
.IP "Can't run with \s-1DEBUGGING\s0 perl" 4
.IX Item "Can't run with DEBUGGING perl"
(F) The encrypted Perl file is being run by a perl that was built with \s-1DEBUGGING\s0
enabled, i.e. \f(CW\*(C`\-DDEBUGGING\*(C'\fR.  This is not allowed since it may assist in
retrieving the original unencrypted source code.
.IP "Can't run with extra filters" 4
.IX Item "Can't run with extra filters"
(F) The encrypted Perl file is being run through extra source code filters (i.e.
over and above the decryption filter provided by this module).  This is not
allowed since it may assist in retrieving the original unencrypted source code.
.IP "Can't run with Perl compiler backend" 4
.IX Item "Can't run with Perl compiler backend"
(F) The encrypted Perl file is being run by a perl with the Perl compiler
backend enabled, e.g. \f(CW\*(C`perl \-MO=Deparse \f(CIfile\f(CW\*(C'\fR.  This is not allowed since it
may assist in retrieving the original unencrypted source code.
.IP "Can't run with Perl debugger" 4
.IX Item "Can't run with Perl debugger"
(F) The encrypted Perl file is being run by a perl with the Perl debugger
enabled, e.g. \f(CW\*(C`perl \-d:ptkdb \f(CIfile\f(CW\*(C'\fR.  This is not allowed since it may assist
in retrieving the original unencrypted source code.
.ie n .IP "Can't start decryption: %s" 4
.el .IP "Can't start decryption: \f(CW%s\fR" 4
.IX Item "Can't start decryption: %s"
(F) The cipher context structure used to perform the source code decryption
could not be initialized so the decryption could not be started.  The last error
message from the decryption code is also given.
.IP "Found wrong \s-1MAGIC\s0 in decryption filter's \s-1SV:\s0 No valid mg_ptr" 4
.IX Item "Found wrong MAGIC in decryption filter's SV: No valid mg_ptr"
(F) The \s-1MAGIC\s0 found in the \s-1SV\s0 used by the source code decryption filter to
maintain state was not the correct \s-1MAGIC\s0 since it did not contain a valid
\&\f(CW\*(C`mg_ptr\*(C'\fR member.
.ie n .IP "Found wrong \s-1MAGIC\s0 in decryption filter's \s-1SV:\s0 Wrong mg_ptr ""signature""" 4
.el .IP "Found wrong \s-1MAGIC\s0 in decryption filter's \s-1SV:\s0 Wrong mg_ptr ``signature''" 4
.IX Item "Found wrong MAGIC in decryption filter's SV: Wrong mg_ptr signature"
(F) The \s-1MAGIC\s0 found in the \s-1SV\s0 used by the source code decryption filter to
maintain state was not the correct \s-1MAGIC\s0 since it did not contain the correct
\&\*(L"signature\*(R" in its \f(CW\*(C`mg_ptr\*(C'\fR member.
.IP "No such package '%s'" 4
.IX Item "No such package '%s'"
(F) This module's bootstrap function was called on the specified package, which
does not exist.
.IP "Unknown crypto context mode '%d'" 4
.IX Item "Unknown crypto context mode '%d'"
(I) The crypto context structure used internally when performing decryption has
been set-up with a crypt mode that it does not recognize.
.SH "EXPORTS"
.IX Header "EXPORTS"
\&\fINone\fR.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Filter::Crypto;
.PP
Filter::CBC, Crypt::License.
.PP
The latter two modules (in separate \s-1CPAN\s0 distributions, not related to the
Filter-Crypto distribution in any way) are both Perl-level source code filters
and are thus even less secure than this module is.  (This module's filter code
is written in \s-1XS\s0 and C.)
.SH "ACKNOWLEDGEMENTS"
.IX Header "ACKNOWLEDGEMENTS"
Much of the \s-1XS\s0 code is based on that in the Filter::decrypt module (version
1.49), written by Paul Marquess.
.PP
Thanks to Nick Ing-Simmons for help in getting the \s-1MAGIC\s0 attached to the
decryption filter's \s-1SV\s0 working.
.SH "AUTHOR"
.IX Header "AUTHOR"
Steve Hay <shay@cpan.org <mailto:shay@cpan.org>>.
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2004\-2009, 2012\-2014 Steve Hay.  All rights reserved.
.SH "LICENCE"
.IX Header "LICENCE"
This module is free software; you can redistribute it and/or modify it under the
same terms as Perl itself, i.e. under the terms of either the \s-1GNU\s0 General Public
License or the Artistic License, as specified in the \fI\s-1LICENCE\s0\fR file.
.SH "VERSION"
.IX Header "VERSION"
Version 2.08
.SH "DATE"
.IX Header "DATE"
31 Jul 2018
.SH "HISTORY"
.IX Header "HISTORY"
See the \fIChanges\fR file.

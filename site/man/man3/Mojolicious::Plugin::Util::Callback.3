.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Mojolicious::Plugin::Util::Callback 3"
.TH Mojolicious::Plugin::Util::Callback 3 "2018-11-01" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mojolicious::Plugin::Util::Callback \- Reverse Helpers for Mojolicious
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&  # Mojolicious
\&  $app\->plugin(\*(AqUtil::Callback\*(Aq);
\&
\&  # Mojolicious::Lite
\&  plugin \*(AqUtil::Callback\*(Aq;
\&
\&  # In app or plugin
\&  $self\->callback(get_cached_profile => sub {
\&    my ($c, $name) = @_;
\&    return $c\->cache\->get( $name );
\&  });
\&
\&  # In plugin or controller
\&  my $profile = $self\->callback(
\&    get_cached_profile => \*(AqAkron\*(Aq
\&  );
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Callbacks are similar to helpers, with slightly
different semantics.
While helpers are usually established by plugins
and called by controllers, callbacks are
usually called by plugins and established
by other plugins or inside the main application.
.PP
A typical usecase for callbacks is the database
agnostic access to data via plugins.
.SH "HELPERS"
.IX Header "HELPERS"
.SS "callback"
.IX Subsection "callback"
.Vb 4
\&  # Call a callback
\&  my $profile = $self\->callback(
\&    get_cached_profile => \*(AqAkron\*(Aq
\&  );
\&
\&  # Establish a single callback
\&  $self\->callback(get_cached_profile => sub {
\&    my ($c, $name) = @_;
\&    return $c\->cache\->get( $name );
\&  });
.Ve
.PP
Establish or release a callback.
To release a callback, just pass the unique name of the
callback and all necessary parameters to the helper.
To establish a callback, pass the unique name of the
callback and a code reference to the helper.
This code reference will be invoked each time the
callback is released, and all parameters will be passed,
prepended by the controller object.
.PP
An additional \f(CW\*(C`\-once\*(C'\fR flag when establishing single or
multiple callbacks (see the example below) indicates,
that the callbacks are not allowed to be redefined later.
.PP
If there is no callback defined for a certain name,
\&\f(CW\*(C`undef\*(C'\fR is returned on releasing.
.PP
To establish multiple callbacks, e.g. at the start of the
registration routine of a plugin, pass an array reference
of callback names followed by a hash reference containing
the callbacks to the helper. All callback references will
be deleted from the hash, while the rest will stay intact.
.PP
.Vb 3
\&  # Inside \*(AqMyUserPlugin\*(Aq
\&  sub register {
\&    my ($self, $app, $param) = @_;
\&
\&    # Establish Util::Callback plugin
\&    $app\->plugin(\*(AqUtil::Callback\*(Aq);
\&
\&    # Accept callbacks defined by parameter
\&    $app\->callback(
\&      [\*(Aqget_cached_profile\*(Aq,\*(Aqget_db_profile\*(Aq] => $param, \-once
\&    );
\&
\&    # Establish database agnostic \*(Aqfetch_profile\*(Aq helper
\&    $app\->helper(
\&      fetch_profile => sub {
\&        my $c = shift;
\&        my $user_name = shift;
\&
\&        # Return profile from cache or from db, if cache fails,
\&        #   either because no cache callback is established or
\&        #   the user is not in cache.
\&        return
\&          $c\->callback(get_cache_profile => $user_name) ||
\&          $c\->callback(get_db_profile => $user_name);
\&      }
\&    );
\&  };
\&
\&  # In a Mojolicious::Lite app
\&  plugin MyUserPlugin => {
\&    get_db_profile => sub {
\&      my ($c, $name) = @_;
\&      return $c\->db\->load( $name );
\&    }
\&  };
\&
\&  # In another plugin (e.g. for caching) or later in the application
\&  $app\->callback(
\&    get_cached_profile => sub {
\&      my ($c, $name) = @_;
\&      return $c\->cache\->get( $name );
\&    }
\&  );
\&
\&  # In controller, app or template
\&  my $profile = $c\->fetch_profile(\*(AqAkron\*(Aq);
.Ve
.PP
If the callback to be defined by parameters is given the \f(CW\*(C`\-once\*(C'\fR
flag, this will be saved as a signature. The next established
callback can't be overwritten, no matter if it is established
without a \f(CW\*(C`\-once\*(C'\fR flag.
.SH "DEPENDENCIES"
.IX Header "DEPENDENCIES"
Mojolicious (best with \s-1SSL\s0 support).
.SH "AVAILABILITY"
.IX Header "AVAILABILITY"
.Vb 1
\&  https://github.com/Akron/Mojolicious\-Plugin\-Util\-Callback
.Ve
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright (C) 2013\-2018, Nils Diewald <http://nils-diewald.de/>.
.PP
This program is free software, you can redistribute it
and/or modify it under the terms of the Artistic License version 2.0.

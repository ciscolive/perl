.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Excel::Template::Container::Worksheet 3"
.TH Excel::Template::Container::Worksheet 3 "2010-06-17" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Excel::Template::Container::Worksheet \- Excel::Template::Container::Worksheet
.SH "PURPOSE"
.IX Header "PURPOSE"
To provide a new worksheet.
.SH "NODE NAME"
.IX Header "NODE NAME"
\&\s-1WORKSHEET\s0
.SH "INHERITANCE"
.IX Header "INHERITANCE"
Excel::Template::Container
.SH "ATTRIBUTES"
.IX Header "ATTRIBUTES"
.IP "\(bu" 4
\&\s-1NAME\s0
.Sp
This is the name of the worksheet to be added.
.IP "\(bu" 4
\&\s-1PROTECT\s0
.Sp
If the attribute exists, it will mark the worksheet as being protected. Whatever
value is set will be used as the password.
.Sp
This activates the \s-1HIDDEN\s0 and \s-1LOCKED\s0 nodes.
.IP "\(bu" 4
\&\s-1KEEP_LEADING_ZEROS\s0
.Sp
This will change the behavior of the worksheet to preserve leading zeros.
.IP "\(bu" 4
\&\s-1HIDE_GRIDLINE\s0
.Sp
his method is used to hide the gridlines on the screen and printed page. 
Gridlines are the lines that divide the cells on a worksheet. Screen and printed gridlines are 
turned on by default in an Excel worksheet. If you have defined your own cell 
borders you may wish to hide the default gridlines.
.Sp
\&\f(CW$worksheet\fR\->\fBhide_gridlines()\fR;
.Sp
The following values of \f(CW$option\fR are valid:
.Sp
.Vb 3
\&    0 : Don\*(Aqt hide gridlines
\&    1 : Hide printed gridlines only
\&    2 : Hide screen and printed gridlines
.Ve
.Sp
If you don't supply an argument or use undef the default option is 1, i.e. only the printed gridlines are hidden.
.IP "\(bu" 4
\&\s-1LANDSCAPE\s0
.Sp
This will set the worksheet's orientation to landscape.
.IP "\(bu" 4
\&\s-1PORTRAIT\s0
.Sp
This will set the worksheet's orientation to portrait.
.Sp
While this is the default, it's useful to override the default at times. For
example, in the following situation:
.Sp
.Vb 11
\&  <workbook landscape="1">
\&    <worksheet>
\&      ...
\&    </worksheet
\&    <worksheet portrait="1">
\&      ...
\&    </worksheet
\&    <worksheet>
\&      ...
\&    </worksheet
\&  </workbook>
.Ve
.Sp
In that example, the first and third worksheets will be landscape (inheriting
it from the workbook node), but the second worksheet will be portrait.
.IP "\(bu" 4
\&\s-1AUTOFILTER\s0
.Sp
With these attribute, you can add the autofilter to a worksheet. An autofilter is a
way of adding drop down lists to the headers of a 2D range of worksheet data. 
This is turn allow users to filter the data based on simple criteria so that 
some data is shown and some is hidden.
.Sp
Example to add an autofilter to a worksheet:
    <workbook>
      <worksheet autofilter='A1:D11' />
      <worksheet autofilter='0, 0, 10, 3' />
    </workbook>
.SH "CHILDREN"
.IX Header "CHILDREN"
None
.SH "EFFECTS"
.IX Header "EFFECTS"
None
.SH "DEPENDENCIES"
.IX Header "DEPENDENCIES"
None
.SH "USAGE"
.IX Header "USAGE"
.Vb 3
\&  <worksheet name="My Taxes">
\&    ... Children here
\&  </worksheet>
.Ve
.PP
In the above example, the children will be executed in the context of the
\&\*(L"My Taxes\*(R" worksheet.
.SH "AUTHOR"
.IX Header "AUTHOR"
Rob Kinyon (rob.kinyon@gmail.com)
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\s-1ROW, CELL, FORMULA\s0

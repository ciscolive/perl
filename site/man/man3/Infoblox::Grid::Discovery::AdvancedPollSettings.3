.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Infoblox::Grid::Discovery::AdvancedPollSettings 3"
.TH Infoblox::Grid::Discovery::AdvancedPollSettings 3 "2018-06-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Infoblox::Grid::Discovery::AdvancedPollSettings \- advanced polling settings.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The object provides information about advanced polling settings.
.SH "CONSTRUCTOR"
.IX Header "CONSTRUCTOR"
.Vb 10
\& my $object = Infoblox::Grid::Discovery::AdvancedPollSettings\->new(
\&    \*(Aqarp_aggregate_limit\*(Aq               => $uint,                 # Optional
\&    \*(Aqarp_cache_refresh_interval\*(Aq        => $uint,                 # Optional
\&    \*(Aqdhcp_router_as_seed\*(Aq               => \*(Aqtrue\*(Aq | \*(Aqfalse\*(Aq,      # Optional / Default is \*(Aqfalse\*(Aq
\&    \*(Aqdisable_discovery_outside_ipam\*(Aq    => \*(Aqtrue\*(Aq | \*(Aqfalse\*(Aq,      # Optional / Default is \*(Aqfalse\*(Aq
\&    \*(Aqenable_purge_expired_endhost_data\*(Aq => \*(Aqtrue\*(Aq | \*(Aqfalse\*(Aq,      # Optional / Default is \*(Aqfalse\*(Aq
\&    \*(Aqping_retries\*(Aq                      => $uint,                 # Optional
\&    \*(Aqping_sweep_interval\*(Aq               => $uint,                 # Optional
\&    \*(Aqping_timeout\*(Aq                      => $uint,                 # Optional
\&    \*(Aqpolling_authenticate_snmpv1_only\*(Aq  => \*(Aqtrue\*(Aq | \*(Aqfalse\*(Aq,      # Optional / Default is \*(Aqfalse\*(Aq
\&    \*(Aqpurge_expired_device_data\*(Aq         => $uint,                 # Optional
\&    \*(Aqpurge_expired_endhost_data\*(Aq        => $uint,                 # Optional
\&    \*(Aqroute_limit\*(Aq                       => $uint,                 # Optional
\&    \*(Aqtcp_scan_technique\*(Aq                => \*(AqCONNECT\*(Aq | \*(AqSYN\*(Aq,     # Optional
\& );
.Ve
.SH "SESSION METHODS"
.IX Header "SESSION METHODS"
The object does not support any session methods.
.SS "arp_aggregate_limit( )"
.IX Subsection "arp_aggregate_limit( )"
.RS 4
Use this method to set or retrieve the \s-1ARP\s0 aggregate limit.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is an unsigned integer.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->arp_aggregate_limit();
\& # Modify attribute value
\& $object\->arp_aggregate_limit(10);
.Ve
.RE
.RS 4
.RE
.SS "arp_cache_refresh_interval( )"
.IX Subsection "arp_cache_refresh_interval( )"
.RS 4
Use this method to set or retrieve the refresh interval for \s-1ARP\s0 cache in second.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is an unsigned integer.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->arp_cache_refresh_interval();
\& # Modify attribute value
\& $object\->arp_cache_refresh_interval(5);
.Ve
.RE
.RS 4
.RE
.SS "dhcp_router_as_seed( )"
.IX Subsection "dhcp_router_as_seed( )"
.RS 4
Use this method to enable or disable the flag that controls using \s-1DHCP\s0 routers as seed routers for discovery.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to enable the flag or \*(L"false\*(R" to disable it. Default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->dhcp_router_as_seed();
\& # Modify attribute value
\& $object\->dhcp_router_as_seed(\*(Aqtrue\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "disable_discovery_outside_ipam( )"
.IX Subsection "disable_discovery_outside_ipam( )"
.RS 4
Use this method to enable or disable the discovery of networks that are not in \s-1IPAM.\s0
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to disable the discovery of networks that are not in \s-1IPAM\s0 or \*(L"false\*(R" to enable it. Default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->disable_discovery_outside_ipam();
\& # Modify attribute value
\& $object\->disable_discovery_outside_ipam(\*(Aqtrue\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "enable_purge_expired_endhost_data( )"
.IX Subsection "enable_purge_expired_endhost_data( )"
.RS 4
Use this method to enable or disable the purge of expired end host data.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to enable the purge of expired end host data or \*(L"false\*(R" to disable it. Default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->enable_purge_expired_endhost_data();
\& # Modify attribute value
\& $object\->enable_purge_expired_endhost_data(\*(Aqtrue\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "ping_retries( )"
.IX Subsection "ping_retries( )"
.RS 4
Use this method to set or retrieve ping retries.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is an unsigned integer.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->ping_retries();
\& # Modify attribute value
\& $object\->ping_retries(3);
.Ve
.RE
.RS 4
.RE
.SS "ping_sweep_interval( )"
.IX Subsection "ping_sweep_interval( )"
.RS 4
Use this method to set or retrieve the hourly wait interval between ping sweeps for individual discovery ranges.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is an unsigned integer.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->ping_sweep_interval();
\& # Modify attribute value
\& $object\->ping_sweep_interval(1);
.Ve
.RE
.RS 4
.RE
.SS "ping_timeout( )"
.IX Subsection "ping_timeout( )"
.RS 4
Use this method to set or retrieve the ping timeout in seconds.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is an unsigned integer.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->ping_timeout();
\& # Modify attribute value
\& $object\->ping_timeout(10);
.Ve
.RE
.RS 4
.RE
.SS "polling_authenticate_snmpv1_only( )"
.IX Subsection "polling_authenticate_snmpv1_only( )"
.RS 4
Use this method to enable or disable polling and authenticating using SNMPv1 only.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to enable polling and authenticating using SNMPv1 only or \*(L"false\*(R" to disable it. Default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->polling_authenticate_snmpv1_only();
\& # Modify attribute value
\& $object\->polling_authenticate_snmpv1_only(\*(Aqtrue\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "purge_expired_device_data( )"
.IX Subsection "purge_expired_device_data( )"
.RS 4
Use this method to set or retrieve the number of days a device remains in database after it is no longer found in network.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is an unsigned integer.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->purge_expired_device_data();
\& # Modify attribute value
\& $object\->purge_expired_device_data(5);
.Ve
.RE
.RS 4
.RE
.SS "purge_expired_endhost_data( )"
.IX Subsection "purge_expired_endhost_data( )"
.RS 4
Use this method to set or retrieve the number of days an end host remains in database after it is no longer found in network.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is an unsigned integer.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->purge_expired_endhost_data();
\& # Modify attribute value
\& $object\->purge_expired_endhost_data(5);
.Ve
.RE
.RS 4
.RE
.SS "route_limit( )"
.IX Subsection "route_limit( )"
.RS 4
Use this method to set or retrieve the route limit.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is an unsigned integer.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->route_limit();
\& # Modify attribute value
\& $object\->route_limit(10);
.Ve
.RE
.RS 4
.RE
.SS "tcp_scan_technique( )"
.IX Subsection "tcp_scan_technique( )"
.RS 4
Use this method to set or retrieve the \s-1TCP\s0 scan method.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is '\s-1CONNECT\s0' or '\s-1SYN\s0'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->tcp_scan_technique();
\& # Modify attribute value
\& $object\->tcp_scan_technique(\*(AqSYN\*(Aq);
.Ve
.RE
.RS 4
.RE
.SH "AUTHOR"
.IX Header "AUTHOR"
Infoblox Inc. <http://www.infoblox.com/>
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2017 Infoblox Inc.

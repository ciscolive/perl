.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Mojolicious::Plugin::Export 3"
.TH Mojolicious::Plugin::Export 3 "2019-07-23" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mojolicious::Plugin::Export \- Export a Mojolicious website to static files
.SH "VERSION"
.IX Header "VERSION"
version 0.007
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 7
\&    use Mojolicious::Lite;
\&    get \*(Aq/\*(Aq => \*(Aqindex\*(Aq;
\&    get \*(Aq/secret\*(Aq => \*(Aqsecret\*(Aq;
\&    plugin Export => {
\&        pages => [qw( / /secret )],
\&    };
\&    app\->start;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Export a Mojolicious webapp to static files.
.SS "Configuration"
.IX Subsection "Configuration"
Default values for the command's options can be specified in the
configuration using one of Mojolicious's configuration plugins.
.PP
.Vb 11
\&    # myapp.conf
\&    {
\&        export => {
\&            # Configure the default pages to export
\&            pages => [ \*(Aq/\*(Aq, \*(Aq/hidden\*(Aq ],
\&            # The directory to export to
\&            to => \*(Aq/var/www/html\*(Aq,
\&            # Rewrite URLs to include base directory
\&            base => \*(Aq/\*(Aq,
\&        }
\&    }
.Ve
.SH "ATTRIBUTES"
.IX Header "ATTRIBUTES"
.SS "pages"
.IX Subsection "pages"
The pages to export by default. This can be overridden by the arguments to
\&\*(L"export\*(R".
.PP
.Vb 2
\&    # Add pages to export by default
\&    push @{ $app\->export\->pages }, \*(Aq/blog\*(Aq;
.Ve
.SS "to"
.IX Subsection "to"
The path to export to by default.
.SS "base"
.IX Subsection "base"
The base \s-1URL,\s0 if URLs need to be rewritten.
.SS "quiet"
.IX Subsection "quiet"
If true, will not report every action taken by the plugin. Defaults to true.
.SH "METHODS"
.IX Header "METHODS"
.SS "export"
.IX Subsection "export"
.Vb 1
\&    app\->export\->export( $override );
.Ve
.PP
Export the site. \f(CW$override\fR is a hash reference to override the object
attributes (keys are attribute names, values are the overridden value).
.SH "HELPERS"
.IX Header "HELPERS"
.SS "export"
.IX Subsection "export"
The \f(CW\*(C`export\*(C'\fR helper returns the Mojolicious::Plugin::Export object.
.SH "EVENTS"
.IX Header "EVENTS"
.SS "before_write"
.IX Subsection "before_write"
Emitted after all the content has been loaded and prepared for export.
The event is given two arguments: The Mojolicious::Plugin::Export object
and a hashref of paths mapped to content to be exported. The content can
be either a Mojo::DOM object for \s-1HTML\s0 pages or the content to be
exported. This event may modify the hashref or the \s-1DOM\s0 objects to change
the content before it is written.
.PP
.Vb 7
\&    app\->export\->on( before_write => sub {
\&        my ( $export, $pages ) = @_;
\&        for my $path ( keys %$pages ) {
\&            my $content = $pages\->{ $path };
\&            # ...
\&        }
\&    } );
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Mojolicious::Command::export, Mojolicious::Plugin
.SH "AUTHOR"
.IX Header "AUTHOR"
Doug Bell <preaction@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2018 by Doug Bell.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

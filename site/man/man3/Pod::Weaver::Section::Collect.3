.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Pod::Weaver::Section::Collect 3"
.TH Pod::Weaver::Section::Collect 3 "2016-10-15" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Pod::Weaver::Section::Collect \- a section that gathers up specific commands
.SH "VERSION"
.IX Header "VERSION"
version 4.015
.SH "OVERVIEW"
.IX Header "OVERVIEW"
Given the configuration:
.PP
.Vb 2
\&  [Collect / METHODS]
\&  command = method
.Ve
.PP
This plugin will start off by gathering and nesting any \f(CW\*(C`=method\*(C'\fR commands
found in the \f(CW\*(C`pod_document\*(C'\fR.  Those commands, along with their nestable
content, will be collected under a \f(CW\*(C`=head1 METHODS\*(C'\fR header and placed in the
correct location in the output stream.  Their order will be preserved as it was
in the source document.
.SH "ATTRIBUTES"
.IX Header "ATTRIBUTES"
.SS "command"
.IX Subsection "command"
The command that will be collected (e.g. \f(CW\*(C`attr\*(C'\fR or \f(CW\*(C`method\*(C'\fR).
(required)
.SS "new_command"
.IX Subsection "new_command"
The command to be used in the output instead of the collected command.
(default: \f(CW\*(C`head2\*(C'\fR)
.SS "header_command"
.IX Subsection "header_command"
The section command for the section to be added.
(default: \f(CW\*(C`head1\*(C'\fR)
.SS "header"
.IX Subsection "header"
The title of the section to be added.
(default: the plugin name)
.SH "AUTHOR"
.IX Header "AUTHOR"
Ricardo \s-1SIGNES\s0 <rjbs@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2016 by Ricardo \s-1SIGNES.\s0
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

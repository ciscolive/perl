.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.41)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "CPAN::Perl::Releases 3"
.TH CPAN::Perl::Releases 3 "2020-10-20" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
CPAN::Perl::Releases \- Mapping Perl releases on CPAN to the location of the tarballs
.SH "VERSION"
.IX Header "VERSION"
version 5.20201020
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  use CPAN::Perl::Releases qw[perl_tarballs];
\&
\&  my $perl = \*(Aq5.14.0\*(Aq;
\&
\&  my $hashref = perl_tarballs( $perl );
\&
\&  print "Location: ", $_, "\en" for values %{ $hashref };
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
CPAN::Perl::Releases is a module that contains the mappings of all \f(CW\*(C`perl\*(C'\fR releases that have been uploaded to \s-1CPAN\s0 to the
\&\f(CW\*(C`authors/id/\*(C'\fR path that the tarballs reside in.
.PP
This is static data, but newer versions of this module will be made available as new releases of \f(CW\*(C`perl\*(C'\fR are uploaded to \s-1CPAN.\s0
.SH "FUNCTIONS"
.IX Header "FUNCTIONS"
.ie n .IP """perl_tarballs""" 4
.el .IP "\f(CWperl_tarballs\fR" 4
.IX Item "perl_tarballs"
Takes one parameter, a \f(CW\*(C`perl\*(C'\fR version to search for. Returns an hashref on success or \f(CW\*(C`undef\*(C'\fR otherwise.
.Sp
The returned hashref will have a key/value for each type of tarball. A key of \f(CW\*(C`tar.gz\*(C'\fR indicates the location
of a gzipped tar file and \f(CW\*(C`tar.bz2\*(C'\fR of a bzip2'd tar file. The values will be the relative path under \f(CW\*(C`authors/id/\*(C'\fR
on \s-1CPAN\s0 where the indicated tarball will be located.
.Sp
.Vb 1
\&  perl_tarballs( \*(Aq5.14.0\*(Aq );
\&
\&  Returns a hashref like:
\&
\&  {
\&    "tar.bz2" => "J/JE/JESSE/perl\-5.14.0.tar.bz2",
\&    "tar.gz" => "J/JE/JESSE/perl\-5.14.0.tar.gz"
\&  }
.Ve
.Sp
Not all \f(CW\*(C`perl\*(C'\fR releases had \f(CW\*(C`tar.bz2\*(C'\fR, but only a \f(CW\*(C`tar.gz\*(C'\fR.
.Sp
Perl tarballs may also be compressed using \f(CW\*(C`xz\*(C'\fR and therefore have a \f(CW\*(C`tar.xz\*(C'\fR entry.
.ie n .IP """perl_versions""" 4
.el .IP "\f(CWperl_versions\fR" 4
.IX Item "perl_versions"
Returns the list of all the perl versions supported by the module in ascending order. \f(CW\*(C`TRIAL\*(C'\fR and \f(CW\*(C`RC\*(C'\fR will be lower
than an actual release.
.ie n .IP """perl_pumpkins""" 4
.el .IP "\f(CWperl_pumpkins\fR" 4
.IX Item "perl_pumpkins"
Returns a sorted list of all \s-1PAUSE\s0 IDs of Perl pumpkins.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
<http://www.cpan.org/src/5.0/>
.SH "AUTHOR"
.IX Header "AUTHOR"
Chris Williams <chris@bingosnet.co.uk>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2020 by Chris Williams.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

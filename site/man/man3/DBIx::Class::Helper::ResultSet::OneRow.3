.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "DBIx::Class::Helper::ResultSet::OneRow 3"
.TH DBIx::Class::Helper::ResultSet::OneRow 3 "2020-03-28" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
DBIx::Class::Helper::ResultSet::OneRow \- The first you always wanted
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\& # note that this is normally a component for a ResultSet
\& package MySchema::ResultSet::Person;
\&
\& use strict;
\& use warnings;
\&
\& use parent \*(AqDBIx::Class::ResultSet\*(Aq;
\&
\& _\|_PACKAGE_\|_\->load_components(\*(AqHelper::ResultSet::OneRow\*(Aq);
\&
\& sub person_named {
\&    $_[0]\->search({ name => $_[1] })\->one_row
\& }
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This component codifies an alternate version of \*(L"first\*(R" in DBIx::Class::ResultSet.
In practical use, \f(CW\*(C`first\*(C'\fR allows a user to do something like the following:
.PP
.Vb 6
\& my $rs = $schema\->resultset(\*(AqFoo\*(Aq)\->search({ name => \*(Aqbar\*(Aq });
\& my $first = $rs\->first;
\& my @rest;
\& while (my $row = $rs\->next) {
\&    push @rest, $row
\& }
.Ve
.PP
Problematically, if you call \f(CW\*(C`first\*(C'\fR without the while loop afterwards \fBand\fR
you got back more than one row, you are leaving a cursor open.  Depending on
your database this could increase memory usage or cause errors with later
queries.
.PP
Fundamentally the difference is that when you use \f(CW\*(C`one_row\*(C'\fR you are guaranteed
to exhaust the underlying cursor.
.PP
Generally speaking, unless you are doing something unusual, \f(CW\*(C`one_row\*(C'\fR is a good
default.
.SH "METHODS"
.IX Header "METHODS"
.SS "one_row"
.IX Subsection "one_row"
Limits the ResultSet to a single row, and then returns the matching result
object. In case no rows match, \f(CW\*(C`undef\*(C'\fR is returned as normal.
.SH "THANKS"
.IX Header "THANKS"
Thanks to Aran Clary Deltac (\s-1BLUEFEET\s0) for initially writing this module, and
thanks to ZipRecruiter <https://www.ziprecruiter.com> for sponsoring that
initial developmentl
.SH "AUTHOR"
.IX Header "AUTHOR"
Arthur Axel \*(L"fREW\*(R" Schmidt <frioux+cpan@gmail.com>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2020 by Arthur Axel \*(L"fREW\*(R" Schmidt.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Net::Cisco::FMC::v1 3"
.TH Net::Cisco::FMC::v1 3 "2020-09-28" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Net::Cisco::FMC::v1 \- Cisco Firepower Management Center (FMC) API version 1 client library
.SH "VERSION"
.IX Header "VERSION"
version 0.005001
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 4
\&    use strict;
\&    use warnings;
\&    use Net::Cisco::FMC::v1;
\&    use Data::Dumper::Concise;
\&
\&    my $fmc = Net::Cisco::FMC::v1\->new(
\&        server      => \*(Aqhttps://fmcrestapisandbox.cisco.com\*(Aq,
\&        user        => \*(Aqadmin\*(Aq,
\&        passwd      => \*(Aq$password\*(Aq,
\&        clientattrs => { timeout => 30 },
\&    );
\&
\&    # login to populate domains
\&    $fmc\->login;
\&
\&    # list all domain uuids and names
\&    print Dumper($fmc\->domains);
\&    # switch domain
\&    $fmc\->domain_uuid("e276abec\-e0f2\-11e3\-8169\-6d9ed49b625f");
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module is a client library for the Cisco Firepower Management
Center (\s-1FMC\s0) \s-1REST API\s0 version 1.
Currently it is developed and tested against \s-1FMC\s0 version 6.2.3.6.
.SH "ATTRIBUTES"
.IX Header "ATTRIBUTES"
.SS "domains"
.IX Subsection "domains"
Returns a list of hashrefs containing name and uuid of all domains which gets
populated by \*(L"login\*(R".
.SS "domain_uuid"
.IX Subsection "domain_uuid"
The \s-1UUID\s0 of the domain which is used by all methods.
.SH "METHODS"
.IX Header "METHODS"
.SS "login"
.IX Subsection "login"
Logs into the \s-1FMC\s0 by fetching an authentication token via http basic
authentication.
.SS "relogin"
.IX Subsection "relogin"
Refreshes the session by loging in again (not using the refresh token) and
restores the currently set domain_uuid.
.SS "create_accessrule"
.IX Subsection "create_accessrule"
Takes an access policy id, a hashref of the rule which should be created and
optional query parameters.
.SS "list_accessrules"
.IX Subsection "list_accessrules"
Takes an access policy id and query parameters and returns a hashref with a
single key 'items' that has a list of access rules similar to the \s-1FMC API.\s0
.SS "get_accessrule"
.IX Subsection "get_accessrule"
Takes an access policy id, rule id and query parameters and returns the access
rule.
.SS "update_accessrule"
.IX Subsection "update_accessrule"
Takes an access policy id, rule object and a hashref of the rule and returns
a hashref of the updated access rule.
.SS "delete_accessrule"
.IX Subsection "delete_accessrule"
Takes an access policy id and a rule object id.
.PP
Returns true on success.
.SS "list_deployabledevices"
.IX Subsection "list_deployabledevices"
Takes optional query parameters and returns a hashref with a
single key 'items' that has a list of deployable devices similar to the \s-1FMC
API.\s0
.SS "create_deploymentrequest"
.IX Subsection "create_deploymentrequest"
Takes a hashref of deployment parameters.
.PP
Returns the created task in the \->{metadata}\->{task} hashref.
.SS "get_task"
.IX Subsection "get_task"
Takes a task id and returns its status.
.SS "wait_for_task"
.IX Subsection "wait_for_task"
Takes a task id and an optional callback and checks its status every second
until it isn't in-progress any more.
The in-progress status is different for each task type, currently only
\&'\s-1DEVICE_DEPLOYMENT\s0' is supported.
The callback coderef which is called for every check with the task as argument.
.PP
Returns the task.
.SS "cleanup_protocolport"
.IX Subsection "cleanup_protocolport"
Takes a ProtocolPortObject and renames it to protocol_port, e.g. tcp_443.
If it has no port 'any' is used instead of the port number no avoid
\&'predefined name' errors.
Returns the ProtocolPortObject with the updated attributes.
.SS "cleanup_icmpv4object"
.IX Subsection "cleanup_icmpv4object"
Takes a ICMPv4Object and renames it to protocol_type[_code], e.g. icmp_8_0.
If it has no code only protocol and type is used.
.SS "cleanup_hosts"
.IX Subsection "cleanup_hosts"
.IP "removes '_Mask32' from the name" 4
.IX Item "removes '_Mask32' from the name"
.PD 0
.IP "removes the description if it is 'Created during \s-1ASA\s0 Migration'" 4
.IX Item "removes the description if it is 'Created during ASA Migration'"
.PD
.SS "create_cleaned_accesspolicy"
.IX Subsection "create_cleaned_accesspolicy"
Takes an access policy name and a hashref of optional arguments.
.PP
\fIOptional arguments\fR
.IX Subsection "Optional arguments"
.IP "target_access_policy_name" 4
.IX Item "target_access_policy_name"
Defaults to access policy name with the postfix '\-cleaned'.
.IP "rule_name_coderef" 4
.IX Item "rule_name_coderef"
Gets passed the rule number and rule object and must return the new rule name.
.PP
Creates a new access policy with the target name containing all rules of the
input access policy but cleaned by the following rules:
.IP "the commentHistoryList is omitted" 4
.IX Item "the commentHistoryList is omitted"
.PD 0
.IP "replace autogenerated \s-1DM_INLINE_\s0 NetworkGroups by their content" 4
.IX Item "replace autogenerated DM_INLINE_ NetworkGroups by their content"
.PD
Only if they don't contain more than 50 items because of the current limit in
\&\s-1FMC.\s0
.IP "replace autogenerated \s-1DM_INLINE_\s0 PortObjectGroups by their content" 4
.IX Item "replace autogenerated DM_INLINE_ PortObjectGroups by their content"
.PD 0
.IP "optional: the rule name is generated" 4
.IX Item "optional: the rule name is generated"
.PD
By passing a coderef named 'rule_name_coderef' in the optional arguments
hashref.
.PP
The new access policy is created with a defaultAction of:
.PP
.Vb 3
\&    action          => \*(AqBLOCK\*(Aq
\&    logBegin        => true
\&    sendEventsToFMC => true
.Ve
.PP
This is mainly for access policies migrated by the Cisco Firepower Migration
Tool from a Cisco \s-1ASA.\s0
.PP
Supports resuming.
.SH "KNOWN BUGS"
.IX Header "KNOWN BUGS"
Older \s-1FMC\s0 versions have bugs like:
.IP "truncated \s-1JSON\s0 responses" 4
.IX Item "truncated JSON responses"
No workaround on client side possible, only a \s-1FMC\s0 update helps.
.IP "no response to the 11th call (version 6.2.2.1)" 4
.IX Item "no response to the 11th call (version 6.2.2.1)"
No workaround on client side because newer \s-1FMC\s0 versions (at least 6.2.3.6)
throttle the login call too.
.IP "accessrule is created but error 'You do not have the required authorization to do this operation' is thrown (version 6.2.2)" 4
.IX Item "accessrule is created but error 'You do not have the required authorization to do this operation' is thrown (version 6.2.2)"
No workaround on client side possible, only a \s-1FMC\s0 update helps.
.SH "AUTHOR"
.IX Header "AUTHOR"
Alexander Hartmaier <abraxxa@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2018 \- 2020 by Alexander Hartmaier.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

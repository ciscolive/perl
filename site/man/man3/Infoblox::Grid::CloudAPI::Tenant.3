.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Infoblox::Grid::CloudAPI::Tenant 3"
.TH Infoblox::Grid::CloudAPI::Tenant 3 "2018-06-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Infoblox::Grid::CloudAPI::Tenant \- Infoblox::Grid::CloudAPI::Tenant object.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This object represents an administrative concept in Cloud Management Platforms that associates all the network elements (networks, zones, VMs, IPs, ...) that are related and constitutive of the tenant.
.SH "CONSTRUCTOR"
.IX Header "CONSTRUCTOR"
.SH "SESSION METHODS"
.IX Header "SESSION METHODS"
This section describes all the methods in an Infoblox::Session module that you can apply to a Grid member object.
.SS "Infoblox::Session\->get( )"
.IX Subsection "Infoblox::Session->get( )"
.RS 4
Use this method to retrieve all the matching objects from the Infoblox appliance. See Infoblox::Session\->\fBget()\fR for parameters and return values.
.IP "\fBKey Reference\fR" 4
.IX Item "Key Reference"
.Vb 1
\& Apply the following attribute to get a specific object:
\&
\&   comment       \- Optional. Descriptive comments.
\&   id            \- Optional. Unique ID associated with the tenant. Set at creation time only.
\&   name          \- Required. Name of the tenant.
\&   unmanaged     \- Optional. Flag to indicate if the tenant is unmanaged. Valid value is \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq.
.Ve
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 1
\& $session\->get(object => "Infoblox::Grid::CloudAPI::Tenant", comment => "comment");
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->modify( )"
.IX Subsection "Infoblox::Session->modify( )"
.RS 4
Use this method to modify an object in the Infoblox appliance. See Infoblox::Session\->\fBmodify()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 1
\& $session\->modify($tenant_object);
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->search( )"
.IX Subsection "Infoblox::Session->search( )"
.RS 4
Use this method to search for objects in the Infoblox appliance. See Infoblox::Session\->\fBsearch()\fR for parameters and return values.
.IP "\fBKey Reference\fR" 4
.IX Item "Key Reference"
.Vb 1
\& Apply the following attribute to get a specific object:
\&
\&   comment       \- Optional. Descriptive comments (regular expression).
\&   id            \- Optional. Unique ID associated with the tenant. Set at creation time only (regular expression).
\&   name          \- Required. Name of the tenant (regular expression).
\&   unmanaged     \- Optional. Flag to indicate if the tenant is unmanaged. Valid value is \*(Aqtrue\*(Aq or \*(Aqfalse\*(Aq.
.Ve
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 1
\& $session\->get(object => "Infoblox::Grid::CloudAPI::Tenant", comment => "comment");
.Ve
.RE
.RS 4
.RE
.SH "METHODS"
.IX Header "METHODS"
This section describes all the methods that you can use to set or retrieve the attribute values of the object.
.SS "comment( )"
.IX Subsection "comment( )"
.RS 4
Use this method to set or retrieve a descriptive comment.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is a comment in string format (\s-1UTF8\s0) with a maximum of 256 bytes.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get comment
\& $comment = $tenant\->comment();
\& # Modify comment
\& $tenant\->comment("New comment");
.Ve
.RE
.RS 4
.RE
.SS "first_seen( )"
.IX Subsection "first_seen( )"
.RS 4
Use this method to retrieve the date and time the first time the tenant was seen on the system. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The valid return value is number of seconds that have elapsed since January 1st, 1970 \s-1UTC.\s0
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get first_seen
\& $first_seen = $tenant\->first_seen();
.Ve
.RE
.RS 4
.RE
.SS "id( )"
.IX Subsection "id( )"
.RS 4
Use this method to retrieve a unique \s-1ID\s0 associated with the tenant. Set at creation time only. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get id
\& $id = $tenant\->id();
.Ve
.RE
.RS 4
.RE
.SS "last_seen( )"
.IX Subsection "last_seen( )"
.RS 4
Use this method to retrieve the date and time the last time the tenant was seen on the system. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The valid return value is number of seconds that have elapsed since January 1st, 1970 \s-1UTC.\s0
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get last_seen
\& $last_seen = $tenant\->last_seen();
.Ve
.RE
.RS 4
.RE
.SS "name( )"
.IX Subsection "name( )"
.RS 4
Use this method to set or retrieve the name of the tenant.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is a comment in string format (\s-1UTF8\s0) with a maximum of 64 bytes.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get name
\& $name = $tenant\->name();
\& # Modify name
\& $tenant\->name("New name");
.Ve
.RE
.RS 4
.RE
.SS "network_count( )"
.IX Subsection "network_count( )"
.RS 4
Use this method to retrieve the number of networks associated with the tenant. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get network_count
\& $network_count = $tenant\->network_count();
.Ve
.RE
.RS 4
.RE
.SS "vm_count( )"
.IX Subsection "vm_count( )"
.RS 4
Use this method to retrieve the number of VMs associated with the tenant. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get vm_count
\& $vm_count = $tenant\->vm_count();
.Ve
.RE
.RS 4
.RE
.SS "unmanaged( )"
.IX Subsection "unmanaged( )"
.RS 4
Use this method to retrieve the boolean flag used to indicate if the tenant is unmanaged or not. This is a read-only attribute
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns attribute value. The valid return value is \*(L"true\*(R" or \*(L"false\*(R".
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get unmanaged
\& $unmanaged = $tenant\->unmanaged();
.Ve
.RE
.RS 4
.RE
.SS "first_discovered_timestamp( )"
.IX Subsection "first_discovered_timestamp( )"
.RS 4
Use this method to retrieve the date and time the tenant was first seen on the system. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The valid return value is the number of seconds that have elapsed since January 1st, 1970 \s-1UTC.\s0
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get first_discovered_timestamp
\& $first_discovered_timestamp = $tenant\->first_discovered_timestamp();
.Ve
.RE
.RS 4
.RE
.SS "last_discovered_timestamp( )"
.IX Subsection "last_discovered_timestamp( )"
.RS 4
Use this method to retrieve the date and time the tenant was last seen on the system. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The valid return value is the number of seconds that have elapsed since January 1st, 1970 \s-1UTC.\s0
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get last_discovered_timestamp
\& $last_discovered_timestamp = $tenant\->last_discovered_timestamp();
.Ve
.RE
.RS 4
.RE
.SH "AUTHOR"
.IX Header "AUTHOR"
Infoblox Inc. <http://www.infoblox.com/>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Infoblox::Session\->\fBget()\fR, Infoblox::Session\->\fBsearch()\fR, Infoblox::Session\->\fBmodify()\fR
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2017 Infoblox Inc.

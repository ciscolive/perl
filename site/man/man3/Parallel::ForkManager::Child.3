.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Parallel::ForkManager::Child 3"
.TH Parallel::ForkManager::Child 3 "2018-10-08" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Parallel::ForkManager::Child \- role adopted by forked Parallel::ForkManager processes
.SH "VERSION"
.IX Header "VERSION"
version 2.02
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&   use 5.10.0;
\&
\&   use Parallel::ForkManager;
\&
\&   my $fm = Parallel::ForkManager\->new;
\&
\&   say "parent does not consume the child role: ", $fm\->does(\*(AqParallel::ForkManager::Child\*(Aq);
\&
\&   $fm\->start_child(sub{ 
\&        sleep $_;
\&        say "but the child does: ", $fm\->does(\*(AqParallel::ForkManager::Child\*(Aq);
\&        say "child $_ says hi!"
\&
\&   }) for 1..3;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
When the parent Parallel::ForkManager object forks a child process,
its forked incarnation consumes this role. The role doesn't do much: it 
changes the returning values of \f(CW\*(C`is_child\*(C'\fR and \f(CW\*(C`is_parent\*(C'\fR in the way you'd expect,
change \f(CW\*(C`start\*(C'\fR so that it'd die if called from within the child, and change 
the implementation of \f(CW\*(C`finish\*(C'\fR to potentially send data back to the parent process.
.SH "AUTHORS"
.IX Header "AUTHORS"
.IP "\(bu" 4
dLux (Szab칩, Bal치zs) <dlux@dlux.hu>
.IP "\(bu" 4
Yanick Champoux <yanick@cpan.org>
.IP "\(bu" 4
Gabor Szabo <gabor@szabgab.com>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2018, 2016, 2015 by Bal치zs Szab칩.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

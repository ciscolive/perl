.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Spreadsheet::Reader::ExcelXML::WorkbookMetaInterface 3"
.TH Spreadsheet::Reader::ExcelXML::WorkbookMetaInterface 3 "2017-04-20" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Spreadsheet::Reader::ExcelXML::WorkbookMetaInterface \- Workbook meta file interface
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
For a fully functioning example see examples/Spreadsheet/Reader/ExcelXML/workbook_meta_example.pl
.PP
.Vb 10
\&        use MooseX::ShortCut::BuildInstance qw( build_instance );
\&        use Spreadsheet::Reader::ExcelXML::XMLReader;
\&        use Spreadsheet::Reader::ExcelXML::ZipReader::WorkbookMeta;
\&        use Spreadsheet::Reader::ExcelXML::WorkbookMetaInterface; # Optional
\&        $meta_instance = build_instance(
\&                superclasses    => [\*(AqSpreadsheet::Reader::ExcelXML::XMLReader\*(Aq],
\&                add_roles_in_sequence =>[
\&                        \*(AqSpreadsheet::Reader::ExcelXML::ZipReader::WorkbookMeta\*(Aq,
\&                        \*(AqSpreadsheet::Reader::ExcelXML::WorkbookMetaInterface\*(Aq,
\&                ],
\&                file => $file_handle,# Should be a handle built with \*(Aqxl/workbook.xml\*(Aq from a zip file
\&        );
\&        $meta_instance\->get_epoch_year;
\&
\&        ###########################
\&        # SYNOPSIS Screen Output
\&        # 01: 1904
\&        ###########################
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This documentation is written to explain ways to use this module when writing your own
excel parser.  To use the general package for excel parsing out of the box please review
the documentation for Workbooks,
Worksheets, and
Cells
.PP
This module (role) is provided as a way to standardize access to or interface
 <http://www.cs.utah.edu/~germain/PPS/Topics/interfaces.html> with base meta data files
containing workbook level information accross zip and flat xml types.  It doesn't provide
any functionality itself it just provides requirements for any built classes so a consumer
of this interface will be able to use a consistent interface.  The base class will generally
be;
.PP
Spreadsheet::Reader::ExcelXML::XMLReader
.PP
The unique functionality is generally provided by;
.PP
Spreadsheet::Reader::ExcelXML::ZipReader::WorkbookMeta
.PP
Spreadsheet::Reader::ExcelXML::XMLReader::WorkbookMeta
.SS "Required Methods"
.IX Subsection "Required Methods"
These are the methods required by the role.  A link to the Zip implementation of these
methods is provided.  The \s-1XML\s0 versions are documented in ~::XMLReader::WorkbookMeta.
.PP
\&\*(L"get_epoch_year\*(R" in Spreadsheet::Reader::ExcelXML::ZipReader::WorkbookMeta
.PP
\&\*(L"get_sheet_list\*(R" in Spreadsheet::Reader::ExcelXML::ZipReader::WorkbookMeta
.PP
\&\*(L"get_sheet_lookup\*(R" in Spreadsheet::Reader::ExcelXML::ZipReader::WorkbookMeta
.PP
\&\*(L"get_rel_lookup\*(R" in Spreadsheet::Reader::ExcelXML::ZipReader::WorkbookMeta
.PP
\&\*(L"get_id_lookup\*(R" in Spreadsheet::Reader::ExcelXML::ZipReader::WorkbookMeta
.PP
\&\*(L"loaded_correctly\*(R" in Spreadsheet::Reader::ExcelXML::XMLReader
.SH "SUPPORT"
.IX Header "SUPPORT"
.RS 4
github Spreadsheet::Reader::ExcelXML/issues
 <https://github.com/jandrew/p5-spreadsheet-reader-excelxml/issues>
.RE
.SH "TODO"
.IX Header "TODO"
.RS 4
\&\fB1.\fR Nothing currently
.RE
.SH "AUTHOR"
.IX Header "AUTHOR"
.IP "Jed Lund" 4
.IX Item "Jed Lund"
.PD 0
.IP "jandrew@cpan.org" 4
.IX Item "jandrew@cpan.org"
.PD
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
This program is free software; you can redistribute
it and/or modify it under the same terms as Perl itself.
.PP
The full text of the license can be found in the
\&\s-1LICENSE\s0 file included with this module.
.PP
This software is copyrighted (c) 2016 by Jed Lund
.SH "DEPENDENCIES"
.IX Header "DEPENDENCIES"
.RS 4
Spreadsheet::Reader::ExcelXML \- the package
.RE
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.RS 4
Spreadsheet::Read \- generic Spreadsheet reader
.Sp
Spreadsheet::ParseExcel \- Excel binary version 2003 and earlier (.xls files)
.Sp
Spreadsheet::XLSX \- Excel version 2007 and later
.Sp
Spreadsheet::ParseXLSX \- Excel version 2007 and later
.Sp
Log::Shiras <https://github.com/jandrew/Log-Shiras>
.Sp
.RS 4
All lines in this package that use Log::Shiras are commented out
.RE
.RE
.RS 4
.RE

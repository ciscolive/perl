.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Infoblox::Grid::DNS::AutoBlackHole 3"
.TH Infoblox::Grid::DNS::AutoBlackHole 3 "2018-06-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Infoblox::Grid::DNS::AutoBlackHole \- a DNS Auto Blackhole object.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The \s-1DNS\s0 Auto Blackhole object provides information about \s-1DNS\s0 auto blackhole configuration.
.SH "CONSTRUCTOR"
.IX Header "CONSTRUCTOR"
.Vb 11
\& my $auto_blackhole = Infoblox::Grid::DNS::AutoBlackHole\->new(
\&        enable_fetches_per_server => \*(Aqtrue\*(Aq | \*(Aqfalse\*(Aq, # Optional
\&        enable_fetches_per_zone   => \*(Aqtrue\*(Aq | \*(Aqfalse\*(Aq, # Optional
\&        enable_holddown           => \*(Aqtrue\*(Aq | \*(Aqfalse\*(Aq, # Optional
\&        fetches_per_server        => $uint,            # Optional
\&        fetches_per_zone          => $uint,            # Optional
\&        fps_freq                  => $uint,            # Optional
\&        holddown                  => $uint,            # Optional
\&        holddown_timeout          => $uint,            # Optional
\&        holddown_threshold        => $uint,            # Optional
\& );
.Ve
.SH "SESSION METHODS"
.IX Header "SESSION METHODS"
The object does not support any session methods.
.SH "MODULE METHODS"
.IX Header "MODULE METHODS"
The following functions can be applied to a \s-1DNS\s0 Auto Blackhole object.
.SS "Infoblox::Grid::DNS\->auto_blackhole( )"
.IX Subsection "Infoblox::Grid::DNS->auto_blackhole( )"
.RS 4
Use this method to set or retrieve the auto blackhole settings. See Infoblox::Grid::DNS\->\fBauto_blackhole()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get auto_blackhole value
\& my $auto_blackhole = $grid_dns\->auto_blackhole();
\& #Modify bind_check_auto_blackhole
\& $grid_dns\->auto_blackhole($auto_blackhole);
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Grid::Member::DNS\->auto_blackhole( )"
.IX Subsection "Infoblox::Grid::Member::DNS->auto_blackhole( )"
.RS 4
Use this method to set or retrieve the auto blackhole settings on the member. See Infoblox::Grid::Member::DNS\->\fBauto_blackhole()\fR for paparameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get auto_blackhole value
\& my $auto_blackhole = $member_dns\->auto_blackhole();
\& #Modify auto_blackhole
\& $member_dns\->auto_blackhole($auto_blackhole);
.Ve
.RE
.RS 4
.RE
.SH "METHODS"
.IX Header "METHODS"
.SS "enable_fetches_per_server( )"
.IX Subsection "enable_fetches_per_server( )"
.RS 4
Use this method to enable or disable the maximum number of concurrent recursive queries sent to each upstream \s-1DNS\s0 server.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify 'true' to enable the maximum number of concurrent recursive queries sent to each upstream \s-1DNS\s0 server or 'false" to disable it.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get enable_fetches_per_server value
\& my $enable_fetches_per_server = $auto_blackhole\->enable_fetches_per_server();
\& #Modify enable_fetches_per_server 
\& $auto_blackhole\->enable_fetches_per_server(\*(Aqtrue\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "enable_fetches_per_zone( )"
.IX Subsection "enable_fetches_per_zone( )"
.RS 4
Use this method to enable or disable the maximum number of concurrent recursive queries sent to each \s-1DNS\s0 zone.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify 'true' to enable the maximum number of concurrent recursive queries sent to each \s-1DNS\s0 zone or 'false" to disable it.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get enable_fetches_per_zone value
\& my $enable_fetches_per_zone = $auto_blackhole\->enable_fetches_per_zone();
\& #Modify enable_fetches_per_zone 
\& $auto_blackhole\->enable_fetches_per_zone(\*(Aqtrue\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "enable_holddown( )"
.IX Subsection "enable_holddown( )"
.RS 4
Use this method to enable or disable the holddown for non-responsive servers for a specified time interval.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify 'true' to enable the holddown for non-responsive servers or 'false' to disable it.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get enable_holddown value
\& my $enable_holddown = $auto_blackhole\->enable_holddown();
\& #Modify enable_holddown 
\& $auto_blackhole\->enable_holddown(\*(Aqtrue\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "fetches_per_server( )"
.IX Subsection "fetches_per_server( )"
.RS 4
Use this method to set or retrieve the maximum number of concurrent recursive queries for each \s-1DNS\s0 server.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an unsigned integer.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get fetches_per_server value
\& my $fetches_per_server = $auto_blackhole\->fetches_per_server();
\& #Modify fetches_per_server 
\& $auto_blackhole\->fetches_per_server(2000);
.Ve
.RE
.RS 4
.RE
.SS "fetches_per_zone( )"
.IX Subsection "fetches_per_zone( )"
.RS 4
Use this method to set or retrieve the maximum number of concurrent recursive queries for each \s-1DNS\s0 zone.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an unsigned integer.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get fetches_per_zone value
\& my $fetches_per_zone = $auto_blackhole\->fetches_per_zone();
\& #Modify fetches_per_zone 
\& $auto_blackhole\->fetches_per_zone(2000);
.Ve
.RE
.RS 4
.RE
.SS "fps_freq( )"
.IX Subsection "fps_freq( )"
.RS 4
Use this method to set or retrieve the number of recursive queries that determines the recalculation of the timeout ratio for each \s-1DNS\s0 server.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an unsigned integer.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get fps_freq value
\& my $fps_freq = $auto_blackhole\->fps_freq();
\& #Modify fps_freq 
\& $auto_blackhole\->fps_freq(2000);
.Ve
.RE
.RS 4
.RE
.SS "holddown( )"
.IX Subsection "holddown( )"
.RS 4
Use this method to set or retrieve the holddown duration for non-responsive servers.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an unsigned integer.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get holddown value
\& my $holddown = $auto_blackhole\->holddown();
\& #Modify holddown 
\& $auto_blackhole\->holddown(100);
.Ve
.RE
.RS 4
.RE
.SS "holddown_threshold( )"
.IX Subsection "holddown_threshold( )"
.RS 4
Use this method to set or retrieve the number of consecutive timeouts before holding down a non-responsive server.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an unsigned integer.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get holddown_threshold value
\& my $holddown_threshold = $auto_blackhole\->holddown_threshold();
\& #Modify holddown_threshold 
\& $auto_blackhole\->holddown_threshold(100);
.Ve
.RE
.RS 4
.RE
.SS "holddown_timeout( )"
.IX Subsection "holddown_timeout( )"
.RS 4
Use this method to set or retrieve the minimum time (in seconds) that needs to be passed before a timeout occurs. Note that only these timeouts are counted towards the number of consecutive timeouts.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an unsigned integer.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get holddown_timeout value
\& my $holddown_timeout = $auto_blackhole\->holddown_timeout();
\& #Modify holddown_timeout 
\& $auto_blackhole\->holddown_timeout(100);
.Ve
.RE
.RS 4
.RE
.SH "AUTHOR"
.IX Header "AUTHOR"
Infoblox Inc. <http://www.infoblox.com/>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Infoblox::Grid::DNS, Infoblox::Grid::DNS\->\fBauto_blackhole()\fR, Infoblox::Grid::Member::DNS, Infoblox::Grid::Member::DNS\->\fBauto_blackhole()\fR
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2017 Infoblox Inc.

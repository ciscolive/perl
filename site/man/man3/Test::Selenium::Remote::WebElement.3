.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.41)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Test::Selenium::Remote::WebElement 3"
.TH Test::Selenium::Remote::WebElement 3 "2020-10-19" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This is an \fIexperimental\fR addition to the Selenium::Remote::Driver
distribution, and some interfaces may change.
.SH "METHODS"
.IX Header "METHODS"
All methods from Selenium::Remote::WebElement are available through this
module, as well as the following test-specific methods. All test names are optional.
.PP
.Vb 4
\&  text_is($match_str,$test_name);
\&  text_isnt($match_str,$test_name);
\&  text_like($match_re,$test_name);
\&  text_unlike($match_re,$test_name);
\&
\&  tag_name_is($match_str,$test_name);
\&  tag_name_isnt($match_str,$test_name);
\&  tag_name_like($match_re,$test_name);
\&  tag_name_unlike($match_re,$test_name);
\&
\&  value_is($match_str,$test_name);
\&  value_isnt($match_str,$test_name);
\&  value_like($match_re,$test_name);
\&  value_unlike($match_re,$test_name);
\&
\&  clear_ok($test_name);
\&  click_ok($test_name);
\&  submit_ok($test_name);
\&  is_selected_ok($test_name);
\&  is_enabled_ok($test_name);
\&  is_displayed_ok($test_name);
\&
\&  send_keys_ok($str)
\&  send_keys_ok($str,$test_name)
\&
\&  attribute_is($attr_name,$match_str,$test_name);
\&  attribute_isnt($attr_name,$match_str,$test_name);
\&  attribute_like($attr_name,$match_re,$test_name);
\&  attribute_unlike($attr_name,$match_re,$test_name);
\&
\&  css_attribute_is($attr_name,$match_str,$test_name); # TODO
\&  css_attribute_isnt($attr_name,$match_str,$test_name); # TODO
\&  css_attribute_like($attr_name,$match_re,$test_name); # TODO
\&  css_attribute_unlike($attr_name,$match_re,$test_name); # TODO
\&
\&  element_location_is([x,y]) # TODO
\&  element_location_in_view_is([x,y]) # TODO
.Ve
.SH "AUTHORS"
.IX Header "AUTHORS"
.IP "\(bu" 4
Created by: Mark Stosberg <mark@stosberg.org>, but inspired by
 Test::WWW::Selenium and its authors.
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright (c) 2013 Mark Stosberg
.PP
This program is free software; you can redistribute it and/or
modify it under the same terms as Perl itself.

.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Net::DBus::Annotation 3"
.TH Net::DBus::Annotation 3 "2013-08-30" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Net::DBus::Annotation \- annotations for changing behaviour of APIs
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  use Net::DBus::Annotation qw(:call);
\&
\&  my $object = $service\->get_object("/org/example/systemMonitor");
\&
\&  # Block until processes are listed
\&  my $processes = $object\->list_processes("someuser");
\&
\&  # Just throw away list of processes, pretty pointless
\&  # in this example, but useful if the method doesn\*(Aqt have
\&  # a return value
\&  $object\->list_processes(dbus_call_noreply, "someuser");
\&
\&  # List processes & get on with other work until
\&  # the list is returned.
\&  my $asyncreply = $object\->list_processes(dbus_call_async, "someuser");
\&
\&  ... some time later...
\&  my $processes = $asyncreply\->get_data;
\&
\&
\&  # List processes, with a shorter 10 second timeout, instead of
\&  # the default 60 seconds
\&  my $object\->list_processes(dbus_call_timeout, 10 * 1000, "someuser");
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module provides a number of annotations which will be useful
when dealing with the DBus APIs. There are annotations for switching
remote calls between sync, async and no-reply mode. More annotations
may be added over time.
.SH "METHODS"
.IX Header "METHODS"
.IP "dbus_call_sync" 4
.IX Item "dbus_call_sync"
Requests that a method call be performed synchronously, waiting
for the reply or error return to be received before continuing.
.IP "dbus_call_async" 4
.IX Item "dbus_call_async"
Requests that a method call be performed a\-synchronously, returning
a pending call object, which will collect the reply when it eventually
arrives.
.IP "dbus_call_noreply" 4
.IX Item "dbus_call_noreply"
Requests that a method call be performed a\-synchronously, discarding
any possible reply or error message.
.IP "dbus_call_timeout" 4
.IX Item "dbus_call_timeout"
Indicates that the next parameter for the method call will specify
the time to wait for a reply in milliseconds. If omitted, then the
default timeout for the object will be used
.SH "AUTHOR"
.IX Header "AUTHOR"
Daniel Berrange <dan@berrange.com>
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copright (C) 2006\-2011, Daniel Berrange.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Net::DBus, Net::DBus::RemoteObject

.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Infoblox::Grid::FileDistributionDir 3"
.TH Infoblox::Grid::FileDistributionDir 3 "2018-06-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Infoblox::Grid::FileDistributionDir \- Grid FileDistributionDir object.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The FileDistributionDir object is used to add, get, modify, and remove directories that store files for a file distribution service.
.SH "CONSTRUCTOR"
.IX Header "CONSTRUCTOR"
.Vb 3
\& my $dir = Infoblox::Grid::FileDistributionDir\->new(
\&     name        => $string,            #Required
\& );
.Ve
.SH "SESSION METHODS"
.IX Header "SESSION METHODS"
This section describes all the methods in the Infoblox::Session module that you can apply to a FileDistributionDir object.
.SS "Infoblox::Session\->add( )"
.IX Subsection "Infoblox::Session->add( )"
.RS 4
Use this method to add an object to the Infoblox appliance. See Infoblox::Session\->\fBadd()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 6
\& #Construct the file distribution directory object
\& my $dir = Infoblox::Grid::FileDistributionDir\->new(
\&     name        => "mydir",
\& );
\& # Submit for addition
\& my $response = $session\->add( $dir );
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->get( )"
.IX Subsection "Infoblox::Session->get( )"
.RS 4
Use this method to retrieve all the matching objects from the Infoblox appliance. See Infoblox::Session\->\fBget()\fR for parameters and return values.
.IP "\fBKey References\fR" 4
.IX Item "Key References"
.Vb 1
\& Apply the following attributes to get a specific FileDistributionDir object:
\&
\&  name          \- Required. User name in string format.
.Ve
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 3
\& my @retrieved_objs = $session\->get(
\&     object      => "Infoblox::Grid::FileDistributionDir",
\&     name        => "mydir" );
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->modify( )"
.IX Subsection "Infoblox::Session->modify( )"
.RS 4
Use this method to modify an object in the Infoblox appliance. See Infoblox::Session\->\fBmodify()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Use method to rename a file distribution directory.
\& $dir\->name("mynewdir");
\& # Submit modification
\& my $response = $session\->modify( $dir );
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->remove( )"
.IX Subsection "Infoblox::Session->remove( )"
.RS 4
Use this method to remove an object from the Infoblox appliance. See Infoblox::Session\->\fBremove()\fR for parameters and return values.
.Sp
To remove a specific object, use \fBget()\fR or \fBsearch()\fR to retrieve the specific object first, and then submit this object for removal.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 8
\& # Get the user objects with the same starting name
\& my @retrieved_objs = $session\->get(
\&     object      => "Infoblox::Grid::FileDistributionDir",
\&     name        => "mydir" );
\& # find the desired object from the retrieved list.
\& my $dir = $retrieved_objs[0];
\& # Submit for removal
\& my $response = $session\->remove( $dir );
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->search( )"
.IX Subsection "Infoblox::Session->search( )"
.RS 4
Use this method to search for FileDistributionDir objects in the Infoblox appliance. See Infoblox::Session\->\fBsearch()\fR for parameters and return values.
.IP "\fBKey References\fR" 4
.IX Item "Key References"
.Vb 1
\& Apply the following attributes to search for a specific FileDistributionDir object:
\&
\&  name          \- Required. Directory name in string format. Only the exact match is supported (that is, exactly the same as \*(Aqget\*(Aq method).
.Ve
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # search for all FileDistributionDir objects with name "mydir"
\& my @retrieved_objs = $session\->search(
\&     object      => "Infoblox::Grid::FileDistributionDir",
\&     name        => "mydir");
.Ve
.RE
.RS 4
.RE
.SH "METHODS"
.IX Header "METHODS"
This section describes all the methods that you can use to set and retrieve the attribute values of a FileDistributionDir object.
.SS "name( )"
.IX Subsection "name( )"
.RS 4
Use this method to set or retrieve the name of a file distribution directory.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Text with the name of the file distribution directory. Enter the complete path to the file distribution directory, including all existing intermediate directories.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 6
\& #Get name of the file distribution directory
\& my $name = $file_distribution\->name();
\& #Modify name of the file distribution directory (i.e. rename the directory)
\& $file_distribution\->name("mynewdir");
\& #Create a new subdirectory \*(Aqsubdir\*(Aq under \*(Aqmynewdir\*(Aq (\*(Aqmynewdir\*(Aq must exist)
\& $file_distribution\->name("mynewdir/subdir");
.Ve
.RE
.RS 4
.RE
.SH "SAMPLE CODE"
.IX Header "SAMPLE CODE"
The following sample code demonstrates the different functions that can be applied to an object, such as add, search, modify, and remove. This sample also includes error handling for the operations.
.PP
\&\fB#Preparation prior to a FileDistributionDir object insertion\fR
.PP
.Vb 3
\& #PROGRAM STARTS: Include all the modules that will be used
\& use strict;
\& use Infoblox;
\&
\& #Create a session to the Infoblox appliance
\&
\& my $session = Infoblox::Session\->new(
\&                master   => "192.168.1.2", #appliance host ip
\&                username => "admin",       #appliance user login
\&                password => "infoblox"     #appliance password
\&                );
\&
\& unless ($session) {
\&        die("Construct session failed: ",
\&                Infoblox::status_code() . ":" . Infoblox::status_detail());
\& }
\& print "Session created successfully\en";
.Ve
.PP
\&\fB#Create a FileDistributionDir object\fR
.PP
.Vb 3
\& my $dir = Infoblox::Grid::FileDistributionDir\->new(
\&     name        => "mydir",
\& );
\&
\& unless ($dir) {
\&        die("Construct file distribution directory object failed: ",
\&                Infoblox::status_code() . ":" . Infoblox::status_detail());
\& }
\& print "FileDistributionDir object created successfully\en";
\&
\& #Add the file distribution dir object to the Infoblox appliance through a session
\& $session\->add($dir)
\&        or die("Add FileDistributionDir object failed: ",
\&                $session\->status_code() . ":" . $session\->status_detail());
\& print "FileDistributionDir object added to server successfully\en";
.Ve
.PP
\&\fB#Search for a file distribution directory\fR
.PP
.Vb 5
\& my @retrieved_objs = $session\->search(
\&                object      => "Infoblox::Grid::FileDistributionDir",
\&                name        => "mydir"
\&               );
\& my $object = $retrieved_objs[0];
\&
\& unless ($object) {
\&        die("Search FileDistributionDir object failed: ",
\&                $session\->status_code() . ":" . $session\->status_detail());
\& }
\& print "Search FileDistributionDir object found at least 1 matching entry\en";
.Ve
.PP
\&\fB#Get and modify a FileDistributionDir object\fR
.PP
.Vb 6
\& #Get the file distribution dir object from Infoblox appliance through a session
\& my @retrieved_objs = $session\->get(
\&             object      => "Infoblox::Grid::FileDistributionDir",
\&             name        => "mydir",
\& );
\& my $object = $retrieved_objs[0];
\&
\& unless ($object) {
\&        die("Get FileDistributionDir object failed: ",
\&                $session\->status_code() . ":" . $session\->status_detail());
\& }
\& print "Get FileDistributionDir object found at least 1 matching entry\en";
\&
\& #Modify the name of the FileDistributionDir object (that is, rename the directory)
\& $object\->name("mynewdir");
\&
\& #Apply the changes.
\& $session\->modify($object)
\&        or die("Modify User object failed: ",
\&                $session\->status_code() . ":" . $session\->status_detail());
\& print "FileDistributionDir object modified successfully \en";
.Ve
.PP
\&\fB#Remove a FileDistributionDir object\fR
.PP
.Vb 11
\& #Get a FileDistributionDir object through the session
\& my @retrieved_objs = $session\->get(
\&             object      => "Infoblox::Grid::FileDistributionDir",
\&             name        => "mynewdir",
\& );
\& my $object = $retrieved_objs[0];
\& unless ($object) {
\&     die("Get FileDistributionDir object failed: ",
\&         $session\->status_code() . ":" . $session\->status_detail());
\& }
\& print "Get FileDistributionDir object found at least 1 matching entry\en";
\&
\& #Submit an object for removal
\& $session\->remove($object)
\&        or die("Remove FileDistributionDir object failed: ",
\&                $session\->status_code() . ":" . $session\->status_detail());
\& print "FileDistributionDir object removed successfully \en";
\&
\& ####PROGRAM ENDS####
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Infoblox Inc. <http://www.infoblox.com/>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Infoblox::Grid::Member::FileDistribution, Infoblox::Session\->\fBadd()\fR, Infoblox::Session\->\fBget()\fR, Infoblox::Session\->\fBmodify()\fR, Infoblox::Session\->\fBremove()\fR, Infoblox::Session\->\fBsearch()\fR, Infoblox::Session
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2017 Infoblox Inc.

.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.41)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Dist::Zilla::Plugin::TemplateModule 3"
.TH Dist::Zilla::Plugin::TemplateModule 3 "2020-11-03" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Dist::Zilla::Plugin::TemplateModule \- a simple module\-from\-template plugin
.SH "VERSION"
.IX Header "VERSION"
version 6.017
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This is a ModuleMaker used for creating new
Perl modules files when minting a new dist with \f(CW\*(C`dzil new\*(C'\fR.  It uses
Text::Template (via Dist::Zilla::Role::TextTemplate) to render a template
into a Perl module.  The template is given two variables for use in rendering:
\&\f(CW$name\fR, the module name; and \f(CW$dist\fR, the Dist::Zilla object.  The module is
always created as a file under \fI./lib\fR.
.PP
By default, the template looks something like this:
.PP
.Vb 3
\&  use strict;
\&  use warnings;
\&  package {{ $name }};
\&
\&  1;
.Ve
.SH "ATTRIBUTES"
.IX Header "ATTRIBUTES"
.SS "template"
.IX Subsection "template"
The \f(CW\*(C`template\*(C'\fR parameter may be given to the plugin to provide a different
filename, absolute or relative to the build/profile directory.
.PP
If this parameter is not specified, this module will use the boilerplate module
template included in this module.
.SH "MINTING CONFIGURATION"
.IX Header "MINTING CONFIGURATION"
This module is part of the standard configuration of the default Dist::Zilla
Minting Profile, and all profiles that don't set a custom ':DefaultModuleMaker'
so you don't need to normally do anything to configure it.
.PP
.Vb 3
\&  dzil new Some::Module
\&  # creates ./Some\-Module/*
\&  # creates ./Some\-Module/lib/Some/Module.pm
.Ve
.PP
However, for those who wish to configure this ( or any subclasses ) this is
presently required:
.PP
.Vb 2
\&  [TemplateModule / :DefaultModuleMaker]
\&  ; template  = SomeFile.pm
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Ricardo \s-1SIGNES\s0 üòè <rjbs@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2020 by Ricardo \s-1SIGNES.\s0
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Infoblox::Grid::HSM::SafeNetGroup 3"
.TH Infoblox::Grid::HSM::SafeNetGroup 3 "2018-06-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Infoblox::Grid::HSM::SafeNet::Group \- SafeNet HSM (Hardware Security Module) Group object
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Hardware Security Modules (HSMs) are used for secure private key storage, and key generation and zone-signing offloading.
.SH "CONSTRUCTOR"
.IX Header "CONSTRUCTOR"
.Vb 7
\& my $hsm_group = Infoblox::Grid::HSM::SafeNet::Group\->new(
\&     name                    => $string,                                            #Required
\&     passphrase              => $string,                                            #Required
\&     hsm_servers             => [$safenet1, ...],                                   #Required
\&     hsm_version             => "LunaSA_4" | "LunaSA_5" | "LunaSA_6",               #Required
\&     comment                 => $string,                                            #Optional / Default value is empty
\& );
.Ve
.SH "SESSION METHODS"
.IX Header "SESSION METHODS"
This section describes all the methods in an Infoblox::Session module that you can apply to a SafeNet \s-1HSM\s0 Group object.
.SS "Infoblox::Session\->add( )"
.IX Subsection "Infoblox::Session->add( )"
.RS 4
Use this method to add an object to the Infoblox appliance. See Infoblox::Session\->\fBadd()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 8
\& #Construct an object
\& my $hsm_group = Infoblox::Grid::HSM::SafeNet::Group\->new(
\&     name                    => "SafeNetGroup",
\&     passphrase              => "PassPhrase",
\&     comment                 => "This is a test SafeNet HSM Group",
\&     hsm_servers             => [$safenet1],
\&     hsm_version             => "LunaSA_4",
\&     );
\&
\& #Submit for addition
\& my $response = $session\->add($hsm_group);
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->get( )"
.IX Subsection "Infoblox::Session->get( )"
.RS 4
Use this method to retrieve all the matching objects from the Infoblox appliance. See Infoblox::Session\->\fBget()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 3
\& my @retrieved_objs = $session\->get(
\&     object => "Infoblox::Grid::HSM::SafeNet::Group",
\&     name   => "SafeNetGroup");
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->modify( )"
.IX Subsection "Infoblox::Session->modify( )"
.RS 4
Use this method to modify an object in the Infoblox appliance. See Infoblox::Session\->\fBmodify()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Use this method to modify the comment of a SafeNet HSM Group object.
\& $hsm_group\->comment("This is modified SafeNet HSM Group object");
\&
\& # Submit modification
\& my $response = $session\->modify($hsm_group);
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->remove( )"
.IX Subsection "Infoblox::Session->remove( )"
.RS 4
Use this method to remove an object from the Infoblox appliance. See Infoblox::Session\->\fBremove()\fR for parameters and return values.
.Sp
To remove a specific object, first use \fBget()\fR to retrieve the object, and then submit it for removal.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get the objects with the specified name.
\& my @retrieved_objs = $session\->get(
\&     object => "Infoblox::Grid::HSM::SafeNet::Group",
\&     name   => "SafeNetGroup");
\&
\& #Find the desired object on the retrieved list.
\& my $desired_hsmgroup = $retrieved_objs[0];
\&
\& # Submit for removal
\& my $response = $session\->remove($desired_hsmgroup);
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->search( )"
.IX Subsection "Infoblox::Session->search( )"
.RS 4
Use this method to retrieve all the matching objects from the Infoblox appliance. See Infoblox::Session\->\fBsearch()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 3
\& my @retrieved_objs = $session\->search(
\&     object => "Infoblox::Grid::HSM::SafeNet::Group",
\&     name   => "SafeNetGroup");
.Ve
.RE
.RS 4
.RE
.SH "METHODS"
.IX Header "METHODS"
This section describes all the methods that you can use to configure and retrieve the attribute values of an \s-1HSM\s0 Group object.
.SS "comment( )"
.IX Subsection "comment( )"
.RS 4
Use this method to set or retrieve a descriptive comment.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Desired comment in string format with a maximum of 256 bytes.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get comment
\& my $comment = $hsm_group\->comment();
\&
\& #Modify comment
\& $hsm_group\->comment("Modified comment");
.Ve
.RE
.RS 4
.RE
.SS "name( )"
.IX Subsection "name( )"
.RS 4
Use this method to set or retrieve the name of the SafeNet \s-1HSM\s0 Group object.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Desired name for the SafeNet \s-1HSM\s0 Group object in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get name
\& my $name = $hsm_group\->name();
\&
\& #Modify name
\& $hsm_group\->name("SafeNetGroup2")
.Ve
.RE
.RS 4
.RE
.SS "passphrase( )"
.IX Subsection "passphrase( )"
.RS 4
Use this method to set the passphrase that is used to unlock the key store. This is a write-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is a string, which cannot include a tab and carriage return.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Modify passphrase
\& $hsm_group\->passphrase("pass1234");
.Ve
.RE
.RS 4
.RE
.SS "hsm_servers( )"
.IX Subsection "hsm_servers( )"
.RS 4
Use this method to set or retrieve the list of SafeNet servers in a SafeNet \s-1HSM\s0 Group object.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an array reference that contains  Infoblox::Grid::HSM::SafeNet object(s).
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get SafeNet HSM servers list
\& my $hsm_servers = $hsm_group\->hsm_servers();
\&
\& #Modify SafeNet HSM servers list
\& my $safenet_server1 = Infoblox::Grid::HSM::SafeNet\->new(
\&    name               => \*(Aqserver1\*(Aq,
\&    partition_serial   => 123,
\&    server_certificate => \*(Aq/tmp/safenet/cert1.pem\*(Aq,
\& );
\& my $safenet_server2 = Infoblox::Grid::HSM::SafeNet\->new(
\&    name               => \*(Aqserver2\*(Aq,
\&    partition_serial   => 456,
\&    server_certificate => \*(Aq/tmp/safenet/cert2.pem\*(Aq,
\& );
\&
\& $hsm_group\->hsm_servers([$safenet_server1,$safenet_server2]);
.Ve
.RE
.RS 4
.RE
.SS "hsm_version( )"
.IX Subsection "hsm_version( )"
.RS 4
Use this method to set or retrieve the \s-1HSM\s0 version of the SafeNet \s-1HSM\s0 Group.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The value can be either \*(L"LunaSA_4\*(R", \*(L"LunaSA_5\*(R" or \*(L"LunaSA_6\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value of \*(L"LunaSA_4\*(R", \*(L"LunaSA_5\*(R" or \*(L"LunaSA_6\*(R".
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get hsm_version
\& my $hsm_version = $hsm_group\->hsm_version();
\&
\& #Modify hsm_version
\& $hsm_version\->hsm_version("LunaSA_4");
.Ve
.RE
.RS 4
.RE
.SS "serial_number( )"
.IX Subsection "serial_number( )"
.RS 4
Use this method to retrieve the serial number of the SafeNet \s-1HSM\s0 Group. This attribute is read-only and cannot be modified.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get serial_number
\& my $serial_number = $hsm_group\->serial_number();
.Ve
.RE
.RS 4
.RE
.SS "status( )"
.IX Subsection "status( )"
.RS 4
Use this method to retrieve the status of the SafeNet \s-1HSM\s0 Group. This attribute is read-only and cannot be modified.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value of \*(L"\s-1UP\*(R"\s0 or \*(L"\s-1DOWN\*(R".\s0
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get status
\& my $status = $hsm_group\->status();
.Ve
.RE
.RS 4
.RE
.SH "SAMPLE CODE"
.IX Header "SAMPLE CODE"
The following sample code demonstrates the different functions that can be applied to an object such as add, get, modify and remove. This sample also includes error handling for the operations.
.PP
\&\fB#Preparation prior to getting and modifying a grid member object\fR
.PP
.Vb 2
\& use strict;
\& use Infoblox;
\&
\& #refers to Infoblox Appliance IP address
\& my $host_ip = "192.168.1.2";
\&
\& #Create a session to the Infoblox appliance
\&
\& my $session = Infoblox::Session\->new(
\&     master   => $host_ip,
\&     username => "admin",
\&     password => "infoblox"
\& );
\& unless ($session) {
\&        die("Construct session failed: ",
\&                Infoblox::status_code() . ":" . Infoblox::status_detail());
\& }
\& print "Session created successfully\en";
.Ve
.PP
\&\fB#Create a SafeNet \s-1HSM\s0 Group object\fR
.PP
.Vb 10
\& my $safenet_server = Infoblox::Grid::HSM::SafeNet\->new(
\&     name                => "20.0.0.1",
\&     partition_serial    => 1234,
\&     server_certificate  => \*(Aq/tmp/safenet/cert.pem\*(Aq,
\&     );
\& unless ($safenet_server) {
\&        die("Construct safenet server object failed: ",
\&                Infoblox::status_code() . ":" . Infoblox::status_detail());
\& }
\& print "SafeNet server object created successfully\en";
\&
\& my $hsm_group = Infoblox::Grid::HSM::SafeNet::Group\->new(
\&     name         => "SafeNet Group",
\&     passphrase   => \*(Aqpass\*(Aq,
\&     hsm_servers  => [safenet_server],
\&     hsm_version  => "LunaSA_4",
\&     );
\& unless ($hsm_group) {
\&        die("Construct SafeNet HSM Group object failed: ",
\&                Infoblox::status_code() . ":" . Infoblox::status_detail());
\& }
\& print "SafeNet HSM Group object created successfully\en";
\&
\& #Add the SafeNet HSM object to appliance through session
\& my $response = $session\->add($hsm_group);
\&
\& unless ($response) {
\&     die("Add SafeNet HSM Group failed: ",
\&            $session\->status_code() . ":" . $session\->status_detail());
\& }
\& print "SafeNet HSM Group added successfully \en";
.Ve
.PP
\&\fB#Get and modify the SafeNet \s-1HSM\s0 Group object\fR
.PP
.Vb 6
\& #Get SafeNet HSM Group through session
\& my @retrieved_objs = $session\->get(
\&     object   => "Infoblox::Grid::HSM::SafeNet::Group",
\&     name     => "SafeNet Group",
\&     );
\& my $hsm_group = $retrieved_objs[0];
\&
\& unless ($hsm_group) {
\&     die("Get SafeNet HSM Group object failed: ",
\&            $session\->status_code() . ":" . $session\->status_detail());
\& }
\& print"Get SafeNet HSM Group successful \en";
\&
\& # Modify one of the attributes of the selected SafeNet HSM Group.
\&
\& $hsm group\->comment("Modified hsm group object");
\&
\& #Applying the changes
\& $session\->modify($hsm_group)
\&    or die("Modify SafeNet HSM Group failed",
\&             $session\->status_code() . ":" . $session\->status_detail());
\& print "SafeNet HSM Group modified successfully \en";
.Ve
.PP
\&\fB#Remove the grid member object\fR
.PP
.Vb 6
\& #Get SafeNet HSM Group through session
\& my @retrieved_objs = $session\->get(
\&     object => "Infoblox::Grid::HSM::SafeNet::Group",
\&     name   => "SafeNet Group",
\&     );
\& my $desired_hsm_group = $retrieved_objs[0];
\&
\& unless ($desired_hsm_group) {
\&     die("Get SafeNet HSM Group object failed: ",
\&            $session\->status_code() . ":" . $session\->status_detail());
\& }
\& print "Get SafeNet HSM Group successful \en";
\&
\& #Submit the object for removal
\& $session\->remove($desired_hsm_group)
\&     or die("Remove SafeNet HSM Group failed",
\&            $session\->status_code() . ":" . $session\->status_detail());
\& print "SafeNet HSM Group removed successfully \en";
\&
\& ####PROGRAM ENDS####
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Infoblox Inc. <http://www.infoblox.com/>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Infoblox::Grid::HSM::SafeNet
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2017 Infoblox Inc.

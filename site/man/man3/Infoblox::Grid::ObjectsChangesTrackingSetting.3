.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Infoblox::Grid::ObjectsChangesTrackingSetting 3"
.TH Infoblox::Grid::ObjectsChangesTrackingSetting 3 "2018-06-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Infoblox::Grid::ObjectsChangesTrackingSetting \- the object changes tracking setting.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The object changes tracking setting object is used to display the object changes state and to enable or disable the object changes tracking feature.
.SH "CONSTRUCTOR"
.IX Header "CONSTRUCTOR"
.Vb 3
\& my $object_changes = Infoblox::Grid::ObjectsChangesTrackingSetting\->new(
\&     enable => \*(Aqtrue\*(Aq | \*(Aqfalse\*(Aq, #Optional / Default is \*(Aqfalse\*(Aq
\& );
.Ve
.SH "MODULE METHODS"
.IX Header "MODULE METHODS"
+The following functions can be applied to an object changes tracking setting object.
.SS "Infoblox::Grid\->objects_changes_tracking_setting( )"
.IX Subsection "Infoblox::Grid->objects_changes_tracking_setting( )"
.RS 4
Use this function to specify the object changes tracking settings for the Grid. See Infoblox::Grid/\fBobjects_changes_tracking_setting()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get objects_changes_tracking_setting value
\& my $value = $object\->objects_changes_tracking_setting();
\&
\& #Construct objects_changes_tracking_setting value
\& my $objects_changes_tracking_setting = Infoblox::Grid::ObjectsChangesTrackingSetting\->new(
\&     enable => \*(Aqtrue\*(Aq,
\& );
\&
\& #Modify objects_changes_tracking_setting value
\& $object\->objects_changes_tracking_setting($objects_changes_tracking_setting);
.Ve
.RE
.RS 4
.RE
.SH "METHODS"
.IX Header "METHODS"
This section describes all the methods that you can use to set and retrieve the attribute values of an object changes tracking setting object.
.SS "enable( )"
.IX Subsection "enable( )"
.RS 4
Use this method to set or retrieve the flag that indicates whether the object changes tracking feature is enabled or disabled.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify 'true' to enable the object changes tracking feature or 'false' to disable it.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get enable value
\& my $value = $object\->enable();
\&
\& #Modify enable value
\& $object\->enable(\*(Aqtrue\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "enable_completion( )"
.IX Subsection "enable_completion( )"
.RS 4
Use this method to retrieve the object changes tracking completion percentage. This is a read-only attribute.
.Sp
Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The valid return value is an unsigned integer between 0 and 100.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get enable_completion value
\& my $value = $object\->enable_completion();
.Ve
.RE
.RS 4
.RE
.SS "max_objs_to_track( )"
.IX Subsection "max_objs_to_track( )"
.RS 4
Use this method to set or retrieve the maximum number of objects retained for change tracking.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an unsigned integer.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get max_objs_to_track value
\& my $value = $object\->max_objs_to_track();
\&
\& #Modify max_objs_to_track value
\& $object\->max_objs_to_track(10);
.Ve
.RE
.RS 4
.RE
.SS "max_time_to_track( )"
.IX Subsection "max_time_to_track( )"
.RS 4
Use this method to set or retrieve the maximum time period (in seconds) to track the deleted object changes.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an unsigned integer that represents time period (in seconds).
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get max_time_to_track value
\& my $value = $object\->max_time_to_track();
\&
\& #Modify max_time_to_track value
\& $object\->max_time_to_track(10);
.Ve
.RE
.RS 4
.RE
.SS "state( )"
.IX Subsection "state( )"
.RS 4
Use this method to retrieve the object changes tracking state. This is a read-only attribute.
.Sp
Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The valid values are '\s-1ENABLING\s0', '\s-1ENABLED\s0', '\s-1DISABLED\s0' and '\s-1ENABLING_ERROR\s0'.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get state value
\& my $value = $object\->state();
.Ve
.RE
.RS 4
.RE
.SH "AUTHOR"
.IX Header "AUTHOR"
Infoblox Inc. <http://www.infoblox.com/>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Infoblox::Grid,
Infoblox::Grid/\fBobjects_changes_tracking_setting()\fR
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2017 Infoblox Inc.
.SH "POD ERRORS"
.IX Header "POD ERRORS"
Hey! \fBThe above document had some coding errors, which are explained below:\fR
.IP "Around line 23:" 4
.IX Item "Around line 23:"
alternative text 'Infoblox::Grid/\fBobjects_changes_tracking_setting()\fR' contains non-escaped | or /
.IP "Around line 204:" 4
.IX Item "Around line 204:"
alternative text 'Infoblox::Grid/\fBobjects_changes_tracking_setting()\fR' contains non-escaped | or /

.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.41)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "App::Yath::Options::Display 3"
.TH App::Yath::Options::Display 3 "2020-11-03" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
App::Yath::Options::Display \- Display options for Yath.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This is where display options are defined.
.SH "PROVIDED OPTIONS"
.IX Header "PROVIDED OPTIONS"
.SS "\s-1COMMAND OPTIONS\s0"
.IX Subsection "COMMAND OPTIONS"
\fIDisplay Options\fR
.IX Subsection "Display Options"
.IP "\-\-color" 4
.IX Item "--color"
.PD 0
.IP "\-\-no\-color" 4
.IX Item "--no-color"
.PD
Turn color on, default is true if \s-1STDOUT\s0 is a \s-1TTY.\s0
.IP "\-\-no\-wrap" 4
.IX Item "--no-wrap"
.PD 0
.IP "\-\-no\-no\-wrap" 4
.IX Item "--no-no-wrap"
.PD
Do not do fancy text-wrapping, let the terminal handle it
.IP "\-\-progress" 4
.IX Item "--progress"
.PD 0
.IP "\-\-no\-progress" 4
.IX Item "--no-progress"
.PD
Toggle progress indicators. On by default if \s-1STDOUT\s0 is a \s-1TTY.\s0 You can use \-\-no\-progress to disable the 'events seen' counter and buffered event pre-display
.IP "\-\-quiet" 4
.IX Item "--quiet"
.PD 0
.IP "\-q" 4
.IX Item "-q"
.IP "\-\-no\-quiet" 4
.IX Item "--no-quiet"
.PD
Be very quiet.
.Sp
Can be specified multiple times
.IP "\-\-renderers +My::Renderer" 4
.IX Item "--renderers +My::Renderer"
.PD 0
.IP "\-\-renderers Renderer=arg1,arg2,..." 4
.IX Item "--renderers Renderer=arg1,arg2,..."
.IP "\-\-renderer +My::Renderer" 4
.IX Item "--renderer +My::Renderer"
.IP "\-\-renderer Renderer=arg1,arg2,..." 4
.IX Item "--renderer Renderer=arg1,arg2,..."
.IP "\-\-no\-renderers" 4
.IX Item "--no-renderers"
.PD
Specify renderers, (Default: \*(L"Formatter=Test2\*(R"). Use \*(L"+\*(R" to give a fully qualified module name. Without \*(L"+\*(R" \*(L"Test2::Harness::Renderer::\*(R" will be prepended to your argument.
.Sp
Can be specified multiple times. If the same key is listed multiple times the value lists will be appended together.
.IP "\-\-show\-times" 4
.IX Item "--show-times"
.PD 0
.IP "\-T" 4
.IX Item "-T"
.IP "\-\-no\-show\-times" 4
.IX Item "--no-show-times"
.PD
Show the timing data for each job
.IP "\-\-term\-width 80" 4
.IX Item "--term-width 80"
.PD 0
.IP "\-\-term\-width 200" 4
.IX Item "--term-width 200"
.IP "\-\-term\-size 80" 4
.IX Item "--term-size 80"
.IP "\-\-term\-size 200" 4
.IX Item "--term-size 200"
.IP "\-\-no\-term\-width" 4
.IX Item "--no-term-width"
.PD
Alternative to setting \f(CW$TABLE_TERM_SIZE\fR. Setting this will override the terminal width detection to the number of characters specified.
.IP "\-\-verbose" 4
.IX Item "--verbose"
.PD 0
.IP "\-v" 4
.IX Item "-v"
.IP "\-\-no\-verbose" 4
.IX Item "--no-verbose"
.PD
Be more verbose
.Sp
Can be specified multiple times
.PP
\fIFormatter Options\fR
.IX Subsection "Formatter Options"
.IP "\-\-formatter \s-1ARG\s0" 4
.IX Item "--formatter ARG"
.PD 0
.IP "\-\-formatter=ARG" 4
.IX Item "--formatter=ARG"
.IP "\-\-no\-formatter" 4
.IX Item "--no-formatter"
.PD
\&\s-1NO DESCRIPTION\s0 \- \s-1FIX ME\s0
.IP "\-\-qvf" 4
.IX Item "--qvf"
.PD 0
.IP "\-\-no\-qvf" 4
.IX Item "--no-qvf"
.PD
[Q]uiet, but [V]erbose on [F]ailure. Hide all output from tests when they pass, except to say they passed. If a test fails then \s-1ALL\s0 output from the test is verbosely output.
.IP "\-\-show\-job\-end" 4
.IX Item "--show-job-end"
.PD 0
.IP "\-\-no\-show\-job\-end" 4
.IX Item "--no-show-job-end"
.PD
Show output when a job ends. (Default: on)
.IP "\-\-show\-job\-info" 4
.IX Item "--show-job-info"
.PD 0
.IP "\-\-no\-show\-job\-info" 4
.IX Item "--no-show-job-info"
.PD
Show the job configuration when a job starts. (Default: off, unless \-vv)
.IP "\-\-show\-job\-launch" 4
.IX Item "--show-job-launch"
.PD 0
.IP "\-\-no\-show\-job\-launch" 4
.IX Item "--no-show-job-launch"
.PD
Show output for the start of a job. (Default: off unless \-v)
.IP "\-\-show\-run\-info" 4
.IX Item "--show-run-info"
.PD 0
.IP "\-\-no\-show\-run\-info" 4
.IX Item "--no-show-run-info"
.PD
Show the run configuration when a run starts. (Default: off, unless \-vv)
.SH "SOURCE"
.IX Header "SOURCE"
The source code repository for Test2\-Harness can be found at
\&\fIhttp://github.com/Test\-More/Test2\-Harness/\fR.
.SH "MAINTAINERS"
.IX Header "MAINTAINERS"
.IP "Chad Granum <exodist@cpan.org>" 4
.IX Item "Chad Granum <exodist@cpan.org>"
.SH "AUTHORS"
.IX Header "AUTHORS"
.PD 0
.IP "Chad Granum <exodist@cpan.org>" 4
.IX Item "Chad Granum <exodist@cpan.org>"
.PD
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright 2020 Chad Granum <exodist7@gmail.com>.
.PP
This program is free software; you can redistribute it and/or
modify it under the same terms as Perl itself.
.PP
See \fIhttp://dev.perl.org/licenses/\fR

.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Infoblox::Grid::DNS::ResponseRateLimiting 3"
.TH Infoblox::Grid::DNS::ResponseRateLimiting 3 "2018-06-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Infoblox::Grid::DNS::ResponseRateLimiting \- a DNS Response Rate Limiting object.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The \s-1DNS\s0 Response Rate Limiting object provides information about \s-1DNS\s0 response rate limiting configuration.
.SH "CONSTRUCTOR"
.IX Header "CONSTRUCTOR"
.Vb 7
\& my $response_rate_limiting = Infoblox::Grid::DNS::ResponseRateLimiting\->new(
\&        enable_rrl           => \*(Aqtrue\*(Aq | \*(Aqfalse\*(Aq, # Optional
\&        log_only             => \*(Aqtrue\*(Aq | \*(Aqfalse\*(Aq, # Optional
\&        responses_per_second => $uint,            # Optional
\&        window               => $uint,            # Optional
\&        slip                 => $uint,            # Optional
\& );
.Ve
.SH "SESSION METHODS"
.IX Header "SESSION METHODS"
The object does not support any session methods.
.SH "MODULE METHODS"
.IX Header "MODULE METHODS"
The following functions can be applied to a \s-1DNS\s0 Response Rate Limiting object.
.SS "Infoblox::Grid::DNS\->response_rate_limiting( )"
.IX Subsection "Infoblox::Grid::DNS->response_rate_limiting( )"
.RS 4
+Use this method to set or retrieve \s-1DNS\s0 response rate limiting settings. See Infoblox::Grid::DNS\->\fBresponse_rate_limiting()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get response_rate_limiting value
\& my $response_rate_limiting = $grid_dns\->response_rate_limiting();
\& #Modify bind_check_response_rate_limiting
\& $grid_dns\->response_rate_limiting($response_rate_limiting);
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Grid::Member::DNS\->response_rate_limiting( )"
.IX Subsection "Infoblox::Grid::Member::DNS->response_rate_limiting( )"
.RS 4
Use this method to set or retrieve \s-1DNS\s0 response rate limiting settings on the member. See Infoblox::Grid::Member::DNS\->\fBresponse_rate_limiting()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get response_rate_limiting value
\& my $response_rate_limiting = $member_dns\->response_rate_limiting();
\& #Modify response_rate_limiting
\& $member_dns\->response_rate_limiting($response_rate_limiting);
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::DNS::View\->response_rate_limiting( )"
.IX Subsection "Infoblox::DNS::View->response_rate_limiting( )"
.RS 4
Use this method to set or retrieve \s-1DNS\s0 response rate limiting settings for the \s-1DNS\s0 view. See Infoblox::DNS::View\->\fBresponse_rate_limiting()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get response_rate_limiting value
\& my $response_rate_limiting = $dns_view\->response_rate_limiting();
\& #Modify response_rate_limiting
\& $dns_view\->response_rate_limiting($response_rate_limiting);
.Ve
.RE
.RS 4
.RE
.SH "METHODS"
.IX Header "METHODS"
.SH "enable_rrl( )"
.IX Header "enable_rrl( )"
.RS 4
Use this method to enabel or disable response rate limiting.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify 'true' to enable response rate limiting or 'false' to disable it.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get enable_rrl value
\& my $enable_rrl = $response_rate_limiting\->enable_rrl();
\& #Modify enable_rrl 
\& $response_rate_limiting\->enable_rrl(\*(Aqtrue\*(Aq);
.Ve
.RE
.RS 4
.RE
.SH "log_only( )"
.IX Header "log_only( )"
.RS 4
Use this method to enable or disable logging for response rate limiting without dropping any requests.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify 'true' to enable logging for response rate limiting without dropping any requests or 'false' to disable it.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get log_only value
\& my $log_only = $response_rate_limiting\->log_only();
\& #Modify log_only 
\& $response_rate_limiting\->log_only(\*(Aqtrue\*(Aq);
.Ve
.RE
.RS 4
.RE
.SH "responses_per_second( )"
.IX Header "responses_per_second( )"
.RS 4
Use this method to set or retrieve the number of responses per client per second.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an unsigned integer.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get responses_per_second value
\& my $responses_per_second = $response_rate_limiting\->responses_per_second();
\& #Modify responses_per_second 
\& $response_rate_limiting\->responses_per_second(50);
.Ve
.RE
.RS 4
.RE
.SH "slip( )"
.IX Header "slip( )"
.RS 4
Use this method to set or retrieve the response rate limiting slip.
.Sp
Note that if a slip does not equal 0, instead of dropping the request, a truncated response is sent to each n\-th rate-limited \s-1UDP\s0 request.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an unsigned integer.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get slip value
\& my $slip = $response_rate_limiting\->slip();
\& #Modify slip 
\& $response_rate_limiting\->slip(50);
.Ve
.RE
.RS 4
.RE
.SH "window( )"
.IX Header "window( )"
.RS 4
Use this method to set or retrieve the time interval in seconds over which responses are tracked.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an unsigned integer.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get window value
\& my $window = $response_rate_limiting\->window();
\& #Modify window 
\& $response_rate_limiting\->window(10);
.Ve
.RE
.RS 4
.RE
.SH "AUTHOR"
.IX Header "AUTHOR"
Infoblox Inc. <http://www.infoblox.com/>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Infoblox::Grid::DNS, Infoblox::Grid::DNS\->\fBresponse_rate_limiting()\fR, Infoblox::Grid::Member::DNS, Infoblox::Grid::Member::DNS\->\fBresponse_rate_limiting()\fR, Infoblox::DNS::View\->\fBresponse_rate_limiting()\fR
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2017 Infoblox Inc.

.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Net::DHCP::Config::Utilities::Generator::ISC_DHCPD 3"
.TH Net::DHCP::Config::Utilities::Generator::ISC_DHCPD 3 "2019-11-13" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Net::DHCP::Config::Utilities::Generator::ISC_DHCPD \- Generates a config for ISC DHCPD from the supplied subnets.
.SH "VERSION"
.IX Header "VERSION"
Version 0.1.0
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    use Net::DHCP::Config::Utilities::Generator::ISC_DHCPD;
\&    
\&    my $options={
\&                 output=>\*(Aq./dhcp/dhcpd.conf\*(Aq,
\&                 header=>\*(Aq./dhcp/header.tt\*(Aq,
\&                 footer=>\*(Aq./dhcp/footer.tt\*(Aq,
\&                 args=>{},
\&                 };
\&    
\&    my $generator = Net::DHCP::Config::Utilities::Subnet\->new( $options );
\&    
\&    eval{
\&        $generator\->generate( $dhcp_util );
\&    };
\&    if ( $@ ){
\&        # do something upon error
\&        die ( $@ );
\&    }
\&    
\&    # just return it and don\*(Aqt write it output
\&     my $config;
\&     eval{
\&        $config=$generator\->generate( $dhcp_util );
\&    };
\&    if ( $@ ){
\&        # do something upon error
\&        die ( $@ );
\&    }
\&    print $config;
.Ve
.SH "METHODS"
.IX Header "METHODS"
.SS "new"
.IX Subsection "new"
This initiates the object.
.PP
.Vb 6
\&    my $options={
\&                 output=>\*(Aq./dhcp/dhcpd.conf\*(Aq,
\&                 header=>\*(Aq./dhcp/header.tt\*(Aq,
\&                 footer=>\*(Aq./dhcp/footer.tt\*(Aq,
\&                 vars=>{},
\&                 };
\&    
\&    my $generator = Net::DHCP::Config::Utilities::Generator::ISC_DHCPD\->new( $options );
.Ve
.PP
\fIargs\fR
.IX Subsection "args"
.PP
output
.IX Subsection "output"
.PP
This is the file to write the output too.
.PP
header
.IX Subsection "header"
.PP
This is the header template to use.
.PP
footer
.IX Subsection "footer"
.PP
This is the footer teomplate to use.
.PP
vars
.IX Subsection "vars"
.PP
This is a hash containing values to pass to Template
as the \e%vars value for when calling Template\->process.
.SS "generate"
.IX Subsection "generate"
This gnerates the config for \s-1ISC DHCPD.\s0
.PP
There are two options taken.
.PP
The first and mandatory is a Net::DHCP::Config::Utilities object
that contains the subnets that we want to generate a config for.
.PP
The second is we want to write the output to the file or not. This is
optional and if set to true no output will be writen.
.PP
This will return a string with the generated config.
.PP
If it is being outputed to a file, then \s-1ISC DHCPD\s0 will be called
as 'dhcpd \-t \-cf \f(CW$output\fR' to lint it. It will die if it exits
with a non-zero value.
.PP
.Vb 7
\&    eval{
\&        $generator\->generate( $dhcp_util );
\&    };
\&    if ( $@ ){
\&        # do something upon error
\&        die ( $@ );
\&    }
\&
\&    # just return it and don\*(Aqt write it output
\&     my $config;
\&     eval{
\&        $config=$generator\->generate( $dhcp_util );
\&    };
\&    if ( $@ ){
\&        # do something upon error
\&        die ( $@ );
\&    }
\&    print $config;
.Ve
.SH "TEMPLATES"
.IX Header "TEMPLATES"
A good base header template is as below.
.PP
.Vb 2
\&    default\-lease\-time 600;
\&    max\-lease\-time 7200;
\&    
\&    ddns\-update\-style none;
\&    
\&    authoritative;
\&    
\&    option web\-proxy code 252 = text;
\&    
\&    log\-facility local7;
.Ve
.PP
In general the footer will be left empty.
It is largely for use if you have like static hosts.
.SH "AUTHOR"
.IX Header "AUTHOR"
Zane C. Bowers-Hadley, \f(CW\*(C`<vvelox at vvelox.net>\*(C'\fR
.SH "BUGS"
.IX Header "BUGS"
Please report any bugs or feature requests to \f(CW\*(C`bug\-net\-dhcp\-config\-utilities at rt.cpan.org\*(C'\fR, or through
the web interface at <https://rt.cpan.org/NoAuth/ReportBug.html?Queue=Net\-DHCP\-Config\-Utilities>.  I will be notified, and then you'll
automatically be notified of progress on your bug as I make changes.
.SH "SUPPORT"
.IX Header "SUPPORT"
You can find documentation for this module with the perldoc command.
.PP
.Vb 1
\&    perldoc Net::DHCP::Config::Utilities
.Ve
.PP
You can also look for information at:
.IP "\(bu" 4
\&\s-1RT: CPAN\s0's request tracker (report bugs here)
.Sp
<https://rt.cpan.org/NoAuth/Bugs.html?Dist=Net\-DHCP\-Config\-Utilities>
.IP "\(bu" 4
AnnoCPAN: Annotated \s-1CPAN\s0 documentation
.Sp
<http://annocpan.org/dist/Net\-DHCP\-Config\-Utilities>
.IP "\(bu" 4
\&\s-1CPAN\s0 Ratings
.Sp
<https://cpanratings.perl.org/d/Net\-DHCP\-Config\-Utilities>
.IP "\(bu" 4
Search \s-1CPAN\s0
.Sp
<https://metacpan.org/release/Net\-DHCP\-Config\-Utilities>
.SH "ACKNOWLEDGEMENTS"
.IX Header "ACKNOWLEDGEMENTS"
.SH "LICENSE AND COPYRIGHT"
.IX Header "LICENSE AND COPYRIGHT"
This software is Copyright (c) 2019 by Zane C. Bowers-Hadley.
.PP
This is free software, licensed under:
.PP
.Vb 1
\&  The Artistic License 2.0 (GPL Compatible)
.Ve

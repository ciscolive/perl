.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Infoblox::Grid::ThreatProtection::Profile::Rule 3"
.TH Infoblox::Grid::ThreatProtection::Profile::Rule 3 "2018-06-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Infoblox::Grid::ThreatProtection::Profile::Rule \- Threat Protection profile rule object.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This object provides information about the Threat Protection profile rule settings.
.SH "SESSION METHODS"
.IX Header "SESSION METHODS"
The following functions can be applied to a Infoblox::Grid::ThreatProtection::Profile::Rule object.
.SS "Infoblox::Session\->get( )"
.IX Subsection "Infoblox::Session->get( )"
.RS 4
Use this method to retrieve all the matching objects from the Infoblox appliance.
See Infoblox::Session\->\fBget()\fR for parameters and return values.
.IP "\fBKey References\fR" 4
.IX Item "Key References"
.Vb 1
\& Apply the following attributes to get a specific Threat Protection profile rule object.
\&
\&  sid     \- Optional. The Rule ID.
\&  rule    \- Optional. The Threat Protection rule object.
\&  profile \- Optional. The Threat Protection profile object.
.Ve
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& my @retrieved_objs = $session\->get(
\&     \*(Aqobject\*(Aq => \*(AqInfoblox::Grid::ThreatProtection::Profile::Rule\*(Aq,
\&     \*(Aqsid\*(Aq    => \*(Aq211111\*(Aq
\& );
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->modify( )"
.IX Subsection "Infoblox::Session->modify( )"
.RS 4
Use this method to modify an object in the Infoblox appliance.
See Infoblox::Session\->\fBmodify()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& my $rule = $session\->search(\*(Aqobject\*(Aq => \*(AqInfoblox::Grid::ThreatProtection::Rule\*(Aq, \*(Aqsid\*(Aq => \*(Aq211111\*(Aq);
\& my $object = $session\->search(\*(Aqobject\*(Aq => \*(AqInfoblox::Grid::ThreatProtection::Profile::Rule\*(Aq, \*(Aqrule\*(Aq => $rule);
\&
\& my $conf = $object\->config();
\& $conf\->action(\*(AqPASS\*(Aq);
\&
\& # Use this method to modify attributes of object.
\& $object\->disable(\*(Aqtrue\*(Aq);
\& $object\->override_disable(\*(Aqtrue\*(Aq);
\& $object\->config($conf);
\& $object\->override_config(\*(Aqtrue\*(Aq);
\& # Submit modification
\& my $response = $session\->modify( $object );
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->search( )"
.IX Subsection "Infoblox::Session->search( )"
.RS 4
Use this method to search for objects in the Infoblox appliance.
See Infoblox::Session\->\fBsearch()\fR for parameters and return values.
.IP "\fBKey References\fR" 4
.IX Item "Key References"
.Vb 1
\& Apply the following attributes to get a specific Grid Threat Protection::Rule object.
\&
\&  sid     \- Optional. The Rule ID.
\&  rule    \- Optional. The Threat Protection rule object.
\&  profile \- Optional. The Threat Protection profile object.
.Ve
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 5
\& #Retrieve the Threat Protection rule from appliance
\& my $rule = $session\->search(
\&     \*(Aqobject\*(Aq => \*(AqInfoblox::Grid::ThreatProtection::Rule\*(Aq,
\&     \*(Aqsid\*(Aq    => \*(Aq211111\*(Aq,
\& );
\&
\& my $object = $session\->search(
\&     \*(Aqobject\*(Aq => \*(AqInfoblox::Grid::ThreatProtection::Profile::Rule\*(Aq,
\&     \*(Aqrule\*(Aq   => $rule,
\& );
.Ve
.RE
.RS 4
.RE
.SH "METHODS"
.IX Header "METHODS"
This object provides information about the Threat Protection profile rule settings.
.SS "config( )"
.IX Subsection "config( )"
.RS 4
Use this method to set or retrieve the rule configuration information.
.Sp
Setting this method to a defined value implicitly sets the override_config method to 'true'. Setting the parameter to undefined causes the appliance to use the Grid default and automatically resets the override_config attribute to 'false'.
.Sp
Note that when config is set to a defined value and override_config is set to 'false', the last operation takes precedence. Thus the sequence \f(CW$object\fR\->config($value); \f(CW$object\fR\->override_config('false'); will set override_config to 'false', and the sequence \f(CW$object\fR\->override_config('false'); \f(CW$object\fR\->config($value); will result in override_config='true'.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is reference on Infoblox::Grid::ThreatProtection::RuleConfig object.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get config value
\& my $value = $object\->config();
\&
\& #Modify config value
\& $value\->log_severity(\*(AqINFORMATIONAL\*(Aq);
\& $object\->config($value);
.Ve
.RE
.RS 4
.RE
.SS "disable( )"
.IX Subsection "disable( )"
.RS 4
Use this method to set or indicate whether the Threat Protection profile rule is disabled.
.Sp
Setting this method to a defined value implicitly sets the override_disable method to 'true'. Setting the parameter to undefined causes the appliance to use the Grid default and automatically resets the override_disable attribute to 'false'.
.Sp
Note that when disable is set to a defined value and override_disable is set to 'false', the last operation takes precedence. Thus the sequence \f(CW$object\fR\->disable('true'); \f(CW$object\fR\->override_disable('false'); will set override_disable to 'false', and the sequence \f(CW$object\fR\->override_disable('false'); \f(CW$object\fR\->disable('true'); will result in override_disable='true'.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify 'true' to disable Threat Protection profile rule and 'false' to enable it.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get disable value
\& my $value = $object\->disable();
\&
\& #Modify disable value
\& $object\->disable(\*(Aqtrue\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "override_config( )"
.IX Subsection "override_config( )"
.RS 4
The override_config attribute controls whether the current config value is used for the Threat Protection profile rule instead of the Grid default.
.Sp
The override_config attribute can be specified explicitly. It is also set implicitly when config is set to a defined value.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify 'true' to set the override_config flag or 'false' to deactivate/unset it. The default value is 'false'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get override_config value
\& my $value = $object\->override_config();
\&
\& #Modify override_config value
\& $object\->override_config(\*(Aqtrue\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "override_disable( )"
.IX Subsection "override_disable( )"
.RS 4
The override_disable attribute controls whether the current disable value is used for the Threat Protection profile rule instead of the Grid default.
.Sp
The override_disable attribute can be specified explicitly. It is also set implicitly when disable is set to a defined value.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify 'true' to set the override_disable flag or 'false' to deactivate/unset it. The default value is 'false'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get override_disable value
\& my $value = $object\->override_disable();
\&
\& #Modify override_disable value
\& $object\->override_disable(\*(Aqtrue\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "profile( )"
.IX Subsection "profile( )"
.RS 4
Use this method to retrieve the Threat Protection profile object. This is a read-only attribute.
.Sp
Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value, an Infoblox::Grid::ThreatProtection::Profile object.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get profile value
\& my $value = $object\->profile();
.Ve
.RE
.RS 4
.RE
.SS "rule( )"
.IX Subsection "rule( )"
.RS 4
Use this method to retrieve the Threat Protection rule object. This is a read-only attribute.
.Sp
Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value, an Infoblox::Grid::ThreatProtection::Rule object.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get rule value
\& my $value = $object\->rule();
.Ve
.RE
.RS 4
.RE
.SS "sid( )"
.IX Subsection "sid( )"
.RS 4
Use this method to retrieve the Rule \s-1ID.\s0 This is a read-only attribute.
.Sp
Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get sid value
\& my $value = $object\->sid();
.Ve
.RE
.RS 4
.RE
.SH "SAMPLE CODE"
.IX Header "SAMPLE CODE"
The following sample code demonstrates the different functions that can be applied to an object, such as add, search, modify, and remove.
This sample also includes error handling for the operations.
.PP
\&\fB#Preparation prior to a Threat Protection profile rule insertion\fR
.PP
.Vb 3
\& #PROGRAM STARTS: Include all the modules that will be used
\& use strict;
\& use Infoblox;
\&
\& #Create a session to the Infoblox appliance
\&
\& my $session = Infoblox::Session\->new(
\&                master   => "192.168.1.2", #appliance host ip
\&                username => "admin",       #appliance user login
\&                password => "infoblox"     #appliance password
\&                );
\&
\& unless ($session) {
\&        die("Construct session failed: ",
\&                Infoblox::status_code() . ":" . Infoblox::status_detail());
\& }
\& print "Session created successfully\en";
\&
\& #Create a Threat Protection profile
\& my $atp_profile = Infoblox::Grid::ThreatProtection::Profile\->new(
\&                name    => "atp_profile1",
\&                comment => "add TP profile",
\&                );
\&
\& unless ($atp_profile) {
\&        die("Construct Threat Protection profile failed: ",
\&                Infoblox::status_code() . ":" . Infoblox::status_detail());
\& }
\&
\& #Add the Threat Protection profile object to the Infoblox appliance through a session
\& $session\->add($atp_profile)
\&        or die("Add Threat Protection profile failed: ",
\&                        $session\->status_code() . ":" . $session\->status_detail());
\& print "Threat Protection profile object added to server successfully\en";
.Ve
.PP
\&\fB#Search for a specific Threat Protection profile rule\fR
.PP
.Vb 6
\& #Search all Threat Protection profile rules that matches "atp_profile1" profile
\& my @retrieved_objs = $session\->search(
\&                object  => "Infoblox::Grid::ThreatProtection::Profile::Rule",
\&                profile => $atp_profile,
\&                );
\& my $object = $retrieved_objs[0];
\&
\& unless ($object) {
\&        die("Search Threat Protection profile rule failed: ",
\&                $session\->status_code() . ":" . $session\->status_detail());
\& }
\& print "Search Threat Protection profile rule object found at least 1 matching entry\en";
.Ve
.PP
\&\fB#Get and modify a Threat Protection profile rule\fR
.PP
.Vb 6
\& #Get a Threat Protection profile rule through the session
\& my @retrieved_objs = $session\->get(
\&                object  => "Infoblox::Grid::ThreatProtection::Profile::Rule",
\&                profile => $atp_profile,
\&                );
\& my $object = $retrieved_objs[0];
\&
\& unless ($object) {
\&        die("Get Threat Protection profile rule failed: ",
\&                $session\->status_code() . ":" . $session\->status_detail());
\& }
\& print "Get Threat Protection profile rule object found at least 1 matching entry\en";
\&
\& #Modify one of the attributes of the specified Threat Protection profile rule 
\& $object\->disable("true");
\&
\& #Apply the changes
\& $session\->modify($object)
\&        or die("Modify Threat Protection profile rule failed: ",
\&                $session\->status_code() . ":" . $session\->status_detail());
\& print "Threat Protection profile rule object modified successfully \en";
\&
\& ####PROGRAM ENDS####
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Infoblox Inc. <http://www.infoblox.com/>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Infoblox::Session,
Infoblox::Session\->\fBget()\fR,
Infoblox::Session\->\fBmodify()\fR,
Infoblox::Session\->\fBsearch()\fR,
Infoblox::Grid::ThreatProtection::Ruleset,
Infoblox::Grid::ThreatProtection::RuleConfig, 
Infoblox::Grid::ThreatProtection::Rule,
Infoblox::Grid::ThreatProtection::Profile,
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2017 Infoblox Inc.

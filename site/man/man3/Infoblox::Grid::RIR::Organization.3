.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Infoblox::Grid::RIR::Organization 3"
.TH Infoblox::Grid::RIR::Organization 3 "2018-06-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Infoblox::Grid::RIR::Organization \- Regional Internet Registry (RIR) organization object.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Regional Internet Registry (\s-1RIR\s0) organization object.
.SH "CONSTRUCTOR"
.IX Header "CONSTRUCTOR"
.Vb 10
\& my $rir_org = Infoblox::Grid::RIR::Organization\->new(
\&    id                    => $string,                      # Required
\&    rir                   => $rir,                         # Required, an Infoblox::Grid::RIR object
\&    extattrs              => { $string => $extattr, ... }, # Required
\&    extensible_attributes => $extattrs,                    # Required
\&    name                  => $string,                      # Required
\&    maintainer            => $string,                      # Required
\&    password              => $string,                      # Required, write\-only
\&    sender_email          => $string,                      # Required
\& );
.Ve
.PP
You cannot set both extattrs and extensible_attributes attributes at the same time.
.SH "SESSION METHODS"
.IX Header "SESSION METHODS"
This section describes all the methods in an Infoblox::Session module that you can apply to \s-1RIR\s0 organization object.
.PP
Support for \s-1RIR/SWIP\s0 must be enabled at the Grid level. See Infoblox::Grid\->\fBenable_rir_swip()\fR method.
.SS "Infoblox::Session\->add( )"
.IX Subsection "Infoblox::Session->add( )"
.RS 4
Use this method to add an object to the Infoblox appliance. See Infoblox::Session\->\fBadd()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 10
\& #Construct an object
\& my $rir_org = Infoblox::Grid::RIR::Organization\->new(
\&    id                     => \*(AqORG_ID\*(Aq,
\&    name                   => \*(AqRIR organization\*(Aq,
\&    maintainer             => \*(Aqsupport\*(Aq,
\&    password               => \*(Aqinfoblox\*(Aq,
\&    sender_email           => \*(Aqsupport@infoblox.com\*(Aq,
\&    rir                    => $rir,
\&    extensible_attributes\*(Aq => {\*(AqRIPE Registry Source\*(Aq => \*(AqRIPE\*(Aq,
\&                               \*(AqRIPE Country\*(Aq => \*(AqUnited States (US)\*(Aq,
\&                               \*(AqRIPE Admin Contact\*(Aq => \*(AqCA1\-TEST\*(Aq,
\&                               \*(AqRIPE Technical Contact\*(Aq => \*(AqCT1\-TEST\*(Aq,
\&                               \*(AqRIPE Email\*(Aq => \*(Aqadmin@infoblox.com\*(Aq},
\& );
\&
\& #Submit for addition
\& my $response = $session\->add( $rir_org );
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->get( )"
.IX Subsection "Infoblox::Session->get( )"
.RS 4
Use this method to retrieve all the matching objects from the Infoblox appliance. See Infoblox::Session\->\fBget()\fR for parameters and return values.
.IP "\fBKey References\fR" 4
.IX Item "Key References"
.Vb 1
\& Apply the following attributes to get a specific RIR organization object:
\&
\&  id           \- Optional. The RIR Organization ID.
\&  name         \- Optional. The RIR organization name.
\&  extattrs     \- Optional. A hash reference containing extensible attributes.
.Ve
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& my @retrieved_objs = $session\->get(
\&    object => \*(AqInfoblox::Grid::RIR::Organization\*(Aq,
\&    name   => \*(AqRIR organization\*(Aq,
\& );
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->modify( )"
.IX Subsection "Infoblox::Session->modify( )"
.RS 4
Use this method to modify an object in the Infoblox appliance. See Infoblox::Session\->\fBmodify()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Use this method to set password of a RIR organization object.
\& $rir_org\->password(\*(Aqinfoblox\*(Aq);
\& # Submit modification
\& my $response = $session\->modify( $rir_org );
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->remove( )"
.IX Subsection "Infoblox::Session->remove( )"
.RS 4
Use this method to remove an object from the Infoblox appliance. See Infoblox::Session\->\fBremove()\fR for parameters and return values.
.Sp
To remove a specific object, first use \fBget()\fR or \fBsearch()\fR to retrieve the specific object, and then submit this object for removal.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 9
\& #Get the objects with the same name
\& my @retrieved_objs = $session\->get(
\&    object => \*(AqInfoblox::Grid::RIR::Organization\*(Aq,
\&    name   => \*(AqRIR organization\*(Aq,
\& );
\& #Find the desired object from the retrieved list.
\& my $desired_rir_org = $retrieved_objs[0];
\& # Submit for removal
\& my $response = $session\->remove( $desired_rir_org );
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->search( )"
.IX Subsection "Infoblox::Session->search( )"
.RS 4
Use this method to search for \s-1RIR\s0 organization objects in the Infoblox appliance. See Infoblox::Session\->\fBsearch()\fR for parameters and return values.
.IP "\fBKey References\fR" 4
.IX Item "Key References"
.Vb 1
\& Apply the following attributes to search a specific RIR organization object:
\&
\&  id           \- Optional. The RIR Organization ID.
\&  name         \- Optional. The RIR organization name.
\&  extattrs     \- Optional. A hash reference containing extensible attributes.
.Ve
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& my @retrieved_objs = $session\->search(
\&    object => \*(AqInfoblox::Grid::RIR::Organization\*(Aq,
\&    name   => \*(AqRIR organization\*(Aq,
\& );
.Ve
.RE
.RS 4
.RE
.SH "METHODS"
.IX Header "METHODS"
This section describes all the methods that you can use to configure and retrieve attribute values of the \s-1RIR\s0 organization object.
.SS "id( )"
.IX Subsection "id( )"
.RS 4
Use this method to set or retrieve \s-1RIR\s0 Organization \s-1ID.\s0
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
\&\s-1RIR\s0 Organization \s-1ID\s0 in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get attribute value
\& my $value = $rir_org\->id();
\& #Modify attribute value
\& $rir_org\->id(\*(AqORG\-MC1\-RIPE\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "rir( )"
.IX Subsection "rir( )"
.RS 4
Use this method to set or retrieve \s-1RIR\s0 object which is associated with the organization.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
An Infoblox::Grid::RIR object.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get attribute value
\& my $value = $rir_org\->rir();
\& #Modify attribute value
\& $rir_org\->rir($rir);
.Ve
.RE
.RS 4
.RE
.SS "extattrs( )"
.IX Subsection "extattrs( )"
.RS 4
Use this method to set or retrieve the extensible attributes associated with a \s-1RIR\s0 organization object.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is a hash reference containing the names of extensible attributes and their associated values ( Infoblox::Grid::Extattr objects ).
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get extattrs
\& my $ref_extattrs = $rir_org\->extattrs();
\& #Modify extattrs
\& $rir_org\->extattrs({ \*(AqSite\*(Aq => $extattr1, \*(AqAdministrator\*(Aq => $extattr2 });
.Ve
.RE
.RS 4
.RE
.SS "extensible_attributes( )"
.IX Subsection "extensible_attributes( )"
.RS 4
Use this method to set or retrieve the extensible attributes associated with a \s-1RIR\s0 organization object.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
For valid values for extensible attributes, see Infoblox::Grid::ExtensibleAttributeDef/Extensible Attribute Values and Infoblox::Grid\->\fBenable_rir_swip()\fR.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 8
\& #Get attribute value
\& my $value = $rir_org\->extensible_attributes();
\& #Modify attribute value
\& $rir_org\->extensible_attributes({\*(AqRIPE Registry Source\*(Aq => \*(AqTEST\*(Aq,
\&                                  \*(AqRIPE Country\*(Aq => \*(AqCanada (CA)\*(Aq,
\&                                  \*(AqRIPE Admin Contact\*(Aq => \*(AqCA2\-TEST\*(Aq,
\&                                  \*(AqRIPE Technical Contact\*(Aq => \*(AqCT2\-TEST\*(Aq,
\&                                  \*(AqRIPE Email\*(Aq => \*(Aqsupport@infoblox.com\*(Aq});
.Ve
.RE
.RS 4
.RE
.SS "name( )"
.IX Subsection "name( )"
.RS 4
Use this method to set or retrieve \s-1RIR\s0 organization name.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
\&\s-1RIR\s0 organization name in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get attribute value
\& my $value = $rir_org\->name();
\& #Modify attribute value
\& $rir_org\->name(\*(AqNew RIR organization\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "maintainer( )"
.IX Subsection "maintainer( )"
.RS 4
Use this method to set or retrieve the \s-1RIR\s0 organization maintainer.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
\&\s-1RIR\s0 organization maintainer in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get attribute value
\& my $value = $rir_org\->maintainer();
\& #Modify attribute value
\& $rir_org\->maintainer(\*(Aqsupport\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "password( )"
.IX Subsection "password( )"
.RS 4
Use this method to set the password for \s-1RIR\s0 organization's maintainer. This is a write-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The password for \s-1RIR\s0 organization's maintainer in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns true when the modification succeeds, and returns false when the operation fails.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Set attribute value
\& $rir_org\->password(\*(Aqinfoblox\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "sender_email( )"
.IX Subsection "sender_email( )"
.RS 4
Use this method to set or retrieve the sender email address for \s-1RIR\s0 organization.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The sender email address for \s-1RIR\s0 organization in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get attribute value
\& my $value = $rir_org\->sender_email();
\& #Modify attribute value
\& $rir_org\->sender_email(\*(Aqsupport@infoblox.com\*(Aq);
.Ve
.RE
.RS 4
.RE
.SH "SAMPLE CODE"
.IX Header "SAMPLE CODE"
The following sample code demonstrates the different functions that can be applied to an object such as add, get, modify, search and remove. This sample also includes error handling for the operations.
.PP
\&\fB#Preparation prior to getting and modifying \s-1RIR\s0 organization object\fR
.PP
.Vb 2
\& use strict;
\& use Infoblox;
\&
\& #refers to Infoblox Appliance IP address
\& my $host_ip = "192.168.1.2";
\&
\& #Create a session to the Infoblox appliance
\&
\& my $session = Infoblox::Session\->new(
\&     master   => $host_ip,
\&     username => "admin",
\&     password => "infoblox"
\& );
\& unless ($session) {
\&        die("Construct session failed: ",
\&                Infoblox::status_code() . ":" . Infoblox::status_detail());
\& }
\& print "Session created successfully\en";
\&
\& my $grid = $self\->{\*(Aqsession\*(Aq}\->get(\*(Aqobject\*(Aq => \*(AqInfoblox::Grid\*(Aq);
\&
\& unless ($grid) {
\&     die("Get Grid object failed: ",
\&            $session\->status_code() . ":" . $session\->status_detail());
\& }
\& print"Get Grid successful \en";
\&
\& $grid\->enable_rir_swip(\*(Aqtrue\*(Aq);
\&
\& $session\->modify($grid)
\&    or die("Modify Grid failed",
\&             $session\->status_code() . ":" . $session\->status_detail());
\& print "Grid modified successfully \en";
.Ve
.PP
\&\fB#Create \s-1RIR\s0 organization object\fR
.PP
.Vb 1
\& my $rir = $self\->{\*(Aqsession\*(Aq}\->get(\*(Aqobject\*(Aq => \*(AqInfoblox::Grid::RIR\*(Aq, \*(Aqname\*(Aq => \*(AqRIPE\*(Aq);
\&
\& unless ($rir) {
\&     die("Get RIR object failed: ",
\&            $session\->status_code() . ":" . $session\->status_detail());
\& }
\& print"Get RIR successful \en";
\&
\& my $rir_org = Infoblox::Grid::RIR::Organization\->new(
\&        \*(Aqid\*(Aq            => \*(AqRIR_ORG_ID\*(Aq,
\&        \*(Aqname\*(Aq          => \*(AqRIR organization\*(Aq,
\&        \*(Aqmaintainer\*(Aq    => \*(Aqsupport\*(Aq,
\&        \*(Aqpassword\*(Aq      => \*(Aqinfoblox\*(Aq,
\&        \*(Aqsender_email\*(Aq  => \*(Aqsupport@infoblox.com\*(Aq,
\&        \*(Aqrir\*(Aq           => $rir,
\&        \*(Aqextensible_attributes\*(Aq => {\*(AqRIPE RIPE Registry Source\*(Aq => \*(AqRIPE\*(Aq,
\&                                    \*(AqRIPE Country\*(Aq => \*(AqUnited States (US)\*(Aq,
\&                                    \*(AqRIPE Admin Contact\*(Aq => \*(AqCA1\-TEST\*(Aq,
\&                                    \*(AqRIPE Technical Contact\*(Aq => \*(AqCT1\-TEST\*(Aq,
\&                                    \*(AqRIPE Email\*(Aq => \*(Aqadmin@infoblox.com\*(Aq},
\& );
\&
\& unless ($rir_org) {
\&     die("Construct RIR organization object failed: ",
\&            $session\->status_code() . ":" . $session\->status_detail());
\& }
\& print"RIR organization object created successfully\en";
\&
\& my $response = $session\->add($rir_org);
\&
\& unless ($response) {
\&     die("Add RIR organization failed: ",
\&            $session\->status_code() . ":" . $session\->status_detail());
\& }
\& print"RIR organization added successfully \en";
.Ve
.PP
\&\fB#Search for \s-1RIR\s0 organization object\fR
.PP
.Vb 4
\& my @retrieved_objs = $session\->search(
\&    object => \*(AqInfoblox::Grid::RIR::Organization\*(Aq,
\&    id     => \*(AqRIR_ORG_ID\*(Aq,
\& );
\&
\& $rir_org = $retrieved_objs[0];
\&
\& unless ($rir_org) {
\&         die("Search RIR organization object failed: ",
\&                 $session\->status_code() . ":" . $session\->status_detail());
\& }
\& print "Search RIR organization object found at least 1 matching entry\en";
.Ve
.PP
\&\fB#Get and modify \s-1RIR\s0 organization object\fR
.PP
.Vb 4
\& @retrieved_objs = $session\->get(
\&    object => \*(AqInfoblox::Grid::RIR::Organization\*(Aq,
\&    id     => \*(AqRIR_ORG_ID\*(Aq,
\& );
\&
\& $rir_org = $retrieved_objs[0];
\&
\& unless ($rir_org) {
\&     die("Get RIR organization object failed: ",
\&            $session\->status_code() . ":" . $session\->status_detail());
\& }
\& print"Get RIR organization successful \en";
\&
\& $rir_org\->maintainer("admin");
\&
\& $session\->modify($rir_org)
\&    or die("Modify RIR organization failed",
\&             $session\->status_code() . ":" . $session\->status_detail());
\& print "RIR organization modified successfully \en";
.Ve
.PP
\&\fB#Remove \s-1RIR\s0 organization object\fR
.PP
.Vb 4
\& @retrieved_objs = $session\->get(
\&    object => \*(AqInfoblox::Grid::RIR::Organization\*(Aq,
\&    id     => \*(AqRIR_ORG_ID\*(Aq,
\& );
\&
\& $rir_org = $retrieved_objs[0];
\&
\& unless ($rir_org) {
\&     die("Get RIR organization object failed: ",
\&            $session\->status_code() . ":" . $session\->status_detail());
\& }
\& print"Get RIR organization successful \en";
\&
\& $session\->remove( $rir_org )
\&     or die("Remove RIR organization failed",
\&            $session\->status_code() . ":" . $session\->status_detail());
\& print"RIR organization removed successfully \en";
\&
\& ####PROGRAM ENDS####
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Infoblox Inc. <http://www.infoblox.com/>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Infoblox::Session, Infoblox::Grid::RIR, Infoblox::Grid::ExtensibleAttributeDef/Extensible Attribute Values, Infoblox::Grid\->\fBenable_rir_swip()\fR
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2017 Infoblox Inc.

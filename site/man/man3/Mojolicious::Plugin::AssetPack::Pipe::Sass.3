.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Mojolicious::Plugin::AssetPack::Pipe::Sass 3"
.TH Mojolicious::Plugin::AssetPack::Pipe::Sass 3 "2020-09-06" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mojolicious::Plugin::AssetPack::Pipe::Sass \- Process sass and scss files
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.SS "Application"
.IX Subsection "Application"
.Vb 1
\&  plugin AssetPack => {pipes => [qw(Sass Css Combine)]};
\&
\&  $self\->pipe("Sass")\->functions({
\&    q[image\-url($arg)] => sub {
\&      my ($pipe, $arg) = @_;
\&      return sprintf "url(/assets/%s)", $_[1];
\&    }
\&  });
.Ve
.SS "Sass file"
.IX Subsection "Sass file"
The sass file below shows how to use the custom \*(L"image-url\*(R" function:
.PP
.Vb 3
\&  body {
\&    background: #fff image\-url(\*(Aqimg.png\*(Aq) top left;
\&  }
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Mojolicious::Plugin::AssetPack::Pipe::Sass will process sass and scss files.
.PP
This module require either the optional module CSS::Sass or the \f(CW\*(C`sass\*(C'\fR
program to be installed. \f(CW\*(C`sass\*(C'\fR will be automatically installed using
<https://rubygems.org/> unless already available.
.SH "ATTRIBUTES"
.IX Header "ATTRIBUTES"
.SS "functions"
.IX Subsection "functions"
.Vb 1
\&  $hash_ref = $self\->functions;
.Ve
.PP
Used to define custom \s-1SASS\s0 functions. Note that the functions will be called
with \f(CW$self\fR as the first argument, followed by any arguments from the \s-1SASS\s0
function. This invocation is \s-1EXPERIMENTAL,\s0 but will hopefully not change.
.PP
This attribute requires CSS::Sass to work. It will not get passed on to
the \f(CW\*(C`sass\*(C'\fR executable.
.PP
See \*(L"\s-1SYNOPSIS\*(R"\s0 for example.
.SS "generate_source_map"
.IX Subsection "generate_source_map"
.Vb 2
\&  $bool = $self\->generate_source_map;
\&  $self = $self\->generate_source_map(1);
.Ve
.PP
This pipe will generate source maps if true. Default is \*(L"1\*(R" if
\&\*(L"mode\*(R" in Mojolicious is \*(L"development\*(R".
.PP
See also <http://thesassway.com/intermediate/using\-source\-maps\-with\-sass> and
<https://robots.thoughtbot.com/sass\-source\-maps\-chrome\-magic> for more
information about the usefulness.
.SH "METHODS"
.IX Header "METHODS"
.SS "process"
.IX Subsection "process"
See \*(L"process\*(R" in Mojolicious::Plugin::AssetPack::Pipe.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Mojolicious::Plugin::AssetPack.

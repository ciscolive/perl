.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Infoblox::Grid::Member::DiscoveryProperties 3"
.TH Infoblox::Grid::Member::DiscoveryProperties 3 "2018-06-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Infoblox::Grid::Member::DiscoveryProperties \- Grid member discovery properties.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The object provides information about Grid member discovery properties.
.SH "CONSTRUCTOR"
.IX Header "CONSTRUCTOR"
.Vb 10
\& my $object = Infoblox::Grid::Member::DiscoveryProperties\->new(
\&    \*(Aqmember\*(Aq                     => $string,                    # Optional
\&    \*(Aqenable_service\*(Aq             => \*(Aqtrue\*(Aq | \*(Aqfalse\*(Aq,           # Optional
\&    \*(Aqscan_interfaces\*(Aq            => [$si1, ...],                # Optional
\&    \*(Aqrole\*(Aq                       => \*(AqDNM\*(Aq | \*(AqDNP\*(Aq | \*(AqNONE\*(Aq,     # Optional
\&    \*(Aqseed_routers\*(Aq               => [$seed1, ...],              # Optional
\&    \*(Aqsnmp3_credentials\*(Aq          => [$snmp3, ...],              # Optional
\&    \*(Aqoverride_snmp3_credentials\*(Aq => \*(Aqtrue\*(Aq | \*(Aqfalse\*(Aq,           # Optional
\&    \*(Aqsnmp_credentials\*(Aq           => [$snmp, ...],               # Optional
\&    \*(Aqoverride_snmp_credentials\*(Aq  => \*(Aqtrue\*(Aq | \*(Aqfalse\*(Aq,           # Optional
\&    \*(Aqcli_credentials\*(Aq            => [$cli1, ...],               # Optional
\&    \*(Aqoverride_cli_credentials\*(Aq   => \*(Aqtrue\*(Aq | \*(Aqfalse\*(Aq,           # Optional
\&    \*(Aqcisco_apic_configurations\*(Aq  => [$conf1, ...],              # Optional
\& );
.Ve
.SH "SESSION METHODS"
.IX Header "SESSION METHODS"
This section describes all the methods in Infoblox::Session that you can apply to the object.
.SS "Infoblox::Session\->get( )"
.IX Subsection "Infoblox::Session->get( )"
.RS 4
Use this method to retrieve all the matching objects from the Infoblox appliance. See Infoblox::Session\->\fBget()\fR for parameters and return values.
.IP "\fBKey References\fR" 4
.IX Item "Key References"
.Vb 1
\& Apply the following attributes to get a specific object:
\&
\&  member \- Optional. The member name.
.Ve
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& my @retrieved_objs = $session\->get(
\&     \*(Aqobject\*(Aq => \*(AqInfoblox::Grid::Member::DiscoveryProperties\*(Aq,
\&     \*(Aqmember\*(Aq => \*(Aqmember.com\*(Aq,
\& );
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->modify( )"
.IX Subsection "Infoblox::Session->modify( )"
.RS 4
Use this method to modify an object in the Infoblox appliance. See Infoblox::Session\->\fBmodify()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Use this method to modify role.
\& $object\->role("DNP");
\& # Submit modification
\& my $response = $session\->modify( $object );
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->search( )"
.IX Subsection "Infoblox::Session->search( )"
.RS 4
Use this method to search for objects in the Infoblox appliance. See Infoblox::Session\->\fBsearch()\fR for parameters and return values.
.IP "\fBKey References\fR" 4
.IX Item "Key References"
.Vb 1
\& Apply the following attributes to search for a object:
\&
\&  member \- Optional. The member name.
.Ve
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 5
\& # search for all objects
\& my @retrieved_objs = $session\->search(
\&     \*(Aqobject\*(Aq => \*(AqInfoblox::Grid::Member::DiscoveryProperties\*(Aq,
\&     \*(Aqmember\*(Aq => \*(Aqmember.com\*(Aq,
\& );
.Ve
.RE
.RS 4
.RE
.SH "METHODS"
.IX Header "METHODS"
This section describes all the methods that you can use to set or retrieve the attribute values of the object.
.SS "cisco_apic_configurations( )"
.IX Subsection "cisco_apic_configurations( )"
.RS 4
Use this method to set or retrieve the list of Cisco \s-1APIC\s0 configurations for a given probe Member.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is an array reference that contains Infoblox::Grid::Member::Discovery::CiscoAPICConfig objects.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 10
\& # Get attribute value
\& my $value = $object\->cisco_apic_configurations();
\& # Construct Cisco APIC config
\& my $conf = Infoblox::Grid::Member::Discovery::CiscoAPICConfig\->new(
\&    \*(Aqaddress\*(Aq        => \*(Aq10.10.10.2\*(Aq,
\&    \*(Aqca_certificate\*(Aq => $ca_cert,
\&    \*(Aqcomment\*(Aq        => \*(AqThe comment string.\*(Aq,
\&    \*(Aqnetwork_view\*(Aq   => \*(Aqdefault\*(Aq,
\&    \*(Aqpassword\*(Aq       => \*(Aqsecret\*(Aq,
\&    \*(Aqprotocol\*(Aq       => \*(AqHTTP\*(Aq,
\&    \*(Aqusername\*(Aq       => \*(Aqadmin\*(Aq,
\& );
\& $object\->cisco_apic_configurations([$conf]);
.Ve
.RE
.RS 4
.RE
.SS "default_seed_routers( )"
.IX Subsection "default_seed_routers( )"
.RS 4
Use this method to retrieve a list of default seed routers. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $object\->default_seed_routers();
.Ve
.RE
.RS 4
.RE
.SS "enable_service( )"
.IX Subsection "enable_service( )"
.RS 4
Use this method to enable or disable the discovery service.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to enable the discovery service or \*(L"false\*(R" to disable it. Default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->enable_service();
\& # Modify attribute value
\& $object\->enable_service(\*(Aqtrue\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "cli_credentials( )"
.IX Subsection "cli_credentials( )"
.RS 4
Use this method to set or retrieve the Discovery \s-1CLI\s0 credentials.
.Sp
Setting this method to a defined value implicitly sets the override_cli_credentials method to \*(L"true\*(R". Setting the parameter to undefined causes the appliance to use the grid default and automatically resets the override_cli_credentials attribute to \*(L"false\*(R".
.Sp
Note that when cli_credentials is set to a defined value and override_cli_credentials is set to \*(L"false\*(R", the last operation takes precedence. Thus the sequence \f(CW$object\fR\->cli_credentials([$snmp]); \f(CW$object\fR\->override_cli_credentials(\*(L"false\*(R"); will set override_cli_credentials to \*(L"false\*(R", and the sequence \f(CW$object\fR\->override_cli_credentials(\*(L"false\*(R"); \f(CW$object\fR\->cli_credentials([$snmp]); will result in override_cli_credentials=\*(L"true\*(R".
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is an array reference that contains Infoblox::Grid::Discovery::CLICredential objects.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->cli_credentials();
\& # Modify attribute value
\& $object\->cli_credentials([$cli1, $cli2]);
.Ve
.RE
.RS 4
.RE
.SS "member( )"
.IX Subsection "member( )"
.RS 4
Use this method to set or retrieve the member name.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The member name in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->member();
\& # Modify attribute value
\& $object\->member(\*(Aqinfoblox.com\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "override_snmp3_credentials( )"
.IX Subsection "override_snmp3_credentials( )"
.RS 4
The override_snmp3_credentials attribute controls whether the snmp3_credentials value in the member is used, instead of the grid default.
.Sp
The override_snmp3_credentials attribute can be specified explicitly. It is also set implicitly when snmp3_credentials is set to a defined value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to set the override_snmp3_credentials flag or \*(L"false\*(R" to deactivate/unset it. The default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->override_snmp3_credentials();
\& # Modify attribute value
\& $object\->override_snmp3_credentials(\*(Aqtrue\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "override_cli_credentials( )"
.IX Subsection "override_cli_credentials( )"
.RS 4
The override_cli_credentials attribute controls whether the cli_credentials value in the member is used, instead of the grid default.
.Sp
The override_cli_credentials attribute can be specified explicitly. It is also set implicitly when cli_credentials is set to a defined value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to set the override_cli_credentials flag or \*(L"false\*(R" to deactivate/unset it. The default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->override_cli_credentials();
\& # Modify attribute value
\& $object\->override_cli_credentials(\*(Aqtrue\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "override_snmp_credentials( )"
.IX Subsection "override_snmp_credentials( )"
.RS 4
The override_snmp_credentials attribute controls whether the snmp_credentials value in the member is used, instead of the grid default.
.Sp
The override_snmp_credentials attribute can be specified explicitly. It is also set implicitly when snmp_credentials is set to a defined value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to set the override_snmp_credentials flag or \*(L"false\*(R" to deactivate/unset it. The default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->override_snmp_credentials();
\& # Modify attribute value
\& $object\->override_snmp_credentials(\*(Aqtrue\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "role( )"
.IX Subsection "role( )"
.RS 4
Use this method to set or retrieve the role of the discovery member.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is '\s-1DNM\s0', '\s-1DNP\s0' or '\s-1NONE\s0'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->role();
\& # Modify attribute value
\& $object\->role(\*(AqNONE\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "seed_routers( )"
.IX Subsection "seed_routers( )"
.RS 4
Use this method to set or retrieve seed routers.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is an array reference that contains Infoblox::Grid::Discovery::SeedRouter objects.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->seed_routers();
\& # Modify attribute value
\& $object\->seed_routers([$seed1, $seed2]);
.Ve
.RE
.RS 4
.RE
.SS "snmp3_credentials( )"
.IX Subsection "snmp3_credentials( )"
.RS 4
Use this method to set or retrieve discovery SNMPv3 credentials.
.Sp
Setting this method to a defined value implicitly sets the override_snmp3_credentials method to \*(L"true\*(R". Setting the parameter to undefined causes the appliance to use the grid default and automatically resets the override_snmp3_credentials attribute to \*(L"false\*(R".
.Sp
Note that when snmp3_credentials is set to a defined value and override_snmp3_credentials is set to \*(L"false\*(R", the last operation takes precedence. Thus the sequence \f(CW$object\fR\->snmp3_credentials([$snmp3]); \f(CW$object\fR\->override_snmp3_credentials(\*(L"false\*(R"); will set override_snmp3_credentials to \*(L"false\*(R", and the sequence \f(CW$object\fR\->override_snmp3_credentials(\*(L"false\*(R"); \f(CW$object\fR\->snmp3_credentials([$snmp3]); will result in override_snmp3_credentials=\*(L"true\*(R".
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is an array reference that contains Infoblox::Grid::Discovery::SNMP3Credential objects.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->snmp3_credentials();
\& # Modify attribute value
\& $object\->snmp3_credentials([$snmp3]);
.Ve
.RE
.RS 4
.RE
.SS "snmp_credentials( )"
.IX Subsection "snmp_credentials( )"
.RS 4
Use this method to set or retrieve SNMPv1 and SNMPv2 credentials.
.Sp
Setting this method to a defined value implicitly sets the override_snmp_credentials method to \*(L"true\*(R". Setting the parameter to undefined causes the appliance to use the grid default and automatically resets the override_snmp_credentials attribute to \*(L"false\*(R".
.Sp
Note that when snmp_credentials is set to a defined value and override_snmp_credentials is set to \*(L"false\*(R", the last operation takes precedence. Thus the sequence \f(CW$object\fR\->snmp_credentials([$snmp]); \f(CW$object\fR\->override_snmp_credentials(\*(L"false\*(R"); will set override_snmp_credentials to \*(L"false\*(R", and the sequence \f(CW$object\fR\->override_snmp_credentials(\*(L"false\*(R"); \f(CW$object\fR\->snmp_credentials([$snmp]); will result in override_snmp_credentials=\*(L"true\*(R".
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is an array reference that contains Infoblox::Grid::Discovery::SNMPCredential objects.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->snmp_credentials();
\& # Modify attribute value
\& $object\->snmp_credentials([$snmp]);
.Ve
.RE
.RS 4
.RE
.SS "test_credential( )"
.IX Subsection "test_credential( )"
.RS 4
Use this method to test credentials.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
.Vb 1
\& id               \- Optional. The test credential ID.
.Ve
.Sp
The following members are supported when id is defined:
.Sp
.Vb 1
\& start            \- Optional. The start position of the text.
.Ve
.Sp
The following members are supported when id is not defined:
.Sp
.Vb 1
\& view             \- Optional. The network view name. The default value is the system\-defined default network view.
\&
\& type             \- Optional if one of the following is defined: cli_credentials, snmp_credential or snmp3_credential. Otherwise, this member is required. The valid value is \*(AqCLI\*(Aq, \*(AqSNMP\*(Aq or \*(AqSNMP3\*(Aq.
\&
\& device           \- Required if address is not defined. The Infoblox::Grid::Discovery::Device object.
\&
\& member           \- Optional. The discovery member name.
\&
\& address          \- Required if device is not defined. The IP address of the device.
\&
\& cli_credentials  \- Optional. At least one of the following must be defined: cli_credentials, snmp_credential, or  snmp3_credential. The array reference that contains Infoblox::Grid::Discovery::CLICredential objects.
\&
\& snmp_credential  \- Optional. At least one of the following must be defined: cli_credentials, snmp_credential, or  snmp3_credential. The Infoblox::Grid::Discovery::SNMPCredential object.
\&
\& snmp3_credential \- Optional. At least one of the following must be defined: cli_credentials, snmp_credential, or snmp3_credential. The Infoblox::Grid::Discovery::SNMP3Credential object.
.Ve
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns an Infoblox::Grid::Discovery::TestCredential object when the operation succeeds, and returns false when the operation fails.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 5
\& # Get a test credential ID
\& my $result = $object\->test_credential(
\&    \*(Aqaddress\*(Aq         => \*(Aq10.0.0.1\*(Aq,
\&    \*(Aqsnmp_credential\*(Aq => $snmp,
\& );
\&
\& # Get detailed information by id
\& if (ref($result) eq \*(AqInfoblox::Grid::Discovery::TestCredential\*(Aq) {
\&     $result = $object\->test_credential(\*(Aqid\*(Aq => $result\->id());
\& }
.Ve
.RE
.RS 4
.RE
.SS "scan_interfaces( )"
.IX Subsection "scan_interfaces( )"
.RS 4
Use this method to set or retrieve the scan interface configuration for a given probe member.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is an array reference that contains Infoblox::Grid::Member::Discovery::ScanInterface objects.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->scan_interfaces();
\& # Modify attribute value
\& $object\->scan_interfaces([$interface1, $interface2]);
.Ve
.RE
.RS 4
.RE
.SH "AUTHOR"
.IX Header "AUTHOR"
Infoblox Inc. <http://www.infoblox.com/>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Infoblox::Session, Infoblox::Grid::Member::Discovery::CiscoAPICConfig, Infoblox::Grid::Discovery::SNMPCredential, Infoblox::Grid::Discovery::SNMP3Credential, Infoblox::Grid::Discovery::SeedRouter, Infoblox::Grid::Discovery::TestCredential, Infoblox::Grid::Discovery::CLICredential, Infoblox::Grid::Member::Discovery::ScanInterface
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2017 Infoblox Inc.

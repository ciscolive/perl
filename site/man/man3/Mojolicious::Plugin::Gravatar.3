.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Mojolicious::Plugin::Gravatar 3"
.TH Mojolicious::Plugin::Gravatar 3 "2013-08-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mojolicious::Plugin::Gravatar \- Globally Recognized Avatars for Mojolicious
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&  # Mojolicious
\&  $self\->plugin(\*(Aqgravatar\*(Aq); 
\&  
\&  You can pass default size, rating, and default avatar url 
\&  $self\->plugin(\*(Aqgravatar\*(Aq => {
\&      size    => 60,   #default was 80
\&      rating  => \*(AqX\*(Aq,  #default was PG
\&      default => \*(Aqhttp://example.com/default.png\*(Aq # default was not value
\&      scheme  => \*(Aqhttps\*(Aq # if omitted will look in request\*(Aqs url scheme.
\&  });
\&
\&  # Mojolicious::Lite
\&  plugin \*(Aqgravatar\*(Aq;
\&
\&  # Gravatars in templates
\&  <%= gravatar \*(Aquser@mail.com\*(Aq %>
\&  will generate
\&  <img src="http://www.gravatar.com/avatar/6ad193f57f79ac444c3621370da955e9&amp;s=80&amp;r=PG" alt="Gravatar" height="80" width="80">
\&
\&  <%= gravatar_url \*(Aquser@mail.com\*(Aq %>  \- if you need only url 
\&  
\&  Also you can overwrite any default config variables 
\&  <%= gravatar \*(Aquser@mail.com\*(Aq, size => 40, rating=> \*(AqX\*(Aq %>
\&
\&  
\&  If you need some styling for img tag:
\&  <span class=\*(Aqgravatar\*(Aq>  <%= gravatar $email %> </span>
\&  and describe in css \- ".gravatar img {border: 1px solid white;}"
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This plugin adds gravatar ( <http://gravatar.com> ) helpers to your application.
.SH "CONFIG"
.IX Header "CONFIG"
.SS "default (optional)"
.IX Subsection "default (optional)"
The local (any valid absolute image \s-1URI\s0) image to use if there is no Gravatar corresponding to the given email.
.SS "size (optional)"
.IX Subsection "size (optional)"
Gravatars are square. Size is 1 through 512 (pixels) and sets the width and the height.
.SS "rating (optional)"
.IX Subsection "rating (optional)"
G|PG|R|X. The maximum rating of Gravatar you wish returned. If you have a family friendly forum, for example, you might set it to \*(L"G.\*(R"
.SS "scheme (optional)"
.IX Subsection "scheme (optional)"
Gravatar \s-1URL\s0 scheme \*(L"http\*(R" or \*(L"https\*(R". If omitted will look in request's url scheme (if empty fill use \*(L"http\*(R").
.SH "HELPERS"
.IX Header "HELPERS"
.ie n .SS "gravatar $email [, %options ];"
.el .SS "gravatar \f(CW$email\fP [, \f(CW%options\fP ];"
.IX Subsection "gravatar $email [, %options ];"
generate img tag for getting avatar from gravatar.com
.PP
\&\f(CW$email\fR (required) The key to using Gravatars is a hex hash of the user's email. This is generated automatically and sent to gravatar.com as the gravatar_id.
.PP
\&\f(CW%options\fR (optional) \- you can override config parameters . Support all parameters that you have in config
.PP
example <img src=\*(L"http://www.gravatar.com/avatar/6ad193f57f79ac444c3621370da955e9&amp;s=80&amp;r=PG\*(R" alt=\*(L"Gravatar\*(R" height=\*(L"80\*(R" width=\*(L"80\*(R">
.ie n .SS "gravatar_url $email [, %options ];"
.el .SS "gravatar_url \f(CW$email\fP [, \f(CW%options\fP ];"
.IX Subsection "gravatar_url $email [, %options ];"
generate url for getting avatar from gravatar.com
.PP
\&\f(CW$email\fR (required) The key to using Gravatars is a hex hash of the user's email. This is generated automatically and sent to gravatar.com as the gravatar_id.
.PP
\&\f(CW%options\fR (optional) \- you can override config parameters . Support all parameters that you have in config
.SH "VERSION"
.IX Header "VERSION"
Version 0.02
.SH "AUTHOR"
.IX Header "AUTHOR"
Viktor Turskyi <koorchik@cpan.org>
.SH "CONTRIBUTORS"
.IX Header "CONTRIBUTORS"
Nils Diewald (Akron)
.SH "BUGS"
.IX Header "BUGS"
Please report any bugs or feature requests to \f(CW\*(C`bug\-mojolicious\-plugin\-gravatar at rt.cpan.org\*(C'\fR, or through
the web interface at <http://rt.cpan.org/NoAuth/ReportBug.html?Queue=Mojolicious\-Plugin\-Gravatar>.  I will be notified, and then you'll
automatically be notified of progress on your bug as I make changes.
.PP
Also you can report bugs to Github <https://github.com/koorchik/Mojolicious\-Plugin\-Gravatar/>
.SH "SUPPORT"
.IX Header "SUPPORT"
You can find documentation for this module with the perldoc command.
.PP
.Vb 1
\&    perldoc Mojolicious::Plugin::Gravatar
.Ve
.PP
You can also look for information at:
.IP "\(bu" 4
\&\s-1RT: CPAN\s0's request tracker
.Sp
<http://rt.cpan.org/NoAuth/Bugs.html?Dist=Mojolicious\-Plugin\-Gravatar>
.IP "\(bu" 4
AnnoCPAN: Annotated \s-1CPAN\s0 documentation
.Sp
<http://annocpan.org/dist/Mojolicious\-Plugin\-Gravatar>
.IP "\(bu" 4
\&\s-1CPAN\s0 Ratings
.Sp
<http://cpanratings.perl.org/d/Mojolicious\-Plugin\-Gravatar>
.IP "\(bu" 4
Search \s-1CPAN\s0
.Sp
<http://search.cpan.org/dist/Mojolicious\-Plugin\-Gravatar/>
.SH "ACKNOWLEDGEMENTS"
.IX Header "ACKNOWLEDGEMENTS"
.SH "LICENSE AND COPYRIGHT"
.IX Header "LICENSE AND COPYRIGHT"
Copyright 2011 \*(L"koorchik\*(R".
.PP
This program is free software; you can redistribute it and/or modify it
under the terms of either: the \s-1GNU\s0 General Public License as published
by the Free Software Foundation; or the Artistic License.
.PP
See http://dev.perl.org/licenses/ for more information.

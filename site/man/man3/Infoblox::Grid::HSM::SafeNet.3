.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Infoblox::Grid::HSM::SafeNet 3"
.TH Infoblox::Grid::HSM::SafeNet 3 "2018-06-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Infoblox::Grid::HSM::SafeNet \- SafeNet HSM (Hardware Security Module) Server object
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
An Infoblox::Grid::HSM::SafeNet object represents a server configured in the SafeNet \s-1HSM\s0 group.
.SH "CONSTRUCTOR"
.IX Header "CONSTRUCTOR"
.Vb 6
\& my $hsm_server = Infoblox::Grid::HSM::SafeNet\->new(
\&     name                 => $string,                # Required
\&     partition_serial     => $uint,                  # Required
\&     server_certificate   => $string,                # Required
\&     disabled             => "true" | "false",       # Optional / Default value is "false"
\& );
.Ve
.SH "MODULE METHODS"
.IX Header "MODULE METHODS"
The following functions can be applied to a SafeNet \s-1HSM\s0 Server object.
.SS "Infoblox::Grid::HSM::SafeNet::Group\->hsm_servers( )"
.IX Subsection "Infoblox::Grid::HSM::SafeNet::Group->hsm_servers( )"
.RS 4
Use this function to add or retrieve SafeNet \s-1HSM\s0 servers in the SafeNet \s-1HSM\s0 group. See Infoblox::Grid::HSM::SafeNet::Group\->\fBhsm_servers()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 7
\& #Construct a SafeNet HSM Group
\& my $hsm_group = Infoblox::Grid::HSM::SafeNet::Group\->new(
\&     name          => \*(AqSafeNetGroup\*(Aq,
\&     passphrase    => \*(AqPassPhrase\*(Aq,
\&     hsm_servers   => [],
\&     hsm_version   => "LunaSA_4",
\& );
\&
\& # Configure the SafeNet HSM server in the SafeNet HSM Group object.
\& my $response = $hsm_group\->hsm_servers([$hsm_server]);
.Ve
.RE
.RS 4
.RE
.SH "METHODS"
.IX Header "METHODS"
This section describes all the methods that can be used to configure and retrieve the attribute values of an Infoblox::Grid::HSM::SafeNet object.
.SS "disabled( )"
.IX Subsection "disabled( )"
.RS 4
Use this method to set or retrieve the disabled setting.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to disable the SafeNet \s-1HSM\s0 Server object or \*(L"false\*(R" to enable it. Default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value as \*(L"true\*(R" or \*(L"false\*(R".
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get disabled flag
\& my $disabled = $hsm_server\->disabled();
\&
\& #Modify disabled flag
\& $hsm_server\->disabled("true");
.Ve
.RE
.RS 4
.RE
.SS "is_fips_compliant( )"
.IX Subsection "is_fips_compliant( )"
.RS 4
Use this method to retrieve the \s-1FIPS\s0 compliant mode status. This attribute is read-only and cannot be modified.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value as \*(L"true\*(R" or \*(L"false\*(R".
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get is_fips_compliant flag
\& my $is_fips_compliant = $hsm_server\->is_fips_compliant();
.Ve
.RE
.RS 4
.RE
.SS "name( )"
.IX Subsection "name( )"
.RS 4
Use this method to set or retrieve the \s-1IP\s0 address or the domain name for the \s-1HSM.\s0
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
String with the \s-1IP\s0 address or the domain name for the \s-1HSM.\s0
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get name
\& my $name = $hsm_server\->name();
\&
\& #Modify name
\& $hsm_server\->name("SafeNet");
.Ve
.RE
.RS 4
.RE
.SS "partition_capacity( )"
.IX Subsection "partition_capacity( )"
.RS 4
Use this method to retrieve the partition capacity percentage used. This attribute is read-only and cannot be modified.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get partition_capacity
\& my $partition_capacity = $hsm_server\->partition_capacity();
.Ve
.RE
.RS 4
.RE
.SS "partition_id( )"
.IX Subsection "partition_id( )"
.RS 4
Use this method to retrieve the partition label on the \s-1HSM.\s0 This attribute is read-only and cannot be modified.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get partition_id
\& my $partition_id = $hsm_server\->partition_id();
.Ve
.RE
.RS 4
.RE
.SS "partition_serial( )"
.IX Subsection "partition_serial( )"
.RS 4
Use this method to set or retrieve the serial number of the partition on the \s-1HSM.\s0
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
An unsigned integer.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get partition_serial
\& my $partition_serial = $hsm_server\->partition_serial();
\&
\& #Modify partition_serial
\& $hsm_server\->partition_serial(12345);
.Ve
.RE
.RS 4
.RE
.SS "server_certificate( )"
.IX Subsection "server_certificate( )"
.RS 4
Use this method to generate the server certificate of the SafeNet \s-1HSM\s0 server. This attribute is write-only and cannot be retrieved.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
String with the content of the server certificate or a reference to a file.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Set server_certificate as string
\& $hsm_server\->server_certificate($cert);
\&
\& #Set server_certificate as reference to a file
\& $hsm_server\->server_certificate(\*(Aq/tmp/safenet/cert.pem\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "status( )"
.IX Subsection "status( )"
.RS 4
Use this method to retrieve the status of the SafeNet \s-1HSM\s0 server. This attribute is read-only and cannot be modified.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value as \*(L"\s-1UP\*(R"\s0 or \*(L"\s-1DOWN\*(R".\s0
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get status
\& my $status = $hsm_server\->status();
.Ve
.RE
.RS 4
.RE
.SH "AUTHOR"
.IX Header "AUTHOR"
Infoblox Inc. <http://www.infoblox.com/>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Infoblox::Grid::HSM::SafeNet::Group
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2017 Infoblox Inc.

.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Infoblox::Grid::ServiceRestart 3"
.TH Infoblox::Grid::ServiceRestart 3 "2018-06-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Infoblox::Grid::ServiceRestart \- a Grid Service Restart setting object.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The Grid Service Restart setting object provides information about service restart configurations.
.SH "CONSTRUCTOR"
.IX Header "CONSTRUCTOR"
.Vb 4
\& my $service_restart = Infoblox::Grid::ServiceRestart\->new(
\&    delay           => $uint,            # Optional / Default is 10
\&    restart_offline => \*(Aqtrue\*(Aq | \*(Aqfalse\*(Aq, # Optional / Default is \*(Aqtrue\*(Aq
\&    timeout         => $int,             # Optional / Default is 60
.Ve
.SH "SESSION METHODS"
.IX Header "SESSION METHODS"
The object does not support any session methods.
.SH "MODULE METHODS"
.IX Header "MODULE METHODS"
The following functions are available to apply to a Grid Service Restart object.
.SS "Infoblox::Grid::DNS\->restart_setting( )"
.IX Subsection "Infoblox::Grid::DNS->restart_setting( )"
.RS 4
Use this method to set or retrive Grid \s-1DNS\s0 service restart settings. See Infoblox::Grid::DNS\->\fBrestart_setting()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get restart_setting
\& my $restart_setting = $grid_dns\->restart_setting();
\& #Modify the retry time
\& $grid_dns\->restart_setting($restart_setting);
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Grid::DHCP\->restart_setting( )"
.IX Subsection "Infoblox::Grid::DHCP->restart_setting( )"
.RS 4
Use this method to set or retrive Grid \s-1DHCP\s0 service restart settings. See Infoblox::Grid::DHCP\->\fBrestart_setting()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get restart_setting
\& my $restart_setting = $grid_dns\->restart_setting();
\& #Modify the retry time
\& $grid_dns\->restart_setting($restart_setting);
.Ve
.RE
.RS 4
.RE
.SH "METHODS"
.IX Header "METHODS"
.SS "delay( )"
.IX Subsection "delay( )"
.RS 4
Use this method to set or retrieve restart delay in seconds between Grid Service Groups.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an unsigned integer. The default value is 10.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get delay
\& my $delay = $svcrst\->delay();
\& #Modify delay
\& $svcrsts\->delay(50);
.Ve
.RE
.RS 4
.RE
.SS "restart_offline( )"
.IX Subsection "restart_offline( )"
.RS 4
Use this method to enable or disable the restart of offline Grid Members.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify 'true' to enable the restart of offline Grid Services or 'false' to disable it. The default value is 'true'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get restart_offline
\& my $restart_offline = $svcrst\->restart_offline();
\& #Modify restart_offline
\& $svcrsts\->restart_offline(\*(Aqfalse\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "timeout( )"
.IX Subsection "timeout( )"
.RS 4
Use this method to set or retrieve timeout interval in seconds for Grid Service Groups restart.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an integer greater or equal to \-1 (where \-1 means infinite). The default value is 10.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get timeout
\& my $timeout = $svcrst\->timeout();
\& #Modify timeout
\& $svcrst\->timeout(50);
.Ve
.RE
.RS 4
.RE
.SH "AUTHOR"
.IX Header "AUTHOR"
Infoblox Inc. <http://www.infoblox.com/>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Infoblox::Grid::DNS, Infoblox::Grid::DNS\->\fBrestart_setting()\fR, Infoblox::Grid::DHCP, Infoblox::Grid::DHCP\->\fBrestart_setting()\fR
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2017 Infoblox Inc.

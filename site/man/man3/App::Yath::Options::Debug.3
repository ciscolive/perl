.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.41)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "App::Yath::Options::Debug 3"
.TH App::Yath::Options::Debug 3 "2020-11-03" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
App::Yath::Options::Debug \- Debug options for Yath
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This is where debug related command line options live.
.SH "PROVIDED OPTIONS"
.IX Header "PROVIDED OPTIONS"
.SS "\s-1YATH OPTIONS\s0 (PRE-COMMAND)"
.IX Subsection "YATH OPTIONS (PRE-COMMAND)"
\fIHelp and Debugging\fR
.IX Subsection "Help and Debugging"
.IP "\-\-show\-opts" 4
.IX Item "--show-opts"
.PD 0
.IP "\-\-no\-show\-opts" 4
.IX Item "--no-show-opts"
.PD
Exit after showing what yath thinks your options mean
.IP "\-\-version" 4
.IX Item "--version"
.PD 0
.IP "\-V" 4
.IX Item "-V"
.IP "\-\-no\-version" 4
.IX Item "--no-version"
.PD
Exit after showing a helpful usage message
.SS "\s-1COMMAND OPTIONS\s0"
.IX Subsection "COMMAND OPTIONS"
\fIHelp and Debugging\fR
.IX Subsection "Help and Debugging"
.IP "\-\-dummy" 4
.IX Item "--dummy"
.PD 0
.IP "\-d" 4
.IX Item "-d"
.IP "\-\-no\-dummy" 4
.IX Item "--no-dummy"
.PD
Dummy run, do not actually execute anything
.Sp
Can also be set with the following environment variables: \f(CW\*(C`T2_HARNESS_DUMMY\*(C'\fR
.IP "\-\-help" 4
.IX Item "--help"
.PD 0
.IP "\-h" 4
.IX Item "-h"
.IP "\-\-no\-help" 4
.IX Item "--no-help"
.PD
exit after showing help information
.IP "\-\-keep\-dirs" 4
.IX Item "--keep-dirs"
.PD 0
.IP "\-\-keep_dir" 4
.IX Item "--keep_dir"
.IP "\-k" 4
.IX Item "-k"
.IP "\-\-no\-keep\-dirs" 4
.IX Item "--no-keep-dirs"
.PD
Do not delete directories when done. This is useful if you want to inspect the directories used for various commands.
.IP "\-\-summary" 4
.IX Item "--summary"
.PD 0
.IP "\-\-summary=/path/to/summary.json" 4
.IX Item "--summary=/path/to/summary.json"
.IP "\-\-no\-summary" 4
.IX Item "--no-summary"
.PD
Write out a summary json file, if no path is provided 'summary.json' will be used. The .json extension is added automatically if omitted.
.SH "SOURCE"
.IX Header "SOURCE"
The source code repository for Test2\-Harness can be found at
\&\fIhttp://github.com/Test\-More/Test2\-Harness/\fR.
.SH "MAINTAINERS"
.IX Header "MAINTAINERS"
.IP "Chad Granum <exodist@cpan.org>" 4
.IX Item "Chad Granum <exodist@cpan.org>"
.SH "AUTHORS"
.IX Header "AUTHORS"
.PD 0
.IP "Chad Granum <exodist@cpan.org>" 4
.IX Item "Chad Granum <exodist@cpan.org>"
.PD
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright 2020 Chad Granum <exodist7@gmail.com>.
.PP
This program is free software; you can redistribute it and/or
modify it under the same terms as Perl itself.
.PP
See \fIhttp://dev.perl.org/licenses/\fR

.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Imager::Font::FreeType2 3"
.TH Imager::Font::FreeType2 3 "2020-06-13" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
.Vb 1
\&  Imager::Font::FreeType2 \- low\-level functions for FreeType2 text output
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Imager::Font creates a Imager::Font::FreeType2 object when asked to.
.PP
See Imager::Font to see how to use this type.
.PP
This class provides low-level functions that require the caller to
perform data validation.
.PP
This driver supports:
.IP "\fBtransform()\fR" 4
.IX Item "transform()"
.PD 0
.IP "\fBdpi()\fR" 4
.IX Item "dpi()"
.IP "\fBdraw()\fR" 4
.IX Item "draw()"
.PD
The following parameters:
.RS 4
.IP "\(bu" 4
\&\f(CW\*(C`utf8\*(C'\fR
.IP "\(bu" 4
\&\f(CW\*(C`vlayout\*(C'\fR
.IP "\(bu" 4
\&\f(CW\*(C`sizew\*(C'\fR
.RE
.RS 4
.RE
.SS "Special behaviors"
.IX Subsection "Special behaviors"
If you call \fBtransform()\fR to set a transformation matrix, hinting will
be switched off.  This prevents sudden jumps in the size of the text
caused by the hinting when the transformation is the identity matrix.
If for some reason you want hinting enabled, use
\&\f(CW$font\fR\->hinting(hinting=>1) to re-enable hinting.  This will need to be
called after \fIeach\fR call to \fBtransform()\fR.
.SH "AUTHOR"
.IX Header "AUTHOR"
Addi, Tony

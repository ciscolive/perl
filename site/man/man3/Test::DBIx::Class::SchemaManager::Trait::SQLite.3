.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Test::DBIx::Class::SchemaManager::Trait::SQLite 3"
.TH Test::DBIx::Class::SchemaManager::Trait::SQLite 3 "2016-12-07" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Test::DBIx::Class::SchemaManager::Trait::SQLite \- The Default Role
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The default Storage trait which provides the ability to deploy to a SQLite
database.  It also sets some \f(CW%ENV\fR and or configuration options that you can
use to specify alternative database setup.
.PP
In addition to the documented \f(CW%ENV\fR settings, this Trait adds the following:
.IP "\s-1DBNAME\s0" 4
.IX Item "DBNAME"
Defaults to ':memory:' to create an in memory database.  Provide a string
suitable for the \*(L"dbname=XXX\*(R" part of your connect string.  Typically this
should be the path to a location on the filesystem you want the datbase file
to be stored.
.Sp
Please note that this file will automatically be deleted unless you have
specified to 'keep_db' in the config or via the \f(CW$ENV\fR{\s-1KEEP_DB\s0} setting.
.Sp
Also note that if you specify a path that already exists, we will automatically
add the option 'force_drop_table', on the assumption you are roundtripping
tests to the same database file.  This way you can avoid having to specifically
tell the system to delete the file each time.
.SH "AUTHOR"
.IX Header "AUTHOR"
John Napiorkowski \f(CW\*(C`<jjnapiork@cpan.org>\*(C'\fR
.SH "CONTRIBUTORS"
.IX Header "CONTRIBUTORS"
Tristan Pratt
.SH "COPYRIGHT & LICENSE"
.IX Header "COPYRIGHT & LICENSE"
Copyright 2009, John Napiorkowski \f(CW\*(C`<jjnapiork@cpan.org>\*(C'\fR
.PP
This program is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.

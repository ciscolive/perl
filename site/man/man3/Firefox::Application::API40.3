.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Firefox::Application::API40 3"
.TH Firefox::Application::API40 3 "2018-10-28" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Firefox::Application::API40 \- API wrapper for Firefox 4+
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 5
\&    use Firefox::Application;
\&    my $ff = Firefox::Application\->new(
\&        # Force the Firefox 4 API
\&        api => \*(AqFirefox::Application::API40\*(Aq,
\&    );
.Ve
.SH "METHODS"
.IX Header "METHODS"
.ie n .SS """$api\->updateitems( %args )"""
.el .SS "\f(CW$api\->updateitems( %args )\fP"
.IX Subsection "$api->updateitems( %args )"
.Vb 5
\&  for my $item ($api\->updateitems) {
\&      print sprintf "Name: %s\en", $item\->{name};
\&      print sprintf "Version: %s\en", $item\->{version};
\&      print sprintf "GUID: %s\en", $item\->{id};
\&  };
.Ve
.PP
Returns the list of updateable items. Under Firefox 4,
can be restricted by the \f(CW\*(C`type\*(C'\fR option.
.IP "\(bu" 4
\&\f(CW\*(C`type\*(C'\fR \- type of items to fetch
.Sp
\&\f(CW\*(C`ANY\*(C'\fR \- fetch any item
.Sp
\&\f(CW\*(C`ADDON\*(C'\fR \- fetch extensions
.Sp
\&\f(CW\*(C`LOCALE\*(C'\fR \- fetch locales
.Sp
\&\f(CW\*(C`THEME\*(C'\fR \- fetch themes
.PP
This method is asynchronous in Firefox 4, but is run
synchronously by Firefox::Application, polling every 0.1s.
Currently, no special support for AnyEvent is implemented.
.ie n .SS """$ff\->addons( %args )"""
.el .SS "\f(CW$ff\->addons( %args )\fP"
.IX Subsection "$ff->addons( %args )"
.Vb 5
\&  for my $addon ($ff\->addons) {
\&      print sprintf "Name: %s\en", $addon\->{name};
\&      print sprintf "Version: %s\en", $addon\->{version};
\&      print sprintf "GUID: %s\en", $addon\->{id};
\&  };
.Ve
.PP
Returns the list of installed addons as \f(CW\*(C`Addon\*(C'\fRs.
See <https://developer.mozilla.org/en/Addons/Add\-on_Manager/Addon>
depending.
.ie n .SS """$ff\->addTab( %options )"""
.el .SS "\f(CW$ff\->addTab( %options )\fP"
.IX Subsection "$ff->addTab( %options )"
.Vb 1
\&    my $new = $ff\->addTab();
.Ve
.PP
Creates a new tab and returns it.
The tab will be automatically closed upon program exit.
.PP
The Firefox 4 \s-1API\s0 is asynchronous. The method is forced
into a synchronous call here.
.ie n .SS """$ff\->selectedTab( %options )"""
.el .SS "\f(CW$ff\->selectedTab( %options )\fP"
.IX Subsection "$ff->selectedTab( %options )"
.Vb 1
\&    my $curr = $ff\->selectedTab();
.Ve
.PP
Sets the currently active tab.
.ie n .SS """$api\->element_query( \e@elements, \e%attributes )"""
.el .SS "\f(CW$api\->element_query( \e@elements, \e%attributes )\fP"
.IX Subsection "$api->element_query( @elements, %attributes )"
.Vb 2
\&    my $query = $element_query([\*(Aqinput\*(Aq, \*(Aqselect\*(Aq, \*(Aqtextarea\*(Aq],
\&                               { name => \*(Aqfoo\*(Aq });
.Ve
.PP
Returns the XPath query that searches for all elements with \f(CW\*(C`tagName\*(C'\fRs
in \f(CW@elements\fR having the attributes \f(CW%attributes\fR. The \f(CW@elements\fR
will form an \f(CW\*(C`or\*(C'\fR condition, while the attributes will form an \f(CW\*(C`and\*(C'\fR
condition.
.SH "AUTHOR"
.IX Header "AUTHOR"
Max Maischein \f(CW\*(C`corion@cpan.org\*(C'\fR
.SH "COPYRIGHT (c)"
.IX Header "COPYRIGHT (c)"
Copyright 2009\-2013 by Max Maischein \f(CW\*(C`corion@cpan.org\*(C'\fR.
.SH "LICENSE"
.IX Header "LICENSE"
This module is released under the same terms as Perl itself.

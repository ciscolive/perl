.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Markdent::Parser::BlockParser 3"
.TH Markdent::Parser::BlockParser 3 "2020-07-03" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Markdent::Parser::BlockParser \- Block parser for standard Markdown
.SH "VERSION"
.IX Header "VERSION"
version 0.37
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This class parses blocks for the standard Markdown dialect (as defined by
Daring Fireball and mdtest).
.SH "METHODS"
.IX Header "METHODS"
This class provides the following methods:
.ie n .SS "Markdent::Parser::BlockParser\->new( handler => $handler, span_parser => $span_parser )"
.el .SS "Markdent::Parser::BlockParser\->new( handler => \f(CW$handler\fP, span_parser => \f(CW$span_parser\fP )"
.IX Subsection "Markdent::Parser::BlockParser->new( handler => $handler, span_parser => $span_parser )"
Creates a new block parser object. You must provide a span parser object.
.ie n .SS "$block_parser\->parse_document(\e$markdown)"
.el .SS "\f(CW$block_parser\fP\->parse_document(\e$markdown)"
.IX Subsection "$block_parser->parse_document($markdown)"
This method takes a reference to a markdown string and parses it for
blocks. Each block which contains text (except preformatted text) will be
parsed for span-level markup using this object's \f(CW\*(C`span_parser\*(C'\fR.
.SH "ROLES"
.IX Header "ROLES"
This class does the Markdent::Role::BlockParser,
Markdent::Role::AnyParser, and Markdent::Role::DebugPrinter roles.
.SH "BUGS"
.IX Header "BUGS"
See Markdent for bug reporting details.
.PP
Bugs may be submitted at <https://github.com/houseabsolute/Markdent/issues>.
.PP
I am also usually active on \s-1IRC\s0 as 'autarch' on \f(CW\*(C`irc://irc.perl.org\*(C'\fR.
.SH "SOURCE"
.IX Header "SOURCE"
The source code repository for Markdent can be found at <https://github.com/houseabsolute/Markdent>.
.SH "AUTHOR"
.IX Header "AUTHOR"
Dave Rolsky <autarch@urth.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2020 by Dave Rolsky.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
.PP
The full text of the license can be found in the
\&\fI\s-1LICENSE\s0\fR file included with this distribution.

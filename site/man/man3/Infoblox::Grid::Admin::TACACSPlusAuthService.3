.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Infoblox::Grid::Admin::TACACSPlusAuthService 3"
.TH Infoblox::Grid::Admin::TACACSPlusAuthService 3 "2018-06-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Infoblox::Grid::Admin::TACACSPlusAuthService \- TACACS+ Authentication Service object
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Represents a group of \s-1TACACS+\s0 servers that are used to authenticate administrators.
.SH "CONSTRUCTOR"
.IX Header "CONSTRUCTOR"
.Vb 10
\& my $tacacs_auth_server = Infoblox::Grid::Admin::TACACSPlusAuthService\->new(
\&     name                  => $string,                             #Required
\&     tacacsplus_servers    => [$TACACSPlusAuthServer1, ...],       #Required
\&     acct_retries          => $num,                                #Optional / Default is 0
\&     acct_timeout          => $num,                                #Optional / Default is 1000
\&     auth_retries          => $num,                                #Optional / Default is 0
\&     auth_timeout          => $num,                                #Optional / Default is 5000
\&     comment               => $string,                             #Optional / Default is empty
\&     disabled              => "true" | "false"                     #Optional / Default is false
\& );
.Ve
.SH "SESSION METHODS"
.IX Header "SESSION METHODS"
This section describes all the methods in the Infoblox::Session module that you can apply to a \s-1TACACS+\s0 Authentication Service object.
.SS "Infoblox::Session\->add( )"
.IX Subsection "Infoblox::Session->add( )"
.RS 4
Use this method to add an object to the Infoblox appliance. See Infoblox::Session\->\fBadd()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 7
\& #Construct an object
\& my $service = Infoblox::Grid::Admin::TACACSPlusAuthService\->new(
\&                                                             name           => \*(Aqsome.name.com\*(Aq,
\&                                                             tacacsplus_servers => [$tcs1, $tcs2]
\&                                                            );
\& #Submit for addition
\& my $response = $session\->add( $service );
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->get( )"
.IX Subsection "Infoblox::Session->get( )"
.RS 4
Use this method to retrieve all the matching objects from the Infoblox appliance. See Infoblox::Session\->\fBget()\fR for parameters and return values.
.IP "\fBKey References\fR" 4
.IX Item "Key References"
.Vb 1
\& Apply the following attributes to get a specific TACACS+ Authentication Service object:
\&
\&  name \- Required. TACACS+ Authentication Service name.
.Ve
.IP "\fBExamples\fR" 4
.IX Item "Examples"
.Vb 4
\& my @retrieved_objs = $session\->get(
\&     object => "Infoblox::Grid::Admin::TACACSPlusAuthService",
\&     name   => "some.name.com"
\& );
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->modify( )"
.IX Subsection "Infoblox::Session->modify( )"
.RS 4
Use this method to modify an object in the Infoblox appliance. See Infoblox::Session\->\fBmodify()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Use this method to modify the comment.
\& $service\->comment("this is a modified comment");
\& #Submit modification
\& my $response = $session\->modify( $service );
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->remove( )"
.IX Subsection "Infoblox::Session->remove( )"
.RS 4
Use this method to remove an object from the Infoblox appliance. See Infoblox::Session\->\fBremove()\fR for parameters and return values.
.Sp
To remove a specific object, first use \fBget()\fR or \fBsearch()\fR to retrieve the specific object, and then submit this object for removal.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 5
\& #Get the objects with the same name
\& my @retrieved_objs = $session\->get(
\&     object => "Infoblox::Grid::Admin::TACACSPlusAuthService",
\&     name   => "some.name.com"
\& );
\&
\& #Find the desired object on the retrieved list.
\& my $desired_service = $retrieved_objs[0];
\& #Submit for removal
\& my $response = $session\->remove( $desired_service );
.Ve
.RE
.RS 4
.RE
.SH "METHODS"
.IX Header "METHODS"
Use the following methods to access the attributes of an Infoblox::Grid::Admin::TACACSPlusAuthService object. Specify a parameter to set the attribute's value, or omit the parameter to get the attribute's value.
.SS "acct_retries( )"
.IX Subsection "acct_retries( )"
.RS 4
Use this method to set or retrieve the value that specifies how many times the appliance must resend the \s-1TACACS+\s0 accounting packet if the appliance does not receive a response.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
An unsigned integer between 0 and 5, inclusive.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\&   #Getting acct_retries
\&   my $acct_retries = $tacacsplus_service\->acct_retries( );
\&   #Modifying acct_retries
\&   $tacacsplus_service\->acct_retries("5");
.Ve
.RE
.RS 4
.RE
.SS "acct_timeout( )"
.IX Subsection "acct_timeout( )"
.RS 4
Use this method to set or retrieve the value, in milliseconds, that specifies how long the appliance must wait for accounting response packets.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
An unsigned integer between 1000 and 30000, inclusive.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\&   #Get acct_timeout
\&   my $acct_timeout = $tacacsplus_service\->acct_timeout( );
\&   #Modify acct_timeout
\&   $tacacsplus_service\->acct_timeout("5000");
.Ve
.RE
.RS 4
.RE
.SS "auth_retries( )"
.IX Subsection "auth_retries( )"
.RS 4
Use this method to set or retrieve the number of times \s-1NIOS\s0 retries authentication and authorization if there is no response or a server error occurrs.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
An unsigned integer between 0 and 5, inclusive.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\&   #Get auth_retries
\&   my $auth_retries = $tacacsplus_service\->auth_retries( );
\&   #Modify auth_retries
\&   $tacacsplus_service\->auth_retries("5");
.Ve
.RE
.RS 4
.RE
.SS "auth_timeout( )"
.IX Subsection "auth_timeout( )"
.RS 4
Use this method to set or retrieve the number of milliseconds \s-1NIOS\s0 waits to complete admin authentication and authorization by the \s-1TACACS+\s0 server.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
An unsigned integer between 5000 and 60000, inclusive.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\&   #Get auth_timeout
\&   my $auth_timeout = $tacacsplus_service\->auth_timeout( );
\&   #Modify auth_timeout
\&   $tacacsplus_service\->auth_timeout("5000");
.Ve
.RE
.RS 4
.RE
.SS "comment( )"
.IX Subsection "comment( )"
.RS 4
Use this method to set or retrieve a descriptive comment about the \s-1TACACS+\s0 Authentication Service object.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The comment in string format, with a maximum of 256 characters.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\&   #Get comment
\&   my $comment = $tacacsplus_service\->comment( );
\&   #Modify comment
\&   $tacacsplus_service\->comment("TACACS+ Authentication Service for NAC authentication");
.Ve
.RE
.RS 4
.RE
.SS "disabled( )"
.IX Subsection "disabled( )"
.RS 4
Use this method to set or retrieve the disable flag of the \s-1TACACS+\s0 Authentication Service object.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to set the disable flag or \*(L"false\*(R" to deactivate/unset it. The default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\&   #Get disable
\&   my $disable = $tacacsplus_service\->disabled( );
\&   #Modify disabled
\&   $tacacsplus_service\->disabled("true");
.Ve
.RE
.RS 4
.RE
.SS "name( )"
.IX Subsection "name( )"
.RS 4
Use this method to set or retrieve the name of the \s-1TACACS+\s0 Authentication Service object.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The name in string format, with a maximum of 64 characters.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\&   #Get name
\&   my $name = $tacacsplus_service\->name( );
\&   #Modify name
\&   $tacacsplus_service\->name("TACACS+ Authentication Service");
.Ve
.RE
.RS 4
.RE
.SS "tacacsplus_servers( )"
.IX Subsection "tacacsplus_servers( )"
.RS 4
Use this method to set or retrieve a list of \s-1TACACS+\s0 servers assigned to this \s-1TACACS+\s0 service.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
An array reference that contains a list of Infoblox::Grid::Admin::TACACSPlusAuthServer objects.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\&   #Get tacacsplus_servers
\&   my $tacacsplus_servers = $tacacsplus_service\->tacacsplus_servers( );
\&   #Modify tacacsplus_servers
\&   $tacacsplus_service\->tacacsplus_servers([$tacacsplus_server1]);
.Ve
.RE
.RS 4
.RE
.SH "SAMPLE CODE"
.IX Header "SAMPLE CODE"
The following sample code demonstrates the different functions that can be applied to an object, such as add, search, modify, and remove. This sample also includes error handling for the operations.
.PP
\&\fB#Preparation prior to a \s-1TACACS+\s0 Authentication Service object insertion\fR
.PP
.Vb 3
\& #PROGRAM STARTS: Include all the modules that will be used
\& use strict;
\& use Infoblox;
\&
\& #Create a session to the Infoblox appliance
\& my $host_ip =  "192.168.1.2";
\& my $session = Infoblox::Session\->new(
\&     master   => $host_ip,
\&     username => "admin",
\&     password => "infoblox"
\&     );
\& unless($session){
\&         die("Constructor for session failed: ",
\&                Infoblox::status_code(). ":" . Infoblox::status_detail());
\& }
\& print "Session created successfully.\en";
\&
\& my $tcs1 = Infoblox::Grid::Admin::TACACSPlusAuthServer\->new(
\&                                                         comment  => \*(Aqserver 1\*(Aq,
\&                                                         fqdn_or_ip => \*(Aq10.0.1.1\*(Aq,
\&                                                         shared_secret => \*(Aqsecret1\*(Aq,
\&                                                                                                                 auth_type => \*(AqASCII\*(Aq,
\&                                                        );
\&
\& my $tcs2 = Infoblox::Grid::Admin::TACACSPlusAuthServer\->new(
\&                                                         comment  => \*(Aqserver 2\*(Aq,
\&                                                         fqdn_or_ip => \*(Aqdomain.com\*(Aq,
\&                                                         shared_secret => \*(Aqsecret2\*(Aq,
\&                                                                                                                 auth_type => \*(AqASCII\*(Aq,
\&                                                       );
.Ve
.PP
\&\fB#Create the \s-1TACACS+\s0 Authentication Service.\fR
.PP
.Vb 9
\& my $service = Infoblox::Grid::Admin::TACACSPlusAuthService\->new(
\&                                                             acct_retries   => 1,
\&                                                             auth_retries   => 1,
\&                                                             disabled       => \*(Aqtrue\*(Aq,
\&                                                             acct_timeout   => 1100,
\&                                                             auth_timeout   => 5000,
\&                                                             name           => \*(Aqsome.name.com\*(Aq,
\&                                                             tacacsplus_servers => [$tcs1, $tcs2]
\&                                                          );
\&
\& unless($service){
\&        die("Construct service object failed: ",
\&                Infoblox::status_code(). ":" .Infoblox::status_detail());
\&        }
\& print "Service object created successfully.\en";
\&
\& $session\->add($service)
\&     or die("Add TACACS+ service failed: ",
\&                $session\->status_code(). ":" .$session\->status_detail());
\&
\& print"Service added successfully.\en";
.Ve
.PP
\&\fB#Get a specific service.\fR
.PP
.Vb 4
\& my @search_result = $session\->get(
\&     object => "Infoblox::Grid::Admin::TACACSPlusAuthService",
\&     name   => "some.name.com"
\& );
\&
\& my $search_obj = $search_result[0];
\& unless($search_obj){
\&        die("Search service failed: ",
\&                 $session\->status_code() . ":" . $session\->status_detail());
\&        }
\&
\& print "Search service object found at least 1 matching entry\en";
.Ve
.PP
\&\fB#Get and modify a \s-1TACACS+\s0 service.\fR
.PP
.Vb 1
\& $search_obj\->comment("this is a modified comment.");
\&
\& #Apply the change
\&     $session\->modify($search_obj)
\&         or die("Modify service failed: ",
\&                $session\->status_code(). ":" .$session\->status_detail());
\&
\&  print "Service object modified successfully.\en";
.Ve
.PP
\&\fB#Remove a service. \fR
.PP
.Vb 4
\& my @search_result = $session\->get(
\&     object => "Infoblox::Grid::Admin::TACACSPlusAuthService",
\&     name   => "some.name.com"
\& );
\&
\& my $search_obj = $search_result[0];
\& unless($search_obj){
\&        die("Search service failed: ",
\&                 $session\->status_code() . ":" . $session\->status_detail());
\&        }
\&
\& print "Search service object found at least 1 matching entry\en";
\&
\& $session\->remove($search_obj)
\&     or die("Remove service failed: ",
\&              $session\->status_code(). ":" .$session\->status_detail());
\&
\& print "Remove service successfull\en";
\&
\& ####PROGRAM ENDS####
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Infoblox Inc. <http://www.infoblox.com>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Infoblox::Grid::Admin::TACACSPlusAuthServer, Infoblox::Session, Infoblox::Session\->\fBadd()\fR, Infoblox::Session\->\fBget()\fR, Infoblox::Session\->\fBmodify()\fR, Infoblox::Session\->\fBremove()\fR
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2017 Infoblox Inc.

.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Infoblox::Grid::ThreatProtection::Rule 3"
.TH Infoblox::Grid::ThreatProtection::Rule 3 "2018-06-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Infoblox::Grid::ThreatProtection::Rule \- Grid Threat Protection Rule object.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This object provides information about the Grid Threat protection rule settings.
.SH "CONSTRUCTOR"
.IX Header "CONSTRUCTOR"
.Vb 6
\& my $object = Infoblox::Grid::ThreatProtection::Rule\->new(
\&    \*(Aqcomment\*(Aq    => $string                                     # Optional
\&    \*(Aqdisable\*(Aq    => \*(Aqtrue\*(Aq | \*(Aqfalse\*(Aq,                           # Optional / Default is \*(Aqfalse\*(Aq
\&    \*(Aqconfig\*(Aq     => $config,                                    # Required
\&    \*(Aqtemplate\*(Aq   => $template,                                  # Required
\& );
.Ve
.SH "SESSION METHODS"
.IX Header "SESSION METHODS"
The following functions can be applied to a Grid::ThreatProtection::Rule object.
.SS "Infoblox::Session\->add( )"
.IX Subsection "Infoblox::Session->add( )"
.RS 4
Use this method to add an object to the Infoblox appliance. See Infoblox::Session\->\fBadd()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 11
\& #Get Rule template Object
\& my $template = $session\->search(\*(Aqobject\*(Aq => \*(AqInfoblox::Grid::ThreatProtection::RuleTemplate\*(Aq, \*(Aqname\*(Aq => \*(AqWhitelist source IPv6 address\*(Aq);
\& my $config = $template\->default_config();
\& my $params = $config\->params();
\& $params\->[0]\->value(\*(Aq2001::1\*(Aq);
\& #Construct an object
\& my $custom_rule = Infoblox::Grid::ThreatProtection::Rule\->new(
\&                    \*(Aqtemplate\*(Aq   => $template,
\&                    \*(Aqcomment\*(Aq    => \*(AqTest Custom Rule\*(Aq,
\&                    \*(Aqconfig\*(Aq     => $config,
\&                    \*(Aqdisable\*(Aq    => \*(Aqfalse\*(Aq);
\&
\& #Submit for addition
\& my $response = $session\->add( $custom_rule );
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->get( )"
.IX Subsection "Infoblox::Session->get( )"
.RS 4
Use this method to retrieve all the matching objects from the Infoblox appliance. See Infoblox::Session\->\fBget()\fR for parameters and return values.
.IP "\fBKey References\fR" 4
.IX Item "Key References"
.Vb 3
\& Apply the following attributes to get a specific Grid Threat Protection::Rule object.
\&  sid    \- Optional. The Rule ID.
\&  name   \- Optional. The name of Threat Protection Rule.
.Ve
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& my @retrieved_objs = $session\->get(
\&     \*(Aqobject\*(Aq => \*(AqInfoblox::Grid::ThreatProtection::Rule\*(Aq,
\&     \*(Aqname\*(Aq => \*(AqWhitelist source IPv6 address\*(Aq,
\& );
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->modify( )"
.IX Subsection "Infoblox::Session->modify( )"
.RS 4
Use this method to modify an object in the Infoblox appliance. See Infoblox::Session\->\fBmodify()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 10
\& my $modify_rule_template = $session\->search(\*(Aqobject\*(Aq => \*(AqInfoblox::Grid::ThreatProtection::RuleTemplate\*(Aq, \*(Aqname\*(Aq => \*(AqWhitelist source IP address\*(Aq);
\& my $config = $modify_rule_template\->default_config();
\& $conf\->action(\*(AqPASS\*(Aq);
\& # Use this method to modify attributes of object.
\& $retrieved_objs\->comment(\*(AqComment of Custom Rule\*(Aq);
\& $retrieved_objs\->disable(\*(Aqtrue\*(Aq);
\& $retrieved_objs\->config($config);
\& $retrieved_objs\->template($modify_rule_template);
\& # Submit modification
\& my $response = $session\->modify( $retrieved_objs );
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->remove( )"
.IX Subsection "Infoblox::Session->remove( )"
.RS 4
Use this method to remove an object from the Infoblox appliance. See Infoblox::Session\->\fBremove()\fR for parameters and return values.
.Sp
To remove a specific object, first use \fBget()\fR or \fBsearch()\fR to retrieve the specific object, and then submit this object for removal.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 9
\& #Get the objects
\& my @retrieved_objs = $session\->get(
\&     \*(Aqobject\*(Aq => \*(AqInfoblox::Grid::ThreatProtection::Rule\*(Aq,
\&     \*(Aqname\*(Aq => \*(AqWhitelist source IPv6 address\*(Aq,
\& );
\& #Find the desired object from the retrieved list.
\& my $desired_object = $retrieved_objs[0];
\& # Submit for removal
\& my $response = $session\->remove( $desired_object );
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->ruleset( )"
.IX Subsection "Infoblox::Session->ruleset( )"
.RS 4
Use this method to retrieve the ruleset. See Infoblox::Session\->\fBadd()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 5
\& #Get the object
\& my $rule = $self\->{\*(Aqsession\*(Aq}\->search(
\&     \*(Aqobject\*(Aq => \*(AqInfoblox::Grid::ThreatProtection::Rule\*(Aq,
\&     \*(Aqsid\*(Aq => \*(Aq111111\*(Aq,
\& );
\&
\& # Retrieve ruleset
\& my $ruleset = $rule\->ruleset();
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->search( )"
.IX Subsection "Infoblox::Session->search( )"
.RS 4
Use this method to search for objects in the Infoblox appliance. See Infoblox::Session\->\fBsearch()\fR for parameters and return values.
.IP "\fBKey References\fR" 4
.IX Item "Key References"
.Vb 3
\& Apply the following attributes to get a specific Grid Threat Protection::Rule object.
\&  sid    \- Optional. The Rule ID.
\&  name   \- Optional. The name of Threat Protection Rule.
.Ve
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& my @retrieved_objs = $session\->search(
\&     \*(Aqobject\*(Aq => \*(AqInfoblox::Grid::ThreatProtection::Rule\*(Aq,
\&     \*(Aqname\*(Aq = \*(AqWhitelist source IP network\*(Aq;
\& );
.Ve
.RE
.RS 4
.RE
.SH "METHODS"
.IX Header "METHODS"
This section describes all the methods that you can use to configure and retrieve values of the Threat Protection Rule.
.SS "allowed_actions( )"
.IX Subsection "allowed_actions( )"
.RS 4
Use this method to retrieve the allowed actions for the rule. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $object\->allowed_actions();
.Ve
.RE
.RS 4
.RE
.SS "category( )"
.IX Subsection "category( )"
.RS 4
Use this method to retrieve reference to the rule category. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $object\->category();
.Ve
.RE
.RS 4
.RE
.SS "comment( )"
.IX Subsection "comment( )"
.RS 4
Use this method to set or retrieve user editable comments.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Comments in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->comment();
\& # Modify attribute value
\& $object\->comment(\*(AqNew comment\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "config( )"
.IX Subsection "config( )"
.RS 4
Use this method to set or retrieve information about the rule configuration.
.Sp
This method is required for creating custom rules. The server will set all undefined members of the object to include the 'params' array from the template.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is reference on Infoblox::Grid::ThreatProtection::RuleConfig object.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 5
\& # Get attribute value
\& my $value = $object\->config();
\& $value\->log_severity(\*(AqINFORMATIONAL\*(Aq);
\& # Modify attribute value
\& $object\->config($value);
.Ve
.RE
.RS 4
.RE
.SS "description( )"
.IX Subsection "description( )"
.RS 4
Use this method to retrieve the description for the rule. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $object\->description();
.Ve
.RE
.RS 4
.RE
.SS "disable( )"
.IX Subsection "disable( )"
.RS 4
Use this method to set or indicate whether the rule is enabled or disabled for the Grid.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is \*(L"true\*(R" or \*(L"false\*(R". The default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->disable();
\& # Modify attribute value
\& $object\->disable(\*(Aqtrue\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "is_factory_reset_enabled( )"
.IX Subsection "is_factory_reset_enabled( )"
.RS 4
Use this method to retrieve the flag that indicates whether the factory reset of this object is enabled or disabled. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $object\->is_factory_reset_enabled();
.Ve
.RE
.RS 4
.RE
.SS "name( )"
.IX Subsection "name( )"
.RS 4
Use this method to retrieve the rule name. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $object\->name();
.Ve
.RE
.RS 4
.RE
.SS "sid( )"
.IX Subsection "sid( )"
.RS 4
Use this method to retrieve the Rule \s-1ID.\s0 This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $object\->sid();
.Ve
.RE
.RS 4
.RE
.SS "template( )"
.IX Subsection "template( )"
.RS 4
Use this method to set or retrieve reference to the template object.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is reference on Infoblox::Grid::ThreatProtection::RuleTemplate object.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 7
\& # Get attribute value
\& my $value = $object\->template();
\& # Get Rule Template Object.
\& my $modify_rule_template = $session\->search(\*(Aqobject\*(Aq => \*(AqInfoblox::Grid::ThreatProtection::RuleTemplate\*(Aq, \*(Aqname\*(Aq => \*(AqWhitelist source IP network\*(Aq);
\& $object\->template($modify_rule_template);
\& # Submit modification
\& my $response = $session\->modify( $object );
.Ve
.RE
.RS 4
.RE
.SS "type( )"
.IX Subsection "type( )"
.RS 4
Use this method to retrieve the rule type. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $object\->type();
.Ve
.RE
.RS 4
.RE
.SH "AUTHOR"
.IX Header "AUTHOR"
Infoblox Inc. <http://www.infoblox.com/>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Infoblox::Session, Infoblox::Grid::ThreatProtection, Infoblox::Grid::Member::ThreatProtection::Rule, Infoblox::Grid::ThreatProtection::RuleConfig, Infoblox::Grid::ThreatProtection::RuleParam
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2017 Infoblox Inc.

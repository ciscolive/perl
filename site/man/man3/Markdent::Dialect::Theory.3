.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Markdent::Dialect::Theory 3"
.TH Markdent::Dialect::Theory 3 "2020-07-03" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Markdent::Dialect::Theory \- Markdown extensions proposed by David Wheeler (aka Theory)
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  use Markdent::Parser;
\&
\&  my $parser = Markdent::Parser\->new( dialects => \*(AqTheory\*(Aq, handler => ... );
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The Theory roles add parsing for Markdown extensions proposed by David Wheeler
(aka Theory). See
<http://justatheory.com/computers/markup/markdown\-table\-rfc.html> and
<http://justatheory.com/computers/markup/modest\-markdown\-proposal.html> for
details.
.SS "\s-1DEVIATIONS\s0"
.IX Subsection "DEVIATIONS"
The dialect differs from David Wheeler's proposals in a few ways. Most of
these deviations were discussed with David Wheeler and included with his
approval.
.IP "\(bu" 4
The header's \*(L"marker\*(R" row can use \*(L"+====+\*(R" as well as \*(L"+\-\-\-\-+\*(R":
.Sp
.Vb 3
\&  | Header 1 | Header 2 |
\&  +==========+==========+
\&  | Body 1   | Body 2   |
.Ve
.IP "\(bu" 4
The table does not require a header:
.Sp
.Vb 2
\&  | Body 1 | Body 2 |
\&  | Body 3 | Body 4 |
.Ve
.IP "\(bu" 4
You can include a header marker at the beginning and/or end of the table. This
matches how MySQL outputs tables from its \s-1CLI\s0 tool.
.Sp
.Vb 8
\&  +\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-+
\&  | id   | name        | description                  | price  |
\&  +\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-+
\&  |    1 | gizmo       | Takes care of the doohickies |   1.99 |
\&  |    2 | doodad      | Collects *gizmos*            |  23.80 |
\&  |   10 | dojigger    | Foo                          | 102.98 |
\&  | 1024 | thingamabob | Self\-explanatory, no?        |   0.99 |
\&  +\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-+
.Ve
.IP "\(bu" 4
Currently it just does tables, not definition lists. This will be fixed in a
future release.
.IP "\(bu" 4
Table continuation lines are expected to have the same number of cells as the
line being continued. In other words, this doesn't work:
.Sp
.Vb 2
\& | cell1 | cell2     |
\&         : continues
.Ve
.Sp
Instead, you must write this:
.Sp
.Vb 2
\& | cell1 | cell2     |
\& :       : continues :
.Ve
.Sp
This is not an approved deviation, and may be corrected in a future release if
I can figure out how to do so (patches welcome).
.SH "BUGS"
.IX Header "BUGS"
See Markdent for bug reporting details.
.SH "AUTHOR"
.IX Header "AUTHOR"
Dave Rolsky, <autarch@urth.org>
.SH "COPYRIGHT & LICENSE"
.IX Header "COPYRIGHT & LICENSE"
Copyright 2009\-2012 Dave Rolsky, All Rights Reserved.
.PP
This program is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.

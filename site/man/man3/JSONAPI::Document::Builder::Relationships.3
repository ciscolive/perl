.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "JSONAPI::Document::Builder::Relationships 3"
.TH JSONAPI::Document::Builder::Relationships 3 "2019-01-12" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
JSONAPI::Document::Builder::Relationships \- Related Resource Document builder
.SH "VERSION"
.IX Header "VERSION"
version 2.4
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Builds the related resource document for a given row.
.SS "row"
.IX Subsection "row"
The \f(CW\*(C`DBIx::Class::Row\*(C'\fR for \f(CW\*(C`relationship\*(C'\fR.
.PP
Note this is not the relationship row, rather
it is its parent.
.SS "relationship"
.IX Subsection "relationship"
String name of the relationship.
.SS "with_attributes"
.IX Subsection "with_attributes"
Boolean; Default: false
.PP
If specified, will build the relationship with attributes
instead of links.
.PP
Default behaviour is to build with links.
.SS "build : HashRef"
.IX Subsection "build : HashRef"
Main caller method; Builds the related resource document.
.ie n .SS "build_links_document(DBIx::Class::Row $row, Str $relationship) : HashRef"
.el .SS "build_links_document(DBIx::Class::Row \f(CW$row\fP, Str \f(CW$relationship\fP) : HashRef"
.IX Subsection "build_links_document(DBIx::Class::Row $row, Str $relationship) : HashRef"
Builds a HashRef containing strings that represent URLs for fetching
the given relationship, as well as the relationship \s-1ID\s0(s).
.PP
For referential purposes, \fBself\fR and \fBrelated\fR mean the following:
.IP "self" 4
.IX Item "self"
A link pointing to the relationship itself regardless of whether it is
a one-to-one or has-many type of relationship. It contains the word
\&\*(L"relationship\*(R" in the \s-1URL.\s0
.Sp
The specification defines this link as the \fBlink to the relationship itself\fR
in the context of the primary resource. This means that the resource(s)
returned from this \s-1URL\s0 should be directly related to the primary resource,
i.e. \f(CW\*(C`$dbic_row\->$relationship\*(C'\fR.
.IP "related" 4
.IX Item "related"
Behaves the same as \*(L"self\*(R" except that its \s-1URL\s0 structure is
different. I fail to see the difference.
.ie n .SS "build_document(DBIx::Class::Row $row, Str $relationship) : HashRef"
.el .SS "build_document(DBIx::Class::Row \f(CW$row\fP, Str \f(CW$relationship\fP) : HashRef"
.IX Subsection "build_document(DBIx::Class::Row $row, Str $relationship) : HashRef"
Builds a HashRef of the relationship(s) with attributes.
.ie n .SS "build_single_document(DBIx::Class::Row $related_row, Str $relationship) : HashRef"
.el .SS "build_single_document(DBIx::Class::Row \f(CW$related_row\fP, Str \f(CW$relationship\fP) : HashRef"
.IX Subsection "build_single_document(DBIx::Class::Row $related_row, Str $relationship) : HashRef"
Builds a HashRef representing a single relationship row.

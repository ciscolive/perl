.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Mojo::SNMP::Dispatcher 3"
.TH Mojo::SNMP::Dispatcher 3 "2016-03-22" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mojo::SNMP::Dispatcher \- Instead of Net::SNMP::Dispatcher
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module works better with Mojo::IOLoop since it register the
IO::Socket::INET sockets in with the mojo reactor.
.SH "ATTRIBUTES"
.IX Header "ATTRIBUTES"
.SS "ioloop"
.IX Subsection "ioloop"
Holds a Mojo::IOLoop object. Same as \*(L"ioloop\*(R" in Mojo::SNMP.
.SS "message_processing"
.IX Subsection "message_processing"
Holds an instance of Net::SNMP::MessageProcessing.
.SS "debug"
.IX Subsection "debug"
Does nothing. Use \f(CW\*(C`MOJO_SNMP_DEBUG=1\*(C'\fR instead to get debug information.
.SS "error"
.IX Subsection "error"
Holds the last error.
.SS "connections"
.IX Subsection "connections"
Holds the number of active sockets.
.SH "METHODS"
.IX Header "METHODS"
.SS "send_pdu"
.IX Subsection "send_pdu"
This method will send a \s-1PDU\s0 to the \s-1SNMP\s0 server.
.SS "return_response_pdu"
.IX Subsection "return_response_pdu"
No idea what this does (?)
.SS "msg_handle_alloc"
.IX Subsection "msg_handle_alloc"
No idea what this does (?)
.SS "schedule"
.IX Subsection "schedule"
Used to schedule events at a given time. Use \*(L"timer\*(R" in Mojo::IOLoop to
do the heavy lifting.
.SS "register"
.IX Subsection "register"
Register a new transport object with Mojo::IOLoop::Reactor.
.SS "deregister"
.IX Subsection "deregister"
The opposite of \*(L"register\*(R".
.SH "COPYRIGHT & LICENSE"
.IX Header "COPYRIGHT & LICENSE"
This library is free software. You can redistribute it and/or modify
it under the same terms as Perl itself.
.SH "AUTHOR"
.IX Header "AUTHOR"
Jan Henning Thorsen \- \f(CW\*(C`jhthorsen@cpan.org\*(C'\fR

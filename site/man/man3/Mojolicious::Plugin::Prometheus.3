.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Mojolicious::Plugin::Prometheus 3"
.TH Mojolicious::Plugin::Prometheus 3 "2020-04-12" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mojolicious::Plugin::Prometheus \- Mojolicious Plugin
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&  # Mojolicious
\&  $self\->plugin(\*(AqPrometheus\*(Aq);
\&
\&  # Mojolicious::Lite
\&  plugin \*(AqPrometheus\*(Aq;
\&
\&  # Mojolicious::Lite, with custom response buckets (seconds)
\&  plugin \*(AqPrometheus\*(Aq => { response_buckets => [qw/4 5 6/] };
\&
\&  # You can add your own route to do access control
\&  my $under = app\->routes\->under(\*(Aq/secret\*(Aq =>sub {
\&    my $c = shift;
\&    return 1 if $c\->req\->url\->to_abs\->userinfo eq \*(AqBender:rocks\*(Aq;
\&    $c\->res\->headers\->www_authenticate(\*(AqBasic\*(Aq);
\&    $c\->render(text => \*(AqAuthentication required!\*(Aq, status => 401);
\&    return undef;
\&  });
\&  plugin Prometheus => {route => $under};
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Mojolicious::Plugin::Prometheus is a Mojolicious plugin that exports Prometheus metrics from Mojolicious.
.PP
Hooks are also installed to measure requests response time and count requests based on method and \s-1HTTP\s0 return code.
.SH "HELPERS"
.IX Header "HELPERS"
.SS "prometheus"
.IX Subsection "prometheus"
Create further instrumentation into your application by using this helper which gives access to the Net::Prometheus object.
See Net::Prometheus for usage.
.SH "METHODS"
.IX Header "METHODS"
Mojolicious::Plugin::Prometheus inherits all methods from
Mojolicious::Plugin and implements the following new ones.
.SS "register"
.IX Subsection "register"
.Vb 1
\&  $plugin\->register($app, \e%config);
.Ve
.PP
Register plugin in Mojolicious application.
.PP
\&\f(CW%config\fR can have:
.IP "\(bu" 2
route
.Sp
Mojolicious::Routes::Route object to attach the metrics to, defaults to generating a new one for '/'.
.Sp
Default: /
.IP "\(bu" 2
path
.Sp
The path to mount the exporter.
.Sp
Default: /metrics
.IP "\(bu" 2
prometheus
.Sp
Override the Net::Prometheus object. The default is a new singleton instance of Net::Prometheus.
.IP "\(bu" 2
namespace, subsystem
.Sp
These will be prefixed to the metrics exported.
.IP "\(bu" 2
request_buckets
.Sp
Override buckets for request sizes histogram.
.Sp
Default: \f(CW\*(C`(1, 50, 100, 1_000, 10_000, 50_000, 100_000, 500_000, 1_000_000)\*(C'\fR
.IP "\(bu" 2
response_buckets
.Sp
Override buckets for response sizes histogram.
.Sp
Default: \f(CW\*(C`(5, 50, 100, 1_000, 10_000, 50_000, 100_000, 500_000, 1_000_000)\*(C'\fR
.IP "\(bu" 2
duration_buckets
.Sp
Override buckets for request duration histogram.
.Sp
Default: \f(CW\*(C`(0.005, 0.01, 0.025, 0.05, 0.075, 0.1, 0.25, 0.5, 0.75, 1.0, 2.5, 5.0, 7.5, 10)\*(C'\fR (actually see Net::Prometheus <https://metacpan.org/source/PEVANS/Net-Prometheus-0.05/lib/Net/Prometheus/Histogram.pm#L19>)
.IP "\(bu" 2
shm_key
.Sp
Key used for shared memory access between workers, see \f(CW$key\fR in IPc::ShareLite <https://metacpan.org/pod/IPC::ShareLite> for details.
.SH "METRICS"
.IX Header "METRICS"
In addition to exposing the default process metrics that Net::Prometheus already expose
this plugin will also expose
.IP "\(bu" 2
\&\f(CW\*(C`http_requests_total\*(C'\fR, request counter partitioned over \s-1HTTP\s0 method and \s-1HTTP\s0 response code
.IP "\(bu" 2
\&\f(CW\*(C`http_request_duration_seconds\*(C'\fR, request duration histogram partitioned over \s-1HTTP\s0 method
.IP "\(bu" 2
\&\f(CW\*(C`http_request_size_bytes\*(C'\fR, request size histogram partitioned over \s-1HTTP\s0 method
.IP "\(bu" 2
\&\f(CW\*(C`http_response_size_bytes\*(C'\fR, response size histogram partitioned over \s-1HTTP\s0 method
.SH "AUTHOR"
.IX Header "AUTHOR"
Vidar Tyldum
.PP
(the IPC::ShareLite parts of this code is shamelessly stolen from Mojolicious::Plugin::Status written by Sebastian Riedel and mangled into something that works for me)
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright (C) 2018, Vidar Tyldum
.PP
This program is free software, you can redistribute it and/or modify it under
the terms of the Artistic License version 2.0.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.IP "Net::Prometheus" 2
.IX Item "Net::Prometheus"
.PD 0
.IP "Mojolicious::Plugin::Status" 2
.IX Item "Mojolicious::Plugin::Status"
.IP "Mojolicious" 2
.IX Item "Mojolicious"
.IP "Mojolicious::Guides" 2
.IX Item "Mojolicious::Guides"
.IP "<http://mojolicious.org>" 2
.IX Item "<http://mojolicious.org>"

.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Data::Stream::Bulk::Util 3"
.TH Data::Stream::Bulk::Util 3 "2012-02-14" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Data::Stream::Bulk::Util \- Utility functions for Data::Stream::Bulk
.SH "VERSION"
.IX Header "VERSION"
version 0.11
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&        use Data::Stream::Bulk::Util qw(array);
\&
\&        use namespace::clean;
\&
\&        # Wrap a list in L<Data::Stream::Bulk::Array>
\&        return bulk(qw(foo bar gorch baz));
\&
\&        # return an empty resultset
\&        return nil();
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module exports convenience functions for use with Data::Stream::Bulk.
.SH "EXPORTS"
.IX Header "EXPORTS"
Sub::Exporter is used to create the \f(CW\*(C`import\*(C'\fR routine, and all of its
aliasing/currying goodness is of course supported.
.IP "nil" 4
.IX Item "nil"
Creates a new Data::Stream::Bulk::Nil object.
.Sp
Takes no arguments.
.ie n .IP "bulk @items" 4
.el .IP "bulk \f(CW@items\fR" 4
.IX Item "bulk @items"
Creates a new Data::Stream::Bulk::Array wrapping \f(CW@items\fR.
.ie n .IP "cat @streams" 4
.el .IP "cat \f(CW@streams\fR" 4
.IX Item "cat @streams"
Concatenate several streams together.
.Sp
Returns \f(CW\*(C`nil\*(C'\fR if no arguments are provided.
.ie n .IP "filter { ... } $stream" 4
.el .IP "filter { ... } \f(CW$stream\fR" 4
.IX Item "filter { ... } $stream"
Calls \f(CW\*(C`filter\*(C'\fR on \f(CW$stream\fR with the provided filter.
.ie n .IP "unique $stream" 4
.el .IP "unique \f(CW$stream\fR" 4
.IX Item "unique $stream"
Filter the stream to remove duplicates.
.Sp
Note that memory use may potentially scale to O(k) where k is the number of
distinct items, because this is implemented in terms of a seen hash.
.Sp
In the future this will be optimized to be iterative for sorted streams.
.Sp
References are keyed by their refaddr (see \*(L"id\*(R" in Hash::Util::FieldHash).
.SH "AUTHOR"
.IX Header "AUTHOR"
Yuval Kogman <nothingmuch@woobling.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2012 by Yuval Kogman.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Filter::m4 3"
.TH Filter::m4 3 "2020-08-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Filter::m4 \- M4 source filter
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&    use Filter::m4;
\&    use Filter::m4 \*(Aqprefix\*(Aq;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This source filter pipes the current source file through the M4 macro
processor (\f(CW\*(C`m4\*(C'\fR) if it is available.
.PP
As with all source filters its scope is limited to the current source file
only.  Every file you want to be processed by the filter must have the
following line near the top.
.PP
.Vb 1
\&    use Filter::m4;
.Ve
.SH "EXAMPLE"
.IX Header "EXAMPLE"
Here is a small example that shows how to define and use an M4 macro:
.PP
.Vb 1
\&    use Filter::m4;
\&
\&    define(\`foo\*(Aq, \`$1 =~ s/bar/baz/r\*(Aq)
\&
\&    $a = "foobar";
\&    print "a = " . foo(\`$a\*(Aq) . "\en";
.Ve
.PP
The output of the above example:
.PP
.Vb 1
\&    a = foobaz
.Ve
.SH "NOTES"
.IX Header "NOTES"
By default, M4 uses ` and ' as quotes; however, this is configurable using
M4's \f(CW\*(C`changequote\*(C'\fR builtin.
.PP
M4 uses \f(CW$1\fR, \f(CW$2\fR, etc., to indicate arguments in macros.  To avoid
clashes with Perl regex syntax it is recommended to use Perl's alternative
forms \f(CW\*(C`${1}\*(C'\fR, \f(CW\*(C`${1}\*(C'\fR, etc.
.PP
The following keywords in M4 and Perl are identical:
.PP
.Vb 6
\&    eval
\&    format
\&    index
\&    mkstemp
\&    shift
\&    substr
.Ve
.PP
If you need such keywords in your Perl code you have to use one of the
following three solutions.
.IP "\(bu" 4
Protect the keyword with M4 quotes, for example \f(CW\`shift\*(Aq\fR.
.IP "\(bu" 4
Redefine the problematic M4 builtin using \f(CW\*(C`defn\*(C'\fR, as outlined in section
\&\fIRenaming macros\fR of the M4 info manual.
.IP "\(bu" 4
Use the \f(CW\*(C`prefix\*(C'\fR option.  This adds the prefix \f(CW\*(C`m4_\*(C'\fR to all M4 builtins
(but not to user-defined macros).  For example, you will have to use
\&\f(CW\*(C`m4_shift\*(C'\fR instead of \f(CW\*(C`shift\*(C'\fR.
.SH "AUTHOR"
.IX Header "AUTHOR"
Werner Lemberg
.SH "DATE"
.IX Header "DATE"
17th March 2018.

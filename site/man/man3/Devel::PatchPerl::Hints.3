.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Devel::PatchPerl::Hints 3"
.TH Devel::PatchPerl::Hints 3 "2020-06-04" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Devel::PatchPerl::Hints \- replacement 'hints' files
.SH "VERSION"
.IX Header "VERSION"
version 2.00
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  use Devel::PatchPerl::Hints;
\&
\&  if ( my $content = Devel::PatchPerl::Hints\->hint_file() ) {
\&    chmod 0644, \*(Aqhints/netbsd.sh\*(Aq or die "$!";
\&    open my $hints, \*(Aq>\*(Aq, \*(Aqhints/netbsd.sh\*(Aq or die "$!";
\&    print $hints $content;
\&    close $hints;
\&  }
\&
\&  # Get a list of OS for which we have hints
\&
\&  my @os = Devel::PatchPerl::Hints\->hints();
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Sometimes there is a problem with Perls \f(CW\*(C`hints\*(C'\fR file for a particular
perl port. This module provides fixed \f(CW\*(C`hints\*(C'\fR files encoded using
\&\f(CW\*(C`MIME::Base64\*(C'\fR.
.SH "FUNCTION"
.IX Header "FUNCTION"
The function is exported, but has to implicitly imported into the
requesting package.
.PP
.Vb 1
\&  use Devel::PatchPerl::Hints qw[hint_file];
.Ve
.PP
It may also be called as a class method:
.PP
.Vb 1
\&  use Devel::PatchPerl::Hints;
\&
\&  my $content = Devel::PatchPerl::Hints\->hint_file();
.Ve
.ie n .IP """hint_file""" 4
.el .IP "\f(CWhint_file\fR" 4
.IX Item "hint_file"
Takes an optional argument which is the \s-1OS\s0 name ( as would be returned by \f(CW$^O\fR ).
By default it will use \f(CW$^O\fR.
.Sp
In a scalar context, Will return the decoded content of the \f(CW\*(C`hints\*(C'\fR file suitable for writing straight to a
file handle or undef list if there isn't an applicable \f(CW\*(C`hints\*(C'\fR file for the given or derived
\&\s-1OS.\s0
.Sp
If called in a list context, will return a list, the first item will be the name of the \f(CW\*(C`hints\*(C'\fR file that
will need to be amended, the second item will be a string with the decoded content of the \f(CW\*(C`hints\*(C'\fR file suitable
for writing straight to a file handle. Otherwise an empty list will be returned.
.ie n .IP """hints""" 4
.el .IP "\f(CWhints\fR" 4
.IX Item "hints"
Takes no arguments, returns a list of \s-1OS\s0 names for which there are \f(CW\*(C`hints\*(C'\fR files.
.SH "AUTHOR"
.IX Header "AUTHOR"
Chris Williams <chris@bingosnet.co.uk>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2020 by Chris Williams and Marcus Holland-Moritz.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

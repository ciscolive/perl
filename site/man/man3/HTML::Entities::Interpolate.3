.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "HTML::Entities::Interpolate 3"
.TH HTML::Entities::Interpolate 3 "2016-09-04" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
HTML::Entities::Interpolate \- Call HTML::Entities::encode_entities, via a hash, within a string
.SH "Synopsis"
.IX Header "Synopsis"
This is scripts/synopsis.pl:
.PP
.Vb 1
\&        #!/usr/bin/env perl
\&
\&        use strict;
\&        use warnings;
\&
\&        use HTML::Entities::Interpolate;
\&
\&        # \-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
\&
\&        my($block_1) = \*(Aq<p>Para One</p>\*(Aq;
\&        my($block_2) = "<p align=\*(Aqcenter\*(Aq>Para Two</p>";
\&        my($block_3) = \*(Aqhttp://tipjar.com/bin/test?foo=bar&reg=inald\*(Aq;
\&        my($block_4) = $Entitize{$block_3};
\&
\&        print <<EOS;
\&        <html>
\&                <head>
\&                        <title>Test HTML::Entities::Interpolate</title>
\&                </head>
\&                <body>
\&                        <h1 align=\*(Aqcenter\*(Aq>HTML::Entities::Interpolate</h1>
\&                        <form action=\*(Aq#\*(Aq>
\&                        <table align=\*(Aqcenter\*(Aq>
\&                        <tr>
\&                                <td align=\*(Aqcenter\*(Aq>Input: <input name=\*(Aqdata\*(Aq value=\*(Aq$Entitize{$block_1}\*(Aq></td>
\&                        </tr>
\&                        <tr>
\&                                <td align=\*(Aqcenter\*(Aq><br>The full text of the block is <pre>$Entitize{$block_2}</pre></td>
\&                        </tr>
\&                        <tr>
\&                                <td align=\*(Aqcenter\*(Aq><br>Check out the web page at: <a href=\*(Aq$block_3\*(Aq>$block_4</a></td>
\&                        </tr>
\&                        </table>
\&                        </form>
\&                </body>
\&        </html>
\&        EOS
.Ve
.SH "Description"
.IX Header "Description"
\&\f(CW\*(C`HTML::Entities::Interpolate\*(C'\fR is a pure Perl module.
.SH "Constructor and initialization"
.IX Header "Constructor and initialization"
Not needed.
.SH "See Also"
.IX Header "See Also"
HTML::Entities.
.SH "Machine-Readable Change Log"
.IX Header "Machine-Readable Change Log"
The file Changes was converted into Changelog.ini by Module::Metadata::Changes.
.SH "Repository"
.IX Header "Repository"
<https://github.com/ronsavage/HTML\-Entities\-Interpolate>
.SH "Support"
.IX Header "Support"
<https://rt.cpan.org/Public/Dist/Display.html?Name=HTML::Entities::Interpolate>.
.SH "Author"
.IX Header "Author"
David Nicol <davidnicol@gmail.com>.
.PP
Maintainer: Ron Savage \fI<ron@savage.net.au>\fR.
.PP
This program is free software; you can redistribute
it and/or modify it under the same terms as Perl itself.
.PP
The full text of the license can be found in the
\&\s-1LICENSE\s0 file included with this module.

.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Hash::Diff 3"
.TH Hash::Diff 3 "2018-08-07" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Hash::Diff \- Return difference between two hashes as a hash
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 9
\&    use Hash::Diff qw( diff );
\&    my %a = ( 
\&                \*(Aqfoo\*(Aq    => 1,
\&            \*(Aqbar\*(Aq    => { a => 1, b => 1 },
\&        );
\&    my %b = ( 
\&                \*(Aqfoo\*(Aq     => 2, 
\&                \*(Aqbar\*(Aq    => { a => 1 },
\&        );
\&
\&    my %c = %{ diff( \e%a, \e%b ) };
\&    
\&    # %c = %{ foo => 1, bar => { b => 1} }
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Hash::Diff returns the difference between two hashes as a hash.
.IP "diff ( <hashref>, <hashref> )" 4
.IX Item "diff ( <hashref>, <hashref> )"
Diffs two hashes.  Returns a reference to the new hash.
.IP "left_diff ( <hashref>, <hashref> )" 4
.IX Item "left_diff ( <hashref>, <hashref> )"
Returns the values in the left hash that is not, or different from the right hash.
.SH "CAVEATS"
.IX Header "CAVEATS"
This will not handle self\-referencing/recursion within hashes well.  
This will only handle \s-1HASH\s0 and \s-1SCALAR.\s0
.PP
Plans for a future version include incorporate deep recursion protection.
And support for \s-1ARRAY.\s0
.SH "BUGS"
.IX Header "BUGS"
Sure!
Report here: http://rt.cpan.org/NoAuth/Bugs.html?Dist=Hash::Diff
.SH "AUTHOR"
.IX Header "AUTHOR"
Bjorn-Olav Strand <bo@startsiden.no>
.SH "CONTRIBUTOR"
.IX Header "CONTRIBUTOR"
Charles McGarvey <ccm@cpan.org>
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2010 \s-1ABC\s0 Startsiden \s-1AS.\s0 All rights reserved.
.PP
This library is free software.  You can redistribute it and/or modify it 
under the same terms as Perl itself.

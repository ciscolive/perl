.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.41)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Net::Whois::IANA 3"
.TH Net::Whois::IANA 3 "2020-10-13" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Net::Whois::IANA \- Net::Whois::IANA \- A universal WHOIS data extractor.
.SH "VERSION"
.IX Header "VERSION"
version 0.46
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 12
\&  use Net::Whois::IANA;
\&  my $ip = \*(Aq132.66.16.2\*(Aq;
\&  my $iana = Net::Whois::IANA\->new;
\&  $iana\->whois_query(\-ip=>$ip);
\&  print "Country: " , $iana\->country()            , "\en";
\&  print "Netname: " , $iana\->netname()            , "\en";
\&  print "Descr: "   , $iana\->descr()              , "\en";
\&  print "Status: "  , $iana\->status()             , "\en";
\&  print "Source: "  , $iana\->source()             , "\en";
\&  print "Server: "  , $iana\->server()             , "\en";
\&  print "Inetnum: " , $iana\->inetnum()            , "\en";
\&  print "CIDR: "    , join(",", $iana\->cidr())    , "\en";
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
.Vb 5
\&  Various Net::Whois and IP:: modules have been created.
\&This is just something I had to write because none of them s
\&uited my purpose. It is conceptually based on Net::Whois::IP
\&by Ben Schmitz <bschmitz@orbitz.com>, but differs from it by
\&a few points:
\&
\&  * It is object\-oriented.
\&  * It has a few immediate methods for representing some whois
\&  fields.
\&  * It allows the user to specify explicitly which whois servers
\&  to query, and those servers might even not be of the four main
\&  registries mentioned above.
\&  * It has more robust error handling.
\&
\&  Net::Whois::IANA was designed to provide a mechanism to lookup
\&whois information and store most descriptive part of it (descr,
\&netname and country fields) in the object. This mechanism is
\&supposed to be attached to a log parser (for example an Apache
\&web server log) to provide various accounting and statistics
\&information.
\&
\&  The query is performed in a roundrobin system over all four
\&registries until a valid entry is found. The valid entry stops
\&the main query loop and the object with information is returned.
\&Unfortunately, the output formats of each one of the registries
\&is not completely the same and sometimes even unsimilar but
\&some common ground was always found and the assignment of the
\&information into the query object is based upon this common
\&ground, whatever misleading it might be.
\&
\&  The query to the RIPE and APNIC registries are always performed
\&with a \*(Aq\-r\*(Aq flag to avoid blocking of the querying IP. Thus, the
\&contact info for the given entry is not obtainable with this
\&module. The query to the ARIN registry is performed with a \*(Aq+\*(Aq
\&flag to force the colon\-separated output of the information.
.Ve
.SS "\s-1EXPORT\s0"
.IX Subsection "EXPORT"
.Vb 3
\&  For the convenience of the user, basic list of IANA servers
\&(@IANA) and their mapping to host names and ports (%IANA) are
\&being exported.
\&
\&  Also the following methods are being exported:
\&
\&  $iana\->whois_query(\-ip=>$ip,\-whois=>$whois|\-mywhois=>\e%mywhois) :
\&
\&    Perform the query on the ip specified by $ip. You can limit
\&  the lookup to a single server (of the IANA list) by specifying
\&  \*(Aq\-whois=>$whois\*(Aq pair or you can provide a set of your own
\&  servers by specifying the \*(Aq\-mywhois=>\e%mywhois\*(Aq pair. The latter
\&  one overrides all of the IANA list for lookup. You can also set
\&  \-debug option in order to trigger some verbosity in the output.
\&
\&  $iana\->descr()
\&
\&    Returns some of the "descr:" field contents of the queried IP.
\&
\&  $iana\->netname()
\&
\&    Returns the "netname:" field contents of the queried IP.
\&
\&  $iana\->country()
\&
\&    Returns "country:" field contents of the queried IP. Useful
\&  to combine with the Geography::Countries module.
\&
\&  $iana\->inetnum()
\&
\&    Returns the IP range of the queried IP. Often it is contained
\&  within the inetnum field, but it is calculated for LACNIC.
\&
\&  $iana\->status()
\&
\&    Returns the "status:" field contents of the queried IP.
\&
\&  $iana\->source()
\&
\&    Returns the "source:" field contents of the queried IP.
\&
\&  $iana\->server()
\&
\&    Returns the server that returned most valuable ntents of
\&  the queried IP.
\&
\&  $iana\->cidr()
\&
\&    Returns an array in CIDR notation (1.2.3.4/5) of the IP\*(Aqs registered
\&  range.
\&
\&  $iana\->fullinfo()
\&
\&    Returns the complete output of the query.
\&
\&  $iana\->is_mine($ip,@cidrrange)
\&
\&    Checks if the ip is within one of the CIDR ranges given by
\&  @cidrrange. Returns 0 if none, 1 if a range matches.
\&
\&  $iana\->abuse()
\&
\&    Yields the best guess for the potential abuse report email address
\&  candidate. This is not a very reliable thing, but sometimes it proves
\&  useful.
.Ve
.SH "NAME"
Net::Whois::IANA \- A universal WHOIS data extractor.
.SH "ABSTRACT"
.IX Header "ABSTRACT"
.Vb 5
\&  This is a simple module to extract the descriptive whois
\&information about various IPs as they are stored in the four
\&regional whois registries of IANA \- RIPE (Europe, Middle East)
\&APNIC (Asia/Pacific), ARIN (North America), AFRINIC (Africa)
\&and LACNIC (Latin American & Caribbean).
\&
\&  It is designed to serve statistical harvesters of various
\&access logs and likewise, therefore it only collects partial
\&and [rarely] unprecise information.
.Ve
.SH "BUGS"
.IX Header "BUGS"
.Vb 6
\&  As stated many times before, this module is not completely
\&homogeneous and precise because of the differences between
\&outputs of the IANA servers and because of some inconsistencies
\&within each one of them. Its primary target is to collect info
\&for general, shallow statistical purposes. The is_mine() method
\&might be optimized.
.Ve
.SH "CAVEATS"
.IX Header "CAVEATS"
.Vb 8
\&  The introduction of AFRINIC server may create some confusion
\&among servers. It might be that some entries are existant either in
\&both ARIN and AFRINIC or in both RIPE and AFRINIC, and some do not
\&exist at all. Moreover, there is a border confusion between Middle
\&East and Africa, thus, some Egypt sites appear under RIPE and some
\&under AFRINIC. LACNIC server arbitrarily imposes query rate temporary
\&block. ARIN "subconciously" redirects the client to appropriate
\&server sometimes. This redirection is not reflected yet by the package.
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.Vb 2
\&  Net::Whois::IP, Net::Whois::RIPE, IP::Country,
\&  Geography::Countries, Net::CIDR, NetAddr::IP,
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Roman M. Parparov <roman@parparov.com>, Nicolas R <atoomic@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2003\-2013, 2018 by Bolet Consulting <bolet@parparov.com>.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Mail::DMARC::Report 3"
.TH Mail::DMARC::Report 3 "2020-07-12" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mail::DMARC::Report \- A DMARC report interface
.SH "VERSION"
.IX Header "VERSION"
version 1.20200214
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\s-1DMARC\s0 reports are information that a \s-1DMARC\s0 implementing Mail Transfer Agent (\s-1MTA\s0) sends to Author Domains and also something that an Author Domain owner receives from other \s-1DMARC\s0 implementing MTAs. Mail::DMARC supports both roles, as a sender and a receiver.
.PP
There are two report types, aggregate and forensic.
.SH "Aggregate Reports"
.IX Header "Aggregate Reports"
See Mail::DMARC::Report::Aggregate
.SS "Forensic Reports"
.IX Subsection "Forensic Reports"
\&\s-1TODO\s0
.SS "Report Sender"
.IX Subsection "Report Sender"
See Mail::DMARC::Report::Send
.PP
.Vb 5
\&    1. store reports
\&    2. bundle aggregated reports
\&    3. format report in XML
\&    4. gzip the XML
\&    5. deliver report to Author Domain
.Ve
.SS "Report Receiver"
.IX Subsection "Report Receiver"
See Mail::DMARC::Report::Receive
.PP
.Vb 4
\&    1. accept reports via HTTP or SMTP
\&    2. parse the compressed XML message
\&    3. store the report
\&    4. present stored data
.Ve
.SS "Verify External Destinations"
.IX Subsection "Verify External Destinations"
.Vb 2
\&  1.  Extract the host portion of the authority component of the URI.
\&       Call this the "destination host".
\&
\&   2.  Prepend the string "_report._dmarc".
\&
\&   3.  Prepend the domain name from which the policy was retrieved.
\&
\&   4.  Query the DNS for a TXT record at the constructed name.  If the
\&       result of this request is a temporary DNS error of some kind
\&       (e.g., a timeout), the Mail Receiver MAY elect to temporarily
\&       fail the delivery so the verification test can be repeated later.
\&
\&   5.  If the result includes no TXT resource records or multiple TXT
\&       resource records, a positive determination of the external
\&       reporting relationship cannot be made; stop.
\&
\&   6.  Parse the result, if any, as a series of "tag=value" pairs, i.e.,
\&       the same overall format as the policy record.  In particular, the
\&       "v=DMARC1" tag is mandatory and MUST appear first in the list.
\&       If at least that tag is present and the record overall is
\&       syntactically valid per Section 6.3, then the external reporting
\&       arrangement was authorized by the destination ADMD.
\&
\&   7.  If a "rua" or "ruf" tag is thus discovered, replace the
\&       corresponding value extracted from the domain\*(Aqs DMARC policy
\&       record with the one found in this record.  This permits the
\&       report receiver to override the report destination.  However, to
\&       prevent loops or indirect abuse, the overriding URI MUST use the
\&       same destination host from the first step.
.Ve
.SH "ERROR REPORTS"
.IX Header "ERROR REPORTS"
12.2.4.  Error Reports
.PP
When a Mail Receiver is unable to complete delivery of a report via
any of the URIs listed by the Domain Owner, the Mail Receiver \s-1SHOULD\s0
generate an error message.  An attempt \s-1MUST\s0 be made to send this
report to all listed \*(L"mailto\*(R" URIs and \s-1MAY\s0 also be sent to any or all
other listed URIs.
.PP
The error report \s-1MUST\s0 be formatted per [\s-1MIME\s0].  A text/plain part
\&\s-1MUST\s0 be included that contains field-value pairs such as those found
in Section 2 of [\s-1DSN\s0].  The fields required, which may appear in any
order, are:
.PP
Report-Date:  A [\s-1MAIL\s0]\-formatted date expression indicating when the transport failure occurred.
.PP
Report-Domain:  The domain-name about which the failed report was generated.
.PP
Report-ID:  The Report-ID: that the report tried to use.
.PP
Report-Size:  The size, in bytes, of the report that was unable to be
    sent.  This \s-1MUST\s0 represent the number of bytes that the Mail
    Receiver attempted to send.  Where more than one transport system
    was attempted, the sizes may be different; in such cases, separate
    error reports \s-1MUST\s0 be generated so that this value matches the
    actual attempt that was made.  For example, a \*(L"mailto\*(R" error
    report would be sent to the \*(L"mailto\*(R" URIs with one size, while the
    \*(L"https\*(R" reports might be POSTed to those URIs with a different
    size, as they have different transport and encoding requirements.
.PP
Submitter:  The domain-name representing the Mail Receiver that generated, but was unable to submit, the report.
.PP
Submitting-URI:  The \s-1URI\s0(s) to which the Mail Receiver tried, but failed, to submit the report.
.PP
An additional text/plain part \s-1MAY\s0 be included that gives a human\-
readable explanation of the above, and \s-1MAY\s0 also include a \s-1URI\s0 that
can be used to seek assistance.
.PP
[\s-1NOTE: A\s0 more rigorous syntax specification, including \s-1ABNF\s0 and
possible registration of a new media type, will be added here when
more operational experience is acquired.]
.SH "AFRF reports"
.IX Header "AFRF reports"
.SH "IODEF reports"
.IX Header "IODEF reports"
https://datatracker.ietf.org/doc/draft\-kucherawy\-dmarc\-base/?include_text=1
.PP
Section 3.5 Out of Scope:
.PP
.Vb 1
\&    This first version of DMARC supports only a single reporting format.
.Ve
.SH "AUTHORS"
.IX Header "AUTHORS"
.IP "\(bu" 4
Matt Simerson <msimerson@cpan.org>
.IP "\(bu" 4
Davide Migliavacca <shari@cpan.org>
.IP "\(bu" 4
Marc Bradshaw <marc@marcbradshaw.net>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2020 by Matt Simerson.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

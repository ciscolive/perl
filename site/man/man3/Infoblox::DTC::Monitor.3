.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Infoblox::DTC::Monitor 3"
.TH Infoblox::DTC::Monitor 3 "2018-06-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Infoblox::DTC::Monitor \- A DTC Health Monitor object.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
A \s-1DTC\s0 Health Monitor object.
.SH "SESSION METHODS"
.IX Header "SESSION METHODS"
This section describes all the methods in a Session module that you can apply to a \s-1DTC\s0 Health Monitor object.
.SS "Infoblox::Session\->get( )"
.IX Subsection "Infoblox::Session->get( )"
.RS 4
Use this method to retrieve all the matching objects from the Infoblox appliance. See Infoblox::Session\->\fBget()\fR for parameters and return values.
.IP "\fBKey Reference\fR" 4
.IX Item "Key Reference"
.Vb 1
\& Apply the following attribute to get a specific object:
\&
\&   comment \- Optional. A DTC Health Monitor comment.
\&   name    \- Optional. A DTC Health Monitor name.
.Ve
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& my @retrieved_objs = $session\->get(
\&     object => \*(AqInfoblox::DTC::Monitor\*(Aq,
\&     name   => \*(Aqtcp_monitor\*(Aq,
\& );
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->search( )"
.IX Subsection "Infoblox::Session->search( )"
.RS 4
Use this method to search for objects in the Infoblox appliance. See Infoblox::Session\->\fBsearch()\fR for parameters and return values.
.IP "\fBKey Reference\fR" 4
.IX Item "Key Reference"
.Vb 1
\& Apply the following attribute to get a specific object:
\&
\&   comment \- Optional. A DTC Health Monitor comment.
\&   name    \- Required. A DTC Health Monitor name.
.Ve
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& my @retrieved_objs = $session\->search(
\&     object => \*(AqInfoblox::DTC::Monitor\*(Aq,
\&     name   => \*(Aq.*_monitor\*(Aq,
\& );
.Ve
.RE
.RS 4
.RE
.SH "METHODS"
.IX Header "METHODS"
This section describes all the methods that you can use to set or retrieve the attribute values of the object.
.SS "comment( )"
.IX Subsection "comment( )"
.RS 4
Use this method to retrieve a comment. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #get comment value
\& my $comment = $monitor\->comment();
.Ve
.RE
.RS 4
.RE
.SS "interval( )"
.IX Subsection "interval( )"
.RS 4
Use this method to retrieve the interval value for the request being sent. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The valid return value is an unsigned integer.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #get interval value
\& my $interval = $monitor\->interval();
.Ve
.RE
.RS 4
.RE
.SS "monitor( )"
.IX Subsection "monitor( )"
.RS 4
Use this method to retrieve an exact \s-1DTC\s0 Health Monitor object. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The valid return value can be one of the following objects: Infoblox::DTC::Monitor::TCP, Infoblox::DTC::Monitor::ICMP, Infoblox::DTC::Monitor::SIP, Infoblox::DTC::Monitor::HTTP, Infoblox::DTC::Monitor::PDP, Infoblox::DTC::Monitor::SNMP.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #get monitor value
\& my $monitor = $monitor\->monitor();
.Ve
.RE
.RS 4
.RE
.SS "name( )"
.IX Subsection "name( )"
.RS 4
Use this method to retrieve an object name. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #get name value
\& my $name = $monitor\->name();
.Ve
.RE
.RS 4
.RE
.SS "port( )"
.IX Subsection "port( )"
.RS 4
Use this method to retrieve a \s-1DTC\s0 Health Monitor port value. This is a read-only attribute.
.Sp
Note that port value for the \s-1ICMP\s0 Health Monitor is 0.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The valid return value is an unsigned integer between 0 and 65535.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #get port value
\& my $port = $monitor\->port();
.Ve
.RE
.RS 4
.RE
.SS "retry_up( )"
.IX Subsection "retry_up( )"
.RS 4
Use this method to retrieve the number of times the server appears online after it was offline so it is treated as alive. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The valid return value is an unsigned integer.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #get retry_up value
\& my $retry_up = $monitor\->retry_up();
.Ve
.RE
.RS 4
.RE
.SS "retry_down( )"
.IX Subsection "retry_down( )"
.RS 4
Use this method to retrieve the number of times the server appears online after it was offline so it is treated as alive. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The valid return value is an unsigned integer.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #get retry_down value
\& my $retry_down = $monitor\->retry_down();
.Ve
.RE
.RS 4
.RE
.SS "timeout( )"
.IX Subsection "timeout( )"
.RS 4
Use this method to retrieve the value of a request timeout. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The valid return value is an unsigned integer.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #get timeout value
\& my $timeout = $monitor\->timeout();
.Ve
.RE
.RS 4
.RE
.SS "type( )"
.IX Subsection "type( )"
.RS 4
Use this method to retrieve the transport type. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The valid return value is '\s-1HTTP\s0', '\s-1HTTPS\s0', '\s-1SIP\s0', '\s-1PDP\s0', '\s-1SNMP\s0', '\s-1TCP\s0' or '\s-1ICMP\s0'.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #get type value
\& my $type = $monitor\->type();
.Ve
.RE
.RS 4
.RE
.SH "AUTHOR"
.IX Header "AUTHOR"
Infoblox Inc. <http://www.infoblox.com/>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Infoblox::Session, 
Infoblox::Session\->\fBget()\fR, 
Infoblox::Session\->\fBsearch()\fR, 
Infoblox::DTC::Monitor::TCP, 
Infoblox::DTC::Monitor::ICMP, 
Infoblox::DTC::Monitor::SIP, 
Infoblox::DTC::Monitor::HTTP, 
Infoblox::DTC::Monitor::PDP, 
Infoblox::DTC::Monitor::SNMP.
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2017 Infoblox Inc.

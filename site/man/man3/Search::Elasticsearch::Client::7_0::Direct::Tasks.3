.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Search::Elasticsearch::Client::7_0::Direct::Tasks 3"
.TH Search::Elasticsearch::Client::7_0::Direct::Tasks 3 "2020-09-15" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Search::Elasticsearch::Client::7_0::Direct::Tasks \- A client for accessing the Task Management API
.SH "VERSION"
.IX Header "VERSION"
version 7.30
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module provides methods to access the Task Management \s-1API,\s0 such as listing
tasks and cancelling tasks.
.PP
It does Search::Elasticsearch::Role::Client::Direct.
.SH "METHODS"
.IX Header "METHODS"
.ie n .SS """list()"""
.el .SS "\f(CWlist()\fP"
.IX Subsection "list()"
.Vb 3
\&    $response = $e\->tasks\->list(
\&        task_id => $task_id  # optional
\&    );
.Ve
.PP
The \f(CW\*(C`list()\*(C'\fR method returns all running tasks or, if a \f(CW\*(C`task_id\*(C'\fR is specified, info
about that task.
.PP
Query string parameters:
    \f(CW\*(C`actions\*(C'\fR,
    \f(CW\*(C`detailed\*(C'\fR,
    \f(CW\*(C`error_trace\*(C'\fR,
    \f(CW\*(C`group_by\*(C'\fR,
    \f(CW\*(C`human\*(C'\fR,
    \f(CW\*(C`nodes\*(C'\fR,
    \f(CW\*(C`parent_task_id\*(C'\fR,
    \f(CW\*(C`timeout\*(C'\fR,
    \f(CW\*(C`wait_for_completion\*(C'\fR
.PP
See the task management docs <http://www.elastic.co/guide/en/elasticsearch/reference/current/tasks.html>
for more information.
.ie n .SS """get()"""
.el .SS "\f(CWget()\fP"
.IX Subsection "get()"
.Vb 3
\&    $response = $e\->tasks\->get(
\&        task_id => $task_id  # required
\&    );
.Ve
.PP
The \f(CW\*(C`get()\*(C'\fR method returns the task with the specified \s-1ID.\s0
.PP
Query string parameters:
    \f(CW\*(C`error_trace\*(C'\fR,
    \f(CW\*(C`human\*(C'\fR,
    \f(CW\*(C`wait_for_completion\*(C'\fR
.PP
See the task management docs <http://www.elastic.co/guide/en/elasticsearch/reference/current/tasks.html>
for more information.
.ie n .SS """cancel()"""
.el .SS "\f(CWcancel()\fP"
.IX Subsection "cancel()"
.Vb 3
\&    $response = $e\->tasks\->cancel(
\&        task_id => $task_id  # required
\&    );
.Ve
.PP
The \f(CW\*(C`cancel()\*(C'\fR method attempts to cancel the specified \f(CW\*(C`task_id\*(C'\fR or multiple tasks.
.PP
Query string parameters:
    \f(CW\*(C`actions\*(C'\fR,
    \f(CW\*(C`error_trace\*(C'\fR,
    \f(CW\*(C`human\*(C'\fR,
    \f(CW\*(C`nodes\*(C'\fR,
    \f(CW\*(C`parent_task_id\*(C'\fR,
    \f(CW\*(C`timeout\*(C'\fR
.PP
See the task management docs <http://www.elastic.co/guide/en/elasticsearch/reference/current/tasks.html>
for more information.
.SH "AUTHOR"
.IX Header "AUTHOR"
Enrico Zimuel <enrico.zimuel@elastic.co>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is Copyright (c) 2020 by Elasticsearch \s-1BV.\s0
.PP
This is free software, licensed under:
.PP
.Vb 1
\&  The Apache License, Version 2.0, January 2004
.Ve

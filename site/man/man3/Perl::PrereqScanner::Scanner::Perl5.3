.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Perl::PrereqScanner::Scanner::Perl5 3"
.TH Perl::PrereqScanner::Scanner::Perl5 3 "2015-04-06" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Perl::PrereqScanner::Scanner::Perl5 \- scan for core Perl 5 language indicators of required modules
.SH "VERSION"
.IX Header "VERSION"
version 1.023
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This scanner will look for the following indicators:
.IP "\(bu" 4
plain lines beginning with \f(CW\*(C`use\*(C'\fR, \f(CW\*(C`require\*(C'\fR, or \f(CW\*(C`no\*(C'\fR in your perl modules and scripts, including minimum perl version
.IP "\(bu" 4
regular inheritance declared with the \f(CW\*(C`base\*(C'\fR and \f(CW\*(C`parent\*(C'\fR pragmata
.PP
Since Perl does not allow you to supply a version requirement with a
\&\f(CW\*(C`require\*(C'\fR statement, the scanner will check the statement after the
\&\f(CW\*(C`require Module\*(C'\fR to see if it is \f(CW\*(C`Module\->VERSION( minimum_version );\*(C'\fR.
.PP
In order to provide a minimum version, that method call must meet the
following requirements:
.IP "\(bu" 4
it must be the very next statement after \f(CW\*(C`require Module\*(C'\fR.  Nothing can separate them but whitespace and comments (and one semicolon).
.IP "\(bu" 4
\&\f(CW\*(C`Module\*(C'\fR must be a bareword, and match the \f(CW\*(C`require\*(C'\fR exactly.
.IP "\(bu" 4
\&\f(CW\*(C`minimum_version\*(C'\fR must be a literal number, v\-string, or single-quoted string.  Double quotes are not allowed.
.SH "AUTHORS"
.IX Header "AUTHORS"
.IP "\(bu" 4
Jerome Quelin
.IP "\(bu" 4
Ricardo Signes <rjbs@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2009 by Jerome Quelin.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "MooX::Options::Role 3"
.TH MooX::Options::Role 3 "2017-08-22" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
MooX::Options::Role \- role that is apply to your object
.SH "USAGE"
.IX Header "USAGE"
Don't use MooX::Options::Role directly. It is used by MooX::Options to upgrade your module. But it is useless alone.
.SH "METHODS"
.IX Header "METHODS"
These methods will be composed into your class
.SS "new_with_options"
.IX Subsection "new_with_options"
Same as new but parse \s-1ARGV\s0 with Getopt::Long::Descriptive
.PP
Check full doc MooX::Options for more details.
.SS "parse_options"
.IX Subsection "parse_options"
Parse your options, call Getopt::Long::Descriptive and convert the result for the \*(L"new\*(R" method.
.PP
It is use by \*(L"new_with_options\*(R".
.SS "options_usage"
.IX Subsection "options_usage"
Display help message.
.PP
Check full doc MooX::Options for more details.
.SS "options_help"
.IX Subsection "options_help"
Display long usage message
.SS "options_short_usage"
.IX Subsection "options_short_usage"
Display quick usage message, with only the list of options
.SS "options_man"
.IX Subsection "options_man"
Display a pod like a manual
.SH "SUPPORT"
.IX Header "SUPPORT"
You can find documentation for this module with the perldoc command.
.PP
.Vb 1
\&    perldoc MooX::ConfigFromFile
.Ve
.PP
You can also look for information at:
.IP "\(bu" 4
\&\s-1RT: CPAN\s0's request tracker (report bugs here)
.Sp
<http://rt.cpan.org/NoAuth/Bugs.html?Dist=MooX\-ConfigFromFile>
.IP "\(bu" 4
AnnoCPAN: Annotated \s-1CPAN\s0 documentation
.Sp
<http://annocpan.org/dist/MooX\-ConfigFromFile>
.IP "\(bu" 4
\&\s-1CPAN\s0 Ratings
.Sp
<http://cpanratings.perl.org/d/MooX\-ConfigFromFile>
.IP "\(bu" 4
Search \s-1CPAN\s0
.Sp
<http://search.cpan.org/dist/MooX\-ConfigFromFile/>
.SH "AUTHOR"
.IX Header "AUTHOR"
celogeek <me@celogeek.com>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2013 by celogeek <me@celogeek.com>.
.PP
This software is copyright (c) 2017 by Jens Rehsack.
.PP
This is free software; you can redistribute it and/or modify it under the same terms as the Perl 5 programming language system itself.

.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.41)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Dist::Zilla::Plugin::AutoVersion 3"
.TH Dist::Zilla::Plugin::AutoVersion 3 "2020-11-03" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Dist::Zilla::Plugin::AutoVersion \- take care of numbering versions so you don't have to
.SH "VERSION"
.IX Header "VERSION"
version 6.017
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This plugin automatically produces a version string, generally based on the
current time.  By default, it will be in the format: 1.yyDDDn
.SH "ATTRIBUTES"
.IX Header "ATTRIBUTES"
.SS "major"
.IX Subsection "major"
The \f(CW\*(C`major\*(C'\fR attribute is just an integer that is meant to store the major
version number.  If no value is specified in configuration, it will default to
1.
.PP
This attribute's value can be referred to in the autoversion format template.
.SS "format"
.IX Subsection "format"
The format is a Text::Template string that will be rendered to form the
version.  It is meant to access to one variable, \f(CW$major\fR, and one subroutine,
\&\f(CW\*(C`cldr\*(C'\fR, which will format the current time (in \s-1GMT\s0) using \s-1CLDR\s0 patterns (for
which consult the DateTime documentation).
.PP
The default value is:
.PP
.Vb 3
\&  {{ $major }}.{{ cldr(\*(AqyyDDD\*(Aq) }}
\&  {{ sprintf(\*(Aq%01u\*(Aq, ($ENV{N} || 0)) }}
\&  {{$ENV{DEV} ? (sprintf \*(Aq_%03u\*(Aq, $ENV{DEV}) : \*(Aq\*(Aq}}
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Core Dist::Zilla plugins:
PkgVersion,
PodVersion,
NextRelease.
.PP
Dist::Zilla roles:
VersionProvider,
TextTemplate.
.SH "AUTHOR"
.IX Header "AUTHOR"
Ricardo \s-1SIGNES\s0 üòè <rjbs@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2020 by Ricardo \s-1SIGNES.\s0
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "MooseX::Types::PortNumber 3"
.TH MooseX::Types::PortNumber 3 "2016-08-31" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
MooseX::Types::PortNumber \- Port number type for moose classes by The Internet Assigned Numbers Authority (IANA)
.SH "VERSION"
.IX Header "VERSION"
version 0.03
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 4
\&    package MyClass;
\&    use Moose;
\&    use MooseX::Types::PortNumber
\&        qw( PortNumber PortWellKnow PortRegistered PortPrivate );
\&
\&    has port => ( isa => PortNumber,     is => \*(Aqro\*(Aq );
\&    has well => ( isa => PortWellKnow,   is => \*(Aqro\*(Aq );
\&    has reg  => ( isa => PortRegistered, is => \*(Aqro\*(Aq );
\&    has priv => ( isa => PortPrivate,    is => \*(Aqro\*(Aq );
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The port numbers are divided into three ranges: the Well Known Ports, the
Registered Ports, and the Dynamic and/or Private Ports.
.PP
The Well Known Ports are those from 0 through 1023.
.PP
\&\s-1DCCP\s0 Well Known ports \s-1SHOULD NOT\s0 be used without \s-1IANA\s0 registration.  The
registration procedure is defined in [\s-1RFC4340\s0], Section 19.9.
.PP
The Registered Ports are those from 1024 through 49151
.PP
\&\s-1DCCP\s0 Registered ports \s-1SHOULD NOT\s0 be used without \s-1IANA\s0 registration.  The
registration procedure is defined in [\s-1RFC4340\s0], Section 19.9.
.PP
The Dynamic and/or Private Ports are those from 49152 through 65535
.SH "SEE ALSO"
.IX Header "SEE ALSO"
http://www.iana.org/assignments/port\-numbers
.SH "SUPPORT"
.IX Header "SUPPORT"
Bugs may be submitted through the \s-1RT\s0 bug tracker <http://rt.cpan.org/Public/Dist/Display.html?Name=MooseX-Types-PortNumber>
(or bug\-moosex\-types\-portnumber@rt.cpan.org <mailto:bug-moosex-types-portnumber@rt.cpan.org>).
.PP
I am also usually active on \s-1IRC\s0 as 'drolsky' on \f(CW\*(C`irc://irc.perl.org\*(C'\fR.
.SH "DONATIONS"
.IX Header "DONATIONS"
If you'd like to thank me for the work I've done on this module, please
consider making a \*(L"donation\*(R" to me via PayPal. I spend a lot of free time
creating free software, and would appreciate any support you'd care to offer.
.PP
Please note that \fBI am not suggesting that you must do this\fR in order for me
to continue working on this particular software. I will continue to do so,
inasmuch as I have in the past, for as long as it interests me.
.PP
Similarly, a donation made in this way will probably not make me work on this
software much more, unless I get so many donations that I can consider working
on free software full time (let's all have a chuckle at that together).
.PP
To donate, log into PayPal and send money to autarch@urth.org, or use the
button at <http://www.urth.org/~autarch/fs\-donation.html>.
.SH "AUTHORS"
.IX Header "AUTHORS"
.IP "\(bu" 4
Thiago Rondon <thiago@aware.com.br>
.IP "\(bu" 4
Dave Rolsky <autarch@urth.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2016 by Thiago Rondon & Dave Rolsky.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

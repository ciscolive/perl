.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "App::iosdiff 3"
.TH App::iosdiff 3 "2016-06-17" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
App::iosdiff \- Cisco IOS Config Diff
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& use App::iosdiff qw/diff/;
\& 
\& my @output = diff({
\&     left  => \*(Aqfrom_this_file\*(Aq,
\&     right => \*(Aqto_this_file\*(Aq,
\& });
\& 
\& if (scalar @output == 0) {
\&     print "no differences!\en";
\& }
\& else {
\&     print @output;
\& }
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This library provides one subroutine to run an intelligent context aware diff
between two files in Cisco IOS-style configuration format.
.PP
Whilst an ordinary diff works on IOS-style configuration files, it doesn't
show the context in a useful way. For example if one line changes within an
interface configuration, you're likely not to see the interface name in a
standard 3\-line contextual diff. This program improves that by showing the
full context of any difference.
.PP
In terms of IOS-style configuration, this context means either the \*(L"section\*(R"
such as an interface or class-map (a header with indented lines), or the
command group such as an access control list, where the lines share common
leading text.
.SH "USAGE"
.IX Header "USAGE"
See the above \*(L"\s-1SYNOPSIS\*(R"\s0 for an example.
.PP
Lines in the files which are comments (begin with "\f(CW\*(C`!\*(C'\fR") will be stripped
from the file before the comparison is made.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
The iosdiff program is bundled with this library and provides a command
line interface for printing the differences between two files.
.SH "AUTHOR"
.IX Header "AUTHOR"
Oliver Gorwits <oliver@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2016 by University of Oxford.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

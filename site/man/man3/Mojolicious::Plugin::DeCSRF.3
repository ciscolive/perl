.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Mojolicious::Plugin::DeCSRF 3"
.TH Mojolicious::Plugin::DeCSRF 3 "2013-03-23" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mojolicious::Plugin::DeCSRF \- Defend from CSRF attacks centrally.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&  # Mojolicious::Lite
\&  #!/usr/bin/env perl
\&  
\&  use Mojolicious::Lite;
\&
\&  plugin \*(AqDeCSRF\*(Aq => {
\&    on_mismatch => sub {
\&      shift\->render(template => \*(Aq503\*(Aq, status => 503);
\&    },
\&    token_length => 8,
\&    token_name => \*(Aqcsrf\*(Aq,
\&    urls => qw~/protected~
\&  };
\&  
\&  get \*(Aq/\*(Aq => sub {
\&    my $self = shift;
\&  } => \*(Aqindex\*(Aq;
\&  
\&  get \*(Aq/protected\*(Aq => sub {
\&    my $self = shift;
\&  } => \*(Aqprotected\*(Aq;
\&
\&  app\->start();
\&  
\&  _\|_DATA_\|_
\&  @@ layouts/default.html.ep
\&  <html>
\&    <body><%= content %></body>
\&  </html>
\&  @@ protected.html.ep
\&  % layout \*(Aqdefault\*(Aq;
\&  <a href="<%= decsrf\->url(\*(Aqindex\*(Aq) %>">Home</a>
\&  @@ index.html.ep
\&  % layout \*(Aqdefault\*(Aq;
\&  <a href="<%= decsrf\->url(\*(Aqprotected\*(Aq) %>">Protected</a>
\&  @@ 503.html.ep
\&  Service error!
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Mojolicious::Plugin::DeCSRF is a Mojolicious plugin that defend the framework from \s-1CSRF\s0 attacks centrally. With \*(L"good\*(R" strategy you have flexible control of the urls. \*(L"Good\*(R" strategy is wrap all of the urls with decsrf\->url(\s-1URL\s0) and control all urls that must be protected at one place with decsrf\->\fBurls()\fR.
.SH "OPTIONS"
.IX Header "OPTIONS"
Options can change at any time.
.ie n .SS """decsrf\->on_mismatch"""
.el .SS "\f(CWdecsrf\->on_mismatch\fP"
.IX Subsection "decsrf->on_mismatch"
Set custom mismatch handling callback. Default is \f(CW$self\fR\->render( text => \*(L"Forbidden!\*(R", status => 403);
.PP
.Vb 3
\&  decsrf\->on_mismatch( sub {
\&    shift\->render(template => \*(Aq503\*(Aq, status => 503);
\&  } );
.Ve
.ie n .SS """decsrf\->token_length"""
.el .SS "\f(CWdecsrf\->token_length\fP"
.IX Subsection "decsrf->token_length"
Set custom token length. Default length is 4 symbols from 'A\-Z', 'a\-z', '0\-9', '@', '$', '\-', '_' ranges.
.PP
.Vb 1
\&  decsrf\->token_length(40);
.Ve
.ie n .SS """decsrf\->token_name"""
.el .SS "\f(CWdecsrf\->token_name\fP"
.IX Subsection "decsrf->token_name"
Set custom token name in url and session parameters. Default name is 'token'.
.PP
.Vb 1
\&  decsrf\->token_name(\*(Aqcsrf\*(Aq);
.Ve
.ie n .SS """decsrf\->urls"""
.el .SS "\f(CWdecsrf\->urls\fP"
.IX Subsection "decsrf->urls"
Set urls that must be protected. perlre can used.
.PP
.Vb 2
\&  decsrf\->urls([qw~/protected /.*?ected~]);
\&  push @{decsrf\->urls}, qw~/protected /.*?ected~;
.Ve
.SH "METHODS"
.IX Header "METHODS"
Mojolicious::Plugin::DeCSRF inherits all methods from
Mojolicious::Plugin and implements the following new ones.
.ie n .SS """register"""
.el .SS "\f(CWregister\fP"
.IX Subsection "register"
.Vb 1
\&  $plugin\->register();
.Ve
.PP
Register plugin in Mojolicious application.
.ie n .SS """decsrf\->url"""
.el .SS "\f(CWdecsrf\->url\fP"
.IX Subsection "decsrf->url"
Add 'token' param to url that match with decsrf\->urls.
.PP
.Vb 2
\&  #/protected?token=XXXX
\&  decsrf\->url(\*(Aq/protected\*(Aq);
\&  
\&  #/protected?foo=bar&token=XXXX
\&  decsrf\->url(\*(Aq/protected?foo=bar\*(Aq);
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Ilya Tokarev <sysadm@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright (C) 2013, Ilya Tokarev.
.PP
This program is free software, you can redistribute it and/or modify it under the terms of the Artistic License version 2.0.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Mojolicious, Mojolicious::Guides, <http://mojolicio.us>.

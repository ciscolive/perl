.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Mojo::TFTPd 3"
.TH Mojo::TFTPd 3 "2014-11-08" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mojo::TFTPd \- Trivial File Transfer Protocol daemon
.SH "VERSION"
.IX Header "VERSION"
0.04
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&    use Mojo::TFTPd;
\&    my $tftpd = Mojo::TFTPd\->new;
\&
\&    $tftpd\->on(error => sub {
\&        warn "TFTPd: $_[1]\en";
\&    });
\&
\&    $tftpd\->on(rrq => sub {
\&        my($tftpd, $c) = @_;
\&        open my $FH, \*(Aq<\*(Aq, $c\->file;
\&        $c\->filehandle($FH);
\&        $c\->filesize(\-s $c\->file);
\&    });
\&
\&    $tftpd\->on(wrq => sub {
\&        my($tftpd, $c) = @_;
\&        open my $FH, \*(Aq>\*(Aq, \*(Aq/dev/null\*(Aq;
\&        $c\->filehandle($FH);
\&    });
\&
\&    $tftpd\->on(finish => sub {
\&        my($tftpd, $c, $error) = @_;
\&        warn "Connection: $error\en" if $error;
\&    });
\&
\&    $tftpd\->start;
\&    $tftpd\->ioloop\->start unless $tftpd\->ioloop\->is_running;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module implements a server for the
Trivial File Transfer Protocol <http://en.wikipedia.org/wiki/Trivial_File_Transfer_Protocol>.
.PP
From Wikipedia:
.PP
.Vb 3
\&    Trivial File Transfer Protocol (TFTP) is a file transfer protocol notable
\&    for its simplicity. It is generally used for automated transfer of
\&    configuration or boot files between machines in a local environment.
.Ve
.PP
The connection ($c) which is referred to in this document is an instance of
Mojo::TFTPd::Connection.
.SH "EVENTS"
.IX Header "EVENTS"
.SS "error"
.IX Subsection "error"
.Vb 3
\&    $self\->on(error => sub {
\&        my($self, $str) = @_;
\&    });
.Ve
.PP
This event is emitted when something goes wrong: Fail to \*(L"listen\*(R" to socket,
read from socket or other internal errors.
.SS "finish"
.IX Subsection "finish"
.Vb 3
\&    $self\->on(finish => sub {
\&        my($self, $c, $error) = @_;
\&    });
.Ve
.PP
This event is emitted when the client finish, either successfully or due to an
error. \f(CW$error\fR will be an empty string on success.
.SS "rrq"
.IX Subsection "rrq"
.Vb 3
\&    $self\->on(rrq => sub {
\&        my($self, $c) = @_;
\&    });
.Ve
.PP
This event is emitted when a new read request arrives from a client. The
callback should set \*(L"filehandle\*(R" in Mojo::TFTPd::Connection or the connection
will be dropped.
\&\*(L"filehandle\*(R" in Mojo::TFTPd::Connection can also be a Mojo::Asset reference.
.SS "wrq"
.IX Subsection "wrq"
.Vb 3
\&    $self\->on(wrq => sub {
\&        my($self, $c) = @_;
\&    });
.Ve
.PP
This event is emitted when a new write request arrives from a client. The
callback should set \*(L"filehandle\*(R" in Mojo::TFTPd::Connection or the connection
will be dropped.
\&\*(L"filehandle\*(R" in Mojo::TFTPd::Connection can also be a Mojo::Asset reference.
.SH "ATTRIBUTES"
.IX Header "ATTRIBUTES"
.SS "connection_class"
.IX Subsection "connection_class"
.Vb 2
\&  $str = $self\->connection_class;
\&  $self = $self\->connection_class($str);
.Ve
.PP
Used to set a custom connection class. Defaults to Mojo::TFTPd::Connection.
.SS "ioloop"
.IX Subsection "ioloop"
Holds an instance of Mojo::IOLoop.
.SS "listen"
.IX Subsection "listen"
.Vb 3
\&    $str = $self\->server;
\&    $self\->server("127.0.0.1:69");
\&    $self\->server("tftp://*:69"); # any interface
.Ve
.PP
The bind address for this server.
.SS "max_connections"
.IX Subsection "max_connections"
How many concurrent connections this server can handle. Default to 1000.
.SS "retries"
.IX Subsection "retries"
How many times the server should try to send \s-1ACK\s0 or \s-1DATA\s0 to the client before
dropping the connection.
.SS "inactive_timeout"
.IX Subsection "inactive_timeout"
How long a connection can stay idle before
being dropped. Default is 15 seconds.
.SS "retransmit"
.IX Subsection "retransmit"
How many times the server should try to retransmit the last packet on timeout before
dropping the connection. Default is 0 (disable retransmits)
.SS "retransmit_timeout"
.IX Subsection "retransmit_timeout"
How long a connection can stay idle before last packet 
being retransmitted. Default is 2 seconds.
.SH "METHODS"
.IX Header "METHODS"
.SS "start"
.IX Subsection "start"
Starts listening to the address and port set in \*(L"Listen\*(R". The \*(L"error\*(R"
event will be emitted if the server fail to start.
.SH "AUTHOR"
.IX Header "AUTHOR"
Svetoslav Naydenov \- \f(CW\*(C`harryl@cpan.org\*(C'\fR
.PP
Jan Henning Thorsen \- \f(CW\*(C`jhthorsen@cpan.org\*(C'\fR

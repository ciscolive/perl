.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "App::Nopaste 3"
.TH App::Nopaste 3 "2019-07-23" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
App::Nopaste \- Easy access to any pastebin
.SH "VERSION"
.IX Header "VERSION"
version 1.013
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    use App::Nopaste \*(Aqnopaste\*(Aq;
\&
\&    my $url = nopaste(q{
\&        perl \-wle \*(Aqprint "Prime" if (1 x shift) !~ /^1?$|^(11+?)\e1+$/\*(Aq [number]
\&    });
\&
\&    # or on the command line:
\&    nopaste test.pl
\&    => http://pastebin.com/fcba51f
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Pastebins (also known as nopaste sites) let you post text, usually code, for
public viewing. They're used a lot in \s-1IRC\s0 channels to show code that would
normally be too long to give directly in the channel (hence the name nopaste).
.PP
Each pastebin is slightly different. When one pastebin goes down (I'm looking
at you, <http://paste.husk.org>), then you have to find a new one. And if you
usually use a script to publish text, then it's too much hassle.
.PP
This module aims to smooth out the differences between pastebins, and provides
redundancy: if one site doesn't work, it just tries a different one.
.PP
It's also modular: you only need to put on \s-1CPAN\s0 a
App::Nopaste::Service::Foo module and anyone can begin using it.
.SH "INTERFACE"
.IX Header "INTERFACE"
.SS "\s-1CLI\s0"
.IX Subsection "CLI"
See the documentation in App::Nopaste::Command.
.ie n .SS """nopaste"""
.el .SS "\f(CWnopaste\fP"
.IX Subsection "nopaste"
.Vb 1
\&    use App::Nopaste \*(Aqnopaste\*(Aq;
\&
\&    my $url = nopaste(
\&        text => "Full text to paste (the only mandatory argument)",
\&        desc => "A short description of the paste",
\&        nick => "Your nickname",
\&        lang => "perl",
\&        chan => "#moose",
\&        private => 1, # default: 0
\&
\&        # this is the default, but maybe you want to do something different
\&        error_handler => sub {
\&            my ($error, $service) = @_;
\&            warn "$service: $error";
\&        },
\&
\&        warn_handler => sub {
\&            my ($warning, $service) = @_;
\&            warn "$service: $warning";
\&        },
\&
\&        # you may specify the services to use \- but you don\*(Aqt have to
\&        services => ["Shadowcat", "Gist"],
\&    );
\&
\&    print $url if $url;
.Ve
.PP
The \f(CW\*(C`nopaste\*(C'\fR function will return the \s-1URL\s0 of the paste on
success, or \f(CW\*(C`undef\*(C'\fR on failure.
.PP
For each failure, the \f(CW\*(C`error_handler\*(C'\fR argument is invoked with the error
message and the service that issued it.
.PP
For each warning, the \f(CW\*(C`warn_handler\*(C'\fR argument is invoked with the warning
message and the service that issued it.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
WebService::NoPaste, WWW::Pastebin::PastebinCom::Create, Devel::REPL::Plugin::Nopaste
.PP
<http://perladvent.org/2011/2011\-12\-14.html>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright 2008\- Shawn M Moore.
.PP
This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
.SH "SUPPORT"
.IX Header "SUPPORT"
Bugs may be submitted through the \s-1RT\s0 bug tracker <https://rt.cpan.org/Public/Dist/Display.html?Name=App-Nopaste>
(or bug\-App\-Nopaste@rt.cpan.org <mailto:bug-App-Nopaste@rt.cpan.org>).
.SH "AUTHOR"
.IX Header "AUTHOR"
Shawn M Moore, <sartak@gmail.com>
.SH "CONTRIBUTORS"
.IX Header "CONTRIBUTORS"
.IP "\(bu" 4
Shawn M Moore <code@sartak.org>
.IP "\(bu" 4
Karen Etheridge <ether@cpan.org>
.IP "\(bu" 4
Thomas Sibley <tsibley@cpan.org>
.IP "\(bu" 4
Ricardo Signes <rjbs@cpan.org>
.IP "\(bu" 4
François Gannaz <francois.gannaz@silecs.info>
.IP "\(bu" 4
Justin Hunter <justin.d.hunter@gmail.com>
.IP "\(bu" 4
Kevin Falcone <kevin@jibsheet.com>
.IP "\(bu" 4
Zoffix Znet <cpan@zoffix.com>
.IP "\(bu" 4
Jesse Luehrs <doy@tozt.net>
.IP "\(bu" 4
Dean Hamstead <dean@fragfest.com.au>
.IP "\(bu" 4
David Golden <dagolden@cpan.org>
.IP "\(bu" 4
Rafael Kitover <rkitover@cpan.org>
.IP "\(bu" 4
Sergey Romanov <complefor@rambler.ru>
.IP "\(bu" 4
Zakariyya Mughal <zaki.mughal@gmail.com>
.IP "\(bu" 4
gregor herrmann <gregoa@debian.org>
.IP "\(bu" 4
vti <viacheslav.t@gmail.com>
.IP "\(bu" 4
Ævar Arnfjörð Bjarmason <avarab@gmail.com>
.IP "\(bu" 4
Сергей Романов <sromanov@cpan.org>
.IP "\(bu" 4
Andrew Rodland <andrew@cleverdomain.org>
.IP "\(bu" 4
יובל קוג'מן (Yuval Kogman) <nothingmuch@woobling.org>
.IP "\(bu" 4
Arthur Axel 'fREW' Schmidt <frioux@gmail.com>
.IP "\(bu" 4
Dan Book <grinnz@gmail.com>
.IP "\(bu" 4
Darian Anthony Patrick <dap@darianpatrick.com>
.IP "\(bu" 4
David Bremner <bremner@unb.ca>
.IP "\(bu" 4
David J. Shultz <djshultz@gmail.com>
.IP "\(bu" 4
Graham Knop <haarg@haarg.org>
.IP "\(bu" 4
Jason Mills <jmmills@cpan.org>
.IP "\(bu" 4
John Goulah <jgoulah@gmail.com>
.IP "\(bu" 4
Maximilian Gass <mxey@ghosthacking.net>
.IP "\(bu" 4
Sebastian Paaske Tørholm <Eckankar+github@gmail.com>
.IP "\(bu" 4
Shlomi Fish <shlomif@shlomifish.org>
.IP "\(bu" 4
Tatsuhiko Miyagawa <miyagawa@bulknews.net>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2008 by Shawn M Moore.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

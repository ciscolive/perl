.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Log::Tree 3"
.TH Log::Tree 3 "2016-11-04" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Log::Tree \- lightweight but highly configurable logging class
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    use Log::Tree;
\&
\&    my $logger = Log::Tree::\->new(\*(Aqfoo\*(Aq);
\&    ...
.Ve
.SH "ATTRIBUTES"
.IX Header "ATTRIBUTES"
.SS "facility"
.IX Subsection "facility"
Only mandatory attirbute. Used as the syslog faclity and to auto-construct a suiteable
filename for logging to file.
.SH "METHODS"
.IX Header "METHODS"
.SS "add_to_buffer"
.IX Subsection "add_to_buffer"
This method is usually not needed from by callers but may be in some rare ocasions
that's why it's made part of the public \s-1API.\s0 It just adds the passed data to the
internal buffer w/o logging it in the usual ways.
.SS "clear_buffer"
.IX Subsection "clear_buffer"
This method clears the internal log buffer.
.SS "forked"
.IX Subsection "forked"
This method should be called after it has been \fBfork()\fRed to clear the internal
log buffer.
.SS "get_buffer"
.IX Subsection "get_buffer"
Retrieve those entries from the buffer that are gte the given severity.
.SS "log"
.IX Subsection "log"
Log a message. Takes a hash containing at least \*(L"message\*(R" and \*(L"level\*(R".
.SS "\s-1BUILD\s0"
.IX Subsection "BUILD"
Call on instatiation to set this class up.
.SS "level_to_severity"
.IX Subsection "level_to_severity"
Translates a numeric level to severity string.
.SS "severity_to_level"
.IX Subsection "severity_to_level"
Translates a severity string to a numeric level.
.SH "NAME"
Log::Tree \- Lightyweight logging w/ a tree based verbosity configuration
similar to Log4perl.
.SH "AUTHOR"
.IX Header "AUTHOR"
Dominik Schulz <dominik.schulz@gauner.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2012 by Dominik Schulz.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "QQ::exmail::mail 3"
.TH QQ::exmail::mail 3 "2019-11-03" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "Name"
.IX Header "Name"
QQ::exmail::mail
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
新邮件提醒
.SH "FUNCTION"
.IX Header "FUNCTION"
.SS "newcount(access_token, userid, hash);"
.IX Subsection "newcount(access_token, userid, hash);"
获取邮件未读数
.SS "\s-1SYNOPSIS\s0"
.IX Subsection "SYNOPSIS"
<https://exmail.qq.com/qy_mng_logic/doc#10033>
.PP
\fI请求说明：\fR
.IX Subsection "请求说明："
.PP
请求包结构体为：
.IX Subsection "请求包结构体为："
.PP
.Vb 5
\&    {
\&        "type": 0,
\&        "begin_date": "2016\-10\-01",
\&        "end_date": "2016\-10\-07"
\&    }
.Ve
.PP
参数说明：
.IX Subsection "参数说明："
.PP
.Vb 5
\&    参数              必须  说明
\&    access_token        是       调用接口凭证
\&    userid              是       成员UserID
\&    begin_date      是   开始日期。格式为2016\-10\-01
\&    end_date        是   结束日期。格式为2016\-10\-07
.Ve
.PP
\fI权限说明\fR
.IX Subsection "权限说明"
.PP
系统应用须拥有指定成员的查看权限。
.PP
\fI返回结果\fR
.IX Subsection "返回结果"
.PP
.Vb 5
\&    {
\&        "errcode": 0,
\&        "errmsg": "ok",
\&        "count": 1
\&    }
.Ve
.PP
参数说明
.IX Subsection "参数说明"
.PP
.Vb 4
\&    参数      说明
\&    errcode     返回码
\&    errmsg      对返回码的文本描述内容
\&    count       未读邮件数
.Ve

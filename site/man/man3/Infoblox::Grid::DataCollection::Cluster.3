.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Infoblox::Grid::DataCollection::Cluster 3"
.TH Infoblox::Grid::DataCollection::Cluster 3 "2018-06-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Infoblox::Grid::DataCollection::Cluster \- A data collection cluster object.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The data collection cluster object provides information and configuration for data collection feature.
.SH "SESSION METHODS"
.IX Header "SESSION METHODS"
This section describes all the methods in the Infoblox::Session module that you can apply to a data collection cluster object.
.SS "Infoblox::Session\->get( )"
.IX Subsection "Infoblox::Session->get( )"
.RS 4
Use this method to retrieve all the matching objects from the Infoblox appliance. See Infoblox::Session\->\fBget()\fR for parameters and return values.
.IP "\fBKey Reference\fR" 4
.IX Item "Key Reference"
Apply the following attributes to get a specific data collection cluster object:
.Sp
.Vb 3
\&    comment   \- Optional. The data collection cluster comment.
\&    name      \- Optional. The data collection cluster name.
\&    unique_id \- Optional. The data collection cluster unique hexadecimal identifier.
.Ve
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 5
\& #Get cluster with name \*(Aqcluster1\*(Aq
\& my $object = $session\->get(
\&     object => \*(AqInfoblox::Grid::DataCollection::Cluster\*(Aq,
\&     name   => \*(Aqcluster1\*(Aq,
\& );
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->modify( )"
.IX Subsection "Infoblox::Session->modify( )"
.RS 4
Use this method to modify an object in the Infoblox appliance. See Infoblox::Session\->\fBmodify()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Modify disable value
\& $object\->disable(\*(Aqtrue\*(Aq);
\&
\& #Submit modification
\& my $response = $session\->modify($object);
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->search( )"
.IX Subsection "Infoblox::Session->search( )"
.RS 4
Use this method to retrieve all the matching objects from the Infoblox appliance. See Infoblox::Session\->\fBsearch()\fR for parameters and return values.
.IP "\fBKey Reference\fR" 4
.IX Item "Key Reference"
Apply the following attributes to search for a data collection cluster object:
.Sp
.Vb 3
\&    comment   \- Optional. The data collection cluster comment (regexp);
\&    name      \- Optional. The data collection cluster name (regexp);
\&    unique_id \- Optional. The data collection cluster unique hexadecimal identifier (regexp).
.Ve
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 5
\& #Search for cluster that matches /cluster.*/ pattern
\& my @objects = $session\->search(
\&     object => \*(AqInfoblox::Grid::DataCollection::Cluster\*(Aq,
\&     name   => \*(Aqcluster.*\*(Aq,
\& );
.Ve
.RE
.RS 4
.RE
.SH "METHODS"
.IX Header "METHODS"
This section describes all the methods that can be used to configure and retrieve the attribute values of a data collection cluster object.
.SS "blacklisted_clusters( )"
.IX Subsection "blacklisted_clusters( )"
.RS 4
Use this method to set or retrieve the list of clusters that are prevented from activation.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an array of Infoblox::Grid::DataCollection::BlacklistedCluster objects.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get blacklisted_clusters value
\& my $blacklisted_clusters = $object\->blacklisted_clusters();
\&
\& #Modify blacklisted_clusters value
\& $object\->blacklisted_clusters([$cluster1, $cluster2]);
.Ve
.RE
.RS 4
.RE
.SS "comment( )"
.IX Subsection "comment( )"
.RS 4
Use this method to set or retrieve the data collection cluster comment.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is a desired comment in a string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get comment value
\& my $comment = $object\->comment();
\&
\& #Modify comment value
\& $object\->comment(\*(Aqcluster comment\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "datacollector_vms( )"
.IX Subsection "datacollector_vms( )"
.RS 4
Use this method to retrieve the list of data collector virtual machines. This is a read-only attribute.
.Sp
Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The valid return value is an array of Infoblox::Grid::DataCollection::IPInfo objects.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get datacollector_vms value
\& my $datacollector_vms = $object\->datacollector_vms();
.Ve
.RE
.RS 4
.RE
.SS "disable( )"
.IX Subsection "disable( )"
.RS 4
Use this method to set or retrieve the flag that indicates whether the data collection cluster is enabled or disabled.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify 'true' to enable the data collection cluster or 'false' to disable/deactivate it. The default value is 'false'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get disable value
\& my $disable = $object\->disable();
\&
\& #Modify disable value
\& $object\->disable(\*(Aqtrue\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "enable_registration( )"
.IX Subsection "enable_registration( )"
.RS 4
Use this method to set or retrieve the flag that indicates whether the data collection cluster registration is enabled or disabled.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify 'true' to enable the data collection cluster registration or 'false' to prevent it from registration. The default value is 'false'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get enable_registration value
\& my $enable_registration = $object\->enable_registration();
\&
\& #Modify enable_registration value
\& $object\->enable_registration(\*(Aqtrue\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "last_activation_time( )"
.IX Subsection "last_activation_time( )"
.RS 4
Use this method to retrieve the last activation time for the data collection cluster.
.Sp
Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value, the number of seconds that have elapsed since January 1st, 1970 \s-1UTC.\s0
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get last_activation_time value
\& my $last_activation_time = $object\->last_activation_time();
.Ve
.RE
.RS 4
.RE
.SS "name( )"
.IX Subsection "name( )"
.RS 4
Use this method to set or retrieve the name of the data collection cluster. This is a read-only attribute.
.Sp
Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get name value
\& my $name = $object\->name();
.Ve
.RE
.RS 4
.RE
.SS "registration_time( )"
.IX Subsection "registration_time( )"
.RS 4
Use this method to retrieve the time the data collection cluster was registered. This is a read-only attribute.
.Sp
Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value, the number of seconds that have elapsed since January 1st, 1970 \s-1UTC.\s0
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get registration_time value
\& my $registration_time = $object\->registration_time();
.Ve
.RE
.RS 4
.RE
.SS "unique_id( )"
.IX Subsection "unique_id( )"
.RS 4
Use this method to set or retrieve the unique identifier for the data collection cluster.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is a desired hexadecimal identifier in a string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get unique_id value
\& my $unique_id = $object\->unique_id();
\&
\& #Modify unique_id value
\& $object\->unique_id(\*(AqABCD\*(Aq);
.Ve
.RE
.RS 4
.RE
.SH "AUTHOR"
.IX Header "AUTHOR"
Infoblox Inc. <http://www.infoblox.com/>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Infoblox::Grid::DataCollection::BlacklistedCluster, 
Infoblox::Grid::DataCollection::IPInfo,
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2017 Infoblox Inc.

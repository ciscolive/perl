.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "CHI::Benchmarks 3"
.TH CHI::Benchmarks 3 "2015-06-07" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
CHI::Benchmarks \- Benchmarks of CHI and non\-CHI drivers
.SH "VERSION"
.IX Header "VERSION"
version 0.60
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
These benchmarks were created by running
.PP
.Vb 1
\&   etc/bench/bench.pl \-d . \-t 10 \-x
.Ve
.PP
for \s-1CHI 0.42,\s0 on \s-1OS X\s0 v10.6.6, 2.2 GHz Intel Core 2 Duo, Perl 5.12.2.
.PP
For each cache, \f(CW\*(C`bench.pl\*(C'\fR does repeated gets and sets of a data structure for
at least 10 seconds and measures the wallclock time per operation.
.PP
These numbers should just be used as a rough guideline! Actual results will
vary widely depending on system, get/set pattern, actual values being set, the
proper tuning of memcached/mysql, etc. For best results run the benchmark
script (available in this distribution) on your own system.
.PP
.Vb 10
\&   Cache                Get time Set time Description                         
\&   cache_ref            0.009ms  0.008ms  Cache::Ref (CART)                   
\&   chi_memory_raw       0.019ms  0.036ms  CHI::Driver::MemoryRaw              
\&   cache_fastmmap       0.022ms  0.040ms  Cache::FastMmap                     
\&   chi_memory           0.042ms  0.066ms  CHI::Driver::Memory                 
\&   chi_berkeleydb       0.052ms  0.073ms  CHI::Driver::BerkeleyDB             
\&   chi_fastmmap         0.057ms  0.087ms  CHI::Driver::FastMmap               
\&   cache_cache_memory   0.065ms  0.070ms  Cache::MemoryCache                  
\&   cache_memcached_fast 0.097ms  0.131ms  Cache::Memcached::Fast              
\&   chi_dbi_sqlite       0.112ms  1.659ms  CHI::Driver::DBI (sqlite)           
\&   cache_memcached_lib  0.118ms  0.156ms  Cache::Memcached::libmemcached      
\&   chi_file             0.118ms  1.138ms  CHI::Driver::File                   
\&   chi_memcached_fast   0.138ms  0.178ms  CHI::Driver::Memcached::Fast        
\&   chi_memcached_lib    0.151ms  0.202ms  CHI::Driver::Memcached::libmemcached
\&   chi_dbi_mysql        0.236ms  0.273ms  CHI::Driver::DBI (mysql)            
\&   cache_memcached_std  0.238ms  0.180ms  Cache::Memcached                    
\&   chi_memcached_std    0.279ms  0.235ms  CHI::Driver::Memcached              
\&   cache_cache_file     0.481ms  1.391ms  Cache::FileCache
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\s-1CHI\s0
.SH "AUTHOR"
.IX Header "AUTHOR"
Jonathan Swartz <swartz@pobox.com>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2012 by Jonathan Swartz.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

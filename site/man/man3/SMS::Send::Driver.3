.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "SMS::Send::Driver 3"
.TH SMS::Send::Driver 3 "2011-11-09" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
SMS::Send::Driver \- Base class for SMS::Send drivers
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The \f(CW\*(C`SMS::Send::Driver\*(C'\fR class provides an abstract base class for all
SMS::Send driver classes.
.PP
At this time it does not provide any implementation code for drivers
(although this may change in the future) with the exception of some
methods provided to trigger \*(L"does not implement method\*(R" errors.
.PP
However, it does serve as something you should sub-class your driver from
to identify it as a SMS::Send driver.
.PP
Please note that if your driver class not \fBnot\fR return true for
\&\f(CW\*(C`$driver\-\*(C'\fRisa('SMS::Send::Driver')> then the SMS::Send constructor
will refuse to use your class as a driver.
.SH "METHODS"
.IX Header "METHODS"
.SS "new"
.IX Subsection "new"
The \f(CW\*(C`new\*(C'\fR constructor is required to be implemented by your driver subclass.
.PP
It recieves a set of arbitrary paired params. The values of these params are
assumed to be driver-specific (this is expected to change).
.PP
If your driver will need to login to some system, locate hardware, or
do some other form of initialisation to validate the \s-1SMS\s0 delivery mechanism
exists, it should do so in \f(CW\*(C`new\*(C'\fR.
.PP
Should return a new SMS::Send::Driver\-subclass object, or die on error.
.SS "send_sms"
.IX Subsection "send_sms"
The \f(CW\*(C`send_sms\*(C'\fR method is required to be implemented by your driver subclass.
.PP
It recieves a set of param pairs as documented in SMS::Send.
.PP
Should return true for either success or fire-and-forget with unknown result,
defined-but-false ('' or 0) for a failed message send, or die on a fatal error.
.SH "SUPPORT"
.IX Header "SUPPORT"
Bugs should be reported via the \s-1CPAN\s0 bug tracker at
.PP
<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=SMS\-Send>
.PP
For other issues, contact the author.
.SH "AUTHOR"
.IX Header "AUTHOR"
Adam Kennedy <adamk@cpan.org>
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright 2005 \- 2011 Adam Kennedy.
.PP
This program is free software; you can redistribute
it and/or modify it under the same terms as Perl itself.
.PP
The full text of the license can be found in the
\&\s-1LICENSE\s0 file included with this module.

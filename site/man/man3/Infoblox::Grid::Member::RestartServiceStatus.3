.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Infoblox::Grid::Member::RestartServiceStatus 3"
.TH Infoblox::Grid::Member::RestartServiceStatus 3 "2018-06-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Infoblox::Grid::Member::RestartServiceStatus \- The restart status for member services.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The object provides information about the restart status for member services.
.SH "SESSION METHODS"
.IX Header "SESSION METHODS"
This section describes all the methods in an Infoblox::Session module that you can apply to an object.
.SS "Infoblox::Session\->get( )"
.IX Subsection "Infoblox::Session->get( )"
.RS 4
Use this method to retrieve all the matching objects from the Infoblox appliance. See Infoblox::Session\->\fBget()\fR for parameters and return  values.
.IP "\fBKey References\fR" 4
.IX Item "Key References"
.Vb 1
\& Apply the following attributes to get a specific object:
\&
\&  member \- Optional. The Grid member name.
.Ve
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& my @retrieved_objs = $session\->get(
\&     \*(Aqobject\*(Aq => \*(AqInfoblox::Grid::Member::RestartServiceStatus\*(Aq,
\&     \*(Aqmember\*(Aq => \*(Aqhostname.com\*(Aq,
\& );
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->search( )"
.IX Subsection "Infoblox::Session->search( )"
.RS 4
Use this method to search for objects in the Infoblox appliance. See Infoblox::Session\->\fBsearch()\fR for parameters and return values.
.IP "\fBKey References\fR" 4
.IX Item "Key References"
.Vb 1
\& Apply the following attributes to search for an object:
\&
\&  member \- Optional. The Grid member name.
.Ve
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& my @retrieved_objs = $session\->search(
\&     \*(Aqobject\*(Aq => \*(AqInfoblox::Grid::Member::RestartServiceStatus\*(Aq,
\&     \*(Aqmember\*(Aq => \*(Aqhostname.com\*(Aq,
\& );
.Ve
.RE
.RS 4
.RE
.SH "METHODS"
.IX Header "METHODS"
This section describes all the methods that you can use to configure and retrieve the attribute values of an object.
.SS "dhcp_status( )"
.IX Subsection "dhcp_status( )"
.RS 4
Use this method to retrieve the restart status for the member \s-1DHCP\s0 service. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value that can be '\s-1CONFIG_ERROR\s0', '\s-1DISABLED\s0', '\s-1NO\s0', '\s-1NO_PERMISSION\s0', '\s-1NO_REQUEST\s0', '\s-1OFFLINE\s0', '\s-1REQUESTING\s0', '\s-1RESTART_PENDING\s0' or '\s-1YES\s0'.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $object\->dhcp_status();
.Ve
.RE
.RS 4
.RE
.SS "dns_status( )"
.IX Subsection "dns_status( )"
.RS 4
Use this method to retrieve the restart status for the member \s-1DNS\s0 service. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value that can be '\s-1CONFIG_ERROR\s0', '\s-1DISABLED\s0', '\s-1NO\s0', '\s-1NO_PERMISSION\s0', '\s-1NO_REQUEST\s0', '\s-1OFFLINE\s0', '\s-1REQUESTING\s0', '\s-1RESTART_PENDING\s0' or '\s-1YES\s0'.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $object\->dns_status();
.Ve
.RE
.RS 4
.RE
.SS "member( )"
.IX Subsection "member( )"
.RS 4
Use this method to retrieve the Grid member name. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $object\->member();
.Ve
.RE
.RS 4
.RE
.SS "radius_status( )"
.IX Subsection "radius_status( )"
.RS 4
Use this method to retrieve the restart status for the member \s-1RADIUS\s0 service. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value that can be '\s-1CONFIG_ERROR\s0', '\s-1DISABLED\s0', '\s-1NO\s0', '\s-1NO_PERMISSION\s0', '\s-1NO_REQUEST\s0', '\s-1OFFLINE\s0', '\s-1REQUESTING\s0', '\s-1RESTART_PENDING\s0' or '\s-1YES\s0'.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $object\->radius_status();
.Ve
.RE
.RS 4
.RE
.SS "reporting_status( )"
.IX Subsection "reporting_status( )"
.RS 4
Use this method to retrieve the restart status for the member reporting service. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value that can be '\s-1CONFIG_ERROR\s0', '\s-1DISABLED\s0', '\s-1NO\s0', '\s-1NO_PERMISSION\s0', '\s-1NO_REQUEST\s0', '\s-1OFFLINE\s0', '\s-1REQUESTING\s0', '\s-1RESTART_PENDING\s0' or '\s-1YES\s0'.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $object\->reporting_status();
.Ve
.RE
.RS 4
.RE
.SH "AUTHOR"
.IX Header "AUTHOR"
Infoblox Inc. <http://www.infoblox.com/>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Infoblox::Session
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2017 Infoblox Inc.

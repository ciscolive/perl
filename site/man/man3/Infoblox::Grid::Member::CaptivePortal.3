.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Infoblox::Grid::Member::CaptivePortal 3"
.TH Infoblox::Grid::Member::CaptivePortal 3 "2018-06-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Infoblox::Grid::Member::CaptivePortal \- Captive Portal object.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This object represents the captive portal configuration.
.SH "CONSTRUCTOR"
.IX Header "CONSTRUCTOR"
The Infoblox::Grid::Member::CaptivePortal object is automatically generated upon the successful installation of the Infoblox appliance. It does not require manual construction.
.SH "SESSION METHODS"
.IX Header "SESSION METHODS"
This section describes all the methods in the Infoblox::Session module that you can apply to a Captive Portal object.
.SS "Infoblox::Session\->get( )"
.IX Subsection "Infoblox::Session->get( )"
.RS 4
Use this method to retrieve matching objects from the Infoblox appliance. See Infoblox::Session\->\fBget()\fR for parameters and return values.
.IP "\fBKey Reference\fR" 4
.IX Item "Key Reference"
.Vb 1
\& Apply the following attribute to get a specific Captive Portal object:
\&
\&  name \- Required. A domain name in string format.
.Ve
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& my @retrieved_objs = $session\->get(
\&     object => "Infoblox::Grid::Member::CaptivePortal",
\&     name   => "infoblox.localdomain"
\&     );
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->modify( )"
.IX Subsection "Infoblox::Session->modify( )"
.RS 4
Use this method to modify objects in the Infoblox appliance. See Infoblox::Session\->\fBmodify()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Use this method to modify the welcome message.
\& $captive_portal\->welcome_message("New welcome message");
\& #Submit modification
\& my $response = $session\->modify( $captive_portal );
.Ve
.RE
.RS 4
.RE
.SH "METHODS"
.IX Header "METHODS"
This section describes all the methods that you can use to configure and retrieve the attribute values of the captive portal.
.SS "authn_server_group ( )"
.IX Subsection "authn_server_group ( )"
.RS 4
Use this method to set or retrieve the authentication server group assigned to this captive portal.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid values are an Infoblox::Grid::Admin::AdAuthService, an Infoblox::Grid::Admin::RadiusAuthService or an Infoblox::LDAP::AuthService object. The default value is undefined.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\&   #Getting authn_server_group
\&   my $authn_server_group = $captive_portal\->authn_server_group();
\&   #Modifying authn_server_group
\&   $captive_portal\->authn_server_group($adservice);
.Ve
.RE
.RS 4
.RE
.SS "company_name ( )"
.IX Subsection "company_name ( )"
.RS 4
Use this method to set or retrieve the company name that appears in the guest registration page.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is a string. The default value is undefined.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\&   #Getting company_name
\&   my $company_name = $captive_portal\->company_company_name();
\&   #Modifying company_name
\&   $captive_portal\->company_name(\*(AqCompany Name\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "enable_syslog_auth_failure ( )"
.IX Subsection "enable_syslog_auth_failure ( )"
.RS 4
Use this method to set or retrieve the flag that controls whether authentication failures are logged to syslog.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to enable logging or \*(L"false\*(R" to disable it. The default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\&   #Getting enable_syslog_auth_failure
\&   my $enable_syslog_auth_failure = $captive_portal\->enable_syslog_auth_failure();
\&   #Modifying enable_syslog_auth_failure
\&   $captive_portal\->enable_syslog_auth_failure(\*(Aqtrue\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "enable_syslog_auth_success ( )"
.IX Subsection "enable_syslog_auth_success ( )"
.RS 4
Use this method to set or retrieve the flag that controls whether successful authentications are logged to syslog.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to enable logging or \*(L"false\*(R" to disable it. The default value is \*(L"true\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\&   #Getting enable_syslog_auth_success
\&   my $enable_syslog_auth_success = $captive_portal\->enable_syslog_auth_success();
\&   #Modifying enable_syslog_auth_success
\&   $captive_portal\->enable_syslog_auth_success(\*(Aqfalse\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "enable_user_type ( )"
.IX Subsection "enable_user_type ( )"
.RS 4
Use this method to set or retrieve the type of user to be enabled for the captive portal.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid values are \*(L"Authenticated\*(R", \*(L"Guest\*(R" or \*(L"Both\*(R". The default value is \*(L"Authenticated\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\&   #Getting enable_user_type
\&   my $enable_user_type = $captive_portal\->enable_user_type();
\&   #Modifying enable_user_type
\&   $captive_portal\->enable_user_type(\*(AqBoth\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "encryption ( )"
.IX Subsection "encryption ( )"
.RS 4
Use this method to set or retrieve the encryption the captive portal uses.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid values are 'None' or '\s-1SSL\s0'. The default value is 'None'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\&   #Getting encryption
\&   my $encryption = $captive_portal\->encryption();
\&   #Modifying encryption
\&   $captive_portal\->encryption(\*(AqSSL\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "files ( )"
.IX Subsection "files ( )"
.RS 4
Use this method to set or retrieve the list of files associated with the captive portal.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an array reference that contains Infoblox::Grid::Member::CaptivePortal::File object(s). New files must be added using Infoblox::Session\->\fBimport_data()\fR. However, if a file is removed from this list, it is also removed from the captive portal.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\&   #Getting files
\&   my $files = $captive_portal\->files();
\&   #Modifying files
\&   $captive_portal\->files([$logo]);
.Ve
.RE
.RS 4
.RE
.SS "guest_custom_field1_name ( )"
.IX Subsection "guest_custom_field1_name ( )"
.RS 4
Use this method to set or retrieve the name of the custom field that you are adding to the guest registration page.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is a string. The default value is undefined. The maximum length is 200 bytes.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\&   #Getting guest_custom_field1_name
\&   my $guest_custom_field1_name = $captive_portal\->guest_custom_field1_guest_custom_field1_name();
\&   #Modifying guest_custom_field1_name
\&   $captive_portal\->guest_custom_field1_name(\*(AqExtra field 1\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "guest_custom_field1_required ( )"
.IX Subsection "guest_custom_field1_required ( )"
.RS 4
Use this method to set or retrieve the flag that controls whether the custom field is required.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to set the flag or \*(L"false\*(R" to disable it. The default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\&   #Getting guest_custom_field1_required
\&   my $guest_custom_field1_required = $captive_portal\->guest_custom_field1_required();
\&   #Modifying guest_custom_field1_required
\&   $captive_portal\->guest_custom_field1_required(\*(Aqtrue\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "guest_custom_field2_name ( )"
.IX Subsection "guest_custom_field2_name ( )"
.RS 4
Use this method to set or retrieve the name of the custom field that you are adding to the guest registration page.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is a string. The default value is undefined. The maximum length is 200 bytes.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\&   #Getting guest_custom_field2_name
\&   my $guest_custom_field2_name = $captive_portal\->guest_custom_field2_guest_custom_field2_name();
\&   #Modifying guest_custom_field2_name
\&   $captive_portal\->guest_custom_field2_name(\*(AqExtra field 2\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "guest_custom_field2_required ( )"
.IX Subsection "guest_custom_field2_required ( )"
.RS 4
Use this method to set or retrieve the flag that controls whether the custom field is required.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to set the flag or \*(L"false\*(R" to disable it. The default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\&   #Getting guest_custom_field2_required
\&   my $guest_custom_field2_required = $captive_portal\->guest_custom_field2_required();
\&   #Modifying guest_custom_field2_required
\&   $captive_portal\->guest_custom_field2_required(\*(Aqtrue\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "guest_custom_field3_name ( )"
.IX Subsection "guest_custom_field3_name ( )"
.RS 4
Use this method to set or retrieve the name of the custom field that you are adding to the guest registration page.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is a string. The default value is undefined. The maximum length is 200 bytes.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\&   #Getting guest_custom_field3_name
\&   my $guest_custom_field3_name = $captive_portal\->guest_custom_field3_guest_custom_field3_name();
\&   #Modifying guest_custom_field3_name
\&   $captive_portal\->guest_custom_field3_name(\*(AqExtra field 3\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "guest_custom_field3_required ( )"
.IX Subsection "guest_custom_field3_required ( )"
.RS 4
Use this method to set or retrieve the flag that controls whether the custom field is required.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to set the flag or \*(L"false\*(R" to disable it. The default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\&   #Getting guest_custom_field3_required
\&   my $guest_custom_field3_required = $captive_portal\->guest_custom_field3_required();
\&   #Modifying guest_custom_field3_required
\&   $captive_portal\->guest_custom_field3_required(\*(Aqtrue\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "guest_custom_field4_name ( )"
.IX Subsection "guest_custom_field4_name ( )"
.RS 4
Use this method to set or retrieve the name of the custom field that you are adding to the guest registration page.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is a string. The default value is undefined. The maximum length is 200 bytes.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\&   #Getting guest_custom_field4_name
\&   my $guest_custom_field4_name = $captive_portal\->guest_custom_field4_guest_custom_field4_name();
\&   #Modifying guest_custom_field4_name
\&   $captive_portal\->guest_custom_field4_name(\*(AqExtra field 4\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "guest_custom_field4_required ( )"
.IX Subsection "guest_custom_field4_required ( )"
.RS 4
Use this method to set or retrieve the flag that controls whether the custom field is required.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to set the flag or \*(L"false\*(R" to disable it. The default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\&   #Getting guest_custom_field4_required
\&   my $guest_custom_field4_required = $captive_portal\->guest_custom_field4_required();
\&   #Modifying guest_custom_field4_required
\&   $captive_portal\->guest_custom_field4_required(\*(Aqtrue\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "guest_email_required ( )"
.IX Subsection "guest_email_required ( )"
.RS 4
Use this method to set or retrieve the flag that controls whether the email address of the guest is required.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to set this flag or \*(L"false\*(R" to disable it. The default value is \*(L"true\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\&   #Getting guest_email_required
\&   my $guest_email_required = $captive_portal\->guest_email_required();
\&   #Modifying guest_email_required
\&   $captive_portal\->guest_email_required(\*(Aqfalse\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "guest_first_name_required ( )"
.IX Subsection "guest_first_name_required ( )"
.RS 4
Use this method to set or retrieve the flag that controls whether the first name of the guest is required.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to enable or \*(L"false\*(R" to disable it. The default value is \*(L"true\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\&   #Getting guest_first_name_required
\&   my $guest_first_name_required = $captive_portal\->guest_first_name_required();
\&   #Modifying guest_first_name_required
\&   $captive_portal\->guest_first_name_required(\*(Aqfalse\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "guest_last_name_required ( )"
.IX Subsection "guest_last_name_required ( )"
.RS 4
Use this method to set or retrieve the flag that controls whether the last name of the guest is required.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to set the flag or \*(L"false\*(R" to disable it. The default value is \*(L"true\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\&   #Getting guest_last_name_required
\&   my $guest_last_name_required = $captive_portal\->guest_last_name_required();
\&   #Modifying guest_last_name_required
\&   $captive_portal\->guest_last_name_required(\*(Aqfalse\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "guest_middle_name_required ( )"
.IX Subsection "guest_middle_name_required ( )"
.RS 4
Use this method to set or retrieve the flag that controls whether the middle name of the guest is required.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to set the flag or \*(L"false\*(R" to disable it. The default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\&   #Getting guest_middle_name_required
\&   my $guest_middle_name_required = $captive_portal\->guest_middle_name_required();
\&   #Modifying guest_middle_name_required
\&   $captive_portal\->guest_middle_name_required(\*(Aqtrue\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "guest_phone_required ( )"
.IX Subsection "guest_phone_required ( )"
.RS 4
Use this method to set or retrieve the flag that controls whether the phone number of the guest is required.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to set this flag or \*(L"false\*(R" to disable it. The default value is \*(L"true\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\&   #Getting guest_phone_required
\&   my $guest_phone_required = $captive_portal\->guest_phone_required();
\&   #Modifying guest_phone_required
\&   $captive_portal\->guest_phone_required(\*(Aqfalse\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "helpdesk_message ( )"
.IX Subsection "helpdesk_message ( )"
.RS 4
Use this method to set or retrieve the helpdesk message that appears in the guest registration page.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is a string. The default value is undefined.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\&   #Getting helpdesk_message
\&   my $helpdesk_message = $captive_portal\->helpdesk_message();
\&   #Modifying helpdesk_message
\&   $captive_portal\->helpdesk_message(\*(AqIn case of problems, please contact us at 555\-555\-5555\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "listen_address ( )"
.IX Subsection "listen_address ( )"
.RS 4
Use this method to set or retrieve the \s-1IP\s0 address on which the captive portal listens.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid values are '\s-1VIP\s0', '\s-1LAN2\s0' or an IPv4 address. The default value is '\s-1VIP\s0'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\&   #Getting listen_address
\&   my $listen_address = $captive_portal\->listen_address();
\&   #Modifying listen_address
\&   $captive_portal\->listen_address(\*(AqVIP\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "name ( )"
.IX Subsection "name ( )"
.RS 4
Use this method to retrieve the hostname of the grid member that hosts the captive portal.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\&   #Getting name
\&   my $name = $captive_portal\->name();
.Ve
.RE
.RS 4
.RE
.SS "network_view ( )"
.IX Subsection "network_view ( )"
.RS 4
Use this method to set or retrieve the network view of the captive portal.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is a network view name. The default is the system default network view.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\&   #Getting network_view
\&   my $network_view = $captive_portal\->network_view();
\&   #Modifying network_view
\&   $captive_portal\->network_view(\*(Aqotherview\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "port ( )"
.IX Subsection "port ( )"
.RS 4
Use this method to set or retrieve the \s-1TCP\s0 port used by the Captive Portal service. The port is required when the Captive Portal service is enabled.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid values are between 1 and 63999. The default value is 4433. Please note that setting the port number to 80 or 443 might impact performance.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\&   #Getting the port
\&   my $port = $captive_portal\->port();
\&   #Modifying the port
\&   $captive_portal\->port(4457);
.Ve
.RE
.RS 4
.RE
.SS "service_enabled ( )"
.IX Subsection "service_enabled ( )"
.RS 4
Use this method to set or retrieve the state of the captive portal service.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to enable the service or \*(L"false\*(R" to disable it. The default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\&   #Getting service_enabled
\&   my $service_enabled = $captive_portal\->service_enabled();
\&   #Modifying service_enabled
\&   $captive_portal\->service_enabled(\*(Aqfalse\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "syslog_auth_failure_level ( )"
.IX Subsection "syslog_auth_failure_level ( )"
.RS 4
Use this method to set or retrieve the syslog level at which authentication failures are logged.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid values are  \*(L"debug\*(R", \*(L"info\*(R", \*(L"notice\*(R", \*(L"warning\*(R", \*(L"err\*(R", \*(L"crit\*(R", \*(L"alert\*(R" or \*(L"emerg\*(R" . The default value is \*(L"info\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\&   #Getting syslog_auth_failure_level
\&   my $syslog_auth_failure_level = $captive_portal\->syslog_auth_failure_level();
\&   #Modifying syslog_auth_failure_level
\&   $captive_portal\->syslog_auth_failure_level(\*(Aqnotice\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "syslog_auth_success_level ( )"
.IX Subsection "syslog_auth_success_level ( )"
.RS 4
Use this method to set or retrieve the syslog level at which successful authentications are logged.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid values are \*(L"debug\*(R", \*(L"info\*(R", \*(L"notice\*(R", \*(L"warning\*(R", \*(L"err\*(R", \*(L"crit\*(R", \*(L"alert\*(R" or \*(L"emerg\*(R" . The default value is \*(L"info\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\&   #Getting syslog_auth_success_level
\&   my $syslog_auth_success_level = $captive_portal\->syslog_auth_success_level();
\&   #Modifying syslog_auth_success_level
\&   $captive_portal\->syslog_auth_success_level(\*(Aqwarning\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "welcome_message ( )"
.IX Subsection "welcome_message ( )"
.RS 4
Use this method to set or retrieve the welcome message that appears in the guest registration page.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is a string. The default value is undefined.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\&   #Getting welcome_message
\&   my $welcome_message = $captive_portal\->welcome_message();
\&   #Modifying welcome_message
\&   $captive_portal\->welcome_message(\*(AqWelcome to our network!\*(Aq);
.Ve
.RE
.RS 4
.RE
.SH "SAMPLE CODE"
.IX Header "SAMPLE CODE"
The following sample code demonstrates different operations that can be applied to a captive portal object, such as get and modify an object. This sample code also includes error handling for the operations.
.PP
\&\fB#Preparation prior to operations on a captive portal object\fR
.PP
.Vb 3
\& #PROGRAM STARTS: Include all the modules that will be used
\& use strict;
\& use Infoblox;
\&
\& #Create a session to the Infoblox appliance
\& my $session = Infoblox::Session\->new(
\&     master   => "192.168.1.2",
\&     username => "admin",
\&     password => "infoblox"
\& );
\& unless ($session) {
\&    die("Construct session failed: ",
\&        Infoblox::status_code() . ":" . Infoblox::status_detail());
\& }
\& print "Session created successfully\en";
\&
\& # Upload a new AUP to the captive portal, from now on
\& # the files() method will contain an Infoblox::Grid::Member::CaptivePortal::File
\& # object referencing this.
\& $session\->import_data(
\&                       type    => \*(Aqcaptive_portal_file\*(Aq,
\&                       path    => \*(Aqaup.txt\*(Aq,
\&                       member  => \*(Aq192.168.1.2\*(Aq,
\&                       cp_type => \*(Aqaup\*(Aq
\& )
\& or die("file import failed: ",
\&         $session\->status_code(), $session\->status_detail());
\&
\& my $ads1 = Infoblox::Grid::Admin::RadiusAuthServer\->new(
\&                                                         comment  => \*(Aqserver 1\*(Aq,
\&                                                         fqdn_or_ip => \*(Aq10.0.1.1\*(Aq,
\&                                                         shared_secret => \*(Aqsecret1\*(Aq,
\&                                                        );
\&
\& my $ads2 = Infoblox::Grid::Admin::RadiusAuthServer\->new(
\&                                                         comment  => \*(Aqserver 2\*(Aq,
\&                                                         fqdn_or_ip => \*(Aqdomain.com\*(Aq,
\&                                                         shared_secret => \*(Aqsecret2\*(Aq,
\&                                                       );
.Ve
.PP
\&\fB#Create the \s-1RADIUS\s0 Auth Service.\fR
.PP
.Vb 10
\& my $service = Infoblox::Grid::Admin::RadiusAuthService\->new(
\&                                                             acct_retries   => 2000,
\&                                                             auth_retries   => 9,
\&                                                             cache_ttl      => 500,
\&                                                             disabled       => \*(Aqtrue\*(Aq,
\&                                                             enable_cache   => \*(Aqtrue\*(Aq,
\&                                                             recovery_ttl   => 50,
\&                                                             selection_mode => \*(AqROUND_ROBIN\*(Aq,
\&                                                             acct_timeout   => 1100,
\&                                                             auth_timeout   => 1200,
\&                                                             name           => \*(Aqsome.name.com\*(Aq,
\&                                                             radius_servers => [$ads1, $ads2]
\&                                                          );
\&
\& unless($service){
\&        die("Construct service object failed: ",
\&                Infoblox::status_code(). ":" .Infoblox::status_detail());
\&        }
\& print "service object object created successfully.\en";
\&
\& $session\->add($service)
\&     or die("Add service object failed: ",
\&                $session\->status_code(). ":" .$session\->status_detail());
\&
\& print"Service object added successfully.\en";
.Ve
.PP
\&\fB#Get and modify the captive portal property object.\fR
.PP
.Vb 7
\& #Get the captive portal object. Considering the id grid member named infoblox.localdomain was previously created.
\& my @object = $session\->get(
\&     object => "Infoblox::Grid::Member::CaptivePortal",
\&     name   => "infoblox.localdomain"
\&     )
\&     or die("get captive portal failed: ",
\&          $session\->status_code(), $session\->status_detail());
\&
\& #Modify captive portal object.
\& unless (scalar(@object) == 0) {
\&     my $object = $object[0];
\&
\&     if ($object) {
\&         $object\->authn_server_group($service);
\&         $object\->guest_phone_required(\*(Aqfalse\*(Aq);
\&         $object\->guest_custom_field1_name(\*(AqCustom field 1\*(Aq);
\&         $object\->guest_custom_field1_required(\*(Aqtrue\*(Aq);
\&         $object\->guest_custom_field2_name(\*(AqCustom field 2\*(Aq);
\&         $object\->guest_custom_field2_required(\*(Aqtrue\*(Aq);
\&
\&         # This will remove the AUP uploaded above
\&         $object\->files([]);
\&
\&         #Applying the changes
\&         $session\->modify($object)
\&             or die("Modify captive portal failed: ",
\&                  $session\->status_code(), $session\->status_detail());
\&
\&     }
\& } else {
\&     print "No grid captive portal found.";
\& }
\&
\& ####PROGRAM ENDS####
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Infoblox Inc. <http://www.infoblox.com/>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Infoblox::Grid::Member::CaptivePortal::File,Infoblox::Grid::Admin::AdAuthService,Infoblox::Grid::Admin::RadiusAuthService,Infoblox::Session, Infoblox::Session\->\fBget()\fR,Infoblox::Session\->\fBmodify()\fR,Infoblox::LDAP::AuthService
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2017 Infoblox Inc.

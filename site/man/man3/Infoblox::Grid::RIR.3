.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Infoblox::Grid::RIR 3"
.TH Infoblox::Grid::RIR 3 "2018-06-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Infoblox::Grid::RIR \- Regional Internet Registry (RIR) object.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Regional Internet Registry (\s-1RIR\s0) object.
.SH "CONSTRUCTOR"
.IX Header "CONSTRUCTOR"
.Vb 8
\& my $rir = Infoblox::Grid::RIR\->new(
\&    communication_mode   => \*(AqAPI\*(Aq | \*(AqEMAIL\*(Aq | \*(AqNONE\*(Aq, # Required
\&    name                 => \*(AqRIPE\*(Aq,                   # Optional, Default is \*(AqRIPE\*(Aq
\&    email                => $string,                  # Optional
\&    override_email       => \*(Aqtrue\*(Aq | \*(Aqfalse\*(Aq,         # Optional, Default is \*(Aqfalse\*(Aq
\&    url                  => $string,                  # Optional
\&    override_url         => \*(Aqtrue\*(Aq | \*(Aqfalse\*(Aq,         # Optional, Default is \*(Aqfalse\*(Aq
\& );
.Ve
.SH "SESSION METHODS"
.IX Header "SESSION METHODS"
This section describes all the methods in an Infoblox::Session module that you can apply to a \s-1RIR\s0 object.
.PP
Support for \s-1RIR/SWIP\s0 must be enabled at the Grid level. See Infoblox::Grid\->\fBenable_rir_swip()\fR method.
.SS "Infoblox::Session\->get( )"
.IX Subsection "Infoblox::Session->get( )"
.RS 4
Use this method to retrieve all the matching objects from the Infoblox appliance. See Infoblox::Session\->\fBget()\fR for parameters and return values.
.IP "\fBKey References\fR" 4
.IX Item "Key References"
.Vb 1
\& Apply the following attributes to get a specific RIR object:
\&
\&  name    \- Optional. The RIR name.
.Ve
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& my @retrieved_objs = $session\->get(
\&    object => \*(AqInfoblox::Grid::RIR\*(Aq,
\&    name   => \*(AqRIPE\*(Aq,
\& );
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->modify( )"
.IX Subsection "Infoblox::Session->modify( )"
.RS 4
Use this method to modify an object in the Infoblox appliance. See Infoblox::Session\->\fBmodify()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Use this method to modify email of a RIR object.
\& $rir\->email(\*(Aqsupport@infoblox.com\*(Aq);
\& # Submit modification
\& my $response = $session\->modify( $rir );
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->search( )"
.IX Subsection "Infoblox::Session->search( )"
.RS 4
Use this method to search for \s-1RIR\s0 objects in the Infoblox appliance. See Infoblox::Session\->\fBsearch()\fR for parameters and return values.
.IP "\fBKey References\fR" 4
.IX Item "Key References"
.Vb 1
\& Apply the following attributes to search a specific RIR object:
\&
\&  name         \- Optional. The RIR name.
.Ve
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& my @retrieved_objs = $session\->search(
\&    object => \*(AqInfoblox::Grid::RIR\*(Aq,
\&    name   => \*(AqRIPE\*(Aq,
\& );
.Ve
.RE
.RS 4
.RE
.SH "METHODS"
.IX Header "METHODS"
This section describes all the methods that you can use to configure and retrieve the attribute values of a \s-1RIR\s0 object.
.SS "communication_mode( )"
.IX Subsection "communication_mode( )"
.RS 4
Use this method to set or retrieve a communication mode for \s-1RIR.\s0
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid values are '\s-1API\s0', '\s-1EMAIL\s0' and '\s-1NONE\s0'. The default value is '\s-1API\s0'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get attribute value
\& my $value = $rir\->communication_mode();
\& #Modify attribute value
\& $rir\->communication_mode(\*(AqEMAIL\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "name( )"
.IX Subsection "name( )"
.RS 4
Use this method to set or retrieve a name of \s-1RIR.\s0
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is '\s-1RIPE\s0'. The default value is '\s-1RIPE\s0'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get attribute value
\& my $value = $rir\->name();
\& #Modify attribute value
\& $rir\->name(\*(AqRIPE\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "email( )"
.IX Subsection "email( )"
.RS 4
Use this method to set or retrieve an email address for \s-1RIR.\s0
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Email address in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get attribute value
\& my $value = $rir\->email();
\& #Modify attribute value
\& $rir\->email(\*(Aqsupport@infoblox.com\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "url( )"
.IX Subsection "url( )"
.RS 4
Use this method to set or retrieve the Web \s-1API URL\s0 for \s-1RIR.\s0
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Web \s-1API URL\s0 in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get attribute value
\& my $value = $rir\->url();
\& #Modify attribute value
\& $rir\->url(\*(Aqhttp://www.infoblox.com\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "override_email( )"
.IX Subsection "override_email( )"
.RS 4
Use this method to set or retrieve the override_email flag of \s-1RIR.\s0
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to override the predefined email address or \*(L"false\*(R" to use the predefined email address. The default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get attribute value
\& my $value = $rir\->override_email();
\& #Modify attribute value
\& $rir\->override_email(\*(Aqtrue\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "override_url( )"
.IX Subsection "override_url( )"
.RS 4
Use this method to set or retrieve the override_url flag of \s-1RIR.\s0
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to override the predefined Web \s-1API URL\s0 or \*(L"false\*(R" to use the predefined Web \s-1API URL.\s0 The default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get attribute value
\& my $value = $rir\->override_url();
\& #Modify attribute value
\& $rir\->override_url(\*(Aqtrue\*(Aq);
.Ve
.RE
.RS 4
.RE
.SH "AUTHOR"
.IX Header "AUTHOR"
Infoblox Inc. <http://www.infoblox.com/>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Infoblox::Session, Infoblox::Grid\->\fBenable_rir_swip()\fR
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2017 Infoblox Inc.

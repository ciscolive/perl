.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Infoblox::Grid::HTTPProxyServerSetting 3"
.TH Infoblox::Grid::HTTPProxyServerSetting 3 "2018-06-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Infoblox::Grid::HTTPProxyServerSetting \- An Infoblox Grid HTTP Proxy Server Setting object.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The Grid \s-1HTTP\s0 Proxy Server Setting object provides information about \s-1HTTP\s0 Proxy Server configuration.
.SH "CONSTRUCTOR"
.IX Header "CONSTRUCTOR"
.Vb 12
\& my $http_proxy_setting = Infoblox::Grid::HTTPProxyServerSetting\->new(
\&     address                      => $fqdn | $ipv4addr | $ipv6addr, # Required
\&     port                         => $uint,                         # Required
\&     enable_username_and_password => \*(Aqtrue\*(Aq | \*(Aqfalse\*(Aq,              # Optional / Default is \*(Aqfalse\*(Aq
\&     enable_proxy                 => \*(Aqtrue\*(Aq | \*(Aqfalse\*(Aq,              # Optional / Default is \*(Aqfalse\*(Aq
\&     enable_content_inspection    => \*(Aqtrue\*(Aq | \*(Aqfalse\*(Aq,              # Optional / Default is \*(Aqfalse\*(Aq
\&     verify_cname                 => \*(Aqtrue\*(Aq | \*(Aqfalse\*(Aq,              # Optional / Default is \*(Aqfalse\*(Aq
\&     comment                      => $string,                       # Optional / Default is undefined
\&     username                     => $string,                       # Optional / Default is undefined
\&     password                     => $string,                       # Optional / Default is undefined
\&     certificate                  => $string,                       # Optional / Default is undefined
\& );
.Ve
.SH "SESSION METHODS"
.IX Header "SESSION METHODS"
The object does not support any session methods.
.SH "MODULE METHODS"
.IX Header "MODULE METHODS"
The following functions are available to be applied to a \s-1HTTP\s0 Proxy Server object.
.SS "Infoblox::Grid\->http_proxy_server_setting( )"
.IX Subsection "Infoblox::Grid->http_proxy_server_setting( )"
.RS 4
Use this method to set or retreive the Grid \s-1HTTP\s0 proxy server settings.
See Infoblox::Grid\->\fBhttp_proxy_server_setting()\fR for parameters andreturn values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get http_proxy_server_setting value
\& my $http_proxy_server_setting = $grid\->http_proxy_server_setting();
\&
\& #Modify http_proxy_server_setting value
\& $grid\->http_proxy_server_setting($http_proxy_setting);
.Ve
.RE
.RS 4
.RE
.SH "METHODS"
.IX Header "METHODS"
This section describes all the methods that you can use to configure and retrieve the attribute values of a \s-1HTTP\s0 Proxy Server Setting object.
.SS "address( )"
.IX Subsection "address( )"
.RS 4
Use this method to set or retrieve the address of the \s-1HTTP\s0 Proxy Server.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is a string that contains Fully-Qualified Domain Name (\s-1FQDN\s0), IPv4 address or IPv6 address.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get address value
\& my $address = $obj\->address();
\&
\& #Modify address value
\& $obj\->address(\*(Aq10.0.0.1\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "certificate( )"
.IX Subsection "certificate( )"
.RS 4
Use this method to set the path to a \s-1CA\s0 Certificate used in a content inspection by a \s-1HTTP\s0 Proxy Server. This is a write-only attribute.
.Sp
Include the specified parameter to set the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is a string which contains a path to certificate.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Modify certificateibute value
\& $obj\->certificate(\*(Aq/path/to/cert.pem\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "comment( )"
.IX Subsection "comment( )"
.RS 4
Use this method to set or retrieve the descriptive comment for \s-1HTTP\s0 Proxy Server configuration.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is a desired comment in a string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get comment value
\& my $comment = $obj\->attr();
\&
\& #Modify comment value
\& $obj\->comment(\*(Aqdesired comment\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "enable_content_inspection( )"
.IX Subsection "enable_content_inspection( )"
.RS 4
Use this method to set or retrieve the flag that indicates whether the \s-1HTTPS\s0 packets content inspection by \s-1HTTP\s0 Proxy Server is enabled or disabled.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify 'true' to enable \s-1HTTPS\s0 packets content inspection or 'false' to disable it. The default value is 'false'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get enable_content_inspection value
\& my $enable_content_inspection = $obj\->enable_content_inspection();
\&
\& #Modify enable_content_inspection value
\& $obj\->enable_content_inspection(\*(Aqtrue\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "enable_username_and_password( )"
.IX Subsection "enable_username_and_password( )"
.RS 4
Use this method to set or retrieve the flag that indicates whether the use of username and password for the connectivity of \s-1HTTP\s0 proxy server is enabled or not.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify 'true' to use username and password for testing the connectivity of \s-1HTTP\s0 proxy server or 'false' to disallow it. The default value is 'false'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get enable_username_and_password value
\& my $enable_username_and_password = $obj\->enable_username_and_password();
\&
\& #Modify enable_username_and_password value
\& $obj\->enable_username_and_password(\*(Aqtrue\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "enable_proxy( )"
.IX Subsection "enable_proxy( )"
.RS 4
Use this method to set or retrieve the flag that indicates whether \s-1HTTP\s0 Proxy Server is enabled or disabled.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify 'true' to enable \s-1HTTP\s0 Proxy Server or 'false' to disable it. The default value is 'false'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get enable_proxy value
\& my $enable_proxy = $obj\->enable_proxy();
\&
\& #Modify enable_proxy value
\& $obj\->enable_proxy(\*(Aqtrue\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "password( )"
.IX Subsection "password( )"
.RS 4
Use this method to set the \s-1HTTP\s0 Proxy password. This is a write-only attribute.
.Sp
Include the specified parameter to set the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is a desired password in a string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Modify password value
\& $obj\->password(\*(Aqpass\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "port( )"
.IX Subsection "port( )"
.RS 4
Use this method to set or retrieve the \s-1HTTP\s0 Proxy Server port it listens to.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an unsigned integer between 0 and 65535.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get port value
\& my $port = $obj\->port();
\&
\& #Modify port value
\& $obj\->port(10000);
.Ve
.RE
.RS 4
.RE
.SS "username( )"
.IX Subsection "username( )"
.RS 4
Use this method to set or retrieve the \s-1HTTP\s0 Proxy user name.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is a desired user name in a string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get username value
\& my $username = $obj\->username();
\&
\& #Modify username value
\& $obj\->username(\*(Aquser1\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "verify_cname( )"
.IX Subsection "verify_cname( )"
.RS 4
Use this method to set or retrieve the flag which indicates whether the \s-1CNAME\s0 record query verification is enabled or not.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify 'true' to enable \s-1CNAME\s0 record query verification or 'false' to disable it. The default value is 'false'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get verify_cname value
\& my $verify_cname = $obj\->verify_cname();
\&
\& #Modify verify_cname value
\& $obj\->verify_cname(\*(Aqtrue\*(Aq);
.Ve
.RE
.RS 4
.RE
.SH "AUTHOR"
.IX Header "AUTHOR"
Infoblox Inc. <http://www.infoblox.com/>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Infoblox::Grid, 
Infoblox::Grid\->\fBhttp_proxy_server_setting()\fR
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2017 Infoblox Inc.

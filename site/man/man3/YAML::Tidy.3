.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "YAML::Tidy 3"
.TH YAML::Tidy 3 "2020-10-07" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
YAML::Tidy \- Tidy YAML files
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 8
\&    % cat in.yaml
\&    a: # a comment
\&        b:
\&         c: d
\&    % yamltidy in.yaml
\&    a: # a comment
\&      b:
\&        c: d
.Ve
.PP
For documentation see <https://github.com/perlpunk/yamltidy>
.PP
For examples see <https://perlpunk.github.io/yamltidy>
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
yamltidy can automatically tidy formatting in your \s-1YAML\s0 files, for example
adjust indentation and remove trailing spaces.
.PP
For more information, see <https://github.com/perlpunk/yamltidy>.
.SH "METHODS"
.IX Header "METHODS"
.ie n .IP """new""" 4
.el .IP "\f(CWnew\fR" 4
.IX Item "new"
.Vb 1
\&    my $yt = YAML::Tidy\->new;
.Ve
.ie n .IP """tidy""" 4
.el .IP "\f(CWtidy\fR" 4
.IX Item "tidy"
.Vb 1
\&    my $outyaml = $yt\->tidy($inyaml);
.Ve
.ie n .IP """highlight""" 4
.el .IP "\f(CWhighlight\fR" 4
.IX Item "highlight"
.Vb 2
\&    my $ansicolored = $yt\->highlight($yaml, \*(Aqansi\*(Aq);
\&    my $html = $yt\->highlight($yaml, \*(Aqhtml\*(Aq);
.Ve
.ie n .IP """cfg""" 4
.el .IP "\f(CWcfg\fR" 4
.IX Item "cfg"
.Vb 1
\&    my $cfg = $yt\->cfg;
.Ve
.Sp
Return YAML::Tidy::Config
.SH "AUTHOR"
.IX Header "AUTHOR"
Tina Müller <tinita@cpan.org>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.IP "yamllint <https://yamllint.readthedocs.io/en/stable/>" 4
.IX Item "yamllint <https://yamllint.readthedocs.io/en/stable/>"
.PD 0
.IP "perltidy Perl::Tidy" 4
.IX Item "perltidy Perl::Tidy"
.IP "YAML::LibYAML::API" 4
.IX Item "YAML::LibYAML::API"
.IP "<https://github.com/yaml/libyaml>" 4
.IX Item "<https://github.com/yaml/libyaml>"
.IP "<https://www.yaml.info/>" 4
.IX Item "<https://www.yaml.info/>"
.PD
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright 2020 by Tina Müller
.PP
This library is free software and may be distributed under the same terms
as perl itself.

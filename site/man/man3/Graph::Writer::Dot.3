.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Graph::Writer::Dot 3"
.TH Graph::Writer::Dot 3 "2016-08-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Graph::Writer::Dot \- write out directed graph in Dot format
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&  use Graph;
\&  use Graph::Writer::Dot;
\&
\&  $graph = Graph\->new();
\&  # add edges and nodes to the graph
\&
\&  $writer = Graph::Writer::Dot\->new();
\&  $writer\->write_graph($graph, \*(Aqmygraph.dot\*(Aq);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBGraph::Writer::Dot\fR is a class for writing out a directed graph
in the file format used by the \fIdot\fR tool (part of the \s-1AT+T\s0 graphviz
package).
The graph must be an instance of the Graph class, which is
actually a set of classes developed by Jarkko Hietaniemi.
.SH "METHODS"
.IX Header "METHODS"
.SS "\fBnew()\fP"
.IX Subsection "new()"
Constructor \- generate a new writer instance.
.PP
.Vb 1
\&  $writer = Graph::Writer::Dot\->new();
.Ve
.PP
This can take one optional argument that tell to cluster nodes in subgraphs
by using the attribute passed as value. See:
.PP
.Vb 1
\&  $writer = Graph::Writer::Dot\->new(cluster => \*(Aqgroup\*(Aq);
.Ve
.PP
It will group nodes that have the the same value in the 'group' attribute.
.SS "\fBwrite_graph()\fP"
.IX Subsection "write_graph()"
Write a specific graph to a named file:
.PP
.Vb 1
\&  $writer\->write_graph($graph, $file);
.Ve
.PP
The \f(CW$file\fR argument can either be a filename,
or a filehandle for a previously opened file.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.IP "www.graphviz.org <http://www.graphviz.org/>" 4
.IX Item "www.graphviz.org <http://www.graphviz.org/>"
The home page for the \s-1AT+T\s0 graphviz toolkit that
includes the dot tool.
.IP "Graph" 4
.IX Item "Graph"
Jarkko Hietaniemi's modules for representing directed graphs,
available from \s-1CPAN\s0 under modules/by\-module/Graph/
.IP "Algorithms in Perl" 4
.IX Item "Algorithms in Perl"
The O'Reilly book which has a chapter on directed graphs,
which is based around Jarkko's modules.
.IP "Graph::Writer" 4
.IX Item "Graph::Writer"
The base-class for Graph::Writer::Dot
.SH "REPOSITORY"
.IX Header "REPOSITORY"
<https://github.com/neilb/Graph\-ReadWrite>
.SH "AUTHOR"
.IX Header "AUTHOR"
Neil Bowers <neil@bowers.com>
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2001\-2012, Neil Bowers. All rights reserved.
Copyright (c) 2001, Canon Research Centre Europe. All rights reserved.
.PP
This script is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.

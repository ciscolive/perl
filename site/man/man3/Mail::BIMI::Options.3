.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Mail::BIMI::Options 3"
.TH Mail::BIMI::Options 3 "2020-09-30" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mail::BIMI::Options \- Shared options
.SH "VERSION"
.IX Header "VERSION"
version 2.20200930.1
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Class for capturing caller options, which may be passed to the constructor, or set in environment
.SH "ATTRIBUTES"
.IX Header "ATTRIBUTES"
These values are derived from lookups and verifications made based upon the input values, it is however possible to override these with other values should you wish to, for example, validate a record before it is published in \s-1DNS,\s0 or validate an Indicator which is only available locally
.SS "cache_backend"
.IX Subsection "cache_backend"
is=rw
.PP
Cache backend to use for cacheing
.SS "cache_fastmmap_share_file"
.IX Subsection "cache_fastmmap_share_file"
is=rw
.PP
Shared cache file when using FastMmap backend
.SS "cache_file_directory"
.IX Subsection "cache_file_directory"
is=rw
.PP
Directory to store Cache files in when using File backend
.SS "dns_client_timeout"
.IX Subsection "dns_client_timeout"
is=rw
.PP
Timeout value for \s-1DNS\s0
.SS "force_record"
.IX Subsection "force_record"
is=rw
.PP
Fake record to use
.SS "http_client_timeout"
.IX Subsection "http_client_timeout"
is=rw
.PP
Timeout value for \s-1HTTP\s0
.SS "no_location_with_vmc"
.IX Subsection "no_location_with_vmc"
is=rw
.PP
Do not check location if \s-1VMC\s0 was present
.SS "no_validate_cert"
.IX Subsection "no_validate_cert"
is=rw
.PP
Do not validate \s-1VMC\s0
.SS "no_validate_svg"
.IX Subsection "no_validate_svg"
is=rw
.PP
Do not validate \s-1SVG\s0
.SS "require_vmc"
.IX Subsection "require_vmc"
is=rw
.PP
Require \s-1VMC\s0 validation
.SS "ssl_root_cert"
.IX Subsection "ssl_root_cert"
is=rw
.PP
Location of \s-1SSL\s0 Root Cert Bundle \- Defaults to Mozilla::CA bundle plus Known \s-1BIMI\s0 Root Certs
.SS "strict_spf"
.IX Subsection "strict_spf"
is=rw
.PP
Disallow \s-1SPF\s0 +all
.SS "svg_from_file"
.IX Subsection "svg_from_file"
is=rw
.PP
Fake \s-1SVG\s0 with file contents
.SS "svg_max_fetch_size"
.IX Subsection "svg_max_fetch_size"
is=rw
.PP
Maximum fetch size for \s-1SVG\s0 retrieval
.SS "svg_max_size"
.IX Subsection "svg_max_size"
is=rw
.PP
Maximum valid size for \s-1SVG\s0
.SS "svg_profile"
.IX Subsection "svg_profile"
is=rw
.PP
Profile name to use for \s-1SVG\s0 validation
.SS "verbose"
.IX Subsection "verbose"
is=rw
.PP
Be More Verbose
.SS "vmc_from_file"
.IX Subsection "vmc_from_file"
is=rw
.PP
Fake \s-1VMC\s0 with file contents
.SS "vmc_max_fetch_size"
.IX Subsection "vmc_max_fetch_size"
is=rw
.PP
Maximum fetch size for \s-1VMC\s0 retrieval
.SS "vmc_no_check_alt"
.IX Subsection "vmc_no_check_alt"
is=rw
.PP
Do not check the alt name of a \s-1VMC\s0
.SH "EXTENDS"
.IX Header "EXTENDS"
.IP "\(bu" 4
Moose::Object
.SH "REQUIRES"
.IX Header "REQUIRES"
.IP "\(bu" 4
Mail::BIMI::Prelude
.IP "\(bu" 4
Moose
.SH "AUTHOR"
.IX Header "AUTHOR"
Marc Bradshaw <marc@marcbradshaw.net>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2020 by Marc Bradshaw.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

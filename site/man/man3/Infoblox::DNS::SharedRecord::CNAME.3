.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Infoblox::DNS::SharedRecord::CNAME 3"
.TH Infoblox::DNS::SharedRecord::CNAME 3 "2018-06-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Infoblox::DNS::SharedRecord::CNAME \- DNS shared CNAME record object.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
A shared \s-1CNAME\s0 (canonical name) record is similar to a regular \s-1CNAME\s0 record. It maps a domain name to a different domain name. The difference is that a shared \s-1CNAME\s0 record should be added into a shared record group. If this shared record group is associated with other zones, then this shared \s-1CNAME\s0 record will be shared into these zones. For more information about how shared record groups and shared records work, please refer to Infoblox Administrator Guide.
.SH "CONSTRUCTOR"
.IX Header "CONSTRUCTOR"
.Vb 10
\& my $shared_cname = Infoblox::DNS::SharedRecord::CNAME\->new (
\&     name                  => $string,                                                           # Required
\&     canonical             => $string,                                                           # Required
\&     shared_record_group   => $string,                                                           # Required
\&     comment               => $string,                                                           # Optional / Default is undefined
\&     disable               => "true" | "false"                                                   # Optional / Default "false"
\&     extattrs              => { $string => $extattr, ... },                                      # Optional / Default is undefined
\&     extensible_attributes => { $string => $string|$num, $string => [ $string|$num, ...], ... }, # Optional / Default is undefined
\&     ttl                   => $num | undef,                                                      # Optional / Default is undefined
\& );
.Ve
.PP
You cannot set both extattrs and extensible_attributes attributes at the same time.
.SH "SESSION METHODS"
.IX Header "SESSION METHODS"
This section describes all the methods in Infoblox::Session module that you can apply to a \s-1DNS\s0 shared \s-1CNAME\s0 object.
.SS "Infoblox::Session\->add( )"
.IX Subsection "Infoblox::Session->add( )"
.RS 4
Use this method to add an object to the Infoblox appliance. See Infoblox::Session\->\fBadd()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 9
\& #Construct an object
\& my $shared_cname = Infoblox::DNS::SharedRecord::CNAME\->new(
\&     canonical           => "shared_cname_canonical",
\&     name                => "shared_cname",
\&     comment             => "this is a demo shared CNAME record",
\&     disable             => "true",
\&     ttl                 => "33",
\&     shared_record_group => "test_srg"
\& );
\&
\& # Submit for addition
\& my $response = $session\->add($shared_cname);
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->get( )"
.IX Subsection "Infoblox::Session->get( )"
.RS 4
Use this method to retrieve all the matching objects from the Infoblox appliance. See Infoblox::Session\->\fBget()\fR for parameters and return values.
.IP "\fBKey References\fR" 4
.IX Item "Key References"
.Vb 1
\& Apply the following attributes to get a specific DNS shared CNAME object:
\&
\&  name                  \- Optional. A host name in string format.
\&  comment               \- Optional. A desired comment in string format.
\&  canonical             \- Optional. A host canonical name in string format.
\&  extattrs              \- Optional. An Infoblox::Grid::Extattr object.
\&  extensible_attributes \- Optional. A hash reference containing extensible attributes.
.Ve
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& my @retrieved_objs = $session\->get(
\&     object => "Infoblox::DNS::SharedRecord::CNAME",
\&     name   => "shared_cname",
\& );
\&
\& # get all CNAME shared records with a given extensible attribute
\& my @retrieved_objs = $session\->get(
\&     object                => "Infoblox::DNS::SharedRecord::CNAME",
\&     extensible_attributes => {\*(AqSite\*(Aq => \*(AqSanta Clara\*(Aq},
\& );
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->modify( )"
.IX Subsection "Infoblox::Session->modify( )"
.RS 4
Use this method to modify an object in the Infoblox appliance. See Infoblox::Session\->\fBmodify()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Use method to modify the comment.
\& $shared_cname\->comment("this is a modified comment");
\& # Submit modification
\& my $response = $session\->modify($shared_cname);
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->remove( )"
.IX Subsection "Infoblox::Session->remove( )"
.RS 4
Use this method to remove an object from the Infoblox appliance. See Infoblox::Session\->\fBremove()\fR for parameters and return values.
.Sp
To remove a specific object, first use \fBget()\fR or \fBsearch()\fR to retrieve the specific object, and then submit this object for removal.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 5
\& # Get the objects with the same name
\& my @retrieved_objs = $session\->get(
\&     object => "Infoblox::DNS::SharedRecord::CNAME",
\&     name   => "shared_cname"
\& );
\&
\& # Find the desired object from the retrieved list.
\& my $desired_cname = $retrieved_objs[0];
\&
\& # Submit for removal
\& my $response = $session\->remove($desired_cname);
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->search( )"
.IX Subsection "Infoblox::Session->search( )"
.RS 4
Use this method to search for \s-1DNS\s0 shared \s-1CNAME\s0 record objects in the Infoblox appliance. See Infoblox::Session\->\fBsearch()\fR for parameters and return values.
.IP "\fBKey References\fR" 4
.IX Item "Key References"
.Vb 1
\& Apply the following attributes to search for a DNS shared CNAME record object:
\&
\&  name                  \- Optional. Host name in string format (regular expression).
\&  canonical             \- Optional. Host canonical name in string format (regular expression).
\&  comment               \- Optional. A comment in string format (regular expression).
\&  extattrs              \- Optional. An Infoblox::Grid::Extattr object.
\&  extensible_attributes \- Optional. A hash reference containing extensible attributes.
.Ve
.Sp
For more information about searching extensible attributes, see Infoblox::Grid::ExtensibleAttributeDef/Searching Extensible Attributes.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 5
\& # search for all DNS CNAME objects with name which matches \*(Aqshared\*(Aqwith name which matches \*(Aqshared\*(Aq expression in default view
\& my @retrieved_objs = $session\->search(
\&     object => "Infoblox::DNS::SharedRecord::CNAME",
\&     name   => "shared",
\& );
\&
\& # search all DNS shared CNAME records with the extensible attribute \*(AqSite\*(Aq
\& my @retrieved_objs = $session\->search(
\&    object                => "Infoblox::DNS::SharedRecord::CNAME",
\&    extensible_attributes => {\*(AqSite\*(Aq => \*(AqSanta Clara\*(Aq},
\& );
.Ve
.RE
.RS 4
.RE
.SH "METHODS"
.IX Header "METHODS"
This section describes all the methods that you can use to configure and retrieve the attribute values of a \s-1DNS\s0 shared \s-1CNAME\s0 record object.
.SS "canonical( )"
.IX Subsection "canonical( )"
.RS 4
Use this method to set or retrieve the canonical name of a \s-1DNS\s0 shared \s-1CNAME\s0 record.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The canonical name of the host for this shared \s-1CNAME\s0 record.
.Sp
Note that this is not the \s-1FQDN\s0 canonical name of the host name. It is the host name portion of the \s-1FQDN\s0 name. For example, if the shared \s-1CNAME\s0 record 'shared_cname' is shared in zone test.com, then the name should be 'shared_cname'. The appliance will append 'test.com' when the shared \s-1CNAME\s0 record is populated and shared in zone test.com.
.Sp
A host name can have a maximum of 256 characters.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #get canonical value
\& my $canonical = $shared_cname\->canonical();
\&
\& #modify canonical value
\& $shared_cname\->canonical(\*(Aqnew_canonical\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "comment( )"
.IX Subsection "comment( )"
.RS 4
Use this method to set or retrieve the descriptive comment of a \s-1DNS\s0 shared \s-1CNAME\s0 record.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Desired comment in string format with a maximum of 256 bytes.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get comment
\& my $comment = $shared_cname\->comment();
\& #Modify comment
\& $shared_cname\->comment("Modifying the DNS CNAME comment");
.Ve
.RE
.RS 4
.RE
.SS "disable( )"
.IX Subsection "disable( )"
.RS 4
Use this method to set or retrieve the disable flag of a \s-1DNS\s0 shared \s-1CNAME\s0 record.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.Sp
The default value for this field is false, which means the \s-1DNS\s0 shared \s-1CNAME\s0 record is enabled.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to set the disable flag or \*(L"false\*(R" to deactivate/unset it.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get disable
\& my $disable = $shared_cname\->disable();
\& #Modify disable
\& $shared_cname\->disable("true");
.Ve
.RE
.RS 4
.RE
.SS "dns_canonical( )"
.IX Subsection "dns_canonical( )"
.RS 4
Use this method to retrieve the host canonical name in punycode format. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #get dns_canonical value
\& my $dns_canonical = $shared_cname\->dns_canonical();
.Ve
.RE
.RS 4
.RE
.SS "dns_name( )"
.IX Subsection "dns_name( )"
.RS 4
Use this method to retrieve the host name in punycode format. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $shared_cname\->dns_name();
.Ve
.RE
.RS 4
.RE
.SS "extattrs( )"
.IX Subsection "extattrs( )"
.RS 4
Use this method to set or retrieve the extensible attributes associated with a \s-1DNS\s0 shared \s-1CNAME\s0 record object.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is a hash reference containing the names of extensible attributes and their associated values ( Infoblox::Grid::Extattr objects ).
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get extattrs
\& my $ref_extattrs = $shared_cname\->extattrs();
\& #Modify extattrs
\& $shared_cname\->extattrs({ \*(AqSite\*(Aq => $extattr1, \*(AqAdministrator\*(Aq => $extattr2 });
.Ve
.RE
.RS 4
.RE
.SS "extensible_attributes( )"
.IX Subsection "extensible_attributes( )"
.RS 4
Use this method to set or retrieve the extensible attributes associated with a \s-1DNS\s0 shared \s-1CNAME\s0 record.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
For valid values for extensible attributes, see Infoblox::Grid::ExtensibleAttributeDef/Extensible Attribute Values.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get extensible attributes
\& my $ref_extensible_attributes = $shared_cname\->extensible_attributes();
\& #Modify extensible attributes
\& $shared_cname\->extensible_attributes({ \*(AqSite\*(Aq => \*(AqSanta Clara\*(Aq, \*(AqAdministrator\*(Aq => [ \*(AqPeter\*(Aq, \*(AqTom\*(Aq ] });
.Ve
.RE
.RS 4
.RE
.SS "name( )"
.IX Subsection "name( )"
.RS 4
Use this method to set or retrieve the host name of a \s-1DNS\s0 shared \s-1CNAME\s0 record.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.Sp
The attribute value can be in unicode format.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The host name of the shared \s-1CNAME\s0 record. Note that this is not the \s-1FQDN\s0 name of the host name. It is the host name portion of the \s-1FQDN\s0 name. For example, if this shared \s-1CNAME\s0 record 'shared_cname' is shared in zone test.com, then th
.Sp
A host name can have a maximum of 256 characters.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get name
\& my $name = $shared_cname\->name();
\& #Modify name
\& $shared_cname\->name("shared_cname");
.Ve
.RE
.RS 4
.RE
.SS "shared_record_group( )"
.IX Subsection "shared_record_group( )"
.RS 4
Use this method to set or retrieve the shared record group of a \s-1DNS\s0 shared \s-1CNAME\s0 record.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The name of defined Infoblox::DNS::SRG objects. The shared \s-1CNAME\s0 record will be defined under this shared record group and shared among zones associated with this shared record group.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get shared record group
\& my $srg = $shared_cname\->shared_record_group();
\& #Modify shared record group
\& $shared_cname\->shared_record_group("test_srg");
.Ve
.RE
.RS 4
.RE
.SS "ttl( )"
.IX Subsection "ttl( )"
.RS 4
Use this method to set or retrieve the Time to Live (\s-1TTL\s0) value of a \s-1DNS\s0 shared \s-1CNAME\s0 record.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.Sp
The default value is undefined which indicates that the record inherits the \s-1TTL\s0 value of the zone.
.Sp
Specify a \s-1TTL\s0 value to override the \s-1TTL\s0 value at the zone level.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
A 32\-bit integer (range from 0 to 4294967295) that represents the duration in seconds that the record is cached. Zero indicates that the record should not be cached.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 6
\& #Get ttl
\& my $ttl = $shared_cname\->ttl();
\& #Modify ttl
\& $shared_cname\->ttl(1800);
\& #Un\-override ttl
\& $shared_cname\->ttl(undef);
.Ve
.RE
.RS 4
.RE
.SH "AUTHOR"
.IX Header "AUTHOR"
Infoblox Inc. <http://www.infoblox.com/>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Infoblox::DNS::View, Infoblox::DNS::Zone, Infoblox::DNS::SRG, Infoblox::Session, Infoblox::Session\->\fBget()\fR, Infoblox::Session\->\fBsearch()\fR, Infoblox::Session\->\fBadd()\fR, Infoblox::Session\->\fBremove()\fR, Infoblox::Session\->\fBmodify()\fR
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2017 Infoblox Inc.

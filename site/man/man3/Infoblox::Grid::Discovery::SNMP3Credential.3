.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Infoblox::Grid::Discovery::SNMP3Credential 3"
.TH Infoblox::Grid::Discovery::SNMP3Credential 3 "2018-06-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Infoblox::Grid::Discovery::SNMP3Credential \- SNMPv3 credential.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The object provides information about SNMPv3 credential.
.SH "CONSTRUCTOR"
.IX Header "CONSTRUCTOR"
.Vb 8
\& my $object = Infoblox::Grid::Discovery::SNMP3Credential\->new(
\&    \*(Aqauthentication_password\*(Aq => $string,                         # Required if authentication_protocol is MD5 or SHA
\&    \*(Aqauthentication_protocol\*(Aq => \*(AqMD5\*(Aq | \*(AqNONE\*(Aq | \*(AqSHA\*(Aq,          # Requred
\&    \*(Aqcomment\*(Aq                 => $string,                         # Optional
\&    \*(Aqprivacy_password\*(Aq        => $string,                         # Required if privacy_protocol is \*(AqAES\*(Aq, \*(AqDES\*(Aq or \*(Aq3DES\*(Aq
\&    \*(Aqprivacy_protocol\*(Aq        => \*(AqAES\*(Aq | \*(AqDES\*(Aq | \*(Aq3DES\*(Aq | \*(AqNONE\*(Aq, # Required
\&    \*(Aquser\*(Aq                    => $string,                         # Required
\& );
.Ve
.SH "SESSION METHODS"
.IX Header "SESSION METHODS"
The object does not support any session methods.
.SH "METHODS"
.IX Header "METHODS"
This section describes all the methods that you can use to set or retrieve the attribute values of the object.
.SS "authentication_password( )"
.IX Subsection "authentication_password( )"
.RS 4
Use this method to set the authentication password if the authentication protocol is \s-1MD5\s0 or \s-1SHA.\s0 This is a write-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The authentication password in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Modify attribute value
\& $object\->authentication_password(\*(Aqinfoblox\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "authentication_protocol( )"
.IX Subsection "authentication_protocol( )"
.RS 4
Use this method to set or retrieve the authentication protocol.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is '\s-1MD5\s0', '\s-1NONE\s0' or '\s-1SHA\s0'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->authentication_protocol();
\& # Modify attribute value
\& $object\->authentication_protocol(\*(AqMD5\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "comment( )"
.IX Subsection "comment( )"
.RS 4
Use this method to set or retrieve the comment on SNMPv3 user.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The comment in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->comment();
\& # Modify attribute value
\& $object\->comment(\*(AqSNMPv3\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "privacy_password( )"
.IX Subsection "privacy_password( )"
.RS 4
Use this method to set the privacy password if the privacy protocol is '\s-1AES\s0', '\s-1DES\s0' or '3DES'. This is a write-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The privacy password in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Modify attribute value
\& $object\->privacy_password(\*(Aqinfoblox\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "privacy_protocol( )"
.IX Subsection "privacy_protocol( )"
.RS 4
Use this method to set or retrieve the privacy protocol.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is '\s-1AES\s0', '\s-1DES\s0', '3DES' or '\s-1NONE\s0'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->privacy_protocol();
\& # Modify attribute value
\& $object\->privacy_protocol(\*(Aq3DES\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "user( )"
.IX Subsection "user( )"
.RS 4
Use this method to set or retrieve the SNMPv3 user name.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Tthe SNMPv3 user name in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->user();
\& # Modify attribute value
\& $object\->user(\*(Aqadmin\*(Aq);
.Ve
.RE
.RS 4
.RE
.SH "AUTHOR"
.IX Header "AUTHOR"
Infoblox Inc. <http://www.infoblox.com/>
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2017 Infoblox Inc.

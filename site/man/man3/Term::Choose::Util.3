.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Term::Choose::Util 3"
.TH Term::Choose::Util 3 "2020-04-21" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Term::Choose::Util \- TUI\-related functions for selecting directories, files, numbers and subsets of lists.
.SH "VERSION"
.IX Header "VERSION"
Version 0.121
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
Functional interface:
.PP
.Vb 1
\&    use Term::Choose::Util qw( choose_a_directory );
\&
\&    my $chosen_directory = choose_a_directory();
.Ve
.PP
Object-oriented interface:
.PP
.Vb 1
\&    use Term::Choose::Util;
\&
\&    my $ob = Term::Choose\->new ();
\&
\&    my $chosen_directory = $ob\->choose_a_directory();
.Ve
.PP
See \*(L"\s-1SUBROUTINES\*(R"\s0.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module provides TUI-related functions for selecting directories, files, numbers and subsets of lists.
.SH "EXPORT"
.IX Header "EXPORT"
Nothing by default.
.SH "SUBROUTINES"
.IX Header "SUBROUTINES"
Values in brackets are default values.
.PP
Options are passed as a hash reference. The options argument is the last (or the only) argument.
.PP
\fIOptions available for all subroutines\fR
.IX Subsection "Options available for all subroutines"
.IP "\(bu" 4
clear_screen
.Sp
If enabled, the screen is cleared before the output.
.Sp
Values: [0],1,2.
.IP "\(bu" 4
color
.Sp
Setting \fIcolor\fR to \f(CW1\fR enables the support for color and text formatting escape sequences except for the current
selected element. If set to \f(CW2\fR, also for the current selected element the color support is enabled (inverted colors).
.Sp
Values: [0],1,2.
.IP "\(bu" 4
hide_cursor
.Sp
Hide the cursor
.Sp
Values: 0,[1].
.IP "\(bu" 4
info
.Sp
A string placed on top of of the output.
.Sp
Default: undef
.IP "\(bu" 4
mouse
.Sp
Enable the mouse mode. An item can be chosen with the left mouse key, the right mouse key can be used instead of the
SpaceBar key.
.Sp
Values: [0],1.
.IP "\(bu" 4
cs_label
.Sp
The value of \fIcs_label\fR (current selection label) is a string which is placed in front of the current selection.
.Sp
Defaults: \f(CW\*(C`choose_directories\*(C'\fR: 'Dirs: ', \f(CW\*(C`choose_a_directory\*(C'\fR: 'Dir: ', \f(CW\*(C`choose_a_file\*(C'\fR: 'File: '. For
\&\f(CW\*(C`choose_a_number\*(C'\fR, \f(CW\*(C`choose_a_subset\*(C'\fR and \f(CW\*(C`settings_menu\*(C'\fR the default is undefined.
.Sp
The current selection output is placed between the \fIinfo\fR string and the \fIprompt\fR string.
.IP "\(bu" 4
prompt
.Sp
A string placed on top of the available choices.
.Sp
Default: undef
.IP "\(bu" 4
back
.Sp
Customize the string of the menu entry "\fIback\fR".
.Sp
Default: \f(CW\*(C`BACK\*(C'\fR
.IP "\(bu" 4
confirm
.Sp
Customize the string of the menu entry "\fIconfirm\fR".
.Sp
Default: \f(CW\*(C`CONFIRM\*(C'\fR.
.SS "new"
.IX Subsection "new"
.Vb 1
\&    $ob = Term::Choose::Util\->new( { mouse => 1, ... } );
.Ve
.PP
Returns a new Term::Choose::Util object.
.PP
Options: all
.SS "choose_a_directory"
.IX Subsection "choose_a_directory"
.Vb 1
\&    $chosen_directory = choose_a_directory( { layout => 1, ... } )
.Ve
.PP
With \f(CW\*(C`choose_a_directory\*(C'\fR the user can browse through the directory tree and choose a directory which is then returned.
.PP
To move around in the directory tree:
.PP
\&\- select a directory and press \f(CW\*(C`Return\*(C'\fR to enter in the selected directory.
.PP
\&\- choose the "\fIparent_dir\fR" menu entry to move upwards.
.PP
To return the current working-directory as the chosen directory choose the "\fIconfirm\fR" menu entry.
.PP
The "\fIback\fR" menu entry causes \f(CW\*(C`choose_a_directory\*(C'\fR to return nothing.
.PP
Options:
.IP "\(bu" 4
alignment
.Sp
Elements in columns are aligned to the left if set to \f(CW0\fR, aligned to the right if set to \f(CW1\fR and centered if set to
\&\f(CW2\fR.
.Sp
Values: [0],1,2.
.IP "\(bu" 4
decoded
.Sp
If enabled, the directory name is returned decoded with \f(CW\*(C`locale_fs\*(C'\fR form Encode::Locale.
.Sp
Values: 0,[1].
.IP "\(bu" 4
enchanted
.Sp
If set to \f(CW1\fR, the default cursor position is on the "\fIparent_dir\fR\*(L" menu entry. If the directory name remains the same after an
user input, the default cursor position changes to \*(R"\fIback\fR".
.Sp
If set to \f(CW0\fR, the default cursor position is on the "\fIback\fR" menu entry.
.Sp
Values: 0,[1].
.IP "\(bu" 4
init_dir
.Sp
Set the starting point directory. Defaults to the home directory.
.Sp
If the option \fIdecoded\fR is enabled (default), \fIinit_dir\fR expects the directory path as a decoded string.
.IP "\(bu" 4
layout
.Sp
See the option \fIlayout\fR in Term::Choose
.Sp
Values: 0,[1],2,3.
.IP "\(bu" 4
order
.Sp
If set to \f(CW1\fR, the items are ordered vertically else they are ordered horizontally.
.Sp
This option has no meaning if \fIlayout\fR is set to \f(CW3\fR.
.Sp
Values: 0,[1].
.IP "\(bu" 4
show_hidden
.Sp
If enabled, hidden directories are added to the available directories.
.Sp
Values: 0,[1].
.IP "\(bu" 4
parent_dir
.Sp
Customize the string of the menu entry "\fIparent_dir\fR".
.Sp
Default: \f(CW\*(C`..\*(C'\fR
.SS "choose_a_file"
.IX Subsection "choose_a_file"
.Vb 1
\&    $chosen_file = choose_a_file( { show_hidden => 0, ... } )
.Ve
.PP
Browse the directory tree the same way as described for \f(CW\*(C`choose_a_directory\*(C'\fR. Select the "\fIshow_files\fR\*(L" menu entry to get the
files of the current directory. To return the chosen file select the \*(R"\fIconfirm\fR" menu entry.
.PP
Options as in \*(L"choose_a_directory\*(R" plus
.IP "\(bu" 4
filter
.Sp
If set, the value of this option is used as a glob pattern. Only files matching this pattern will be displayed.
.IP "\(bu" 4
show_files
.Sp
Customize the string of the menu entry "\fIshow_files\fR".
.Sp
Default: \f(CW\*(C`[Show\-Files]\*(C'\fR
.SS "choose_directories"
.IX Subsection "choose_directories"
.Vb 1
\&    $chosen_directories = choose_directories( { mouse => 1, ... } )
.Ve
.PP
\&\f(CW\*(C`choose_directories\*(C'\fR is similar to \f(CW\*(C`choose_a_directory\*(C'\fR but it is possible to return multiple directories.
.PP
Selecting the  "\fIadd_dirs\fR" menu entry opens the add-directories sub menu: one can add there directories from the
current working directory to the list of chosen directories.
.PP
To return the list of chosen directories (as an array reference) select the "\fIconfirm\fR" entry in main menu.
.PP
The "\fIback\fR\*(L" menu entry removes the last added directories. If the list of chosen directories is empty, \*(R"\fIback\fR" causes
\&\f(CW\*(C`choose_directories\*(C'\fR to return nothing.
.PP
Options as in \*(L"choose_a_directory\*(R" plus
.IP "\(bu" 4
add_dirs
.Sp
Customize the string of the menu entry "\fIadd_dirs\fR".
.Sp
Default: \f(CW\*(C`[Choose\-Dirs]\*(C'\fR
.SS "choose_a_number"
.IX Subsection "choose_a_number"
.Vb 1
\&    $new = choose_a_number( 5, { cs_label => \*(AqNumber: \*(Aq, ... }  );
.Ve
.PP
This function lets you choose/compose a number (unsigned integer) which is returned.
.PP
The fist argument is an integer and determines the range of the available numbers. For example setting the
first argument to 4 would offer a range from 0 to 9999.
.PP
Options:
.IP "\(bu" 4
small_first
.Sp
Put the small number ranges on top.
.IP "\(bu" 4
thousands_separator
.Sp
Sets the thousands separator.
.Sp
Default: \f(CW\*(C`,\*(C'\fR
.PP
The \fIcurrent-selection\fR line is shown if \fIcs_label\fR is defined or as soon as a number has been chosen.
.SS "choose_a_subset"
.IX Subsection "choose_a_subset"
.Vb 1
\&    $subset = choose_a_subset( \e@available_items, { cs_label => \*(Aqnew> \*(Aq, ... } )
.Ve
.PP
\&\f(CW\*(C`choose_a_subset\*(C'\fR lets you choose a subset from a list.
.PP
The first argument is a reference to an array which provides the available list.
.PP
Options:
.IP "\(bu" 4
all_by_default
.Sp
If enabled, all elements are selected if \s-1CONFIRM\s0 is chosen without any selected elements.
.Sp
Values: [0],1.
.IP "\(bu" 4
alignment
.Sp
Elements in columns are aligned to the left if set to \f(CW0\fR, aligned to the right if set to \f(CW1\fR and centered if set to
\&\f(CW2\fR.
.Sp
Values: [0],1,2.
.IP "\(bu" 4
index
.Sp
If true, the index positions in the available list of the made choices are returned.
.Sp
Values: [0],1.
.IP "\(bu" 4
keep_chosen
.Sp
If enabled, the chosen items are not removed from the available choices.
.Sp
Values: [0],1;
.IP "\(bu" 4
layout
.Sp
See the option \fIlayout\fR in Term::Choose.
.Sp
Values: 0,1,2,[3].
.IP "\(bu" 4
mark
.Sp
Expects as its value a reference to an array with indexes. Elements corresponding to these indexes are pre-selected when
\&\f(CW\*(C`choose_a_subset\*(C'\fR is called.
.IP "\(bu" 4
order
.Sp
If set to \f(CW1\fR, the items are ordered vertically else they are ordered horizontally.
.Sp
This option has no meaning if \fIlayout\fR is set to 3.
.Sp
Values: 0,[1].
.IP "\(bu" 4
prefix
.Sp
\&\fIprefix\fR expects as its value a string. This string is put in front of the elements of the available list in the menu.
The chosen elements are returned without this \fIprefix\fR.
.Sp
Default: empty string.
.IP "\(bu" 4
cs_begin
.Sp
Current selection: the \fIcs_begin\fR string is placed between the \fIcs_label\fR string and the chosen elements as soon as an
element has been chosen.
.Sp
Default: empty string
.IP "\(bu" 4
cs_separator
.Sp
Current selection: the \fIcs_separator\fR is placed between the chosen list elements.
.Sp
Default: \f(CW\*(C` ,\*(C'\fR
.IP "\(bu" 4
cs_end
.Sp
Current selection: as soon as elements have been chosen the \fIcs_end\fR string is placed at the end of the chosen elements.
.Sp
Default: empty string
.PP
The current-selection line is shown if \fIcs_label\fR is defined or as soon as elements have been chosen.
.PP
To return the chosen subset (as an array reference) select the "\fIconfirm\fR" menu entry.
.PP
The "\fIback\fR\*(L" menu entry removes the last added chosen items. If the list of chosen items is empty, \*(R"\fIback\fR" causes
\&\f(CW\*(C`choose_a_subset\*(C'\fR to return nothing.
.SS "settings_menu"
.IX Subsection "settings_menu"
.Vb 5
\&    $menu = [
\&        [ \*(Aqenable_logging\*(Aq, "\- Enable logging", [ \*(AqNO\*(Aq, \*(AqYES\*(Aq ]   ],
\&        [ \*(Aqcase_sensitive\*(Aq, "\- Case sensitive", [ \*(AqNO\*(Aq, \*(AqYES\*(Aq ]   ],
\&        [ \*(Aqattempts\*(Aq,       "\- Attempts"      , [ \*(Aq1\*(Aq, \*(Aq2\*(Aq, \*(Aq3\*(Aq ] ]
\&    ];
\&
\&    $config = {
\&        \*(Aqenable_logging\*(Aq => 1,
\&        \*(Aqcase_sensitive\*(Aq => 1,
\&        \*(Aqattempts\*(Aq       => 2
\&    };
\&
\&    settings_menu( $menu, $config );
.Ve
.PP
The first argument is a reference to an array of arrays. These arrays have three elements:
.IP "\(bu" 4
the unique name of the option
.IP "\(bu" 4
the prompt string
.IP "\(bu" 4
an array reference with the available values of the option.
.PP
The second argument is a hash reference:
.IP "\(bu" 4
the keys are the option names
.IP "\(bu" 4
the values (\f(CW0\fR if not defined) are the indexes of the current value of the respective key/option.
.PP
When \f(CW\*(C`settings_menu\*(C'\fR is called, it displays for each array entry a row with the prompt string and the current value.
It is possible to scroll through the rows. If a row is selected, the set and displayed value changes to the next. After
scrolling through the list once the cursor jumps back to the top row.
.PP
If the "\fIback\fR" menu entry is chosen, \f(CW\*(C`settings_menu\*(C'\fR does not apply the made changes and returns nothing. If the
"\fIconfirm\fR" menu entry is chosen, \f(CW\*(C`settings_menu\*(C'\fR applies the made changes in place to the passed configuration
hash-reference (second argument) and returns the number of made changes.
.PP
Setting the option \fIcs_label\fR to a defined value adds an info output line.
.SH "REQUIREMENTS"
.IX Header "REQUIREMENTS"
.SS "Perl version"
.IX Subsection "Perl version"
Requires Perl version 5.8.3 or greater.
.SS "Encoding layer"
.IX Subsection "Encoding layer"
Ensure the encoding layer for \s-1STDOUT, STDERR\s0 and \s-1STDIN\s0 are set to the correct value.
.SH "SUPPORT"
.IX Header "SUPPORT"
You can find documentation for this module with the perldoc command.
.PP
.Vb 1
\&    perldoc Term::Choose::Util
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Matthäus Kiem <cuer2s@gmail.com>
.SH "CREDITS"
.IX Header "CREDITS"
Thanks to the Perl\-Community.de <http://www.perl-community.de> and the people form
stackoverflow <http://stackoverflow.com> for the help.
.SH "LICENSE AND COPYRIGHT"
.IX Header "LICENSE AND COPYRIGHT"
Copyright 2014\-2020 Matthäus Kiem.
.PP
This library is free software; you can redistribute it and/or modify it under the same terms as Perl 5.10.0. For
details, see the full text of the licenses in the file \s-1LICENSE.\s0

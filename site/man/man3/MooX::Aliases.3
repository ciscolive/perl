.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "MooX::Aliases 3"
.TH MooX::Aliases 3 "2015-02-01" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
MooX::Aliases \- easy aliasing of methods and attributes in Moo
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 3
\&  package MyClass;
\&  use Moo;
\&  use MooX::Aliases;
\&
\&  has this => (
\&      is    => \*(Aqrw\*(Aq,
\&      alias => \*(Aqthat\*(Aq,
\&  );
\&
\&  sub foo { my $self = shift; print $self\->that }
\&  alias bar => \*(Aqfoo\*(Aq;
\&
\&  my $o = MyApp\->new();
\&  $o\->this(\*(AqHello World\*(Aq);
\&  $o\->bar; # prints \*(AqHello World\*(Aq
.Ve
.PP
or
.PP
.Vb 3
\&  package MyRole;
\&  use Moo::Role;
\&  use MooX::Aliases;
\&
\&  has this => (
\&      is    => \*(Aqrw\*(Aq,
\&      alias => \*(Aqthat\*(Aq,
\&  );
\&
\&  sub foo { my $self = shift; print $self\->that }
\&  alias bar => \*(Aqfoo\*(Aq;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The MooX::Aliases module will allow you to quickly alias methods
in Moo. It provides an alias parameter for \fBhas()\fR to generate aliased
accessors as well as the standard ones. Attributes can also be
initialized in the constructor via their aliased names.
.PP
You can create more than one alias at once by passing a listref:
.PP
.Vb 3
\&  has ip_addr => (
\&    alias => [ qw(ipAddr ip) ],
\&  );
.Ve
.SH "FUNCTIONS"
.IX Header "FUNCTIONS"
.ie n .IP "alias $alias, $method" 4
.el .IP "alias \f(CW$alias\fR, \f(CW$method\fR" 4
.IX Item "alias $alias, $method"
Creates \f(CW$alias\fR as a method that is aliased to \f(CW$method\fR.
.SH "CAVEATS"
.IX Header "CAVEATS"
This module uses the \f(CW\*(C`BUILDARGS\*(C'\fR to map the attributes.  If a class uses a
custom \f(CW\*(C`BUILDARGS\*(C'\fR, this module may not behave properly.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.IP "MooseX::Aliases" 4
.IX Item "MooseX::Aliases"
.SH "AUTHOR"
.IX Header "AUTHOR"
haarg \- Graham Knop (cpan:HAARG) <haarg@haarg.org>
.SS "\s-1CONTRIBUTORS\s0"
.IX Subsection "CONTRIBUTORS"
.IP "\(bu" 8
Chris Prather <chris@prather.org>
.IP "\(bu" 8
Jesse Luehrs <doy@tozt.net>
.IP "\(bu" 8
Justin Hunter <justin.d.hunter@gmail.com>
.IP "\(bu" 8
Karen Etheridge <ether@cpan.org>
.IP "\(bu" 8
Yuval Kogman <nothingmuch@woobling.org>
.IP "\(bu" 8
Daniel Gempesaw <gempesaw@gmail.com>
.IP "\(bu" 8
Denis Ibaev <dionys@gmail.com>
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2013 the MooX::Alises \*(L"\s-1AUTHOR\*(R"\s0 and \*(L"\s-1CONTRIBUTORS\*(R"\s0
as listed above.
.SH "LICENSE"
.IX Header "LICENSE"
This library is free software and may be distributed under the same terms
as perl itself.

.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Mojolicious::Plugin::BootstrapHelpers 3"
.TH Mojolicious::Plugin::BootstrapHelpers 3 "2019-06-24" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mojolicious::Plugin::BootstrapHelpers \- Type less bootstrap
.SH "VERSION"
.IX Header "VERSION"
Version 0.0206, released 2019\-06\-24.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&    # Mojolicious
\&    $self\->plugin(\*(AqBootstrapHelpers\*(Aq);
\&
\&    # ::Lite
\&    plugin \*(AqBootstrapHelpers\*(Aq;
\&
\&    # Meanwhile, somewhere in a template...
\&    %= formgroup \*(AqEmail\*(Aq, text_field => [\*(Aqemail\*(Aq], large, cols => { small => [3, 9] }
\&
\&    # ...that renders into
\&    <div class="form\-group form\-group\-lg">
\&        <label class="control\-label col\-sm\-3" for="email">Email</label>
\&        <div class="col\-sm\-9">
\&            <input class="form\-control" id="email" name="email" type="text">
\&        </div>
\&    </div>
.Ve
.SH "STATUS"
.IX Header "STATUS"
Relatively stable. This distribution will not be updated to support Bootstrap 4. There might be a separate distribution for that.
.PP
All examples are tested.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Mojolicious::Plugin::BootstrapHelpers is a convenience plugin that reduces some bootstrap complexity by introducing several tag helpers specifically for Bootstrap 3 <http://www.getbootstrap.com/>.
.PP
The goal is not to have tag helpers for everything, but for common use cases.
.PP
All examples below (and more, see tests) is expected to work.
.SS "How to use Bootstrap"
.IX Subsection "How to use Bootstrap"
If you don't know what Bootstrap is, see <http://www.getbootstrap.com/> for possible usages.
.PP
You might want to use Mojolicious::Plugin::Bootstrap3 in your templates.
.PP
To get going quickly by using the official \s-1CDN\s0 you can use the following helpers:
.PP
.Vb 2
\&    # CSS
\&    %= bootstrap
\&
\&    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
\&
\&    # or (if you want to use the theme)
\&    %= bootstrap \*(Aqtheme\*(Aq
\&
\&    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
\&    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap\-theme.min.css">
\&
\&    # And the javascript
\&    %= bootstrap \*(Aqjs\*(Aq
\&
\&    <script src="//maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
\&
\&    # Or just:
\&    %= bootstrap \*(Aqall\*(Aq
\&
\&    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
\&    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap\-theme.min.css">
\&    <script src="//maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
.Ve
.PP
It is also possible to automatically include jQuery (2.*)
.PP
.Vb 1
\&    %= bootstrap \*(Aqjsq\*(Aq
\&
\&    <script src="//code.jquery.com/jquery\-2.2.4.min.js"></script>
\&    <script src="//maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
\&
\&    %= bootstrap \*(Aqallq\*(Aq
\&
\&    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
\&    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap\-theme.min.css">
\&    <script src="//code.jquery.com/jquery\-2.2.4.min.js"></script>
\&    <script src="//maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
.Ve
.SS "Shortcuts"
.IX Subsection "Shortcuts"
There are several shortcuts for applying context and size classes that automatically expands to the correct class depending
on which tag it is applied to. For instance, if you apply the \f(CW\*(C`info\*(C'\fR shortcut to a panel, it becomes \f(CW\*(C`panel\-info\*(C'\fR, but when applied to a button it becomes \f(CW\*(C`btn\-info\*(C'\fR.
.PP
You can use them in two different ways, but internally they are the same. These to lines are exactly identical:
.PP
.Vb 2
\&    # \*(Aqstandalone shortcut\*(Aq
\&    %= button \*(AqPush me\*(Aq, primary
\&
\&    # \*(Aqlongform shortcut\*(Aq
\&    %= button \*(AqPush me\*(Aq, _\|_primary => 1
.Ve
.PP
For sizes, you can only use the longform (\f(CW\*(C`xsmall\*(C'\fR, \f(CW\*(C`small\*(C'\fR, \f(CW\*(C`medium\*(C'\fR and \f(CW\*(C`large\*(C'\fR). They are shortened to the Bootstrap type classes.
.PP
The following shortcuts are available:
.PP
.Vb 6
\&   xsmall    default     striped       caret     right
\&   small     primary     bordered
\&   medium    success     hover
\&   large     info        condensed
\&             warning     responsive
\&             danger
.Ve
.PP
Add two leading underscores if you don't want to use the standalone form.
.PP
See below for usage. \fBImportant:\fR You can't follow a standalone shortcut with a fat comma (\f(CW\*(C`=>\*(C'\fR). The fat comma auto-quotes the string on the left, and then it breaks.
.PP
If a shortcut you try to apply isn't available in that context, it is silently not applied.
.SS "Syntax convention"
.IX Subsection "Syntax convention"
In the syntax sections below the following conventions are used:
.PP
.Vb 10
\&    name            A specific string
\&    $name           Any string
\&    %name           One or more key\-value pairs, written as:
\&                      key => \*(Aqvalue\*(Aq, key2 => \*(Aqvalue2\*(Aq
\&                         or, if you use standalone shortcuts:
\&                      primary, large
\&    $key => [...]   Both of these are array references where the ordering of strings
\&    key  => [...]     are significant, for example:
\&                      key => [ $thing, $thing2, %hash ]
\&    $key => {...}   Both of these are hash references where the ordering of pairs are
\&    key  => {...}     are insignificant, for example:
\&                      key => { key2 => $value, key3 => \*(Aqothervalue\*(Aq }
\&    (...)           Anything between parenthesis is optional. The parenthesis is not part of the
\&                      actual syntax
\&    |...|           Two pipes is a reference to another specification. For instance, button toolbars contain
\&                      button groups that contain buttons. Using this syntax makes the important parts clearer.
\&                      The pipes are not part of the actual syntax.
.Ve
.PP
Ordering between two hashes that follows each other is also not significant.
.PP
\&\fBAbout \f(CB%has\fB\fR
.PP
The following applies to all \f(CW%has\fR hashes below:
.IP "\(bu" 4
They refer to any html attributes and/or shortcuts to apply to the current element.
.IP "\(bu" 4
When helpers are nested, all occurrencies are change to tag-specific names, such as \f(CW%panel_has\fR.
.IP "\(bu" 4
This hash is always optional. It is not marked so in the definitions below in order to reduce clutter.
.IP "\(bu" 4
Depending on context either the leading or following comma is optional together with the hash. It is usually obvious.
.IP "\(bu" 4
Sometimes on nested helpers (such as tables in panels just below), \f(CW%has\fR is the only thing that can be applied to
        the other element. In this case \f(CW\*(C`panel => { %panel_has }\*(C'\fR. It follows from above that in those cases this entire
        expression is \fIalso\fR optional. Such cases are also not marked as optional in syntax definitions and are not mentioned
        in syntax description, unless they need further comment.
.PP
From this definition:
.PP
.Vb 3
\&    %= table ($title,) %table_has, panel => { %panel_has }, begin
\&           $body
\&    %  end
.Ve
.PP
Both of these are legal:
.PP
.Vb 4
\&    # since both panel => { %panel_has } and %table_has are hashes, their ordering is not significant.
\&    %= table \*(AqHeading Table\*(Aq, panel => { success }, condensed, id => \*(Aqthe\-table\*(Aq, begin
\&         <tr><td>A Table Cell</td></tr>
\&    %  end
\&
\&
\&    %= table begin
\&         <tr><td>A Table Cell</td></tr>
\&    %  end
.Ve
.SS "References"
.IX Subsection "References"
All other \f(CW\*(C`|references|\*(C'\fR are also helpers, so \f(CW\*(C`|link|\*(C'\fR and \f(CW\*(C`|item|\*(C'\fR needs special mention.
.PP
\fI|link|\fR
.IX Subsection "|link|"
.PP
\&\f(CW\*(C`|link|\*(C'\fR creates an \f(CW\*(C`<a>\*(C'\fR tag.
.PP
.Vb 1
\&    |link|
.Ve
.PP
Is exactly the same as
.PP
.Vb 1
\&    $link_text, [ $url ], %link_has
.Ve
.PP
\&\fB\f(CB$link_text\fB\fR
.PP
Mandatory. The text on the link.
.PP
\&\fB\f(CB$url\fB\fR
.PP
Mandatory. It sets the \f(CW\*(C`href\*(C'\fR on the link. url_for is used to create the link.
.PP
\&\fB\f(CB%link_has\fB\fR
.PP
Which shortcuts are available varies depending on context.
.PP
\fI|item|\fR
.IX Subsection "|item|"
.PP
\&\f(CW\*(C`|item|\*(C'\fR is used in the various submenus/dropdowns. One \f(CW\*(C`|item|\*(C'\fR creates one \f(CW\*(C`<li>\*(C'\fR tag.
.PP
.Vb 1
\&    |item|
.Ve
.PP
Is exactly the same as
.PP
.Vb 1
\&    [ |link| ]
\&
\&    # or
\&    $header_text
\&
\&    # or
\&    []
.Ve
.PP
So, a submenu item can be one of three things:
.ie n .IP "1. A link, in which case you create a ""|link|"" in an array reference." 4
.el .IP "1. A link, in which case you create a \f(CW|link|\fR in an array reference." 4
.IX Item "1. A link, in which case you create a |link| in an array reference."
.PD 0
.ie n .IP "2. A "".dropdown\-header"", in which case you give it a \*(Aqstring\*(Aq which then is turned into the text of the header." 4
.el .IP "2. A \f(CW.dropdown\-header\fR, in which case you give it a \f(CW\*(Aqstring\*(Aq\fR which then is turned into the text of the header." 4
.IX Item "2. A .dropdown-header, in which case you give it a string which then is turned into the text of the header."
.ie n .IP "3. A "".divider"", in which case you give it an empty array reference." 4
.el .IP "3. A \f(CW.divider\fR, in which case you give it an empty array reference." 4
.IX Item "3. A .divider, in which case you give it an empty array reference."
.PD
.PP
See \*(L"Dropdowns\*(R", \*(L"Button groups\*(R" and \*(L"Navbars\*(R" for examples.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
All examples below, and more, are included in html files in \f(CW\*(C`/examples\*(C'\fR. They are also available on github:
.IP "\(bu" 4
Badges <http://htmlpreview.github.io/?https://github.com/Csson/p5-mojolicious-plugin-bootstraphelpers/blob/master/examples/badge-1.html>
.IP "\(bu" 4
Include bootstrap <http://htmlpreview.github.io/?https://github.com/Csson/p5-mojolicious-plugin-bootstraphelpers/blob/master/examples/bootstrap-1.html>
.IP "\(bu" 4
Buttons <http://htmlpreview.github.io/?https://github.com/Csson/p5-mojolicious-plugin-bootstraphelpers/blob/master/examples/button-1.html>
.IP "\(bu" 4
Button groups <http://htmlpreview.github.io/?https://github.com/Csson/p5-mojolicious-plugin-bootstraphelpers/blob/master/examples/button_group-1.html>
.IP "\(bu" 4
Dropdowns <http://htmlpreview.github.io/?https://github.com/Csson/p5-mojolicious-plugin-bootstraphelpers/blob/master/examples/dropdown-1.html>
.IP "\(bu" 4
Form groups <http://htmlpreview.github.io/?https://github.com/Csson/p5-mojolicious-plugin-bootstraphelpers/blob/master/examples/formgroup-1.html>
.IP "\(bu" 4
Icons <http://htmlpreview.github.io/?https://github.com/Csson/p5-mojolicious-plugin-bootstraphelpers/blob/master/examples/icon-1.html>
.IP "\(bu" 4
Input groups <http://htmlpreview.github.io/?https://github.com/Csson/p5-mojolicious-plugin-bootstraphelpers/blob/master/examples/input_group-1.html>
.IP "\(bu" 4
Navs <http://htmlpreview.github.io/?https://github.com/Csson/p5-mojolicious-plugin-bootstraphelpers/blob/master/examples/nav-1.html>
.IP "\(bu" 4
Navbars <http://htmlpreview.github.io/?https://github.com/Csson/p5-mojolicious-plugin-bootstraphelpers/blob/master/examples/navbar-1.html>
.IP "\(bu" 4
Panels <http://htmlpreview.github.io/?https://github.com/Csson/p5-mojolicious-plugin-bootstraphelpers/blob/master/examples/panel-1.html>
.IP "\(bu" 4
Tables <http://htmlpreview.github.io/?https://github.com/Csson/p5-mojolicious-plugin-bootstraphelpers/blob/master/examples/table-1.html>
.IP "\(bu" 4
Toolbars <http://htmlpreview.github.io/?https://github.com/Csson/p5-mojolicious-plugin-bootstraphelpers/blob/master/examples/toolbar-1.html>
.SH "HELPERS"
.IX Header "HELPERS"
.SS "Badges"
.IX Subsection "Badges"
Bootstrap documentation <http://getbootstrap.com/components/#badges>
.PP
\fISyntax\fR
.IX Subsection "Syntax"
.PP
.Vb 1
\&    %= badge $text, %has
.Ve
.PP
\&\fB\f(CB$text\fB\fR
.PP
Mandatory. If it is \f(CW\*(C`undef\*(C'\fR no output is produced.
.PP
\&\fBAvailable shortcuts\fR
.PP
\&\f(CW\*(C`right\*(C'\fR applies \f(CW\*(C`.pull\-right\*(C'\fR.
.PP
\fIExamples\fR
.IX Subsection "Examples"
.PP
.Vb 1
\&    <%= badge \*(Aq3\*(Aq %>
\&
\&    <span class="badge">3</span></a>
.Ve
.PP
.Vb 1
\&    <%= badge \*(Aq4\*(Aq, data => { custom => \*(Aqyes\*(Aq }, right %>
\&
\&    <span class="badge pull\-right" data\-custom="yes">4</span>
.Ve
.SS "Buttons"
.IX Subsection "Buttons"
Bootstrap documentation <http://getbootstrap.com/css/#buttons>
.PP
\fISyntax\fR
.IX Subsection "Syntax"
.PP
.Vb 1
\&    %= button $button_text(, [$url]), %has
\&
\&    %= submit_button $text, %has
.Ve
.PP
\&\fB\f(CB$button_text\fB\fR
.PP
Mandatory. The text on the button.
.PP
\&\fB\f(CB\*(C`[$url]\*(C'\fB\fR
.PP
Optional array reference. It is handed off to url_for, so with it this is
basically link_to with Bootstrap classes.
.PP
Not available for \f(CW\*(C`submit_button\*(C'\fR.
.PP
\&\fBAvailable shortcuts\fR
.PP
\&\f(CW\*(C`default\*(C'\fR \f(CW\*(C`primary\*(C'\fR \f(CW\*(C`success\*(C'\fR \f(CW\*(C`info\*(C'\fR \f(CW\*(C`warning\*(C'\fR \f(CW\*(C`danger\*(C'\fR \f(CW\*(C`link\*(C'\fR applies the various \f(CW\*(C`.btn\-*\*(C'\fR classes.
.PP
\&\f(CW\*(C`large\*(C'\fR \f(CW\*(C`small\*(C'\fR \f(CW\*(C`xsmall\*(C'\fR applies \f(CW\*(C`.btn\-lg\*(C'\fR \f(CW\*(C`.btn\-sm\*(C'\fR \f(CW\*(C`.btn\-xs\*(C'\fR respectively.
.PP
\&\f(CW\*(C`active\*(C'\fR \f(CW\*(C`block\*(C'\fR applies the \f(CW\*(C`.active\*(C'\fR and \f(CW\*(C`.block\*(C'\fR classes.
.PP
\&\f(CW\*(C`disabled\*(C'\fR applies the \f(CW\*(C`.disabled\*(C'\fR class if the generated element is an \f(CW\*(C`<a>\*(C'\fR. On a \f(CW\*(C`<button>\*(C'\fR it applies the \f(CW\*(C`disabled="disabled"\*(C'\fR attribute.
.PP
\fIExamples\fR
.IX Subsection "Examples"
.PP
.Vb 1
\&    %= button \*(AqThe example 5\*(Aq => large, warning
\&
\&    <button class="btn btn\-lg btn\-warning" type="button">The example 5</button>
.Ve
.PP
.Vb 1
\&    %= button \*(AqThe example 1\*(Aq => [\*(Aqhttp://www.example.com/\*(Aq], small
\&
\&    <a class="btn btn\-default btn\-sm" href="http://www.example.com/">The example 1</a>
.Ve
.PP
.Vb 1
\&    %= submit_button \*(AqSave 2\*(Aq, primary
\&
\&    <button class="btn btn\-primary" type="submit">Save 2</button>
\&
\&    %= button \*(AqLoop\*(Aq, active
\&
\&    <button class="active btn btn\-default" type="button">Loop</button>
\&
\&    %= button \*(AqLoop\*(Aq, block
\&
\&    <button class="block btn btn\-default" type="button">Loop</button>
.Ve
.SS "Button groups"
.IX Subsection "Button groups"
\fISyntax\fR
.IX Subsection "Syntax"
.PP
There are two different syntaxes. One for single-button groups and one for multi-button groups. The difference is that single-button groups can't change
anything concerning the buttongroup (e.g. it can't be \f(CW\*(C`justified\*(C'\fR). If you need to do that there is nothing wrong with having a multi-button
group with just one button.
.PP
.Vb 8
\&    # multi button
\&    <%= buttongroup %has,
\&                    buttons => [
\&                        [ |button|,
\&                          (items => [ |item| ])
\&                        ]
\&                    ]
\&    %>
\&
\&    # single button
\&    <%= buttongroup [ |button|,
\&                      (items => [ |item| ])
\&                    ]
\&    %>
.Ve
.PP
\&\fB\f(CB\*(C`buttons => []\*(C'\fB\fR
.PP
The single-button style is a shortcut for the \f(CW\*(C`buttons\*(C'\fR array reference. It takes ordinary buttons, with two differences: The \f(CW\*(C`items\*(C'\fR array reference, and it is unnecessary to give a button
with \f(CW\*(C`items\*(C'\fR a url.
.Sp
.RS 4
\&\fB\f(CB\*(C`items => [...]\*(C'\fB\fR
.Sp
Giving a button an \f(CW\*(C`items\*(C'\fR array reference consisting of one or many \f(CW\*(C`|item|\*(C'\fR creates a dropdown like submenu. Read more under \*(L"item\*(R".
.RE
.PP
\fIExamples\fR
.IX Subsection "Examples"
.PP
.Vb 7
\&    <%= buttongroup
\&        buttons => [
\&            [\*(AqButton 1\*(Aq],
\&            [\*(AqButton 2\*(Aq],
\&            [\*(AqButton 3\*(Aq],
\&        ]
\&    %>
\&
\&    <div class="btn\-group">
\&        <button class="btn btn\-default" type="button">Button 1</button>
\&        <button class="btn btn\-default" type="button">Button 2</button>
\&        <button class="btn btn\-default" type="button">Button 3</button>
\&    </div>
.Ve
.PP
.Vb 10
\&    <%= buttongroup small,
\&        buttons => [
\&            [\*(AqButton 1\*(Aq],
\&            [\*(AqDropdown 1\*(Aq, caret, items => [
\&                [\*(AqItem 1\*(Aq, [\*(Aqitem1\*(Aq] ],
\&                [\*(AqItem 2\*(Aq, [\*(Aqitem2\*(Aq] ],
\&                [],
\&                [\*(AqItem 3\*(Aq, [\*(Aqitem3\*(Aq] ],
\&            ] ],
\&            [\*(AqButton 2\*(Aq],
\&            [\*(AqButton 3\*(Aq],
\&        ],
\&    %>
\&
\&    <div class="btn\-group btn\-group\-sm">
\&        <button class="btn btn\-default" type="button">Button 1</button>
\&        <div class="btn\-group btn\-group\-sm">
\&            <button class="btn btn\-default dropdown\-toggle" type="button" data\-toggle="dropdown">Dropdown 1 <span class="caret"></span>
\&            </button>
\&            <ul class="dropdown\-menu">
\&                <li><a class="menuitem" href="item1" tabindex="\-1">Item 1</a></li>
\&                <li><a class="menuitem" href="item2" tabindex="\-1">Item 2</a></li>
\&                <li class="divider"></li>
\&                <li><a class="menuitem" href="item3" tabindex="\-1">Item 3</a></li>
\&            </ul>
\&        </div>
\&        <button class="btn btn\-default" type="button">Button 2</button>
\&        <button class="btn btn\-default" type="button">Button 3</button>
\&    </div>
.Ve
.PP
.Vb 10
\&    <%= buttongroup vertical,
\&        buttons => [
\&            [\*(AqButton 1\*(Aq],
\&            [\*(AqDropdown 1\*(Aq, caret, items => [
\&                  [\*(AqItem 1\*(Aq, [\*(Aqitem1\*(Aq] ],
\&                  [\*(AqItem 2\*(Aq, [\*(Aqitem2\*(Aq] ],
\&                  [],
\&                  [\*(AqItem 3\*(Aq, [\*(Aqitem3\*(Aq] ],
\&            ] ],
\&            [\*(AqButton 2\*(Aq],
\&            [\*(AqButton 3\*(Aq],
\&        ],
\&    %>
\&
\&    <div class="btn\-group\-vertical">
\&        <button class="btn btn\-default" type="button">Button 1</button>
\&        <div class="btn\-group">
\&            <button class="btn btn\-default dropdown\-toggle" type="button" data\-toggle="dropdown">Dropdown 1 <span class="caret"></span>
\&            </button>
\&            <ul class="dropdown\-menu">
\&                <li><a class="menuitem" href="item1" tabindex="\-1">Item 1</a></li>
\&                <li><a class="menuitem" href="item2" tabindex="\-1">Item 2</a></li>
\&                <li class="divider"></li>
\&                <li><a class="menuitem" href="item3" tabindex="\-1">Item 3</a></li>
\&            </ul>
\&        </div>
\&        <button class="btn btn\-default" type="button">Button 2</button>
\&        <button class="btn btn\-default" type="button">Button 3</button>
\&    </div>
.Ve
.PP
.Vb 12
\&    <%= buttongroup justified,
\&        buttons => [
\&            [\*(AqLink 1\*(Aq, [\*(Aqhttp://www.example.com/\*(Aq] ],
\&            [\*(AqLink 2\*(Aq, [\*(Aqhttp://www.example.com/\*(Aq] ],
\&            [\*(AqDropup 1\*(Aq, caret, dropup, items => [
\&                [\*(AqItem 1\*(Aq, [\*(Aqitem1\*(Aq] ],
\&                [\*(AqItem 2\*(Aq, [\*(Aqitem2\*(Aq] ],
\&                [],
\&                [\*(AqItem 3\*(Aq, [\*(Aqitem3\*(Aq] ],
\&            ] ],
\&        ]
\&    %>
\&
\&    <div class="btn\-group btn\-group\-justified">
\&        <a class="btn btn\-default" href="http://www.example.com/">Link 1</a>
\&        <a class="btn btn\-default" href="http://www.example.com/">Link 2</a>
\&        <div class="btn\-group dropup">
\&            <button class="btn btn\-default dropdown\-toggle" type="button" data\-toggle="dropdown">Dropup 1 <span class="caret"></span>
\&            </button>
\&            <ul class="dropdown\-menu">
\&                <li><a class="menuitem" href="item1" tabindex="\-1">Item 1</a></li>
\&                <li><a class="menuitem" href="item2" tabindex="\-1">Item 2</a></li>
\&                <li class="divider"></li>
\&                <li><a class="menuitem" href="item3" tabindex="\-1">Item 3</a></li>
\&            </ul>
\&        </div>
\&    </div>
.Ve
.PP
.Vb 11
\&    <%= buttongroup
\&        buttons => [
\&            [\*(AqLink 1\*(Aq, [\*(Aqhttp://www.example.com/\*(Aq] ],
\&            [undef, caret, items => [
\&                [\*(AqItem 1\*(Aq, [\*(Aqitem1\*(Aq] ],
\&                [\*(AqItem 2\*(Aq, [\*(Aqitem2\*(Aq] ],
\&                [],
\&                [\*(AqItem 3\*(Aq, [\*(Aqitem3\*(Aq] ],
\&            ] ],
\&        ]
\&    %>
\&
\&    <div class="btn\-group">
\&        <a class="btn btn\-default" href="http://www.example.com/">Link 1</a>
\&        <div class="btn\-group">
\&            <button class="btn btn\-default dropdown\-toggle" type="button" data\-toggle="dropdown"><span class="caret"></span>
\&            </button>
\&            <ul class="dropdown\-menu">
\&                <li><a class="menuitem" href="item1" tabindex="\-1">Item 1</a></li>
\&                <li><a class="menuitem" href="item2" tabindex="\-1">Item 2</a></li>
\&                <li class="divider"></li>
\&                <li><a class="menuitem" href="item3" tabindex="\-1">Item 3</a></li>
\&            </ul>
\&        </div>
\&    </div>
.Ve
.PP
.Vb 7
\&    <%= buttongroup [\*(AqDefault\*(Aq, caret, items  => [
\&                        [\*(AqItem 1\*(Aq, [\*(Aqitem1\*(Aq] ],
\&                        [\*(AqItem 2\*(Aq, [\*(Aqitem2\*(Aq] ],
\&                        [],
\&                        [\*(AqItem 3\*(Aq, [\*(Aqitem3\*(Aq] ],
\&                    ] ]
\&    %>
\&
\&    <%= buttongroup [\*(AqBig danger\*(Aq, caret, large, danger, items => [
\&                          [\*(AqItem 1\*(Aq, [\*(Aqitem1\*(Aq] ],
\&                          [\*(AqItem 2\*(Aq, [\*(Aqitem2\*(Aq] ],
\&                          [],
\&                          [\*(AqItem 3\*(Aq, [\*(Aqitem3\*(Aq] ],
\&                    ] ]
\&    %>
\&
\&    <div class="btn\-group">
\&        <button class="btn btn\-default dropdown\-toggle" type="button" data\-toggle="dropdown">Default <span class="caret"></span>
\&        </button>
\&        <ul class="dropdown\-menu">
\&            <li><a class="menuitem" href="item1" tabindex="\-1">Item 1</a></li>
\&            <li><a class="menuitem" href="item2" tabindex="\-1">Item 2</a></li>
\&            <li class="divider"></li>
\&            <li><a class="menuitem" href="item3" tabindex="\-1">Item 3</a></li>
\&        </ul>
\&    </div>
\&
\&    <div class="btn\-group">
\&        <button class="btn btn\-danger btn\-lg dropdown\-toggle" type="button" data\-toggle="dropdown">Big danger <span class="caret"></span>
\&        </button>
\&        <ul class="dropdown\-menu">
\&            <li><a class="menuitem" href="item1" tabindex="\-1">Item 1</a></li>
\&            <li><a class="menuitem" href="item2" tabindex="\-1">Item 2</a></li>
\&            <li class="divider"></li>
\&            <li><a class="menuitem" href="item3" tabindex="\-1">Item 3</a></li>
\&        </ul>
\&    </div>
.Ve
.SS "Button toolbars"
.IX Subsection "Button toolbars"
\fISyntax\fR
.IX Subsection "Syntax"
.PP
.Vb 5
\&    <%= toolbar %toolbar_has,
\&                groups => [
\&                    { |button_group| }
\&                ]
\&    %>
.Ve
.PP
\&\fB\f(CB\*(C`groups => [ { |button_group| } ]\*(C'\fB\fR
.PP
A mandatory array reference of button groups.
.PP
\fIExamples\fR
.IX Subsection "Examples"
.PP
.Vb 10
\&    <%= toolbar id => \*(Aqmy\-toolbar\*(Aq,
\&                groups => [
\&                    { buttons => [
\&                        [\*(AqButton 1\*(Aq],
\&                        [\*(AqButton 2\*(Aq],
\&                        [\*(AqButton 3\*(Aq],
\&                      ],
\&                    },
\&                    { buttons => [
\&                        [\*(AqButton 4\*(Aq, primary],
\&                        [\*(AqButton 5\*(Aq],
\&                        [\*(AqButton 6\*(Aq],
\&                      ],
\&                    },
\&                ]
\&    %>
\&
\&    <div class="btn\-toolbar" id="my\-toolbar">
\&        <div class="btn\-group">
\&            <button class="btn btn\-default" type="button">Button 1</button>
\&            <button class="btn btn\-default" type="button">Button 2</button>
\&            <button class="btn btn\-default" type="button">Button 3</button>
\&        </div>
\&        <div class="btn\-group">
\&            <button class="btn btn\-primary" type="button">Button 4</button>
\&            <button class="btn btn\-default" type="button">Button 5</button>
\&            <button class="btn btn\-default" type="button">Button 6</button>
\&        </div>
\&    </div>
.Ve
.SS "Context menus"
.IX Subsection "Context menus"
Context menus are a slight variation on dropdowns, where the button or other thing that opens the menu isn't part of the menu, such as menus that
opens on right click. The context menu is created without the <div class=\*(L"dropdown\*(R"></div> wrapper, so for it to show up at the right place its
position must be set using either \s-1CSS\s0 or Javascript.
.PP
\fISyntax\fR
.IX Subsection "Syntax"
.PP
.Vb 1
\&    <%= context_menu %has, items  => [ |item| ] %>
.Ve
.PP
\&\fB\f(CB\*(C`items\*(C'\fB\fR
.PP
Mandatory array reference consisting of one or many \f(CW\*(C`|item|\*(C'\fR. Read more under \*(L"item\*(R".
.PP
\fIExamples\fR
.IX Subsection "Examples"
.PP
.Vb 7
\&        <%= context_menu id => \*(Aqmy\-context\-menu\*(Aq, items => [
\&                [\*(AqItem 1\*(Aq, [\*(Aqitem1\*(Aq] ],
\&                [\*(AqItem 2\*(Aq, [\*(Aqitem2\*(Aq] ],
\&                [],
\&                [\*(AqItem 3\*(Aq, [\*(Aqitem3\*(Aq] ]
\&             ] %>
\&    </div>
\&
\&    <ul class="dropdown\-menu" id="my\-context\-menu">
\&        <li><a class="menuitem" href="item1" tabindex="\-1">Item 1</a></li>
\&        <li><a class="menuitem" href="item2" tabindex="\-1">Item 2</a></li>
\&        <li class="divider"></li>
\&        <li><a class="menuitem" href="item3" tabindex="\-1">Item 3</a></li>
\&    </ul>
.Ve
.SS "Dropdowns"
.IX Subsection "Dropdowns"
\fISyntax\fR
.IX Subsection "Syntax"
.PP
.Vb 3
\&    <%= dropdown  %has,
\&                  [ |button|, items  => [ |item| ]
\&                  ]
.Ve
.PP
\&\fB\f(CB\*(C`[ |button| ]\*(C'\fB\fR
.PP
Mandatory array reference. It takes an ordinary button, with two differences: The \f(CW\*(C`items\*(C'\fR array reference, and it is unnecessary to give a button
with \f(CW\*(C`items\*(C'\fR a url.
.Sp
.RS 4
\&\fB\f(CB\*(C`items\*(C'\fB\fR
.Sp
Mandatory array reference consisting of one or many \f(CW\*(C`|item|\*(C'\fR. Read more under \*(L"item\*(R".
.RE
.PP
\&\fBAvailable shortcuts\fR
.PP
\&\f(CW\*(C`caret\*(C'\fR adds a \f(CW\*(C`<span class="caret"></span<>\*(C'\fR element on the button.
.PP
\fIExamples\fR
.IX Subsection "Examples"
.PP
.Vb 9
\&    <div class="text\-right">
\&        <%= dropdown
\&             [\*(AqDropdown 1\*(Aq, id => \*(Aqa_custom_id\*(Aq, right, items => [
\&                [\*(AqItem 1\*(Aq, [\*(Aqitem1\*(Aq] ],
\&                [\*(AqItem 2\*(Aq, [\*(Aqitem2\*(Aq] ],
\&                [],
\&                [\*(AqItem 3\*(Aq, [\*(Aqitem3\*(Aq] ]
\&             ] ] %>
\&    </div>
\&
\&    <div class="text\-right">
\&        <div class="dropdown">
\&            <button class="btn btn\-default dropdown\-toggle" type="button" id="a_custom_id" data\-toggle="dropdown">Dropdown 1</button>
\&            <ul class="dropdown\-menu dropdown\-menu\-right">
\&                <li><a class="menuitem" href="item1" tabindex="\-1">Item 1</a></li>
\&                <li><a class="menuitem" href="item2" tabindex="\-1">Item 2</a></li>
\&                <li class="divider"></li>
\&                <li><a class="menuitem" href="item3" tabindex="\-1">Item 3</a></li>
\&            </ul>
\&        </div>
\&    </div>
.Ve
.PP
.Vb 11
\&    <%= dropdown
\&         [\*(AqDropdown 2\*(Aq, caret, large, primary, items => [
\&            [\*(AqItem 1\*(Aq, [\*(Aqitem1\*(Aq], data => { attr => 2 } ],
\&            [\*(AqItem 2\*(Aq, [\*(Aqitem2\*(Aq], disabled, data => { attr => 4 } ],
\&            [],
\&            [\*(AqItem 3\*(Aq, [\*(Aqitem3\*(Aq], data => { attr => 7 } ],
\&            [],
\&            [\*(AqItem 4\*(Aq, [\*(Aqitem4\*(Aq], tabindex => 4 ],
\&            \*(AqThis is a header\*(Aq,
\&            [\*(AqItem 5\*(Aq, [\*(Aqitem5\*(Aq] ],
\&         ] ] %>
\&
\&    <div class="dropdown">
\&        <button class="btn btn\-lg btn\-primary dropdown\-toggle" type="button" data\-toggle="dropdown">Dropdown 2 <span class="caret"></span></button>
\&        <ul class="dropdown\-menu">
\&            <li><a class="menuitem" href="item1" tabindex="\-1" data\-attr="2">Item 1</a></li>
\&            <li class="disabled"><a class="menuitem" href="item2" tabindex="\-1" data\-attr="4">Item 2</a></li>
\&            <li class="divider"></li>
\&            <li><a class="menuitem" href="item3" tabindex="\-1" data\-attr="7">Item 3</a></li>
\&            <li class="divider"></li>
\&            <li><a class="menuitem" href="item4" tabindex="4">Item 4</a></li>
\&            <li class="dropdown\-header">This is a header</li>
\&            <li><a class="menuitem" href="item5" tabindex="\-1">Item 5</a></li>
\&        </ul>
\&    </div>
.Ve
.SS "Form groups"
.IX Subsection "Form groups"
Bootstrap documentation <http://getbootstrap.com/css/#forms>
.PP
\fISyntax\fR
.IX Subsection "Syntax"
.PP
.Vb 8
\&    <%= formgroup ($labeltext,)
\&                   %formgroup_has,
\&                  (cols => { $size => [ $label_columns, $input_columns ], (...) })
\&                   $fieldtype => [
\&                       $input_name,
\&                      ($input_value,)
\&                       %input_has,
\&                  ]
\&
\&    %>
\&
\&    # The $labeltext can also be given in the body
\&    %= formgroup <as above>, begin
\&        $labeltext
\&    %  end
.Ve
.PP
\&\fB\f(CB$labeltext\fB\fR
.PP
Optional. It is either the first argument, or placed in the body. It creates a \f(CW\*(C`label\*(C'\fR element before the \f(CW\*(C`input\*(C'\fR.
.PP
\&\fB\f(CB\*(C`cols\*(C'\fB\fR
.PP
Optional. It is only used when the \f(CW\*(C`form\*(C'\fR is a \f(CW\*(C`.form\-horizontal\*(C'\fR. You can defined the widths for one or more or all of the sizes. See examples.
.Sp
.RS 4
\&\fB\f(CB$size\fB\fR
.Sp
Mandatory. It is one of \f(CW\*(C`xsmall\*(C'\fR, \f(CW\*(C`small\*(C'\fR, \f(CW\*(C`medium\*(C'\fR or \f(CW\*(C`large\*(C'\fR. \f(CW$size\fR takes a two item array reference.
.Sp
.RS 4
\&\fB\f(CB$label_columns\fB\fR
.Sp
Mandatory. The number of columns that should be used by the label for that size of screen. Applies \f(CW\*(C`.col\-$size\-$label_columns\*(C'\fR on the label.
.Sp
\&\fB\f(CB$input_columns\fB\fR
.Sp
Mandatory. The number of columns that should be used by the input for that size of screen. Applies \f(CW\*(C`.col\-$size\-$input_columns\*(C'\fR around the input.
.RE
.RE
.RS 4
.RE
.PP
\&\fB\f(CB$fieldtype\fB\fR
.PP
Mandatory. Is one of \f(CW\*(C`text_field\*(C'\fR, \f(CW\*(C`password_field\*(C'\fR, \f(CW\*(C`datetime_field\*(C'\fR, \f(CW\*(C`date_field\*(C'\fR, \f(CW\*(C`month_field\*(C'\fR, \f(CW\*(C`time_field\*(C'\fR, \f(CW\*(C`week_field\*(C'\fR,
\&\f(CW\*(C`number_field\*(C'\fR, \f(CW\*(C`email_field\*(C'\fR, \f(CW\*(C`url_field\*(C'\fR, \f(CW\*(C`search_field\*(C'\fR, \f(CW\*(C`tel_field\*(C'\fR, \f(CW\*(C`color_field\*(C'\fR.
.PP
There can be only one \f(CW$fieldtype\fR per \f(CW\*(C`formgroup\*(C'\fR.
.Sp
.RS 4
\&\fB\f(CB$name\fB\fR
.Sp
Mandatory. It sets both the \f(CW\*(C`id\*(C'\fR and \f(CW\*(C`name\*(C'\fR of the input field. If the \f(CW$name\fR contains dashes then those are translated
into underscores when setting the \f(CW\*(C`name\*(C'\fR. If \f(CW\*(C`id\*(C'\fR exists in \f(CW%input_has\fR then that is used for the \f(CW\*(C`id\*(C'\fR instead.
.Sp
\&\fB\f(CB$input_value\fB\fR
.Sp
Optional. If you prefer you can set \f(CW\*(C`value\*(C'\fR in \f(CW%input_has\fR instead. (But don't do both for the same field.)
.RE
.PP
\fIExamples\fR
.IX Subsection "Examples"
.PP
.Vb 1
\&    %= formgroup \*(AqText test 1\*(Aq, text_field => [\*(Aqtest_text\*(Aq]
\&
\&    <div class="form\-group">
\&        <label class="control\-label" for="test_text">Text test 1</label>
\&        <input class="form\-control" id="test_text" name="test_text" type="text" />
\&    </div>
.Ve
.PP
.Vb 1
\&    %= formgroup \*(AqText test 4\*(Aq, text_field => [\*(Aqtest\-text\*(Aq, large]
\&
\&    <div class="form\-group">
\&        <label class="control\-label" for="test\-text">Text test 4</label>
\&        <input class="form\-control input\-lg" id="test\-text" name="test_text" type="text" />
\&    </div>
.Ve
.PP
.Vb 1
\&    %= formgroup \*(AqText test 5\*(Aq, text_field => [\*(Aqtest_text\*(Aq, \*(Aq200\*(Aq ]
\&
\&    <div class="form\-group">
\&        <label class="control\-label" for="test_text">Text test 5</label>
\&        <input class="form\-control" id="test_text" name="test_text" type="text" value="200" />
\&    </div>
.Ve
.PP
.Vb 3
\&    <form class="form\-horizontal">
\&        %= formgroup \*(AqText test 6\*(Aq, text_field => [\*(Aqtest_text\*(Aq], large, cols => { small => [2, 10] }
\&    </form>
\&
\&    <form class="form\-horizontal">
\&        <div class="form\-group form\-group\-lg">
\&            <label class="control\-label col\-sm\-2" for="test_text">Text test 6</label>
\&            <div class="col\-sm\-10">
\&                <input class="form\-control" id="test_text" name="test_text" type="text">
\&            </div>
\&        </div>
\&    </form>
.Ve
.PP
.Vb 1
\&    %= formgroup \*(AqText test 8\*(Aq, text_field => [\*(Aqtest_text\*(Aq], cols => { medium => [2, 10], small => [4, 8] }
\&
\&    <div class="form\-group">
\&        <label class="control\-label col\-md\-2 col\-sm\-4" for="test_text">Text test 8</label>
\&        <div class="col\-md\-10 col\-sm\-8">
\&            <input class="form\-control" id="test_text" name="test_text" type="text" />
\&        </div>
\&    </div>
.Ve
.SS "Icons"
.IX Subsection "Icons"
This helper needs to be activated separately, see options below.
.PP
\fISyntax\fR
.IX Subsection "Syntax"
.PP
.Vb 1
\&    %= icon $icon_name
.Ve
.PP
\&\fB\f(CB$icon_name\fB\fR
.PP
Mandatory. The specific icon you wish to create. Possible values depends on your icon pack.
.PP
\fIExamples\fR
.IX Subsection "Examples"
.PP
.Vb 2
\&    <%= icon \*(Aqcopyright\-mark\*(Aq %>
\&    %= icon \*(Aqsort\-by\-attributes\-alt\*(Aq
\&
\&    <span class="glyphicon glyphicon\-copyright\-mark"></span>
\&    <span class="glyphicon glyphicon\-sort\-by\-attributes\-alt"></span>
.Ve
.SS "Input groups"
.IX Subsection "Input groups"
\fISyntax\fR
.IX Subsection "Syntax"
.PP
.Vb 5
\&    <%= input %has,
\&              (prepend => ...,)
\&              input => { |input_field| },
\&              (append => ...)
\&    %>
.Ve
.PP
\&\fB\f(CB\*(C`input => { }\*(C'\fB\fR
.PP
Mandatory hash reference. The content is handed off to input_tag in Mojolicious::Plugin::TagHelpers.
.PP
\&\fB\f(CB\*(C`prepend\*(C'\fB and \f(CB\*(C`append\*(C'\fB\fR
.PP
Both are optional, but input groups don't make sense if neither is present. They take the same arguments, but there are a few to choose from:
.Sp
.RS 4
\&\fB\f(CB\*(C`prepend => $string\*(C'\fB\fR
.Sp
\&\fB\f(CB\*(C`prepend => { check_box => [ |check_box| ] }\*(C'\fB\fR
.Sp
Creates a checkbox by giving its content to check_box in Mojolicious::Plugin::TagHelpers.
.Sp
\&\fB\f(CB\*(C`prepend => { radio_button => [ |radio_button| ] }\*(C'\fB\fR
.Sp
Creates a radiobutton by giving its content to radio_button in Mojolicious::Plugin::TagHelpers.
.Sp
\&\fB\f(CB\*(C`prepend => { buttongroup => { |buttongroup| }\*(C'\fB\fR
.Sp
Creates a single button buttongroup. See button groups for details.
.Sp
\&\fB\f(CB\*(C`prepend => { buttongroup => [ |buttongroup| ]\*(C'\fB\fR
.Sp
Creates a multi button buttongroup. See button groups for details.
.RE
.PP
\fIExamples\fR
.IX Subsection "Examples"
.PP
.Vb 3
\&    <%= input input => { text_field => [\*(Aqusername\*(Aq] },
\&              prepend => { check_box => [\*(Aqagreed\*(Aq] }
\&    %>
\&
\&    <div class="input\-group">
\&        <span class="input\-group\-addon"><input name="agreed" type="checkbox" /></span>
\&        <input class="form\-control" id="username" type="text" name="username" />
\&    </div>
.Ve
.PP
.Vb 5
\&    <%= input large,
\&              prepend => { radio_button => [\*(Aqyes\*(Aq] },
\&              input => { text_field => [\*(Aqusername\*(Aq] },
\&              append => \*(Aq@\*(Aq
\&    %>
\&
\&    <div class="input\-group input\-group\-lg">
\&        <span class="input\-group\-addon"><input name="yes" type="radio" /></span>
\&        <input class="form\-control" id="username" type="text" name="username" />
\&        <span class="input\-group\-addon">@</span>
\&    </div>
.Ve
.PP
.Vb 3
\&    <%= input input => { text_field => [\*(Aqusername\*(Aq] },
\&              append => { button => [\*(AqClick me!\*(Aq] },
\&    %>
\&
\&    <div class="input\-group">
\&        <input class="form\-control" id="username" type="text" name="username" />
\&        <span class="input\-group\-btn"><button class="btn btn\-default" type="button">Click me!</button></span>
\&    </div>
.Ve
.PP
.Vb 9
\&    <%= input input  => { text_field => [\*(Aqusername\*(Aq] },
\&              append => { buttongroup => [[\*(AqThe button\*(Aq, caret, right, items => [
\&                                  [\*(AqItem 1\*(Aq, [\*(Aqitem1\*(Aq] ],
\&                                  [\*(AqItem 2\*(Aq, [\*(Aqitem2\*(Aq] ],
\&                                  [],
\&                                  [\*(AqItem 3\*(Aq, [\*(Aqitem3\*(Aq] ],
\&                              ] ] ]
\&                        }
\&    %>
\&
\&    <div class="input\-group">
\&        <input class="form\-control" id="username" type="text" name="username" />
\&        <div class="input\-group\-btn">
\&            <button class="btn btn\-default dropdown\-toggle" type="button" data\-toggle="dropdown">The button <span class="caret"></span>
\&            </button>
\&            <ul class="dropdown\-menu dropdown\-menu\-right">
\&                <li><a class="menuitem" href="item1" tabindex="\-1">Item 1</a></li>
\&                <li><a class="menuitem" href="item2" tabindex="\-1">Item 2</a></li>
\&                <li class="divider"></li>
\&                <li><a class="menuitem" href="item3" tabindex="\-1">Item 3</a></li>
\&            </ul>
\&        </div>
\&    </div>
.Ve
.PP
.Vb 10
\&    <%= input input   => { text_field => [\*(Aqusername\*(Aq] },
\&              prepend => { buttongroup => [
\&                              buttons => [
\&                                [\*(AqLink 1\*(Aq, [\*(Aqhttp://www.example.com/\*(Aq] ],
\&                                [undef, caret, items => [
\&                                      [\*(AqItem 1\*(Aq, [\*(Aqitem1\*(Aq] ],
\&                                      [\*(AqItem 2\*(Aq, [\*(Aqitem2\*(Aq] ],
\&                                      [],
\&                                      [\*(AqItem 3\*(Aq, [\*(Aqitem3\*(Aq] ],
\&                                  ],
\&                               ],
\&                            ],
\&                         ],
\&                      },
\&    %>
\&
\&    <div class="input\-group">
\&        <div class="input\-group\-btn">
\&            <a class="btn btn\-default" href="http://www.example.com/">Link 1</a>
\&            <div class="btn\-group">
\&                <button class="btn btn\-default dropdown\-toggle" type="button" data\-toggle="dropdown"><span class="caret"></span>
\&                </button>
\&                <ul class="dropdown\-menu">
\&                    <li><a class="menuitem" href="item1" tabindex="\-1">Item 1</a></li>
\&                    <li><a class="menuitem" href="item2" tabindex="\-1">Item 2</a></li>
\&                    <li class="divider"></li>
\&                    <li><a class="menuitem" href="item3" tabindex="\-1">Item 3</a></li>
\&                </ul>
\&            </div>
\&        </div>
\&        <input class="form\-control" id="username" type="text" name="username" />
\&    </div>
.Ve
.SS "Navs"
.IX Subsection "Navs"
\fISyntax\fR
.IX Subsection "Syntax"
.PP
.Vb 5
\&    <%= nav %has,
\&            $type => [ |link|,
\&                      (items => [ |item| ])
\&                    ]
\&    %>
.Ve
.PP
\&\f(CW\*(C`Navs\*(C'\fR are syntactically similar to button groups.
.PP
\&\fB\f(CB\*(C`$type => [...]\*(C'\fB\fR
.PP
Mandatory. \f(CW$type\fR is either \f(CW\*(C`pills\*(C'\fR or \f(CW\*(C`tabs\*(C'\fR (or \f(CW\*(C`items\*(C'\fR if the \f(CW\*(C`nav\*(C'\fR is in a navbar) and applies the adequate class to the surrounding \f(CW\*(C`ul\*(C'\fR.
.Sp
.RS 4
\&\fB\f(CB\*(C`items => [ |item| ]\*(C'\fB\fR
.Sp
If present does the same as \f(CW\*(C`items\*(C'\fR in dropdown. Also see \*(L"item\*(R".
.RE
.PP
\fIExamples\fR
.IX Subsection "Examples"
.PP
.Vb 7
\&    <%= nav pills => [
\&                [\*(AqItem 1\*(Aq, [\*(Aq#\*(Aq] ],
\&                [\*(AqItem 2\*(Aq, [\*(Aq#\*(Aq], active ],
\&                [\*(AqItem 3\*(Aq, [\*(Aq#\*(Aq] ],
\&                [\*(AqItem 4\*(Aq, [\*(Aq#\*(Aq], disabled ],
\&            ]
\&    %>
\&
\&    <ul class="nav nav\-pills">
\&        <li><a href="#">Item 1</a></li>
\&        <li class="active"><a href="#">Item 2</a></li>
\&        <li><a href="#">Item 3</a></li>
\&        <li class="disabled"><a href="#">Item 4</a></li>
\&    </ul>
.Ve
.PP
.Vb 10
\&    <%= nav justified, id => \*(Aqmy\-nav\*(Aq, tabs => [
\&                [\*(AqItem 1\*(Aq, [\*(Aq#\*(Aq] ],
\&                [\*(AqItem 2\*(Aq, [\*(Aq#\*(Aq], active ],
\&                [\*(AqItem 3\*(Aq, [\*(Aq#\*(Aq] ],
\&                [\*(AqDropdown\*(Aq, [\*(Aq#\*(Aq], caret, items => [
\&                        [\*(AqThere are...\*(Aq, [\*(Aq#\*(Aq] ],
\&                        [\*(Aq...three...\*(Aq, [\*(Aq#\*(Aq] ],
\&                        [],
\&                        [\*(Aq...choices\*(Aq, [\*(Aq#\*(Aq] ],
\&                    ],
\&                ],
\&            ]
\&    %>
\&
\&    <ul class="nav nav\-justified nav\-tabs" id="my\-nav">
\&        <li><a href="#">Item 1</a></li>
\&        <li class="active"><a href="#">Item 2</a></li>
\&        <li><a href="#">Item 3</a></li>
\&        <li class="dropdown">
\&            <a class="dropdown\-toggle" data\-toggle="dropdown" href="#">Dropdown <span class="caret"></span></a>
\&            <ul class="dropdown\-menu">
\&                <li><a href="#">There are...</a></li>
\&                <li><a href="#">...three...</a></li>
\&                <li class="divider"></li>
\&                <li><a href="#">...choices</a></li>
\&            </ul>
\&        </li>
\&    </ul>
.Ve
.SS "Navbars"
.IX Subsection "Navbars"
\fISyntax\fR
.IX Subsection "Syntax"
.PP
.Vb 10
\&    navbar (inverse,) (container => \*(Aqnormal\*(Aq,) header => [ |link|, %navbar_has ],
\&                 form => [
\&                     [ [ $url ], %form_has ],
\&                     [
\&                         formgroup => [ |formgroup| ],
\&                         input => [ |input| ],
\&                         button => [ |button| ],
\&                         submit_button => [ |submit_button| ],
\&                      ]
\&                  ],
\&                  button => [ |button| ],
\&                  nav => [ |nav| ]
\&                  p => [ $text, %p_has ]
.Ve
.PP
\&\f(CW\*(C`Navbars\*(C'\fR are complex structures. They take the following arguments:
.PP
\&\fB\f(CB\*(C`inverse\*(C'\fB\fR
.PP
The \f(CW\*(C`inverse\*(C'\fR shortcut is placed outside the \f(CW%navbar_has\fR. It applies the \f(CW\*(C`.navbar\-inverse\*(C'\fR class.
.PP
\&\fB\f(CB\*(C`container\*(C'\fB\fR
.PP
Default: \f(CW\*(C`fluid\*(C'\fR
.PP
Allowed values: \f(CW\*(C`fluid\*(C'\fR, \f(CW\*(C`normal\*(C'\fR
.PP
Sets the class on the container inside the navbar.
.PP
\&\fB\f(CB\*(C`header => [ |link|, %navbar_has ]\*(C'\fB\fR
.PP
\&\f(CW\*(C`header\*(C'\fR creates a \f(CW\*(C`navbar\-header\*(C'\fR. There can be only one \f(CW\*(C`header\*(C'\fR.
.Sp
.RS 4
\&\fB\f(CB\*(C`|link|\*(C'\fB\fR
.Sp
Creates the \f(CW\*(C`brand\*(C'\fR. Set the link text to \f(CW\*(C`undef\*(C'\fR if you don't want a brand.
.Sp
\&\fB\f(CB%navbar_has\fB\fR
.Sp
Can take the following extra arguments:
.Sp
.RS 4
The \f(CW\*(C`hamburger\*(C'\fR shortcut creates the menu button for collapsed navbars.
.Sp
\&\fB\f(CB\*(C`toggler => $collapse_id\*(C'\fB\fR
.Sp
This sets the \f(CW\*(C`id\*(C'\fR on the collapsing part of the navbar. Set it if you need to reference that part of the navbar, otherwise an id will be generated.
.RE
.RE
.RS 4
.RE
.PP
The following arguments can appear any number of times, and is rendered in order.
.Sp
.RS 4
\&\fB\f(CB\*(C`button => [ |button| ]\*(C'\fB\fR
.Sp
Creates a button.
.Sp
\&\fB\f(CB\*(C`nav => [ |nav| ]\*(C'\fB\fR
.Sp
Creates a nav. Use \f(CW\*(C`items\*(C'\fR if you need to create submenus.
.Sp
\&\fB\f(CB\*(C`p => [ $text, %p_has ]\*(C'\fB\fR
.Sp
Creates a \f(CW\*(C`<p>$text</p>\*(C'\fR tag.
.Sp
\&\fB\f(CB\*(C`form => [...]\*(C'\fB\fR
.Sp
Creates a \f(CW\*(C`form\*(C'\fR, by leveraging form_for in Mojolicious::Plugin::TagHelpers.
.Sp
.RS 4
\&\fB\f(CB\*(C`[ [ $url ], %form_has ]\*(C'\fB\fR
.Sp
Mandatory array reference. This sets up the \f(CW\*(C`form\*(C'\fR tag.
.Sp
\&\fB\f(CB\*(C`[...]\*(C'\fB\fR
.Sp
Mandatory array reference. The second argument to \f(CW\*(C`form\*(C'\fR can take different types (any number of times, rendered in order):
.Sp
.RS 4
\&\fB\f(CB\*(C`formgroup => [ |formgroup| ]\*(C'\fB\fR
.Sp
\&\fB\f(CB\*(C`input => [ |input| ]\*(C'\fB\fR
.Sp
\&\fB\f(CB\*(C`button => [ |button| ]\*(C'\fB\fR
.Sp
\&\fB\f(CB\*(C`submit_button => [ |submit_button| ]\*(C'\fB\fR
.Sp
Creates form groups, input groups, buttons and submit_buttons
.RE
.RE
.RS 4
.RE
.RE
.RS 4
.RE
.PP
\fIExamples\fR
.IX Subsection "Examples"
.PP
.Vb 10
\&    <%= navbar header => [\*(AqThe brand\*(Aq, [\*(Aq#\*(Aq], hamburger, toggler => \*(Aqbs\-example\-navbar\-collapse\-2\*(Aq],
\&               nav => [ items => [
\&                       [\*(AqLink\*(Aq, [\*(Aq#\*(Aq] ],
\&                       [\*(AqAnother link\*(Aq, [\*(Aq#\*(Aq], active ],
\&                       [\*(AqMenu\*(Aq, [\*(Aq#\*(Aq], caret, items => [
\&                           [\*(AqChoice 1\*(Aq, [\*(Aq#\*(Aq] ],
\&                           [\*(AqChoice 2\*(Aq, [\*(Aq#\*(Aq] ],
\&                           [],
\&                           [\*(AqChoice 3\*(Aq, [\*(Aq#\*(Aq] ],
\&                       ] ],
\&                   ]
\&               ]
\&    %>
\&
\&    <nav class="navbar navbar\-default">
\&        <div class="container\-fluid">
\&            <div class="navbar\-header">
\&                <button class="collapsed navbar\-toggle" data\-target="#bs\-example\-navbar\-collapse\-2" data\-toggle="collapse" type="button">
\&                    <span class="icon\-bar"></span>
\&                    <span class="icon\-bar"></span>
\&                    <span class="icon\-bar"></span>
\&                </button>
\&                <a class="navbar\-brand" href="#">The brand</a>
\&            </div>
\&            <div class="collapse navbar\-collapse" id="bs\-example\-navbar\-collapse\-2">
\&                <ul class="nav navbar\-nav">
\&                    <li><a href="#">Link</a></li>
\&                    <li class="active"><a href="#">Another link</a></li>
\&                    <li class="dropdown">
\&                        <a class="dropdown\-toggle" data\-toggle="dropdown" href="#">Menu <span class="caret"></span></a>
\&                        <ul class="dropdown\-menu">
\&                            <li><a href="#">Choice 1</a></li>
\&                            <li><a href="#">Choice 2</a></li>
\&                            <li class="divider"></li>
\&                            <li><a href="#">Choice 3</a></li>
\&                        </ul>
\&                    </li>
\&                </ul>
\&            </div>
\&        </div>
\&    </nav>
.Ve
.PP
.Vb 10
\&    <%= navbar header => [\*(AqBrand\*(Aq, [\*(Aq#\*(Aq], hamburger, toggler => \*(Aqcollapse\-4124\*(Aq],
\&               nav => [ items => [
\&                       [\*(AqLink\*(Aq, [\*(Aq#\*(Aq], active ],
\&                       [\*(AqLink\*(Aq, [\*(Aq#\*(Aq] ],
\&                       [\*(AqDropdown\*(Aq, [\*(Aq#\*(Aq], caret, items => [
\&                           [\*(AqAction\*(Aq, [\*(Aq#\*(Aq] ],
\&                           [\*(AqAnother action\*(Aq, [\*(Aq#\*(Aq] ],
\&                           [\*(AqSomething else here\*(Aq, [\*(Aq#\*(Aq] ],
\&                           [],
\&                           [\*(AqSeparated link\*(Aq, [\*(Aq#\*(Aq] ],
\&                           [],
\&                           [\*(AqOne more separated link\*(Aq, [\*(Aq#\*(Aq] ],
\&                       ] ] ],
\&                ],
\&                form => [
\&                    [[\*(Aq/login\*(Aq], method => \*(Aqpost\*(Aq, left],
\&                    [
\&                        formgroup => [
\&                            text_field => [\*(Aqthe\-search\*(Aq, placeholder => \*(AqSearch\*(Aq ],
\&                        ],
\&                        submit_button => [\*(AqSubmit\*(Aq],
\&                    ]
\&                ],
\&                nav => [
\&                    right,
\&                    items => [
\&                        [\*(AqLink\*(Aq, [\*(Aq#\*(Aq] ],
\&                        [\*(AqDropdown\*(Aq, [\*(Aq#\*(Aq], caret, items => [
\&                                [\*(AqAction\*(Aq, [\*(Aq#\*(Aq] ],
\&                                [\*(AqAnother action\*(Aq, [\*(Aq#\*(Aq] ],
\&                                [\*(AqSomething else here\*(Aq, [\*(Aq#\*(Aq] ],
\&                                [],
\&                                [\*(AqSeparated link\*(Aq, [\*(Aq#\*(Aq] ],
\&                            ],
\&                        ]
\&                    ],
\&                ]
\&    %>
\&
\&    <nav class="navbar navbar\-default">
\&        <div class="container\-fluid">
\&            <div class="navbar\-header">
\&                <button type="button" class="collapsed navbar\-toggle" data\-toggle="collapse" data\-target="#collapse\-4124">
\&                    <span class="icon\-bar"></span>
\&                    <span class="icon\-bar"></span>
\&                    <span class="icon\-bar"></span>
\&                </button>
\&                <a class="navbar\-brand" href="#">Brand</a>
\&            </div>
\&            <div class="collapse navbar\-collapse" id="collapse\-4124">
\&                <ul class="nav navbar\-nav">
\&                    <li class="active"><a href="#">Link</a></li>
\&                    <li><a href="#">Link</a></li>
\&                    <li class="dropdown">
\&                        <a class="dropdown\-toggle" data\-toggle="dropdown" href="#">Dropdown <span class="caret"></span></a>
\&                        <ul class="dropdown\-menu">
\&                            <li><a href="#">Action</a></li>
\&                            <li><a href="#">Another action</a></li>
\&                            <li><a href="#">Something else here</a></li>
\&                            <li class="divider"></li>
\&                            <li><a href="#">Separated link</a></li>
\&                            <li class="divider"></li>
\&                            <li><a href="#">One more separated link</a></li>
\&                        </ul>
\&                    </li>
\&                </ul>
\&                <form action="/login" class="navbar\-form navbar\-left" method="post">
\&                    <div class="form\-group">
\&                        <input class="form\-control" id="the\-search" name="the_search" placeholder="Search" type="text" />
\&                    </div>
\&                    <button class="btn btn\-default" type="submit">Submit</button>
\&                </form>
\&                <ul class="nav navbar\-nav navbar\-right">
\&                    <li><a href="#">Link</a></li>
\&                    <li class="dropdown">
\&                        <a class="dropdown\-toggle" data\-toggle="dropdown" href="#">Dropdown <span class="caret"></span></a>
\&                        <ul class="dropdown\-menu">
\&                            <li><a href="#">Action</a></li>
\&                            <li><a href="#">Another action</a></li>
\&                            <li><a href="#">Something else here</a></li>
\&                            <li class="divider"></li>
\&                            <li><a href="#">Separated link</a></li>
\&                        </ul>
\&                    </li>
\&                </ul>
\&            </div>
\&        </div>
\&    </nav>
.Ve
.SS "Panels"
.IX Subsection "Panels"
Bootstrap documentation <http://getbootstrap.com/components/#panels>
.PP
\fISyntax\fR
.IX Subsection "Syntax"
.PP
.Vb 3
\&    %= panel ($title, %has, begin
\&        $body
\&    %  end)
.Ve
.PP
\&\fB\f(CB$title\fB\fR
.PP
Usually mandatory, but can be omitted if there are no other arguments to the \f(CW\*(C`panel\*(C'\fR. Otherwise, if you don't want a title, set it \f(CW\*(C`undef\*(C'\fR.
.PP
\&\fB\f(CB$body\fB\fR
.PP
Optional (but panels are not much use without it). The html inside the \f(CW\*(C`panel\*(C'\fR.
.PP
\fIExamples\fR
.IX Subsection "Examples"
.PP
.Vb 1
\&    %= panel
\&
\&    <div class="panel panel\-default">
\&        <div class="panel\-body">
\&        </div>
\&    </div>
.Ve
.PP
.Vb 3
\&    %= panel undef ,=> begin
\&        <p>A short text.</p>
\&    %  end
\&
\&    <div class="panel panel\-default">
\&        <div class="panel\-body">
\&            <p>A short text.</p>
\&        </div>
\&    </div>
.Ve
.PP
.Vb 3
\&    %= panel \*(AqPanel 5\*(Aq, success, begin
\&        <p>A short text.</p>
\&    %  end
\&
\&    <div class="panel panel\-success">
\&        <div class="panel\-heading">
\&            <h3 class="panel\-title">Panel 5</h3>
\&        </div>
\&        <div class="panel\-body">
\&            <p>A short text.</p>
\&        </div>
\&    </div>
.Ve
.SS "Tables"
.IX Subsection "Tables"
Bootstrap documentation <http://getbootstrap.com/css/#tables>
.PP
\fISyntax\fR
.IX Subsection "Syntax"
.PP
.Vb 3
\&    %= table ($title,) %table_has, panel => { %panel_has }, begin
\&           $body
\&    %  end
.Ve
.PP
\&\fB\f(CB$title\fB\fR
.PP
Optional. If set the table will be wrapped in a panel, and the table replaces the body in the panel.
.PP
\&\fB\f(CB$body\fB\fR
.PP
Mandatory. \f(CW\*(C`thead\*(C'\fR, \f(CW\*(C`td\*(C'\fR and so on.
.PP
\&\fB\f(CB\*(C`panel => { %panel_has }\*(C'\fB\fR
.PP
Optional if the table has a \f(CW$title\fR, otherwise without use.
.PP
\fIExamples\fR
.IX Subsection "Examples"
.PP
.Vb 10
\&    <%= table begin %>
\&        <thead>
\&            <tr>
\&                <th>th 1</th>
\&                <th>th 2</th>
\&        </thead>
\&        <tbody>
\&            <tr>
\&                <td>Cell 1</td>
\&                <td>Cell 2</td>
\&            </tr>
\&            <tr>
\&                <td>Cell 1</td>
\&                <td>Cell 2</td>
\&            </tr>
\&        </tbody>
\&    <% end %>
\&
\&    <table class="table">
\&        <thead>
\&            <tr>
\&                <th>th 1</th>
\&                <th>th 2</th>
\&        </thead>
\&        <tbody>
\&            <tr>
\&                <td>Cell 1</td>
\&                <td>Cell 2</td>
\&            </tr>
\&            <tr>
\&                <td>Cell 1</td>
\&                <td>Cell 2</td>
\&            </tr>
\&        </tbody>
\&    </table>
.Ve
.PP
.Vb 10
\&    %= table hover, striped, condensed, begin
\&        <thead>
\&            <tr>
\&                <th>th 1</th>
\&                <th>th 2</th>
\&        </thead>
\&        <tbody>
\&            <tr>
\&                <td>Cell 1</td>
\&                <td>Cell 2</td>
\&            </tr>
\&            <tr>
\&                <td>Cell 1</td>
\&                <td>Cell 2</td>
\&            </tr>
\&        </tbody>
\&    %  end
\&
\&    <table class="table table\-condensed table\-hover table\-striped">
\&        <thead>
\&            <tr>
\&                <th>th 1</th>
\&                <th>th 2</th>
\&        </thead>
\&        <tbody>
\&            <tr>
\&                <td>Cell 1</td>
\&                <td>Cell 2</td>
\&            </tr>
\&            <tr>
\&                <td>Cell 1</td>
\&                <td>Cell 2</td>
\&            </tr>
\&        </tbody>
\&    </table>
.Ve
.PP
.Vb 10
\&    %= table \*(AqHeading Table 4\*(Aq, panel => { success }, condensed, id => \*(Aqthe\-table\*(Aq, begin
\&            <thead>
\&                <tr>
\&                    <th>th 1</th>
\&                    <th>th 2</th>
\&            </thead>
\&            <tbody>
\&                <tr>
\&                    <td>Cell 1</td>
\&                    <td>Cell 2</td>
\&                </tr>
\&                <tr>
\&                    <td>Cell 1</td>
\&                    <td>Cell 2</td>
\&                </tr>
\&            </tbody>
\&    %  end
\&
\&    <div class="panel panel\-success">
\&        <div class="panel\-heading">
\&            <h3 class="panel\-title">Heading Table 4</h3>
\&        </div>
\&        <table class="table table\-condensed" id="the\-table">
\&            <thead>
\&                <tr>
\&                    <th>th 1</th>
\&                    <th>th 2</th>
\&            </thead>
\&            <tbody>
\&                <tr>
\&                    <td>Cell 1</td>
\&                    <td>Cell 2</td>
\&                </tr>
\&                <tr>
\&                    <td>Cell 1</td>
\&                    <td>Cell 2</td>
\&                </tr>
\&            </tbody>
\&        </table>
\&    </div>
.Ve
.SH "OPTIONS"
.IX Header "OPTIONS"
Some options are available:
.PP
.Vb 9
\&    $app\->plugin(\*(AqBootstrapHelpers\*(Aq, {
\&        tag_prefix => \*(Aqbs\*(Aq,
\&        shortcut_prefix => \*(Aqset\*(Aq,
\&        init_shortcuts => 1,
\&        icons => {
\&            class => \*(Aqglyphicon\*(Aq
\&            formatter => \*(Aqglyphicon\-%s\*(Aq,
\&        },
\&    });
.Ve
.SS "tag_prefix"
.IX Subsection "tag_prefix"
Default: \f(CW\*(C`undef\*(C'\fR
.PP
If you want to you change the name of the tag helpers, by applying a prefix. These are not aliases;
by setting a prefix the original names are no longer available. The following rules are used:
.IP "\(bu" 4
If the option is missing, or is \f(CW\*(C`undef\*(C'\fR, there is no prefix.
.IP "\(bu" 4
If the option is set to the empty string, the prefix is \f(CW\*(C`_\*(C'\fR. That is, \f(CW\*(C`panel\*(C'\fR is now used as \f(CW\*(C`_panel\*(C'\fR.
.IP "\(bu" 4
If the option is set to any other string, the prefix is that string. If you set \f(CW\*(C`tag_prefix => \*(Aqbs\*(Aq\*(C'\fR, then \f(CW\*(C`panel\*(C'\fR is now used as \f(CW\*(C`bspanel\*(C'\fR.
.SS "shortcut_prefix"
.IX Subsection "shortcut_prefix"
Default: \f(CW\*(C`undef\*(C'\fR
.PP
This is similar to \f(CW\*(C`tag_prefix\*(C'\fR, but is instead applied to the standalone shortcuts. The same rules applies.
.SS "init_shortcuts"
.IX Subsection "init_shortcuts"
Default: \f(CW1\fR
.PP
If you don't want the standalone shortcuts setup at all, set this option to a defined but false value.
.PP
All functionality is available, but instead of \f(CW\*(C`warning\*(C'\fR you must now write \f(CW\*(C`_\|_warning => 1\*(C'\fR.
.PP
With standalone form turned off, sizes are still only supported in long form: \f(CW\*(C`_\|_xsmall\*(C'\fR, \f(CW\*(C`_\|_small\*(C'\fR, \f(CW\*(C`_\|_medium\*(C'\fR and \f(CW\*(C`_\|_large\*(C'\fR. The Bootstrap abbreviations (\f(CW\*(C`xs\*(C'\fR \- \f(CW\*(C`lg\*(C'\fR) are not available.
.SS "icons"
.IX Subsection "icons"
Default: not set
.PP
By setting these keys you activate the \f(CW\*(C`icon\*(C'\fR helper. You can pick any icon pack that sets one main class and one subclass to create an icon.
.Sp
.RS 4
\&\fB\f(CB\*(C`class\*(C'\fB\fR
.Sp
This is the main icon class. If you use the glyphicon pack, this should be set to 'glyphicon'.
.Sp
\&\fB\f(CB\*(C`formatter\*(C'\fB\fR
.Sp
This creates the specific icon class. If you use the glyphicon pack, this should be set to 'glyphicon\-%s', where the '%s' will be replaced by the icon name you give the \f(CW\*(C`icon\*(C'\fR helper.
.RE
.SH "SOURCE"
.IX Header "SOURCE"
<https://github.com/Csson/p5\-mojolicious\-plugin\-bootstraphelpers>
.SH "HOMEPAGE"
.IX Header "HOMEPAGE"
<https://metacpan.org/release/Mojolicious\-Plugin\-BootstrapHelpers>
.SH "AUTHOR"
.IX Header "AUTHOR"
Erik Carlsson <info@code301.com>
.SH "LICENSE"
.IX Header "LICENSE"
This software is copyright (c) 2016 by Erik Carlsson.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
.PP
Bootstrap itself is (c) Twitter. See their license information <http://getbootstrap.com/getting-started/#license-faqs>.
.PP
Mojolicious::Plugin::BootstrapHelpers is third party software, and is not endorsed by Twitter.

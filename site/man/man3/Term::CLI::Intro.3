.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Term::CLI::Intro 3"
.TH Term::CLI::Intro 3 "2019-11-18" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Term::CLI::Intro \- introduction to Term::CLI class/module structure
.SH "VERSION"
.IX Header "VERSION"
version 0.051007
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This manual entry provides information on the class and module
structure of the Term::CLI(3p) library.
.PP
For an introduction in the usage of this library, including code
examples, see Term::CLI::Tutorial(3p).
.SH "MODULE SUMMARY"
.IX Header "MODULE SUMMARY"
.SS "Language Modules"
.IX Subsection "Language Modules"
.IP "Term::CLI::L10N" 36
.IX Item "Term::CLI::L10N"
Localizations for Term::CLI diagnostics. Defines and exports a
loc function. Based on Locale::Maketext(3p).
.IP "Term::CLI::L10N::en" 36
.IX Item "Term::CLI::L10N::en"
.PD 0
.IP "Term::CLI::L10N::nl" 36
.IX Item "Term::CLI::L10N::nl"
.PD
English and Dutch language localizations, resp.
.SS "Classes"
.IX Subsection "Classes"
.IP "Term::CLI::ReadLine" 36
.IX Item "Term::CLI::ReadLine"
Wrapper around Term::ReadLine to provide a single, global
Term::ReadLine(3p) instance.
.IP "Term::CLI" 36
.IX Item "Term::CLI"
\&\s-1CLI\s0 reader and parser class.
.IP "Term::CLI::Base" 36
.IX Item "Term::CLI::Base"
Base class for Term::CLI(3p) objects.
.IP "Term::CLI::Element" 36
.IX Item "Term::CLI::Element"
Base class for \s-1CLI\s0 syntax elements.
.IP "Term::CLI::Command" 36
.IX Item "Term::CLI::Command"
\&\s-1CLI\s0 syntax element for (sub\-)commands.
.IP "Term::CLI::Command::Help" 36
.IX Item "Term::CLI::Command::Help"
\&\s-1CLI\s0 syntax element for the \f(CW\*(C`help\*(C'\fR command.
.IP "Term::CLI::Argument" 36
.IX Item "Term::CLI::Argument"
Base \s-1CLI\s0 syntax element or command line arguments.
.IP "Term::CLI::Argument::Enum" 36
.IX Item "Term::CLI::Argument::Enum"
\&\s-1CLI\s0 syntax element for arguments from a fixed set of strings.
.IP "Term::CLI::Argument::Filename" 36
.IX Item "Term::CLI::Argument::Filename"
\&\s-1CLI\s0 syntax element for file/directory name arguments.
.IP "Term::CLI::Argument::Number" 36
.IX Item "Term::CLI::Argument::Number"
Base class for numeric arguments.
.IP "Term::CLI::Argument::Number::Float" 36
.IX Item "Term::CLI::Argument::Number::Float"
\&\s-1CLI\s0 syntax element for floating point number arguments.
.IP "Term::CLI::Argument::Number::Int" 36
.IX Item "Term::CLI::Argument::Number::Int"
\&\s-1CLI\s0 syntax element for integer arguments.
.IP "Term::CLI::Argument::String" 36
.IX Item "Term::CLI::Argument::String"
\&\s-1CLI\s0 syntax element for string arguments.
.SS "Roles"
.IX Subsection "Roles"
.IP "Term::CLI::Role::CommandSet" 36
.IX Item "Term::CLI::Role::CommandSet"
Methods to deal with a list of Term::CLI::Command objects.
.IP "Term::CLI::Role::ArgumentSet" 36
.IX Item "Term::CLI::Role::ArgumentSet"
Methods to deal with a list of Term::CLI::Argument objects.
.IP "Term::CLI::Role::HelpText" 36
.IX Item "Term::CLI::Role::HelpText"
Methods to provide help text on a command.
.SH "CLASS RELATIONSHIPS"
.IX Header "CLASS RELATIONSHIPS"
.SS "Classes"
.IX Subsection "Classes"
.ie n .IP """X \-\-\-> Y""" 16
.el .IP "\f(CWX \-\-\-> Y\fR" 16
.IX Item "X ---> Y"
\&\fIY\fR inherits from \fIX\fR
.PP
.Vb 3
\&    Term::ReadLine
\&        |
\&        +\-\-> Term::CLI::ReadLine
\&
\&    Term::CLI::Base
\&        |
\&        +\-\-> Term::CLI
\&        |
\&        +\-\-> Term::CLI::Element
\&                |
\&                +\-\-> Term::CLI::Command
\&                |       |
\&                |       +\-\-> Term::CLI::Command::Help
\&                |
\&                +\-\-> Term::CLI::Argument
\&                        |
\&                        +\-\-> Term::CLI::Argument::Bool
\&                        |
\&                        +\-\-> Term::CLI::Argument::Enum
\&                        |
\&                        +\-\-> Term::CLI::Argument::Filename
\&                        |
\&                        +\-\-> Term::CLI::Argument::Number
\&                        |       |
\&                        |       +\-\-> Term::CLI::Argument::Number::Int
\&                        |       |
\&                        |       +\-\-> Term::CLI::Argument::Number::Float
\&                        |
\&                        +\-\-> Term::CLI::Argument::String
.Ve
.SS "Roles"
.IX Subsection "Roles"
.ie n .IP """X \-\-\-> Y""" 16
.el .IP "\f(CWX \-\-\-> Y\fR" 16
.IX Item "X ---> Y"
\&\fIX\fR consumes \fIY\fR
.PP
.Vb 9
\&    Term::CLI \-\-\-\-\-\-\-\-\-\-\-+
\&                          \e
\&                           +\-\-\-> Term::CLI::Role::CommandSet
\&                          /
\&    Term::CLI::Command \-\-+
\&              \e     \e
\&               \e     +\-\-\-> Term::CLI::Role::ArgumentSet
\&                \e
\&                 +\-\-\-> Term::CLI::Role::HelpText
.Ve
.SS "Ownership"
.IX Subsection "Ownership"
.ie n .IP """X \-\-\-< Y""" 16
.el .IP "\f(CWX \-\-\-< Y\fR" 16
.IX Item "X ---< Y"
\&\fIX\fR owns (possibly multiple) \fIY\fR (i.e. \*(L"one to many\*(R").
.ie n .IP """X \-\-\- Y""" 16
.el .IP "\f(CWX \-\-\- Y\fR" 16
.IX Item "X --- Y"
\&\fIX\fR owns at most one \fIY\fR (i.e. \*(L"one to one\*(R").
.PP
.Vb 5
\&            +\-\-\-\-\- Term::CLI::ReadLine
\&           /
\&    Term::CLI
\&           \e
\&            +\-\-\-\-< Term::CLI::Command
\&
\&
\&                     +\-\-\-\-\- Term::CLI::ReadLine
\&                    /
\&    Term::CLI::Command \-\-\-< Term::CLI::Argument
\&                    \e
\&                     +\-\-\-\-< Term::CLI::Command
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Term::CLI::Tutorial(3p).
.PP
Term::CLI(3p),
Term::CLI::Argument(3p),
Term::CLI::Argument::Bool(3p),
Term::CLI::Argument::Enum(3p),
Term::CLI::Argument::FileName(3p),
Term::CLI::Argument::Number(3p),
Term::CLI::Argument::Number::Float(3p),
Term::CLI::Argument::Number::Int(3p),
Term::CLI::Argument::String(3p),
Term::CLI::Command(3p),
Term::CLI::L10N(3p),
Term::CLI::L10N::en(3p),
Term::CLI::L10N::nl(3p),
Term::CLI::Role::CommandSet(3p),
Term::CLI::Role::ArgumentSet(3p),
Term::ReadLine(3p).
.SH "AUTHOR"
.IX Header "AUTHOR"
Steven Bakker <sbakker@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright (c) 2018 Steven Bakker
.PP
This module is free software; you can redistribute it and/or modify
it under the same terms as Perl itself. See \*(L"perldoc perlartistic.\*(R"
.PP
This software is distributed in the hope that it will be useful,
but \s-1WITHOUT ANY WARRANTY\s0; without even the implied warranty of
\&\s-1MERCHANTABILITY\s0 or \s-1FITNESS FOR A PARTICULAR PURPOSE.\s0

.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "PAUSE::Users 3"
.TH PAUSE::Users 3 "2020-08-08" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
PAUSE::Users \- interface to PAUSE's users file (00whois.xml)
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& use PAUSE::Users;
\&
\& my $users    = PAUSE::Users\->new(max_age => \*(Aq1 day\*(Aq);
\& my $iterator = $users\->user_iterator();
\&
\& while (defined($user = $iterator\->next_user)) {
\&   print "PAUSE id = ", $user\->id, "\en";
\&   print "Name     = ", $user\->fullname, "\en";
\& }
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
PAUSE::Users provides an interface to the \f(CW\*(C`00whois.xml\*(C'\fR
file produced by the Perl Authors Upload Server (\s-1PAUSE\s0).
This file contains a list of all \s-1PAUSE\s0 users, with some basic information
about each user.
.PP
By default PAUSE::Users will request the file from \s-1PAUSE\s0 at most once a day,
using a locally cached copy otherwise. You can specify the caching time
using the \f(CW\*(C`max_age\*(C'\fR attribute. You can express the caching time using any
of the expressions supported by Time::Duration::Parse.
.PP
At the moment this module supports a single iterator interface.
The \f(CW\*(C`next_user()\*(C'\fR method returns an instance of PAUSE::Users::User
(I know, bit of an odd name).
.PP
Here's the simple skeleton for iterating over all \s-1PAUSE\s0 users:
.PP
.Vb 1
\& my $iterator = PAUSE::Users\->new()\->user_iterator();
\&
\& while (my $user = $iterator\->next_user) {
\&    # doing something with $user
\& }
.Ve
.SH "Constructor"
.IX Header "Constructor"
The constructor takes the following attributes
.IP "\(bu" 4
cache_path
Specify the full path to the local file where the contents of
00whois.xml should be cached. If not set, an appropriate
path for your operating system will be generated using File::HomeDir.
.Sp
If you don't set this attribute, then after instantiating PAUSE::Users
you can get this attribute to see where the content is being cached.
.IP "\(bu" 4
path
The full path to your own copy of 00whois.xml.
If this is provided, then PAUSE::Users won't check to see if
\&\s-1CPAN\s0's copy is more recent than your file.
.IP "\(bu" 4
max_age
The maximum age for the cached copy, which is stored in the file
referenced with the \f(CW\*(C`cache_path\*(C'\fR attribute. If your cached copy
was updated with the last \f(CW\*(C`max_age\*(C'\fR seconds, then PAUSE::Users
won't even check whether the \s-1CPAN\s0 copy has been updated.
.Sp
You can specify the \f(CW\*(C`max_age\*(C'\fR using any of the notations supported
by Time::Duration::Parse. It defaults to '1 day'.
.SH "The user object"
.IX Header "The user object"
The user object supports the following methods:
.IP "id" 4
.IX Item "id"
The user's \s-1PAUSE\s0 id. For example my \s-1PAUSE\s0 id is \s-1NEILB.\s0
.IP "fullname" 4
.IX Item "fullname"
The full name of the user, as they would write it.
So expect to see Kanji and plenty of other non-ASCII characters here.
You are \s-1UTF\-8\s0 clean, right?
.IP "asciiname" 4
.IX Item "asciiname"
An \s-1ASCII\s0 version of the user's name. This might be the romaji version
of a Japanese name, or the fullname without any accents.
For example, author \s-1NANIS\s0 has fullname A. Sinan Ünür,
and asciiname A. Sinan Unur.
.IP "email" 4
.IX Item "email"
The contact email address for the author, or \f(CW\*(C`CENSORED\*(C'\fR if the
author specified that their email address should not be shared.
.IP "has_cpandir" 4
.IX Item "has_cpandir"
Set to \f(CW1\fR if the author has a directory on \s-1CPAN,\s0 and 0 if not.
This is only true (1) if the author \fIcurrently\fR has something on \s-1CPAN.\s0
If you upload a dist then delete it, the dist will be on BackPAN but
not on \s-1CPAN,\s0 and \f(CW\*(C`has_cpandir\*(C'\fR will return 0.
.IP "homepage" 4
.IX Item "homepage"
The author's homepage, if they've specified one.
This might be their blog, their employer's home page,
or any other \s-1URL\s0 they've chosen to associate with their account.
.IP "introduced" 4
.IX Item "introduced"
When the author's \s-1PAUSE\s0 account was created, specified as
seconds since the epoch. This may change to being an instance
of DateTime.
.SH "00whois.xml file format"
.IX Header "00whois.xml file format"
The meat of the file is a list of \f(CW\*(C`<cpanid>\*(C'\fR elements,
each of which contains details of one \s-1PAUSE\s0 user:
.PP
.Vb 4
\& <?xml version="1.0" encoding="UTF\-8"?>
\& <cpan\-whois xmlns=\*(Aqhttp://www.cpan.org/xmlns/whois\*(Aq
\&            last\-generated=\*(AqSat Nov 16 18:19:01 2013 UTC\*(Aq
\&            generated\-by=\*(Aq/home/puppet/pause/cron/cron\-daily.pl\*(Aq>
\&  
\&  ...
\&  
\&  <cpanid>
\&   <id>NEILB</id>
\&   <type>author</type>
\&   <fullname>Neil Bowers</fullname>
\&   <email>neil@bowers.com</email>
\&   <has_cpandir>1</has_cpandir>
\&  </cpanid>
\&  
\&  ...
\&  
\& </cpan\-whois>
.Ve
.PP
In addition to all \s-1PAUSE\s0 users, the underlying file (00whois.xml)
also contains details of perl.org mailing lists.
For example, here's the entry for Perl5\-Porters:
.PP
.Vb 8
\& <cpanid>
\&  <id>P5P</id>
\&  <type>list</type>
\&  <asciiname>The Perl5 Porters Mailing List</asciiname>
\&  <email>perl5\-porters@perl.org</email>
\&  <info>Mail perl5\-porters\-subscribe@perl.org</info>
\&  <has_cpandir>0</has_cpandir>
\& </cpanid>
.Ve
.PP
All \fBlist\fR type entries are ignored by \f(CW\*(C`PAUSE::Users\*(C'\fR.
.SH "NOTES"
.IX Header "NOTES"
I started off trying a couple of \s-1XML\s0 modules, but I was surprised at
how slow they were, and not really iterator-friendly.
So the current version of the iterator does line-based parsing using
regexps. You really shouldn't do that, but 00whois.xml is automatically
generated, follows a well-defined format, which very rarely changes.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Parse::CPAN::Whois is another module that parses 00whois.xml,
but you have to download it yourself first.
.PP
Parse::CPAN::Authors is another module for getting information about
\&\s-1PAUSE\s0 users, but based on \f(CW\*(C`01.mailrc.txt.gz\*(C'\fR.
.PP
CPAN::Index::API::File::Whois provides a similar interface to 00whois.xml.
.PP
CPAN::Search::Author does a real-time search for \s-1CPAN\s0 authors
using search.cpan.org <http://search.cpan.org>.
.PP
CPAN::Source fetches 4 of the \s-1PAUSE\s0 indices and lets you query an aggregation
of the data they contain.
.PP
PAUSE::Permissions, PAUSE::Packages.
.SH "REPOSITORY"
.IX Header "REPOSITORY"
<https://github.com/neilbowers/PAUSE\-Users>
.SH "AUTHOR"
.IX Header "AUTHOR"
Neil Bowers <neilb@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2013 by Neil Bowers <neilb@cpan.org>.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

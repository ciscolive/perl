.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Module::CPANTS::Kwalitee::License 3"
.TH Module::CPANTS::Kwalitee::License 3 "2019-08-08" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Module::CPANTS::Kwalitee::License \- Checks if there is a license
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
Checks if the distribution specifies a license.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
.SS "Methods"
.IX Subsection "Methods"
\fIorder\fR
.IX Subsection "order"
.PP
Defines the order in which Kwalitee tests should be run.
.PP
Returns \f(CW100\fR.
.PP
\fIanalyse\fR
.IX Subsection "analyse"
.PP
\&\f(CW\*(C`MCK::License\*(C'\fR checks if there's a \f(CW\*(C`license\*(C'\fR field \f(CW\*(C`META.yml\*(C'\fR. Additionally, it looks for a file called \s-1LICENSE\s0 and a \s-1POD\s0 section named \s-1LICENSE\s0
.PP
\fIkwalitee_indicators\fR
.IX Subsection "kwalitee_indicators"
.PP
Returns the Kwalitee Indicators data structure.
.IP "\(bu" 4
meta_yml_has_license
.IP "\(bu" 4
has_known_license_in_source_file
.IP "\(bu" 4
has_license_in_source_file
.IP "\(bu" 4
has_human_readable_license
.IP "\(bu" 4
has_separate_license_file
.SS "License information"
.IX Subsection "License information"
Places where the license information is taken from:
.PP
Has a \s-1LICENSE\s0 file   file_license 1|0
.PP
Content of \s-1LICENSE\s0 file matches License X from Software::License
.PP
License in \s-1META\s0.yml
.PP
License in \s-1META\s0.yml matches one of the known licenses
.PP
License in source files recognized by Software::LicenseUtils
For each file keep where is was it recognized.
.PP
Has license or copyright entry in pod (that might not be recognized by Software::LicenseUtils)
.PP
# has_license
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Module::CPANTS::Analyse
.SH "AUTHOR"
.IX Header "AUTHOR"
Thomas Klausner <https://metacpan.org/author/domm>
and Gábor Szabó <https://metacpan.org/author/szabgab>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright © 2003–2009 Thomas Klausner <https://metacpan.org/author/domm>
.PP
Copyright © 2006–2008 Gábor Szabó <https://metacpan.org/author/szabgab>
.PP
You may use and distribute this module according to the same terms
that Perl is distributed under.

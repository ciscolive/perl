.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Types::URI 3"
.TH Types::URI 3 "2019-11-21" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Types::URI \- type constraints and coercions for URIs
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&   package FroobleDocument;
\&   
\&   use Moose;
\&   use Types::URI \-all;
\&   
\&   has source => (
\&      is      => \*(Aqro\*(Aq,
\&      isa     => Uri,
\&      coerce  => 1,
\&   );
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Types::URI is a type constraint library suitable for use with
Moo/Moose attributes, Kavorka sub signatures, and so forth.
.SS "Types"
.IX Subsection "Types"
This module provides some type constraints broadly compatible with
those provided by MooseX::Types::URI, plus a couple of extra type
constraints.
.ie n .IP """Uri""" 4
.el .IP "\f(CWUri\fR" 4
.IX Item "Uri"
A class type for \s-1URI\s0/URI::WithBase. Coercions from:
.RS 4
.ie n .IP "from ""Uuid""" 4
.el .IP "from \f(CWUuid\fR" 4
.IX Item "from Uuid"
Coerces to a \s-1URI\s0 in the \f(CW\*(C`urn:uuid:\*(C'\fR schema. (See Types::UUID.)
.ie n .IP "from ""Str""" 4
.el .IP "from \f(CWStr\fR" 4
.IX Item "from Str"
Uses \*(L"new\*(R" in \s-1URI\s0.
.ie n .IP "from ""Path""" 4
.el .IP "from \f(CWPath\fR" 4
.IX Item "from Path"
Uses \*(L"new\*(R" in URI::file. (See Types::Path::Tiny.)
.ie n .IP "from ""ScalarRef""" 4
.el .IP "from \f(CWScalarRef\fR" 4
.IX Item "from ScalarRef"
Uses \*(L"new\*(R" in URI::data.
.ie n .IP "from ""HashRef""" 4
.el .IP "from \f(CWHashRef\fR" 4
.IX Item "from HashRef"
Coerces using URI::FromHash.
.ie n .IP "from ""Iri""" 4
.el .IP "from \f(CWIri\fR" 4
.IX Item "from Iri"
Uses \*(L"new\*(R" in \s-1URI\s0.
.IP "from RDF::Trine::Node::Resource, RDF::Trine::Namespace, XML::Namespace" 4
.IX Item "from RDF::Trine::Node::Resource, RDF::Trine::Namespace, XML::Namespace"
Uses \*(L"new\*(R" in \s-1URI\s0.
.RE
.RS 4
.RE
.ie n .IP """FileUri""" 4
.el .IP "\f(CWFileUri\fR" 4
.IX Item "FileUri"
A subtype of \f(CW\*(C`Uri\*(C'\fR covering URI::file. Coercions from:
.RS 4
.ie n .IP "from ""Str""" 4
.el .IP "from \f(CWStr\fR" 4
.IX Item "from Str"
Uses \*(L"new\*(R" in URI::file.
.ie n .IP "from ""Path""" 4
.el .IP "from \f(CWPath\fR" 4
.IX Item "from Path"
Uses \*(L"new\*(R" in URI::file. (See Types::Path::Tiny.)
.ie n .IP "from ""HashRef""" 4
.el .IP "from \f(CWHashRef\fR" 4
.IX Item "from HashRef"
Coerces using URI::FromHash.
.ie n .IP "from ""Iri""" 4
.el .IP "from \f(CWIri\fR" 4
.IX Item "from Iri"
Uses \*(L"new\*(R" in \s-1URI\s0.
.IP "from RDF::Trine::Node::Resource, RDF::Trine::Namespace, XML::Namespace" 4
.IX Item "from RDF::Trine::Node::Resource, RDF::Trine::Namespace, XML::Namespace"
Uses \*(L"new\*(R" in \s-1URI\s0.
.RE
.RS 4
.RE
.ie n .IP """DataUri""" 4
.el .IP "\f(CWDataUri\fR" 4
.IX Item "DataUri"
A subtype of \f(CW\*(C`Uri\*(C'\fR covering URI::data. Coercions from:
.RS 4
.ie n .IP "from ""Str""" 4
.el .IP "from \f(CWStr\fR" 4
.IX Item "from Str"
Uses \*(L"new\*(R" in URI::data.
.ie n .IP "from ""ScalarRef""" 4
.el .IP "from \f(CWScalarRef\fR" 4
.IX Item "from ScalarRef"
Uses \*(L"new\*(R" in URI::data.
.ie n .IP "from ""HashRef""" 4
.el .IP "from \f(CWHashRef\fR" 4
.IX Item "from HashRef"
Coerces using URI::FromHash.
.ie n .IP "from ""Iri""" 4
.el .IP "from \f(CWIri\fR" 4
.IX Item "from Iri"
Uses \*(L"new\*(R" in \s-1URI\s0.
.IP "from RDF::Trine::Node::Resource, RDF::Trine::Namespace, XML::Namespace" 4
.IX Item "from RDF::Trine::Node::Resource, RDF::Trine::Namespace, XML::Namespace"
Uses \*(L"new\*(R" in \s-1URI\s0.
.RE
.RS 4
.RE
.ie n .IP """Iri""" 4
.el .IP "\f(CWIri\fR" 4
.IX Item "Iri"
A class type for \s-1IRI\s0. Coercions as per \f(CW\*(C`Uri\*(C'\fR above, plus can coerce
from \f(CW\*(C`Uri\*(C'\fR.
.SH "BUGS"
.IX Header "BUGS"
Please report any bugs to
<http://rt.cpan.org/Dist/Display.html?Queue=Types\-URI>.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
MooseX::Types::URI,
Type::Tiny::Manual,
\&\s-1URI\s0,
URI::file,
URI::data,
URI::FromHash,
RDF::Trine::Node::Resource,
\&\s-1IRI\s0.
.PP
Types::UUID,
Types::Path::Tiny,
Types::Standard.
.SH "AUTHOR"
.IX Header "AUTHOR"
Toby Inkster <tobyink@cpan.org>.
.SH "COPYRIGHT AND LICENCE"
.IX Header "COPYRIGHT AND LICENCE"
This software is copyright (c) 2014 by Toby Inkster.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
.SH "DISCLAIMER OF WARRANTIES"
.IX Header "DISCLAIMER OF WARRANTIES"
\&\s-1THIS PACKAGE IS PROVIDED \*(L"AS IS\*(R" AND WITHOUT ANY EXPRESS OR IMPLIED
WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
MERCHANTIBILITY AND FITNESS FOR A PARTICULAR PURPOSE.\s0

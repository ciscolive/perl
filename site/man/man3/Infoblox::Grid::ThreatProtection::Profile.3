.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Infoblox::Grid::ThreatProtection::Profile 3"
.TH Infoblox::Grid::ThreatProtection::Profile 3 "2018-06-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Infoblox::Grid::ThreatProtection::Profile \- Threat Protection profile object.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The Threat Protection profile object facilitates configuring groups of Threat Protection members that have similar traffic properties.
A member can be either associated with a Threat Protection profile or inherit the ruleset from the Grid or override the ruleset individually at the member level.
.SH "CONSTRUCTOR"
.IX Header "CONSTRUCTOR"
.Vb 10
\& my $object = Infoblox::Grid::ThreatProtection::Profile\->new(
\&     name                                      => $string,                                                               #Required
\&     comment                                   => $string,                                                               #Optional / Default is undefined
\&     current_ruleset                           => $ruleset,                                                              #Optional / Default is undefined
\&     disable_multiple_dns_tcp_request          => \*(Aqtrue\*(Aq | \*(Aqfalse\*(Aq,                                                      #Optional / Default is \*(Aqtrue\*(Aq
\&     events_per_second_per_rule                => $uint,                                                                 #Optional / Default is undefined
\&     extattrs                                  => { $string => $extattr, ... },                                          #Optional / Default is undefined
\&     extensible_attributes                     => {$string => $string | $num, $string => [ $string | $num, ... ], ... }, #Optional / Default is undefined
\&     members                                   => [$host_name | ... ],                                                   #Optional / Default is empty list
\&     override_current_ruleset                  => \*(Aqtrue\*(Aq | \*(Aqfalse\*(Aq,                                                      #Optional / Default is \*(Aqfalse\*(Aq
\&     override_disable_multiple_dns_tcp_request => \*(Aqtrue\*(Aq | \*(Aqfalse\*(Aq,                                                      #Optional / Default is \*(Aqfalse\*(Aq
\&     override_events_per_second_per_rule       => \*(Aqtrue\*(Aq | \*(Aqfalse\*(Aq,                                                      #Optional / Default is \*(Aqfalse\*(Aq
\&     source                                    => $tp_member | $tp_profile,                                              #Optional / Default is undefined
\& );
.Ve
.PP
You cannot set both extattrs and extensible_attributes attributes at the same time.
.SH "SESSION METHODS"
.IX Header "SESSION METHODS"
The following functions can be applied to a Infoblox::Grid::ThreatProtection::Profile object.
.SS "Infoblox::Session\->add( )"
.IX Subsection "Infoblox::Session->add( )"
.RS 4
Use this method to add the object to the Infoblox appliance.
See Infoblox::Session\->\fBadd()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Construct object
\& my $object = Infoblox::Grid::ThreatProtection::Profile\->new(
\&     name => \*(Aqprofile1\*(Aq,
\& );
\&
\& #Submit object for addition 
\& $session\->add($object);
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->get( )"
.IX Subsection "Infoblox::Session->get( )"
.RS 4
Use this method to retrieve all the matching objects from the Infoblox appliance. See Infoblox::Session\->\fBget()\fR for parameters and return values.
.IP "\fBKey References\fR" 4
.IX Item "Key References"
.Vb 1
\& Apply the following attributes to get a specific Threat Protection profile object:
\&
\&     name                  \- Optional. The Threat Protection profile name.
\&     comment               \- Optional. The Threat Protection profile comment.
\&     extattrs              \- Optional. A hash reference containing Infoblox::Grid::Extattr object.
\&     extensible_attributes \- Optional. A hash reference containing extensible attributes.
.Ve
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& my @retrieved_objs = $session\->get(
\&     \*(Aqobject\*(Aq => \*(AqInfoblox::Grid::ThreatProtection::Profile\*(Aq,
\&     \*(Aqname\*(Aq   => \*(Aqprofile1\*(Aq,
\& );
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->modify( )"
.IX Subsection "Infoblox::Session->modify( )"
.RS 4
Use this method to modify an object in the Infoblox appliance.
See Infoblox::Session\->\fBmodify()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Modify events_per_second_per_rule value
\& $object\->events_per_second_per_rule(\*(Aq2\*(Aq);
\&
\& #Submit modification
\& my $response = $session\->modify($object);
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->remove( )"
.IX Subsection "Infoblox::Session->remove( )"
.RS 4
Use this method to remove the object from the Infoblox appliance. See Infoblox::Session\->\fBremove()\fR for parameters and return values.
.Sp
To remove a specific object, first use \fBget()\fR or \fBsearch()\fR to retrieve the specific \s-1DHCP\s0 range object, and then submit this object for removal.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 5
\& #Get the objects
\& my @retrieved_objs = $session\->get(
\&     object => \*(AqInfoblox::Grid::ThreatProtection::Profile\*(Aq,
\&     name   => \*(Aqprofile1\*(Aq,
\& );
\&
\& #Find the desired object from the retrieved list
\& my $desired_object = $retrieved_objs[0];
\&
\& #Submit for removal
\& my $response = $session\->remove($desired_object);
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->search( )"
.IX Subsection "Infoblox::Session->search( )"
.RS 4
Use this method to search for objects in the Infoblox appliance. See Infoblox::Session\->\fBsearch()\fR for parameters and return values.
.IP "\fBKey References\fR" 4
.IX Item "Key References"
.Vb 1
\& Apply the following attributes to search for the Threat Protection profile object:
\&
\&     name                  \- Optional. The Threat Protection profile name (regular expression).
\&     comment               \- Optional. The Threat Protection profile comment (regular expression).
\&     extattrs              \- Optional. A hash reference containing Infoblox::Grid::Extattr object.
\&     extensible_attributes \- Optional. A hash reference containing extensible attributes.
.Ve
.Sp
For more information about searching extensible attributes, 
see Infoblox::Grid::ExtensibleAttributeDef/Searching Extensible Attributes.
.IP "\fBExamples\fR" 4
.IX Item "Examples"
.Vb 5
\& # search for objects
\& my @retrieved_objs = $session\->search(
\&     object       => \*(AqInfoblox::Grid::ThreatProtection::Profile\*(Aq,
\&     comment      => \*(Aq.*comment\*(Aq,
\&);
\&
\& # search for objects defining \*(AqSanta Clara\*(Aq for \*(AqSite\*(Aq extensible attribute
\& my @retrieved_objs = $session\->search(
\&     object                => \*(AqInfoblox::Grid::ThreatProtection::Profile\*(Aq,
\&     extensible_attributes => {\*(AqSite\*(Aq => \*(AqSanta Clara\*(Aq},
\& );
.Ve
.RE
.RS 4
.RE
.SH "METHODS"
.IX Header "METHODS"
This object provides information about the Threat Protection profile settings.
.SS "comment( )"
.IX Subsection "comment( )"
.RS 4
Use this method to set or retrieve the Threat Protection profile descriptive comment.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is a desired comment in a string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get comment value
\& my $value = $object\->comment();
\&
\& #Modify comment value
\& $object\->comment(\*(Aqnew comment\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "current_ruleset( )"
.IX Subsection "current_ruleset( )"
.RS 4
Use this method to set or retrieve the current Threat Protection profile ruleset.
.Sp
Setting this method to a defined value implicitly sets the override_current_ruleset method to 'true'. Setting the parameter to undefined causes the appliance to use the Grid default and automatically resets the override_current_ruleset attribute to 'false'.
.Sp
Note that when current_ruleset is set to a defined value and override_dcurrent_ruleset is set to 'false', the last operation takes precedence. Thus the sequence \f(CW$object\fR\->current_ruleset($rs); \f(CW$object\fR\->override_current_ruleset('false'); will set override_current_ruleset to 'false', and the sequence \f(CW$object\fR\->override_current_ruleset('false'); \f(CW$object\fR\->current_ruleset($rs); will result in override_current_ruleset='true'.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is an Infoblox::Grid::ThreatProtection::Ruleset object.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get current_ruleset value
\& my $value = $object\->current_ruleset();
\&
\& #Modify current_ruleset value
\& $object\->current_ruleset($rs);
.Ve
.RE
.RS 4
.RE
.SS "disable_multiple_dns_tcp_request( )"
.IX Subsection "disable_multiple_dns_tcp_request( )"
.RS 4
Use this method to disable multiple \s-1BIND\s0 responses via \s-1TCP\s0 connection.
.Sp
Setting this method to a defined value implicitly sets the override_disable_multiple_dns_tcp_request method to 'true'. Setting the parameter to undefined causes the appliance to use the Grid default and automatically resets the override_disable_multiple_dns_tcp_request attribute to 'false'.
.Sp
Note that when config is set to a defined value and override_disable_multiple_dns_tcp_request is set to 'false', the last operation takes precedence. Thus the sequence \f(CW$object\fR\->disable_multiple_dns_tcp_request($value); \f(CW$object\fR\->override_disable_multiple_dns_tcp_request('false'); will set override_disable_multiple_dns_tcp_request to 'false', and the sequence \f(CW$object\fR\->override_disable_multiple_dns_tcp_request('false'); \f(CW$object\fR\->disable_multiple_dns_tcp_request($value); will result in override_disable_multiple_dns_tcp_request='true'.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Set the parameter to 'true' to disable multiple \s-1TCP\s0 requests. Set the parameter to 'false' to enable multiple \s-1TCP\s0 requests.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->disable_multiple_dns_tcp_request();
\& # Modify attribute value
\& $object\->disable_multiple_dns_tcp_request(\*(Aqtrue\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "events_per_second_per_rule( )"
.IX Subsection "events_per_second_per_rule( )"
.RS 4
Use this method to set or retrieve the number of events logged per second per rule.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The number of events logged per second per rule in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get events_per_second_per_rule value
\& my $value = $object\->events_per_second_per_rule();
\&
\& #Modify events_per_second_per_rule value
\& $object\->events_per_second_per_rule(\*(Aq2\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "extattrs( )"
.IX Subsection "extattrs( )"
.RS 4
Use this method to set or retrieve the extensible attributes that are associated with a Threat Protection profile object.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is a hash reference that contains the names of extensible attributes and their associated values (Infoblox::Grid::Extattr objects).
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get extattrs value
\& my $value = $object\->extattrs();
\&
\& #Modify extattrs value
\& $object\->extattrs({\*(AqSite\*(Aq => $extattr1, \*(AqAdministrator\*(Aq => $extattr2});
.Ve
.RE
.RS 4
.RE
.SS "extensible_attributes( )"
.IX Subsection "extensible_attributes( )"
.RS 4
Use this method to set or retrieve the extensible attributes that are associated with a Threat Protection profile object.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
For valid values for extensible attributes, see Infoblox::Grid::ExtensibleAttributeDef/Extensible Attribute Values.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get extensible attributes value
\& my $value = $object\->extensible_attributes();
\&
\& #Modify extensible attributes value
\& $object\->extensible_attributes({\*(AqSite\*(Aq => \*(AqSanta Clara\*(Aq, \*(AqAdministrator\*(Aq => [\*(AqPeter\*(Aq, \*(AqTom\*(Aq]});
.Ve
.RE
.RS 4
.RE
.SS "members( )"
.IX Subsection "members( )"
.RS 4
Use this method to set or retrieve the list of members that are using the Threat Protection profile.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an array reference that contains desired Threat Protection member names in a string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get members value
\& my $value = $object\->members();
\&
\& #Modify members value
\& $object\->members([\*(Aqinfoblox.localdomain\*(Aq]);
.Ve
.RE
.RS 4
.RE
.SS "name( )"
.IX Subsection "name( )"
.RS 4
Use this method to retrieve a Threat Protection profile name.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is a desired Threat Protection profile name in a string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get name value
\& my $value = $object\->name();
\&
\& #Modify name value
\& $object\->name(\*(Aqnew_name\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "override_events_per_second_per_rule( )"
.IX Subsection "override_events_per_second_per_rule( )"
.RS 4
Use this method to set or retrieve the override flag for the number of events logged per second per rule.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify 'true' to set the override_events_per_second_per_rule flag or 'false' to deactivate/unset it. The default value is 'false'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get override_events_per_second_per_rule value
\& my $value = $object\->override_events_per_second_per_rule();
\&
\& #Modify override_events_per_second_per_rule value
\& $object\->override_events_per_second_per_rule(\*(Aqtrue\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "override_current_ruleset( )"
.IX Subsection "override_current_ruleset( )"
.RS 4
The override_current_ruleset attribute controls whether the current ruleset value is used for Threat Protection profile instead of the Grid default.
.Sp
The override_current_ruleset attribute can be specified explicitly. It is also set implicitly when current_ruleset is set to a defined value.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify 'true' to set the override_current_ruleset flag or 'false' to deactivate/unset it. The default value is 'false'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get override_current_ruleset value 
\& my $override = $object\->override_current_ruleset();
\&
\& #Modify override_current_ruleset
\& $object\->override_current_ruleset(\*(Aqtrue\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "override_disable_multiple_dns_tcp_request( )"
.IX Subsection "override_disable_multiple_dns_tcp_request( )"
.RS 4
The override_disable_multiple_dns_tcp_request attribute controls whether the Threat Protection profile disable_multiple_dns_tcp_request value is used instead of the Grid default.
.Sp
The override_disable_multiple_dns_tcp_request attribute can be specified explicitly.
It is also set implicitly when disable_multiple_dns_tcp_request is set to a defined value.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify 'true' to set the override_disable_multiple_dns_tcp_request flag or 'false' to unset it. The default value is 'false'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get override_disable_multiple_dns_tcp_request value
\& my $value = $object\->override_disable_multiple_dns_tcp_request();
\&
\& #Modify override_disable_multiple_dns_tcp_request value
\& $object\->override_disable_multiple_dns_tcp_request(\*(Aqtrue\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "source( )"
.IX Subsection "source( )"
.RS 4
Use this method to set the source for cloning the profile settings. This is a write-only attribute and can be used only on create operation.
.Sp
Include the specified parameter to set the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an Infoblox::Grid::Member::ThreatProtection or Infoblox::Grid::ThreatProtection::Profile object reference.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns true when the modification succeeds, and returns false when the operation fails.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Modify source value
\& $object\->source($profile1);
.Ve
.RE
.RS 4
.RE
.SH "SAMPLE CODE"
.IX Header "SAMPLE CODE"
The following sample code demonstrates the different functions that can be applied to an object, such as add, search, modify, and remove.
This sample also includes error handling for the operations.
.PP
\&\fB#Preparation prior to a Threat Protection profile insertion\fR
.PP
.Vb 3
\& #PROGRAM STARTS: Include all the modules that will be used
\& use strict;
\& use Infoblox;
\&
\& #Create a session to the Infoblox appliance
\&
\& my $session = Infoblox::Session\->new(
\&                master   => "192.168.1.2", #appliance host ip
\&                username => "admin",       #appliance user login
\&                password => "infoblox"     #appliance password
\&                );
\&
\& unless ($session) {
\&        die("Construct session failed: ",
\&                Infoblox::status_code() . ":" . Infoblox::status_detail());
\& }
\& print "Session created successfully\en";
.Ve
.PP
\&\fB#Create a Threat Protection profile\fR
.PP
.Vb 4
\& my $atp_profile = Infoblox::Grid::ThreatProtection::Profile\->new(
\&                name    => "atp_profile1",
\&                comment => "add TP profile",
\&                );
\&
\& unless ($atp_profile) {
\&        die("Construct Threat Protection profile failed: ",
\&                Infoblox::status_code() . ":" . Infoblox::status_detail());
\& }
\&
\& #Add the Threat Protection profile object to the Infoblox appliance through a session
\& $session\->add($atp_profile)
\&        or die("Add Threat Protection profile failed: ",
\&                        $session\->status_code() . ":" . $session\->status_detail());
\& print "Threat Protection profile object added to server successfully\en";
.Ve
.PP
\&\fB#Search for a specific Threat Protection profile\fR
.PP
.Vb 6
\& #Search all Threat Protection profiles that matches "atp"
\& my @retrieved_objs = $session\->search(
\&                object => "Infoblox::Grid::ThreatProtection::Profile",
\&                name   => \*(Aqatp\*(Aq
\&                );
\& my $object = $retrieved_objs[0];
\&
\& unless ($object) {
\&        die("Search Threat Protection profile failed: ",
\&                $session\->status_code() . ":" . $session\->status_detail());
\& }
\& print "Search Threat Protection profile object found at least 1 matching entry\en";
.Ve
.PP
\&\fB#Get and modify a Threat Protection profile\fR
.PP
.Vb 6
\& #Get a Threat Protection profile through the session
\& my @retrieved_objs = $session\->get(
\&                object => "Infoblox::Grid::ThreatProtection::Profile",
\&                name   => "atp_profile1"
\&                );
\& my $object = $retrieved_objs[0];
\&
\& unless ($object) {
\&        die("Get Threat Protection profile failed: ",
\&                $session\->status_code() . ":" . $session\->status_detail());
\& }
\& print "Get Threat Protection profile object found at least 1 matching entry\en";
\&
\& #Modify one of the attributes of the specified Threat Protection profile 
\& $object\->comment("this is new comment");
\&
\& #Apply the changes
\& $session\->modify($object)
\&        or die("Modify Threat Protection profile failed: ",
\&                $session\->status_code() . ":" . $session\->status_detail());
\& print "Threat Protection profile object modified successfully \en";
.Ve
.PP
\&\fB#Remove a Threat Protection profile\fR
.PP
.Vb 11
\& #Get Threat Protection profile through the session
\& my @retrieved_objs = $session\->get(
\&     object => "Infoblox::Grid::ThreatProtection::Profile",
\&     name   => "atp_profile1"
\& );
\& my $object = $retrieved_objs[0];
\& unless ($object) {
\&     die("Get Threat Protection profile failed: ",
\&         $session\->status_code() . ":" . $session\->status_detail());
\& }
\& print "Get Threat Protection profile object found at least 1 matching entry\en";
\&
\& #Submit the object for removal
\& $session\->remove($object)
\&        or die("Remove Threat Protection profile failed: ",
\&                $session\->status_code() . ":" . $session\->status_detail());
\& print "Threat Protection profile object removed successfully \en";
\&
\& ####PROGRAM ENDS####
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Infoblox Inc. <http://www.infoblox.com/>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Infoblox::Session,
Infoblox::Session\->\fBadd()\fR,
Infoblox::Session\->\fBget()\fR,
Infoblox::Session\->\fBmodify()\fR,
Infoblox::Session\->\fBremove()\fR,
Infoblox::Session\->\fBsearch()\fR,
Infoblox::Grid::ThreatProtection::Ruleset,
Infoblox::Grid::Member::ThreatProtection,
Infoblox::Grid::ThreatProtection::Profile,
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2017 Infoblox Inc.

.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Imager::Color::Float 3"
.TH Imager::Color::Float 3 "2020-06-13" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Imager::Color::Float \- Rough floating point sample color handling
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 3
\&  $color = Imager::Color\->new($red, $green, $blue);
\&  $color = Imager::Color\->new($red, $green, $blue, $alpha);
\&  $color = Imager::Color\->new("#C0C0FF"); # html color specification
\&
\&  $color\->set($red, $green, $blue);
\&  $color\->set($red, $green, $blue, $alpha);
\&  $color\->set("#C0C0FF"); # html color specification
\&
\&  ($red, $green, $blue, $alpha) = $color\->rgba();
\&  @hsv = $color\->hsv(); # not implemented but proposed
\&
\&  $color\->info();
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module handles creating color objects used by Imager.  The idea
is that in the future this module will be able to handle color space
calculations as well.
.PP
A floating point Imager color consists of up to four components, each
in the range 0.0 to 1.0. Unfortunately the meaning of the components
can change depending on the type of image you're dealing with:
.IP "\(bu" 4
for 3 or 4 channel images the color components are red, green, blue,
alpha.
.IP "\(bu" 4
for 1 or 2 channel images the color components are gray, alpha, with
the other two components ignored.
.PP
An alpha value of zero is fully transparent, an alpha value of 1.0 is
fully opaque.
.SH "METHODS"
.IX Header "METHODS"
.IP "new" 4
.IX Item "new"
This creates a color object to pass to functions that need a color argument.
.IP "set" 4
.IX Item "set"
This changes an already defined color.  Note that this does not affect any places
where the color has been used previously.
.IP "\fBrgba()\fR" 4
.IX Item "rgba()"
This returns the red, green, blue and alpha channels of the color the
object contains.
.IP "info" 4
.IX Item "info"
Calling info merely dumps the relevant color to the log.
.IP "red" 4
.IX Item "red"
.PD 0
.IP "green" 4
.IX Item "green"
.IP "blue" 4
.IX Item "blue"
.IP "alpha" 4
.IX Item "alpha"
.PD
Returns the respective component as a floating point value typically
from 0 to 1.0.
.SH "AUTHOR"
.IX Header "AUTHOR"
Arnar M. Hrafnkelsson, addi@umich.edu
And a great deal of help from others \- see the \f(CW\*(C`README\*(C'\fR for a complete
list.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fBImager\fR\|(3), Imager::Color.
.PP
http://imager.perl.org/

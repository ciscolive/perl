.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.41)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "App::Netdisco 3"
.TH App::Netdisco 3 "2020-11-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
App::Netdisco \- An open source web\-based network management tool.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Netdisco is a web-based network management tool designed for network
administrators. Data is collected into a PostgreSQL database using \s-1SNMP.\s0
.PP
Some of the things you can do with Netdisco:
.IP "\(bu" 4
\&\fBLocate\fR a machine on the network by \s-1MAC\s0 or \s-1IP\s0 and show the switch port it
lives at
.IP "\(bu" 4
\&\fBTurn off\fR a switch port, or change the \s-1VLAN\s0 or PoE status of a port
.IP "\(bu" 4
\&\fBInventory\fR your network hardware by model, vendor, software and operating
system
.IP "\(bu" 4
\&\fBPretty pictures\fR of your network
.PP
App::Netdisco provides a web frontend with built-in web server, and a
backend daemon to gather information from your network, and handle
interactive requests such as changing port or device properties.
.IP "\(bu" 4
See the demo at: <https://netdisco2\-demo.herokuapp.com/>
.IP "\(bu" 4
Docker images <https://store.docker.com/community/images/netdisco/netdisco> are also available
.PP
We have several other pages with tips for
installation tips <https://github.com/netdisco/netdisco/wiki/Install-Tips>,
understanding and troubleshooting Netdisco <https://github.com/netdisco/netdisco/wiki/Troubleshooting>,
notes for specific device vendors <https://github.com/netdisco/netdisco/wiki/Vendor-Tips>,
and all the configuration options <https://github.com/netdisco/netdisco/wiki/Configuration>.
.PP
You can also speak to someone in the \f(CW\*(C`#netdisco@freenode\*(C'\fR \s-1IRC\s0 channel, or on
the community email list <https://lists.sourceforge.net/lists/listinfo/netdisco-users>.
Before installing or upgrading please always review the latest
Release Notes <https://github.com/netdisco/netdisco/wiki/Release-Notes>.
.SH "Dependencies"
.IX Header "Dependencies"
Netdisco has several Perl library dependencies which will be automatically
installed. However it's required that you first install the following
operating system packages, if not the installation will most likely fail
further down the road.
.PP
On Ubuntu/Debian:
.PP
.Vb 1
\& root:~# apt\-get install libdbd\-pg\-perl libsnmp\-perl libssl\-dev libio\-socket\-ssl\-perl curl postgresql build\-essential
.Ve
.PP
On Fedora/Red\-Hat:
.PP
.Vb 4
\& root:~# yum install perl\-core perl\-DBD\-Pg net\-snmp\-perl net\-snmp\-devel openssl\-devel curl postgresql\-server postgresql\-contrib make automake gcc
\& root:~# postgresql\-setup initdb
\& root:~# systemctl start postgresql
\& root:~# systemctl enable postgresql
.Ve
.PP
On openSUSE:
.PP
.Vb 2
\& root:~# zypper refresh
\& root:~# zypper install curl automake gcc make postgresql postgresql\-server openssh openssl net\-snmp perl perl\-DBD\-Pg perl\-SNMP
.Ve
.PP
On \s-1BSD\s0 systems please see our \s-1BSD\s0 tips <https://github.com/netdisco/netdisco/wiki/BSD-Install>.
.PP
With those installed, please check that your system's clock is correct.
.PP
Create a user on your system called \f(CW\*(C`netdisco\*(C'\fR if one does not already exist.
We'll install Netdisco and its dependencies into this user's home area, which
will take about 250MB including \s-1MIB\s0 files.
.PP
.Vb 1
\& root:~# useradd \-m \-p x \-s /bin/bash netdisco
.Ve
.PP
Netdisco uses the PostgreSQL database server. Install PostgreSQL (at least
version 9.4) and then change to the PostgreSQL superuser (usually
\&\f(CW\*(C`postgres\*(C'\fR). Create a new database and PostgreSQL user for the Netdisco
application:
.PP
.Vb 1
\& root:~# su \- postgres
\&  
\& postgres:~$ createuser \-DRSP netdisco
\& Enter password for new role:
\& Enter it again:
\&  
\& postgres:~$ createdb \-O netdisco netdisco
.Ve
.PP
You may wish to amend the PostgreSQL
configuration <https://github.com/netdisco/netdisco/wiki/Install-Tips#enable-md5-authentication-to-postgresql>
so that local connections are working.  The default PostgreSQL configuration
can also use tuning for modern server hardware. We recommend that you use one of the following
tools to tune your \f(CW\*(C`postgresql.conf\*(C'\fR file:
.IP "postgresqltuner <https://github.com/jfcoz/postgresqltuner>" 4
.IX Item "postgresqltuner <https://github.com/jfcoz/postgresqltuner>"
Script that will check your operating system resources and settings as well as your
running PostgreSQL database and will make recommendations based on actual load. Works
on new netdisco installs but will make the best suggestions once the database contains
a bigger dataset.
.IP "pgtune (fork) <https://pgtune.leopard.in.ua>" 4
.IX Item "pgtune (fork) <https://pgtune.leopard.in.ua>"
A web based application which will recommend which parameters to change.
.IP "pgtune <https://github.com/elitwin/pgtune>" 4
.IX Item "pgtune <https://github.com/elitwin/pgtune>"
Program to auto-tune your \f(CW\*(C`postgresql.conf\*(C'\fR, regretfully not updated in a while.
.SH "Installation"
.IX Header "Installation"
The following is a general guide which works well in most circumstances. It
assumes you have a user \f(CW\*(C`netdisco\*(C'\fR on your system, that you want to perform
an on-line installation, and have the application run self-contained from
within that user's home. There are alternatives: see the
Deployment <https://github.com/netdisco/netdisco/wiki/Install-Tips>
documentation for further details.
.PP
To avoid muddying your system, use the following script to download and
install Netdisco and its dependencies into the \f(CW\*(C`netdisco\*(C'\fR user's home area
(\f(CW\*(C`~/perl5\*(C'\fR):
.PP
.Vb 2
\& su \- netdisco
\& curl \-L https://cpanmin.us/ | perl \- \-\-notest \-\-local\-lib ~/perl5 App::Netdisco
.Ve
.PP
Link some of the newly installed apps into a handy location:
.PP
.Vb 2
\& mkdir ~/bin
\& ln \-s ~/perl5/bin/{localenv,netdisco\-*} ~/bin/
.Ve
.PP
Test the installation by running the following command, which should only
produce a status message (it's just a test \- you'll start the daemons
properly, later on):
.PP
.Vb 1
\& ~/bin/netdisco\-backend status
.Ve
.SH "Configuration"
.IX Header "Configuration"
Make a directory for your local configuration and copy the configuration
template from this distribution:
.PP
.Vb 3
\& mkdir ~/environments
\& cp ~/perl5/lib/perl5/auto/share/dist/App\-Netdisco/environments/deployment.yml ~/environments
\& chmod 600 ~/environments/deployment.yml
.Ve
.PP
Edit the file ("\f(CW\*(C`~/environments/deployment.yml\*(C'\fR") and change the database
connection parameters to match those for your local system (that is, the
\&\f(CW\*(C`name\*(C'\fR, \f(CW\*(C`user\*(C'\fR and \f(CW\*(C`pass\*(C'\fR).
.PP
In the same file uncomment and edit the \f(CW\*(C`domain_suffix\*(C'\fR setting to be
appropriate for your local site. Change the \f(CW\*(C`community\*(C'\fR string setting if
your site has different values.
.PP
Have a quick read of the other settings to make sure you're happy, then move
on. See
Configuration <https://github.com/netdisco/netdisco/wiki/Configuration> for
further details.
.SH "Initialisation"
.IX Header "Initialisation"
The database either needs configuring if new, or updating from the current
release of Netdisco (1.x). You also need vendor \s-1MAC\s0 address prefixes (\s-1OUI\s0
data) and some MIBs if you want to run the backend daemon. The following
script will take care of all this for you:
.PP
.Vb 1
\& ~/bin/netdisco\-deploy
.Ve
.PP
If this is a new installation of Netdisco 2, answer yes to all questions. If
you wish to deploy without Internet access, see the
Deployment <https://github.com/netdisco/netdisco/wiki/Install-Tips>
documentation.
.SH "Startup"
.IX Header "Startup"
Run the following command to start the web-app server as a background process:
.PP
.Vb 1
\& ~/bin/netdisco\-web start
.Ve
.PP
The web app listens on port 5000 (for example \f(CW\*(C`http://localhost:5000/\*(C'\fR or
\&\f(CW\*(C`http://yourhost.example.com:5000/\*(C'\fR).
.PP
Run the following command to start the job control daemon (device polling,
port control, etc):
.PP
.Vb 1
\& ~/bin/netdisco\-backend start
.Ve
.SH "First Run"
.IX Header "First Run"
After installing Netdisco for the first time, you must manually discover at
least one device on your network.  Choose a device which speaks \s-1CDP, FDP,\s0 or
\&\s-1LLDP\s0 and knows about its neighbors; Netdisco will then start following this
chain of neighbors to discover the rest of your network.
.PP
Either go to the web interface and enter an \s-1IP\s0 or fully qualified domain name,
\&\s-1OR\s0 perform the following step at the command line:
.PP
.Vb 1
\& ~/bin/netdisco\-do discover \-d {name or IP address of a switch or router}
.Ve
.SH "Further Reading"
.IX Header "Further Reading"
We have several pages with tips for
alternate deployment scenarios <https://github.com/netdisco/netdisco/wiki/Install-Tips>,
understanding and troubleshooting Netdisco <https://github.com/netdisco/netdisco/wiki/Troubleshooting>,
tips and tricks for specific platforms <https://github.com/netdisco/netdisco/wiki/Vendor-Tips>,
and all the configuration options <https://github.com/netdisco/netdisco/wiki/Configuration>.
.PP
You can also speak to someone in the \f(CW\*(C`#netdisco@freenode\*(C'\fR \s-1IRC\s0 channel, or on
the community email list <https://lists.sourceforge.net/lists/listinfo/netdisco-users>.
Before installing or upgrading please always review the latest
Release Notes <https://github.com/netdisco/netdisco/wiki/Release-Notes>.
.SH "Upgrading from 2.x"
.IX Header "Upgrading from 2.x"
Always review the latest Release Notes <https://github.com/netdisco/netdisco/wiki/Release-Notes>.
Then the process below should be run for each installation:
.PP
.Vb 3
\& # upgrade Netdisco
\& ~/bin/localenv cpanm \-\-notest App::Netdisco
\& ln \-sf ~/perl5/bin/{localenv,netdisco\-*} ~/bin/
\& 
\& # apply database schema updates, update MIBs and Vendor MACs
\& ~/bin/netdisco\-deploy
\& 
\& # restart web service (if you run it)
\& ~/bin/netdisco\-web restart
\& 
\& # restart the backend workers (wherever you run them)
\& ~/bin/netdisco\-backend restart
.Ve
.PP
Furthermore, whenever you upgrade your Operating System, you must delete the
\&\f(CW\*(C`~/perl5\*(C'\fR directory and re-run the following command, to update Netdisco's C
library bindings:
.PP
.Vb 1
\& curl \-L https://cpanmin.us/ | perl \- \-\-notest \-\-local\-lib ~/perl5 App::Netdisco
.Ve
.SH "Tips and Tricks"
.IX Header "Tips and Tricks"
.SS "Searching"
.IX Subsection "Searching"
The main black navigation bar has a search box which is smart enough to work
out what you're looking for in most cases. For example device names, node \s-1IP\s0
or \s-1MAC\s0 addresses, \s-1VLAN\s0 numbers, and so on.
.SS "Command-Line Device and Port Actions"
.IX Subsection "Command-Line Device and Port Actions"
Most significant Device jobs and Port actions, as well as several
troubleshooting and housekeeping duties, can be performed at the command-line
with the netdisco-do program. For example:
.PP
.Vb 1
\& ~/bin/netdisco\-do \-D discover \-d 192.0.2.1
.Ve
.PP
See the netdisco-do documentation for further details.
.SS "Import Topology"
.IX Subsection "Import Topology"
Netdisco 1.x had support for a topology information file to fill in device
port relations which could not be discovered. This is now stored in the
database (and edited in the web interface). To import a legacy topology file,
run:
.PP
.Vb 1
\& ~/bin/localenv nd\-import\-topology /path/to/netdisco\-topology.txt
.Ve
.SS "Database \s-1API\s0"
.IX Subsection "Database API"
Bundled with this distribution is a DBIx::Class layer for the Netdisco
database. This abstracts away all the \s-1SQL\s0 into an elegant, re-usable \s-1OO\s0
interface. See the Developer <https://github.com/netdisco/netdisco/wiki/Developing>
documentation for further information.
.SS "Plugins"
.IX Subsection "Plugins"
Netdisco includes a Plugin subsystem for customizing the web user interface and backend daemon.
See Web Plugins <https://github.com/netdisco/netdisco/wiki/Web-Plugins>
and Backend Plugins <https://github.com/netdisco/netdisco/wiki/Backend-Plugins>
for further information.
.SS "Extensions"
.IX Subsection "Extensions"
Using the Plugins mechanism, it's also easy to write new commands (or actions)
for Netdisco. For example, an action has been added to generate \s-1RANCID\s0
configuration.
.SS "Developing"
.IX Subsection "Developing"
Lots of information about the architecture of this application is contained
within the Developer <https://github.com/netdisco/netdisco/wiki/Developing> documentation.
.SH "AUTHOR"
.IX Header "AUTHOR"
Oliver Gorwits <oliver@cpan.org>
.SH "CONTRIBUTORS"
.IX Header "CONTRIBUTORS"
Netdisco was created at the University of California, Santa Cruz (\s-1UCSC\s0),
Networking and Technology Services (\s-1NTS\s0) department. \s-1UCSC\s0 continues to support
the development of Netdisco by providing development servers and beer.
.PP
Original development by Max Baker, with significant contributions from Mark
Boolootian and Jim Warner (through whose ideas Netdisco was born and shaped),
Bill Fenner, Jeroen van Ingen, Eric Miller, Carlos Vicente, and Brian de Wolf.
.PP
Other contributions (large and small) by Mike Hunter (\s-1UCB\s0), Brian Wilson
(\s-1NCSU\s0), Bradley Baetz (bbaetz), David Temkin (sig.com), Edson Manners (\s-1FSU\s0),
Dmitry Sergienko (Trifle Co, .ua), Remo Rickli (\s-1PSI,\s0 Switzerland),
Jean-Philippe Luiggi (sagem.com), A.L.M Buxey (Loughborough University, \s-1UK\s0),
Kevin Cheek (\s-1UMICH\s0), John Bigrow (bnl.gov), George Pavel (llnl.gov), Charles
Goldsmith (wokka.org), Douglas M.  McKeown (saintmarys.edu), Revital Shvarzman
(York U, Ontario), Walter Gould (Auburn U), Lindsay Druet and Colin Palmer (U
of Waikato, Hamilton \s-1NZ\s0), Dusty Hall (Auburn U), Jon Monroe (center pointe),
Alexander Barthel, Bill Anderson, Alexander Hartmaier (t\-systems.at), Justin
Hunter (Arizona State U), Jethro Binks (U of Strathclyde, Glasgow), Jordi
Guijarro (\s-1UAB\s0.es), Sam Stickland (spacething.org),  Stefan Radman (\s-1CTBTO\s0.org),
Clint Wise, Max Kosmach, Bernhard Augenstein and Nick Nauwelaerts (aquafin.be).
.PP
We probably forgot some names \- sorry about that :\-(.
.PP
Deep gratitude also goes
to the authors and communities of all the other software that Netdisco is
built upon.
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2011\-2019 by The Netdisco Developer Team.
.PP
.Vb 10
\& Redistribution and use in source and binary forms, with or without
\& modification, are permitted provided that the following conditions are met:
\&     * Redistributions of source code must retain the above copyright
\&       notice, this list of conditions and the following disclaimer.
\&     * Redistributions in binary form must reproduce the above copyright
\&       notice, this list of conditions and the following disclaimer in the
\&       documentation and/or other materials provided with the distribution.
\&     * Neither the name of the Netdisco Project nor the
\&       names of its contributors may be used to endorse or promote products
\&       derived from this software without specific prior written permission.
\& 
\& THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
\& ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
\& WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
\& DISCLAIMED. IN NO EVENT SHALL THE NETDISCO DEVELOPER TEAM BE LIABLE FOR ANY
\& DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
\& (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
\& LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
\& ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
\& (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
\& SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.Ve

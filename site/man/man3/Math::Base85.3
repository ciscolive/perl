.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Math::Base85 3"
.TH Math::Base85 3 "2017-10-16" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Math::Base85 \- Perl extension for base 85 numbers, as referenced by RFC 1924
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  use Math::Base85;
\&
\&  $bigint = from_base85($number);
\&  $b85str = to_base85($bigint);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\s-1RFC 1924\s0 describes a compact, fixed-size representation of IPv6
addresses which uses a base 85 number system.  This module handles
some of the uglier details of it.
.PP
The base 85 numbers (from 0 to 84) are as follows:
.PP
.Vb 1
\&    0..9 A..Z a..z ! # $ % & ( ) * + \- ; < = > ? @ ^ _ \` { | } ~
.Ve
.PP
At the moment, there's not much in this module.  But it should be
sufficient for the purposes of \s-1RFC 1924.\s0
.PP
This module has a variable called \f(CW$Math::Base85::base85_digits\fR,
which is a string containing the digits of the base 85 alphabet
from lowest (0) to highest (~), in that order.
.PP
Additionally, the following two functions are defined for general
use.  (They will be exported upon request.)
.SH "from_base85"
.IX Header "from_base85"
.SS "Parameters"
.IX Subsection "Parameters"
A string composed of valid base 85 digits.
.SS "Returns"
.IX Subsection "Returns"
A \f(CW\*(C`Math::BigInt\*(C'\fR object representing the number.
.SH "to_base85"
.IX Header "to_base85"
.SS "Parameters"
.IX Subsection "Parameters"
A \f(CW\*(C`Math::BigInt\*(C'\fR object.
.SS "Returns"
.IX Subsection "Returns"
A string of base 85 digits representing the number.
.SH "AUTHORS"
.IX Header "AUTHORS"
.IP "\(bu" 4
Tony Monroe <tmonroe+perl@nog.net>
.IP "\(bu" 4
Paul Cochrane <paul@liekut.de>  (maintainer)
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright (c) 2001\-2002, Tony Monroe <tmonroe+perl@nog.net>. All rights reserved.
Copyright (c) 2017, Paul Cochrane <paul@liekut.de>. All rights reserved.
.PP
You may use this software under the same terms as Perl itself.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fBperl\fR\|(1).

.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Infoblox::Grid::ScheduleSetting 3"
.TH Infoblox::Grid::ScheduleSetting 3 "2018-06-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Infoblox::Grid::ScheduleSetting \- a schedule setting object.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
An object that provides the ability to set the schedule for a discovery task.
.SH "CONSTRUCTOR"
.IX Header "CONSTRUCTOR"
.Vb 10
\& my $schedule_setting = Infoblox::Grid::ScheduleSetting\->new(
\&    frequency           => "DAILY" | "HOURLY" | "MONTHLY" | "WEEKLY",     # optional
\&    day_of_month        => $uint,                                         # optional
\&    every               => $uint,                                         # optional
\&    weekdays            => ["MONDAY", "THURSDAY", .... ],                 # optional
\&    hour_of_day         => $uint,                                         # optional
\&    minutes_past_hour   => $uint,                                         # optional
\&    month               => $uint,                                         # optional
\&    year                => $uint,                                         # optional
\&    repeat              => "ONCE" | "RECUR",                              # optional
\&    disable             => "true" | "false",                              # optional
\&    time_zone           => $time_zone,                                    # optional
\& );
.Ve
.SH "SESSION METHODS"
.IX Header "SESSION METHODS"
The object does not support any session methods.
.SH "METHODS"
.IX Header "METHODS"
This section describes all the methods that you can use to configure and retrieve attribute values of the scheduling object.
.SS "day_of_month( )"
.IX Subsection "day_of_month( )"
.RS 4
Use this method to set or retrieve the scheduled day of month when the discovery is triggered.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is an unsigned integer between 1\-31.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get attribute value
\& my $value = $schedule_setting\->day_of_month();
\& #Modify attribute value
\& $schedule_setting\->day_of_month(10);
.Ve
.RE
.RS 4
.RE
.SS "disable( )"
.IX Subsection "disable( )"
.RS 4
Use this method to enable or disable scheduling of a discovery task.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to disable scheduling or \*(L"false\*(R" to enable it. The default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get attribute value
\& my $value = $schedule_setting\->disable();
\& #Modify attribute value
\& $schedule_setting\->disable("true");
.Ve
.RE
.RS 4
.RE
.SS "every( )"
.IX Subsection "every( )"
.RS 4
Use this method to set or retrieve the recurrence pattern of a recurring discovery.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is an unsigned integer.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get attribute value
\& my $value = $schedule_setting\->every();
\& #Modify attribute value
\& $schedule_setting\->every(2);
.Ve
.RE
.RS 4
.RE
.SS "frequency( )"
.IX Subsection "frequency( )"
.RS 4
Use this method ot set or retrieve the recurrence pattern of a recurring discovery.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is \*(L"\s-1DAILY\*(R", \*(L"HOURLY\*(R", \*(L"MONTHLY\*(R"\s0 or \*(L"\s-1WEEKLY\*(R".\s0
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get attribute value
\& my $value = $schedule_setting\->frequency();
\& #Modify attribute value
\& $schedule_setting\->frequency("MONTHLY");
.Ve
.RE
.RS 4
.RE
.SS "hour_of_day( )"
.IX Subsection "hour_of_day( )"
.RS 4
Use this method to set or retrieve the hour, based on the 24\-hour clock notation, when the discovery should start. For example, use 18 for 18:00.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is an unsigned integer between 0\-23.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get attribute value
\& my $value = $schedule_setting\->hour_of_day();
\& #Modify attribute value
\& $schedule_setting\->hour_of_day(5);
.Ve
.RE
.RS 4
.RE
.SS "month( )"
.IX Subsection "month( )"
.RS 4
Use this method to set or retrieve the month of the year when the discovery should start. For example, use 1 for January, 2 for February, and so on.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is an unsigned integer between 1 and 12.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get attribute value
\& my $value = $schedule_setting\->month();
\& #Modify attribute value
\& $schedule_setting\->month(10);
.Ve
.RE
.RS 4
.RE
.SS "year( )"
.IX Subsection "year( )"
.RS 4
Use this method to set or retrieve the year when the discovery should start.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is an unsigned integer.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get attribute value
\& my $value = $schedule_setting\->year();
\& #Modify attribute value
\& $schedule_setting\->year(2015);
.Ve
.RE
.RS 4
.RE
.SS "minutes_past_hour( )"
.IX Subsection "minutes_past_hour( )"
.RS 4
Use this method to set or retrieve the minute, based on the 24\-hour clock notation, when the discovery should start. For example, use 59 for 00:59.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is an unsigned integer between 0\-59.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get attribute value
\& my $value = $schedule_setting\->minutes_past_hour();
\& #Modify attribute value
\& $schedule_setting\->minutes_past_hour(10);
.Ve
.RE
.RS 4
.RE
.SS "repeat( )"
.IX Subsection "repeat( )"
.RS 4
Use this method to set or retrieve the flag that indicates if the discovery is scheduled for once or recurring.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is \*(L"\s-1ONCE\*(R"\s0 or \*(L"\s-1RECUR\*(R".\s0
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get attribute value
\& my $value = $schedule_setting\->repeat();
\& #Modify attribute value
\& $schedule_setting\->repeat("RECUR");
.Ve
.RE
.RS 4
.RE
.SS "time_zone( )"
.IX Subsection "time_zone( )"
.RS 4
Use this method to set or retrieve the time zone.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The \s-1UTC\s0 string that represents the time zone. For example \*(L"(\s-1UTC\s0 \- 6:00) Central Time (\s-1US\s0 and Canada)\*(R". The default value is \*(L"(\s-1UTC\s0) Coordinated Universal Time\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get attribute value
\& my $value = $schedule_setting\->time_zone();
\& #Modify attribute value
\& $schedule_setting\->time_zone("(UTC \- 6:00) Central Time (US and Canada)");
.Ve
.RE
.RS 4
.RE
.SS "weekdays( )"
.IX Subsection "weekdays( )"
.RS 4
Use this method to set or retrieve the days of the week when the discovery is triggered.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is a reference to an array that can contain the following values: '\s-1SUNDAY\s0', '\s-1MONDAY\s0', '\s-1TUESDAY\s0', '\s-1WEDNESDAY\s0', '\s-1THURSDAY\s0', '\s-1FRIDAY\s0' and '\s-1SATURDAY\s0'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get attribute value
\& my $value = $schedule_setting\->weekdays();
\& #Modify attribute value
\& $schedule_setting\->weekdays(["MONDAY", "FRIDAY"]);
.Ve
.RE
.RS 4
.RE
.SH "AUTHOR"
.IX Header "AUTHOR"
Infoblox Inc. <http://www.infoblox.com/>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Infoblox::IPAM::DiscoveryTask
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2017 Infoblox Inc.

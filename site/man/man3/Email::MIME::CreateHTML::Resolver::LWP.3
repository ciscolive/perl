.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Email::MIME::CreateHTML::Resolver::LWP 3"
.TH Email::MIME::CreateHTML::Resolver::LWP 3 "2018-01-26" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Email::MIME::CreateHTML::Resolver::LWP \- uses LWP as a resource resolver
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&        my $o = new Email::MIME::CreateHTML::Resolver::LWP(\e%args)
\&        my ($content,$filename,$mimetype,$xfer_encoding) = $o\->get_resource($uri)
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This is used by Email::MIME::CreateHTML to load resources.
.SH "METHODS"
.IX Header "METHODS"
.ie n .IP "$o = new Email::MIME::CreateHTML::Resolver::LWP(\e%args)" 4
.el .IP "\f(CW$o\fR = new Email::MIME::CreateHTML::Resolver::LWP(\e%args)" 4
.IX Item "$o = new Email::MIME::CreateHTML::Resolver::LWP(%args)"
\&\f(CW%args\fR can contain:
.RS 4
.IP "base" 4
.IX Item "base"
Base \s-1URI\s0 to resolve URIs passed to get_resource.
.RE
.RS 4
.RE
.ie n .IP "($content,$filename,$mimetype,$xfer_encoding) = $o\->get_resource($uri)" 4
.el .IP "($content,$filename,$mimetype,$xfer_encoding) = \f(CW$o\fR\->get_resource($uri)" 4
.IX Item "($content,$filename,$mimetype,$xfer_encoding) = $o->get_resource($uri)"
.SH "AUTHOR"
.IX Header "AUTHOR"
Tony Hennessy, Simon Flack and John Alden with additional contributions by
Ricardo Signes <rjbs@cpan.org> and Henry Van Styn <vanstyn@cpan.org>
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
(c) \s-1BBC 2005,2006.\s0 This program is free software; you can redistribute it and/or modify it under the \s-1GNU GPL.\s0
.PP
See the file \s-1COPYING\s0 in this distribution, or http://www.gnu.org/licenses/gpl.txt

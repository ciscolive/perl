.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Mojolicious::Plugin::AutoSecrets 3"
.TH Mojolicious::Plugin::AutoSecrets 3 "2019-05-02" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mojolicious::Plugin::AutoSecrets \- Automatic, Rotating Mojolicious Secrets
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&  # Mojolicious
\&  $self\->plugin(\*(AqAutoSecrets\*(Aq);
\&
\&  $self\->plugin(\*(AqAutoSecrets\*(Aq => {path => \*(Aq/my/favorite/hiding/spot\*(Aq});
\&
\&  # Mojolicious::Lite
\&  plugin \*(AqAutoSecrets\*(Aq;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Mojolicious::Plugin::AutoSecrets is a Mojolicious plugin that takes care
of generating, storing, and rotating your \*(L"secrets\*(R" in Mojolicious.
.SS "\s-1WARNING\s0"
.IX Subsection "WARNING"
Secrets are used to ensure integrity and trust Mojolicious default session
cookies.  Letting code manage them means that code becomes part of your
security.  Read this documentation and review this code!
.PP
Take it from me, never trust a programmer.
.SH "OVERVIEW"
.IX Header "OVERVIEW"
Mojolicious::Plugin::AutoSecrets requires no configuration, but does support
a few options:
.SS "path"
.IX Subsection "path"
Default: \f(CW\*(C`.mojo\-secrets\*(C'\fR in \*(L"home\*(R" in Mojolicious
.PP
Accepts any file path for storing secrets and checking age.  It will be created
if it doesn't exist.
.SS "mode"
.IX Subsection "mode"
Default: \f(CW0600\fR
.PP
The file mode set when creating \*(L"path\*(R".
.SS "expire_days"
.IX Subsection "expire_days"
Default: \f(CW60\fR
.PP
After \*(L"expire_days\*(R" days, generate a new secret and add it to the front of
the list.
.SS "prune"
.IX Subsection "prune"
Default: \f(CW3\fR
.PP
The secrets list will be pruned to this size as it is rotated.
.SS "generator"
.IX Subsection "generator"
Default: \f(CW\*(C`Mojolicious::Plugin::AutoSecrets::generator\*(C'\fR
.PP
Allows specifying a code ref that will be invoked with no arguments to generate
a new secret when necessary.
.SH "INHERITANCE"
.IX Header "INHERITANCE"
Mojolicious::Plugin::AutoSecrets inherits all methods and attributes from
Mojolicious::Plugin and implements the following.
.SH "METHODS"
.IX Header "METHODS"
.SS "register"
.IX Subsection "register"
.Vb 1
\&  $plugin\->register(Mojolicious\->new);
.Ve
.PP
Register plugin in Mojolicious application.  Upon registration, this plugin
will generate, and store and rotate if necessary, secrets for the application.
An optional config hashref may tweak behavior, see \*(L"\s-1OVERVIEW\*(R"\s0.
.PP
If there are secrets already set at the time register executes, those secrets
\&\fBwill not\fR be stored as managed secrets in \*(L"path\*(R", and managed secrets will
be placed \fBbefore\fR existing secrets.  This should make it easy to move to or
from AutoSecrets.
.SH "FUNCTIONS"
.IX Header "FUNCTIONS"
.SS "generator"
.IX Subsection "generator"
The default secret generator, using Session::Token
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.IP "\(bu" 4
Mojolicious
.IP "\(bu" 4
Mojolicious::Sessions
.IP "\(bu" 4
\&\*(L"signed_cookie\*(R" in Mojolicious::Controller
.SH "AUTHOR"
.IX Header "AUTHOR"
Meredith Howard <mhoward@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2019 by Meredith Howard.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

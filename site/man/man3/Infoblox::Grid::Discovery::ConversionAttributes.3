.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Infoblox::Grid::Discovery::ConversionAttributes 3"
.TH Infoblox::Grid::Discovery::ConversionAttributes 3 "2018-06-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Infoblox::Grid::Discovery::ConversionAttributes \- conversion attributes.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The object represents the list of attributes for discovery data conversion.
.SH "SESSION METHODS"
.IX Header "SESSION METHODS"
The object does not support any session methods.
.SH "METHODS"
.IX Header "METHODS"
.SS "\fBconfigure_for_dhcp()\fP"
.IX Subsection "configure_for_dhcp()"
.RS 4
Use this method to set the configure_for_dhcp flag of a \s-1DHCP\s0 Host Address object.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to set the configure_for_dhcp flag or \*(L"false\*(R" to deactivate/unset it. The default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Set value
\& my $value = $conversion_attributes\->configure_for_dhcp(\*(Aqtrue\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "\fBconfigure_for_dns()\fP"
.IX Subsection "configure_for_dns()"
.RS 4
Use this method to set the configure_for_dns flag of a \s-1DNS\s0 host.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to set the configure_for_dns flag or \*(L"false\*(R" to deactivate/unset it. The default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Set value
\& my $value = $conversion_attributes\->configure_for_dns(\*(Aqtrue\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "\fBdisabled()\fP"
.IX Subsection "disabled()"
.RS 4
Use this method to set or retrieve the flag that indicates whether the target object should be disabled or not.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to set the disable flag or \*(L"false\*(R" to deactivate/unset it. The default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Set value
\& my $value = $conversion_attributes\->disable(\*(Aqtrue\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "\fBcomment()\fP"
.IX Subsection "comment()"
.RS 4
Use this method to set or retrieve a descriptive comment.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Desired comment in string format with a maximum of 256 bytes. The default value is undefined.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Set value
\& my $value = $conversion_attributes\->comment(\*(Aqtest comment\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "\fBzone()\fP"
.IX Subsection "zone()"
.RS 4
Use this method to set the authoritative zone for \s-1DNS\s0 record.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an Infoblox::DNS::Zone object.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 3
\& my $zone = $discovery\->get(\*(Aqobject\*(Aq => \*(AqInfoblox::DNS::Zone\*(Aq, \*(Aqname\*(Aq => \*(Aqpapi.com\*(Aq);
\& #Set value
\& my $value = $conversion_attributes\->zone($zone);
.Ve
.RE
.RS 4
.RE
.SH "AUTHOR"
.IX Header "AUTHOR"
Infoblox Inc. <http://www.infoblox.com/>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Infoblox::Grid::Discovery, Infoblox::DNS::Zone.
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2017 Infoblox Inc.

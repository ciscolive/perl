.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Mojolicious::Plugin::Memorize 3"
.TH Mojolicious::Plugin::Memorize 3 "2020-07-27" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mojolicious::Plugin::Memorize \- Memorize part of your Mojolicious template
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\& use Mojolicious::Lite;
\& plugin \*(AqMemorize\*(Aq;
\&
\& any \*(Aq/\*(Aq => \*(Aqindex\*(Aq;
\&
\& any \*(Aq/reset\*(Aq => sub {
\&   my $self = shift;
\&   $self\->memorize\->expire(\*(Aqaccess\*(Aq);
\&   $self\->redirect_to(\*(Aq/\*(Aq);
\& };
\&
\& app\->start;
\&
\& _\|_DATA_\|_
\&
\& @@ index.html.ep
\&
\& %= memorize access => { expires => 0 } => begin
\&   This page was memorized on 
\&   %= scalar localtime
\& % end
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This plugin provides the functionality to easily memorize a portion of a
template, to prevent re-evaluation. This may be useful when a portion of your
response is expensive to generate but changes rarely (a menu for example).
.PP
The \f(CW\*(C`memorize\*(C'\fR helper derives from the helper that was removed from
\&\f(CW\*(C`Mojolicious\*(C'\fR at version 4.0, with two major changes. The underlying plugin
object is returned when no arguments are passed and the system is resiliant
against time jumps.
.SH "HELPERS"
.IX Header "HELPERS"
.ie n .IP """memorize( [$name,] [$args,] [$template_block] )""" 4
.el .IP "\f(CWmemorize( [$name,] [$args,] [$template_block] )\fR" 4
.IX Item "memorize( [$name,] [$args,] [$template_block] )"
When called with arguments, this helper wraps the functionality of the
\&\f(CW\*(C`memorize\*(C'\fR method below. See its documentation for usage.
.Sp
When called without arguments, the plugin object is returned, allowing the use
of other plugin methods or access to the plugin's cache.
.SH "ATTRIBUTES"
.IX Header "ATTRIBUTES"
.ie n .IP """cache""" 4
.el .IP "\f(CWcache\fR" 4
.IX Item "cache"
A hash reference containing the memorized template content and other data.
.SH "METHODS"
.IX Header "METHODS"
.ie n .IP """expire( $name )""" 4
.el .IP "\f(CWexpire( $name )\fR" 4
.IX Item "expire( $name )"
This method allows for manually expiring a memorized template block. This may
useful if the template is set to never expire or when the underlying content is
known to have changed.
.Sp
This is an example of the utility of having access to the underlying hash. In
the original implementation of the core helper, this access was not available.
.ie n .IP """memorize( [$name,] [$args,] $template_block )""" 4
.el .IP "\f(CWmemorize( [$name,] [$args,] $template_block )\fR" 4
.IX Item "memorize( [$name,] [$args,] $template_block )"
This method behaves as the old helper did. It takes as many as three arguments,
the final of which must be a template block (see \*(L"Blocks\*(R" in Mojolicious::Lite) to
be memorized. The first argument may be a string which is the name (key) of the
memorized template (used for later access); if this is not provided one will be
generated. A hashref may also be passed in which is used for additional
arguments.
.Sp
As of this writing, the only available argument are \f(CW\*(C`duration\*(C'\fR and \f(CW\*(C`expires\*(C'\fR. 
The \f(CW\*(C`duration\*(C'\fR key specifies the number of seconds that the template should be
memorized, while the \f(CW\*(C`expires\*(C'\fR key specifies a time (epoch seconds) after which
the template should be re-evaluated. \f(CW\*(C`duration\*(C'\fR is the recommened usage,
\&\f(CW\*(C`expires\*(C'\fR is provided for historical reasons, and is implemented using
\&\f(CW\*(C`duration\*(C'\fR. If both are provided, \f(CW\*(C`duration\*(C'\fR is used.
.Sp
Note that either key may be set to zero to prevent timed expiration.
.ie n .IP """register""" 4
.el .IP "\f(CWregister\fR" 4
.IX Item "register"
This method is called upon loading the plugin and probably is not useful for
other purposes.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.IP "\(bu" 4
Mojolicious
.IP "\(bu" 4
Mojolicious::Plugin
.IP "\(bu" 4
Mojolicious::Guides::Rendering
.SH "SOURCE REPOSITORY"
.IX Header "SOURCE REPOSITORY"
<http://github.com/jberger/Mojolicious\-Plugin\-Memorize>
.SH "AUTHORS"
.IX Header "AUTHORS"
.IP "Joel Berger, <joel.a.berger@gmail.com>" 4
.IX Item "Joel Berger, <joel.a.berger@gmail.com>"
.PD 0
.IP "Sebastian Riedel" 4
.IX Item "Sebastian Riedel"
.PD
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright (C) 2013 by Joel Berger and Sebastian Riedel
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.

.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "PKCS12 3"
.TH PKCS12 3 "2020-06-04" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Crypt::OpenSSL::PKCS12 \- Perl extension to OpenSSL's PKCS12 API.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  use Crypt::OpenSSL::PKCS12;
\&
\&  my $pass   = "your password";
\&  my $pkcs12 = Crypt::OpenSSL::PKCS12\->new_from_file(\*(Aqcert.p12\*(Aq);
\&
\&  print $pkcs12\->certificate($pass);
\&  print $pkcs12\->private_key($pass);
\&
\&  if ($pkcs12\->mac_ok($pass)) {
\&  ....
\&
\&  $pkcs12\->create(\*(Aqtest\-cert.pem\*(Aq, \*(Aqtest\-key.pem\*(Aq, $pass, \*(Aqout.p12\*(Aq, "friendly name");
.Ve
.SH "ABSTRACT"
.IX Header "ABSTRACT"
.Vb 1
\&  Crypt::OpenSSL::PKCS12 \- Perl extension to OpenSSL\*(Aqs PKCS12 API.
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
.Vb 1
\&  This implements a small bit of OpenSSL\*(Aqs PKCS12 API.
.Ve
.SH "FUNCTIONS"
.IX Header "FUNCTIONS"
.IP "\(bu" 4
new( )
.IP "\(bu" 4
new_from_string( \f(CW$string\fR )
.IP "\(bu" 4
new_from_file( \f(CW$filename\fR )
.Sp
Create a new Crypt::OpenSSL::PKCS12 instance.
.IP "\(bu" 4
certificate( [$pass] )
.Sp
Get the Base64 representation of the certificate.
.IP "\(bu" 4
private_key( [$pass] )
.Sp
Get the Base64 representation of the private key.
.IP "\(bu" 4
as_string( [$pass] )
.Sp
Get the binary represenation as a string.
.IP "\(bu" 4
mac_ok( [$pass] )
.Sp
Verifiy the certificates Message Authentication Code
.IP "\(bu" 4
changepass( \f(CW$old\fR, \f(CW$new\fR )
.Sp
Change a certificate's password.
.IP "\(bu" 4
create( \f(CW$cert\fR, \f(CW$key\fR, \f(CW$pass\fR, \f(CW$output_file\fR, \f(CW$friendly_name\fR )
.Sp
Create a new \s-1PKCS12\s0 certificate. \f(CW$cert\fR & \f(CW$key\fR may either be strings or filenames.
.Sp
\&\f(CW$friendly_name\fR is optional.
.SH "EXPORT"
.IX Header "EXPORT"
None by default.
.PP
On request:
.IP "\(bu" 4
\&\s-1NOKEYS\s0
.IP "\(bu" 4
\&\s-1NOCERTS\s0
.IP "\(bu" 4
\&\s-1INFO\s0
.IP "\(bu" 4
\&\s-1CLCERTS\s0
.IP "\(bu" 4
\&\s-1CACERTS\s0
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fBOpenSSL\fR\|(1), Crypt::OpenSSL::X509, Crypt::OpenSSL::RSA, Crypt::OpenSSL::Bignum
.SH "AUTHOR"
.IX Header "AUTHOR"
Dan Sully, <daniel@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright 2004\-2018 by Dan Sully
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself, either Perl version 5.8.8 or,
at your option, any later version of Perl 5 you may have available.

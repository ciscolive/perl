.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Infoblox::IPAM::DiscoveryTask::VServer 3"
.TH Infoblox::IPAM::DiscoveryTask::VServer 3 "2018-06-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Infoblox::IPAM::DiscoveryTask::VServer  \- VMWare discovery server object.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This object contains information about the vSphere servers on which the \s-1VM\s0 discovery is performed.
.SH "CONSTRUCTOR"
.IX Header "CONSTRUCTOR"
.Vb 8
\& my $vserver = Infoblox::IPAM::DiscoveryTask::VServer\->new(
\&         fqdn_or_ip   => $string,           #Required.
\&         password     => $string,           #Required.
\&         username     => $string,           #Required.
\&         disable      => "true" | "false",  #Optional. Default is "false".
\&         encryption   => "true" | "false",  #Optional. Default is "true".
\&         port         => $num,              #Optional. Default is 443.
\& );
.Ve
.SH "MODULE METHODS"
.IX Header "MODULE METHODS"
You can apply the following functions to a VMware vSphere server.
.SS "Infoblox::IPAM::DiscoveryTask\->vservers( )"
.IX Subsection "Infoblox::IPAM::DiscoveryTask->vservers( )"
.RS 4
Use this function to specify the vSphere server on which the \s-1VM\s0 discovery is performed. See Infoblox::IPAM::DiscoveryTask\->vservers( ) for parameters and returned values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 12
\& my $vserver1 = Infoblox::IPAM::DiscoveryTask::VServer\->new(
\&        fqdn_or_ip => "vcenter.com",
\&        username => "test1",
\&        password => "test1",
\&    );
\& my $vserver2 = Infoblox::IPAM::DiscoveryTask::VServer\->new(
\&        fqdn_or_ip => "10.2.3.4",
\&        username => "test2",
\&        password => "test2",
\&    );
\&  #Modifying vserver
\&  $discovery_task\->vservers([$vserver1, $vserver2]);
.Ve
.RE
.RS 4
.RE
.SH "METHODS"
.IX Header "METHODS"
This section describes all the methods that can be used to retrieve the attribute values of a vSphere server.
.SS "disable( )"
.IX Subsection "disable( )"
.RS 4
Use this method to set or retrieve the disable flag of a vSphere server.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to disable the vSphere server or \*(L"false\*(R" to enable the server. The default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get disable flag
\& my $disable = $vserver\->disable();
\& #Modify disable
\& $vserver\->disable("true");
.Ve
.RE
.RS 4
.RE
.SS "encryption( )"
.IX Subsection "encryption( )"
.RS 4
Use this method to set or retrieve the encryption flag of a vSphere server.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to enable encryption or specify \*(L"false\*(R" to disable encryption on the vSphere server. The default value is \*(L"true\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get encryption
\& my $encryption = $vserver\->encryption();
\& #Modify encryption
\& $vserver\->encryption("false");
.Ve
.RE
.RS 4
.RE
.SS "fqdn_or_ip( )"
.IX Subsection "fqdn_or_ip( )"
.RS 4
Use this method to retrieve the \s-1FQDN\s0 (Fully Qualified Domain Name) or \s-1IP\s0 address of the vShpere server.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The string that contains the \s-1FQDN\s0 or the \s-1IP\s0 address of the vSphere server.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get fqdn_or_ip
\& my $fqdn_or_ip = $vserver\->fqdn_or_ip();
\& #Modify fqdn_or_ip
\& $vserver\->fqdn_or_ip("vdiscovery.example.com");
.Ve
.RE
.RS 4
.RE
.SS "password( )"
.IX Subsection "password( )"
.RS 4
Use this method to set the user password on the vSphere server. This is a write-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
String containing password.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Modify password
\& $vserver\->password("infobloxx");
.Ve
.RE
.RS 4
.RE
.SS "port( )"
.IX Subsection "port( )"
.RS 4
Use this method to retrieve the connection port that the vSphere server uses.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid values are between 1 and 65535. The default value is 443.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get port
\& my $port = $vserver\->port();
\& #Modify port
\& $vserver\->port(444);
.Ve
.RE
.RS 4
.RE
.SS "username( )"
.IX Subsection "username( )"
.RS 4
Use this method to set or retrieve the user name on the VSphere server.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The username in the string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get username
\& my $username = $vserver\->username();
\& #Modify username
\& $vserver\->username("someuser");
.Ve
.RE
.RS 4
.RE
.SH "AUTHOR"
.IX Header "AUTHOR"
Infoblox Inc. <http://www.infoblox.com/>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Infoblox::IPAM::DiscoveryTask, Infoblox::IPAM::DiscoveryTask\->\fBvservers()\fR
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2017 Infoblox Inc.

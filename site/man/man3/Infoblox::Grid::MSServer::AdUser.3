.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Infoblox::Grid::MSServer::AdUser 3"
.TH Infoblox::Grid::MSServer::AdUser 3 "2018-06-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Infoblox::Grid::MSServer::AdUser \- the Active Directory User object.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The object provides information about synchronization of the Active Directory users.
.SH "CONSTRUCTOR"
.IX Header "CONSTRUCTOR"
.Vb 8
\& my $ad_user = Infoblox::Grid::MSServer::AdUser\->new(
\&    enable_user_sync                  => "true" | "false", # Optional / Default is \*(Aqtrue\*(Aq
\&    login_name                        => $string,          # Optional / Default is undefined
\&    login_password                    => $string,          # Optional / Default is undefined
\&    synchronization_interval          => $uint,            # Optional / Default is undefined
\&    override_login                    => "true" | "false", # Optional / Default is \*(Aqfalse\*(Aq
\&    override_enable_user_sync         => "true" | "false", # Optional / Default is \*(Aqfalse\*(Aq
\&    override_synchronization_interval => "true" | "false", # Optional / Default is \*(Aqfalse\*(Aq
.Ve
.SH "SESSION METHODS"
.IX Header "SESSION METHODS"
The object does not support any session methods. It is retrieved as a part of the Microsoft Server object.
.SH "MODULE METHODS"
.IX Header "MODULE METHODS"
The following functions can be applied to a Active Directory User object.
.SS "Infoblox::Grid::MSServer\->ad_user( )"
.IX Subsection "Infoblox::Grid::MSServer->ad_user( )"
.RS 4
Use this method to set or retrieve structure containing Active Directory User synchronization information. See Infoblox::Grid::MSServer\->\fBad_user()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get ad_user value
\& my $ad_user = $msserver\->ad_user();
\& #Modify ad_user value
\& my $res = $msserver\->ad_user($ad_user);
.Ve
.RE
.RS 4
.RE
.SH "METHODS"
.IX Header "METHODS"
this section describes all the methods that you can use to set or retrieve the attribute values of the object.
.SS "enable_user_sync( )"
.IX Subsection "enable_user_sync( )"
.RS 4
Use this method to enable or disable the Active Directory user information synchronization.
.Sp
Setting this method to a defined value implicitly sets the override_enable_user_sync method to \*(L"true\*(R". Setting the parameter to undefined causes the appliance to use the grid default and automatically resets the override_enable_user_sync method to \*(L"false\*(R".
.Sp
Note that when enable_user_sync is set to a defined value and override_enable_user_sync is set to \*(L"false\*(R", the last operation takes precedence. Thus the sequence \f(CW$object\fR\->enable_user_sync(\*(L"true\*(R"); \f(CW$object\fR\->override_enable_user_sync(\*(L"false\*(R"); will set override_enable_user_sync to \*(L"false\*(R", and the sequence \f(CW$object\fR\->override_enable_user_sync(\*(L"false\*(R"); \f(CW$object\fR\->enable_user_sync(\*(L"true\*(R"); will result in override_enable_user_sync=\*(L"true\*(R".
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to enable Active Directory user information synchronization or \*(L"false\*(R" to forbid it. Default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get enable_user_sync value
\& my $enable_user_sync = $ad_user\->enable_user_sync();
\& #Modify enable_user_sync value
\& $ad_user\->enable_user_sync("true");
.Ve
.RE
.RS 4
.RE
.SS "last_sync_time( )"
.IX Subsection "last_sync_time( )"
.RS 4
Use this method to retrieve the timestamp of the last Active Directory user information synchronization attempt. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get last_sync_time value
\& my $last_sync_time = $ad_user\->last_sync_time();
.Ve
.RE
.RS 4
.RE
.SS "last_sync_detail( )"
.IX Subsection "last_sync_detail( )"
.RS 4
Use this method to retrieve a string containing details of the last Active Directory user information synchronization attempt. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get last_sync_detail value
\& my $last_sync_detail = $ad_user\->last_sync_detail();
.Ve
.RE
.RS 4
.RE
.SS "last_sync_status( )"
.IX Subsection "last_sync_status( )"
.RS 4
Use this method to retrieve a string containing status of the last Active Directory user information synchronization attempt. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value that can be '\s-1OK\s0', '\s-1WARNING\s0' or '\s-1ERROR\s0'.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get last_sync_status value
\& my $last_sync_status = $ad_user\->last_sync_status();
.Ve
.RE
.RS 4
.RE
.SS "login_name( )"
.IX Subsection "login_name( )"
.RS 4
Use this method to set or retrieve the Active Directory user login name.
.Sp
Setting this method to a defined value implicitly sets the override_login method to \*(L"true\*(R". Setting the parameter to undefined causes the appliance to use the Grid default and automatically resets the override_login attribute to \*(L"false\*(R".
.Sp
Note that when login_name is set to a defined value and override_dlogin_name is set to \*(L"false\*(R", the last operation takes precedence. Thus the sequence \f(CW$object\fR\->login_name('newuser'); \f(CW$object\fR\->override_login(\*(L"false\*(R"); will set override_login to \*(L"false\*(R", and the sequence \f(CW$object\fR\->override_login(\*(L"false\*(R"); \f(CW$object\fR\->login_name('newuser'); will result in override_login=\*(L"true\*(R".
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.Sp
When setting a value that requires a domain name, prepend the domain information followed by a backslash to the username: \*(L"domain\eusername\*(R".
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is a string that contains the login name.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get login value
\& my $login = $ad_user\->login_name();
\& #Modify login value
\& $ad_user\->login_name("newuser");
.Ve
.RE
.RS 4
.RE
.SS "login_password( )"
.IX Subsection "login_password( )"
.RS 4
Use this method to set a password for the Active Directory user. This field is used only if the login field for this member is defined. This is a write-only attribute.
.Sp
This field cannot be retrieved.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is a string that contains the password.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Set the password
\& $ad_user\->login_password("iG&ojG97Y");
.Ve
.RE
.RS 4
.RE
.SS "override_enable_user_sync( )"
.IX Subsection "override_enable_user_sync( )"
.RS 4
The override_enable_user_sync attribute controls whether the enable_user_sync method values of the Active Directory user are used, instead of the Grid default.
.Sp
The override_enable_user_sync attribute can be specified explicitly. It is also set implicitly when enable_user_sync is set to a defined value.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Set the parameter to \*(L"true\*(R" to override the Grid-level setting for enable_user_sync. Set the parameter to \*(L"false\*(R" to inherit the Grid-level setting for enable_user_sync. The default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get override_enable_user_sync
\& my $override_enable_user_sync = $ad_user\->override_enable_user_sync();
\& #Modify override_enable_user_sync
\& $ad_user\->override_enable_user_sync("true");
.Ve
.RE
.RS 4
.RE
.SS "override_login( )"
.IX Subsection "override_login( )"
.RS 4
The override_login attribute controls whether the login_name method values of the Active Directory user are used, instead of the Grid default.
.Sp
The override_login attribute can be specified explicitly. It is also set implicitly when login_name is set to a defined value.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Set the parameter to \*(L"true\*(R" to override the Grid-level setting for login_name. Set the parameter to \*(L"false\*(R" to inherit the Grid-level setting for login_name. The default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get override_login
\& my $override_login = $ad_user\->override_login();
\& #Modify override_login
\& $ad_user\->override_login("true");
.Ve
.RE
.RS 4
.RE
.SS "override_synchronization_interval( )"
.IX Subsection "override_synchronization_interval( )"
.RS 4
The override_synchronization_interval attribute controls whether the synchronization_interval method values of the Active Directory user are used, instead of the Grid default.
.Sp
The override_synchronization_interval attribute can be specified explicitly. It is also set implicitly when synchronization_interval is set to a defined value.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Set the parameter to \*(L"true\*(R" to override the Grid-level setting for synchronization_interval. Set the parameter to \*(L"false\*(R" to inherit the Grid-level setting for synchronization_interval. The default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get override_synchronization_interval
\& my $override_synchronization_interval = $ad_user\->override_synchronization_interval();
\& #Modify override_synchronization_interval
\& $ad_user\->override_synchronization_interval("true");
.Ve
.RE
.RS 4
.RE
.SS "synchronization_interval( )"
.IX Subsection "synchronization_interval( )"
.RS 4
Use this method to set or retrieve the synchronization interval of the Active Directory user.
.Sp
Setting this method to a defined value implicitly sets the override_synchronization_interval method to \*(L"true\*(R". Setting the parameter to undefined causes the appliance to use the Grid default and automatically resets the override_synchronization_interval attribute to \*(L"false\*(R".
.Sp
Note that when synchronization_interval is set to a defined value and override_dsynchronization_interval is set to \*(L"false\*(R", the last operation takes precedence. Thus the sequence \f(CW$object\fR\->synchronization_interval(10); \f(CW$object\fR\->override_synchronization_interval(\*(L"false\*(R"); will set override_synchronization_interval to \*(L"false\*(R", and the sequence \f(CW$object\fR\->override_synchronization_interval(\*(L"false\*(R"); \f(CW$object\fR\->synchronization_interval(10); will result in override_synchronization_interval=\*(L"true\*(R".
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an unsigned integer.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get synchronization_interval value
\& my $synchronization_interval = $ad_user\->synchronization_interval();
\& #Modify synchronization_interval value
\& $ad_user\->synchronization_interval(10);
.Ve
.RE
.RS 4
.RE
.SH "AUTHOR"
.IX Header "AUTHOR"
Infoblox Inc. <http://www.infoblox.com/>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Infoblox::Grid::MSServer
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2017 Infoblox Inc.

.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Cisco::UCS::Blade::Adaptor 3"
.TH Cisco::UCS::Blade::Adaptor 3 "2016-05-25" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Cisco::UCS::Blade::CPU \- Class for operations with a Cisco UCS Blade CPUs.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&        # Print all blades in all chassis along with a cacti\-style listing of 
\&        # the blades current, minimum and maximum power consumption values.
\&
\&        map { 
\&                print "Chassis: " . $_\->id ."\en";
\&                map { print "\etCommon::PowerStats: "
\&                          . $_\->id ." \- Power consumed \-"
\&                          . " Current:". $_\->power_stats\->consumed_power 
\&                          . " Max:". $_\->power_stats\->consumed_power_max 
\&                          . " Min:". $_\->power_stats\->consumed_power_min ."\en" 
\&                } 
\&                sort { $a\->id <=> $b\->id } $_\->get_blades
\&        } 
\&        sort { 
\&                $a\->id <=> $b\->id 
\&        } $ucs\->get_chassiss;
\&
\&        # Prints something like:
\&        #
\&        # Chassis: 1
\&        #       Blade: 1 \- Power consumed \- Current:115.656647 Max:120.913757 Min:110.399513
\&        #       Blade: 2 \- Power consumed \- Current:131.427994 Max:139.313675 Min:126.170883
\&        #       Blade: 3 \- Power consumed \- Current:131.427994 Max:157.713593 Min:126.170883
\&        #       Blade: 4 \- Power consumed \- Current:0.000000 Max:0.000000 Min:0.000000
\&        #       Blade: 5 \- Power consumed \- Current:0.000000 Max:0.000000 Min:0.000000
\&        #       Blade: 6 \- Power consumed \- Current:0.000000 Max:0.000000 Min:0.000000
\&        #       Blade: 7 \- Power consumed \- Current:0.000000 Max:0.000000 Min:0.000000
\&        #       Blade: 8 \- Power consumed \- Current:0.000000 Max:0.000000 Min:0.000000
\&        # Chassis: 2
\&        #       Blade: 1 \- Power consumed \- Current:131.427994 Max:136.685120 Min:128.799438
\&        #       Blade: 2 \- Power consumed \- Current:126.170883 Max:131.427994 Min:123.542320
\&        #       Blade: 3 \- Power consumed \- Current:134.056564 Max:155.085037 Min:131.427994
\&        # ...etc.
.Ve
.SH "DECRIPTION"
.IX Header "DECRIPTION"
Cisco::UCS::Blade::CPU is a class providing operations with a Cisco \s-1UCS\s0 Blade 
\&\s-1CPU.\s0
.PP
Note that you are not supposed to call the constructor yourself, rather a 
Cisco::UCS::Blade::CPU object is created automatically by method calls on a 
Cisco::UCS::Blade object.
.SH "METHODS"
.IX Header "METHODS"
\fIarch\fR
.IX Subsection "arch"
.PP
Returns the \s-1CPU\s0 architecture.
.PP
\fIcores\fR
.IX Subsection "cores"
.PP
Returns the number of \s-1CPU\s0 cores.
.PP
\fIcores_enabled\fR
.IX Subsection "cores_enabled"
.PP
Returns the number of \s-1CPU\s0 cores enabled.
.PP
\fIenv_stats\fR
.IX Subsection "env_stats"
.PP
Returns the environmental status and statistics of the \s-1CPU\s0 as a 
Cisco::UCS::Common::EnvironmentalStats object.
.PP
\fIdn\fR
.IX Subsection "dn"
.PP
Returns the distinguished name of the \s-1CPU\s0 in the \s-1UCS\s0 information management 
heirarchy.
.PP
\fIid\fR
.IX Subsection "id"
.PP
Returns the integer \s-1ID\s0 of the \s-1CPU.\s0
.PP
\fImodel\fR
.IX Subsection "model"
.PP
Returns the \s-1CPU\s0 model.
.PP
\fIoperability\fR
.IX Subsection "operability"
.PP
Returns the \s-1CPU\s0 operability state.
.PP
\fIoperational_reason\fR
.IX Subsection "operational_reason"
.PP
Returns the \s-1CPU\s0 operational reason.
.PP
\fIoperational_state\fR
.IX Subsection "operational_state"
.PP
Returns the \s-1CPU\s0 operational state.
.PP
\fIperf\fR
.IX Subsection "perf"
.PP
Returns the \s-1CPU\s0 performance state.
.PP
\fIpower\fR
.IX Subsection "power"
.PP
Returns the \s-1CPU\s0 power state.
.PP
\fIpresence\fR
.IX Subsection "presence"
.PP
Returns the \s-1CPU\s0 presence state.
.PP
\fIrevision\fR
.IX Subsection "revision"
.PP
Returns the \s-1CPU\s0 revision level.
.PP
\fIserial\fR
.IX Subsection "serial"
.PP
Returns the \s-1CPU\s0 serial number.
.PP
\fIsocket\fR
.IX Subsection "socket"
.PP
Returns the \s-1CPU\s0 socket.
.PP
\fIspeed\fR
.IX Subsection "speed"
.PP
Returns the \s-1CPU\s0 speed.
.PP
\fIstepping\fR
.IX Subsection "stepping"
.PP
Returns the \s-1CPU\s0 stepping.
.PP
\fIthermal\fR
.IX Subsection "thermal"
.PP
Returns the \s-1CPU\s0 thermal state.
.PP
\fIthreads\fR
.IX Subsection "threads"
.PP
Returns number of the \s-1CPU\s0 threads.
.PP
\fIvendor\fR
.IX Subsection "vendor"
.PP
Returns the \s-1CPU\s0 vendor string.
.PP
\fIvisibility\fR
.IX Subsection "visibility"
.PP
Returns the CPUs visibility.
.PP
\fIvoltage\fR
.IX Subsection "voltage"
.PP
Returns the CPUs voltage.
.SH "AUTHOR"
.IX Header "AUTHOR"
Luke Poskitt, \f(CW\*(C`<ltp at cpan.org>\*(C'\fR
.SH "BUGS"
.IX Header "BUGS"
Please report any bugs or feature requests to 
\&\f(CW\*(C`bug\-cisco\-ucs\-blade\-cpu at rt.cpan.org\*(C'\fR, or through the web interface at 
<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=Cisco\-UCS\-Blade\-CPU>.  I will 
be notified, and then you'll automatically be notified of progress on your bug 
as I make changes.
.SH "SUPPORT"
.IX Header "SUPPORT"
You can find documentation for this module with the perldoc command.
.PP
.Vb 1
\&    perldoc Cisco::UCS::Blade::CPU
.Ve
.PP
You can also look for information at:
.IP "\(bu" 4
\&\s-1RT: CPAN\s0's request tracker
.Sp
<http://rt.cpan.org/NoAuth/Bugs.html?Dist=Cisco\-UCS\-Blade\-CPU>
.IP "\(bu" 4
AnnoCPAN: Annotated \s-1CPAN\s0 documentation
.Sp
<http://annocpan.org/dist/Cisco\-UCS\-Blade\-CPU>
.IP "\(bu" 4
\&\s-1CPAN\s0 Ratings
.Sp
<http://cpanratings.perl.org/d/Cisco\-UCS\-Blade\-CPU>
.IP "\(bu" 4
Search \s-1CPAN\s0
.Sp
<http://search.cpan.org/dist/Cisco\-UCS\-Blade\-CPU/>
.SH "ACKNOWLEDGEMENTS"
.IX Header "ACKNOWLEDGEMENTS"
.SH "LICENSE AND COPYRIGHT"
.IX Header "LICENSE AND COPYRIGHT"
Copyright 2013 Luke Poskitt.
.PP
This program is free software; you can redistribute it and/or modify it
under the terms of either: the \s-1GNU\s0 General Public License as published
by the Free Software Foundation; or the Artistic License.
.PP
See http://dev.perl.org/licenses/ for more information.

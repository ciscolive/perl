.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Cisco::UCS::Interconnect::Stats 3"
.TH Cisco::UCS::Interconnect::Stats 3 "2016-05-25" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Cisco::UCS::Interconnect::Stats \- Utility class for representing Cisco UCS 
Interconnect system statistics.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&        # Display the current, min, max and average load
\&        my $stats = $ucs\->interconnect(A)\->stats;
\&
\&        printf( "%20s%10s%10s%10s\en", 
\&                \*(Aqcurrent\*(Aq,
\&                \*(Aqaverage\*(Aq,
\&                \*(Aqmin\*(Aq,
\&                \*(Aqmax\*(Aq 
\&        );
\&
\&        printf( "Load: %14s%10s%10s%10s\en",
\&                $stats\->load,
\&                $stats\->load_avg,
\&                $stats\->load_min,
\&                $stats\->load_max
\&        );
\&
\&        # Prints something like:
\&                     current   average       min       max
\&        Load:       1.250000  1.495000  1.030000  1.800000
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Cisco::UCS::Interconnect::Stats is a utility class for representing Cisco \s-1UCS\s0
Fabric Interconnect system statistics such as load and memory usage.
.PP
Please note that you should not need to call the constructor directly, rather 
a Cisco::UCS::Interconnect::Stats object will be created for you when invoking
methods in parent classes, such as the \fB\fBstats()\fB\fR method in 
Cisco::UCS::Interconnect.
.SS "\s-1METHODS\s0"
.IX Subsection "METHODS"
\fIload\fR
.IX Subsection "load"
.PP
Returns the current load for the target fabric interconnect.
.PP
\fIload_avg\fR
.IX Subsection "load_avg"
.PP
Returns the current load average for the target fabric interconnect.
.PP
\fIload_min\fR
.IX Subsection "load_min"
.PP
Returns the minimum load observed for the fabric interconnect during the
observation period.
.PP
\fIload_max\fR
.IX Subsection "load_max"
.PP
Returns the maximum load observed for the fabric interconnect during the
observation period.
.PP
\fImem_available\fR
.IX Subsection "mem_available"
.PP
Returns the current amount of memory available (in \s-1MB\s0) for the target fabric 
interconnect.
.PP
\fImem_available_avg\fR
.IX Subsection "mem_available_avg"
.PP
Returns the average amount of memory available (in \s-1MB\s0) for the target fabric 
interconnect during the observation period.
.PP
\fImem_available_min\fR
.IX Subsection "mem_available_min"
.PP
Returns the minimum amount of memory available (in \s-1MB\s0) for the target fabric 
interconnect during the observation period.
.PP
\fImem_available_max\fR
.IX Subsection "mem_available_max"
.PP
Returns the maximum amount of memory available (in \s-1MB\s0) for the target fabric 
interconnect during the observation period.
.PP
\fImem_cached\fR
.IX Subsection "mem_cached"
.PP
Returns the current amount of memory cached (in \s-1MB\s0) for the target fabric 
interconnect.
.PP
\fImem_cached_avg\fR
.IX Subsection "mem_cached_avg"
.PP
Returns the observed average amount of memory cached (in \s-1MB\s0) for the target 
fabric interconnect during the observation period.
.PP
\fImem_cached_min\fR
.IX Subsection "mem_cached_min"
.PP
Returns the observed minimum amount of memory cached (in \s-1MB\s0) for the target 
fabric interconnect during the observation period.
.PP
\fImem_cached_max\fR
.IX Subsection "mem_cached_max"
.PP
Returns the observed maximum amount of memory cached (in \s-1MB\s0) for the target 
fabric interconnect during the observation period.
.PP
\fIsuspect\fR
.IX Subsection "suspect"
.PP
Returns a boolean (yes or no) value indicating if the statistics should be 
regarded as suspect.
.SH "AUTHOR"
.IX Header "AUTHOR"
Luke Poskitt, \f(CW\*(C`<ltp at cpan.org>\*(C'\fR
.SH "BUGS"
.IX Header "BUGS"
Please report any bugs or feature requests to \f(CW\*(C`bug\-cisco\-ucs at rt.cpan.org\*(C'\fR, 
or through the web interface at 
<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=Cisco\-UCS>.  I will be 
notified, and then you'll automatically be notified of progress on your bug as 
I make changes.
.SH "SUPPORT"
.IX Header "SUPPORT"
You can find documentation for this module with the perldoc command.
.PP
.Vb 1
\&    perldoc Cisco::UCS::Interconnect::Stats
.Ve
.PP
You can also look for information at:
.IP "\(bu" 4
\&\s-1RT: CPAN\s0's request tracker
.Sp
<http://rt.cpan.org/NoAuth/Bugs.html?Dist=Cisco\-UCS>
.IP "\(bu" 4
AnnoCPAN: Annotated \s-1CPAN\s0 documentation
.Sp
<http://annocpan.org/dist/Cisco\-UCS\-Interconnect\-Stats>
.IP "\(bu" 4
\&\s-1CPAN\s0 Ratings
.Sp
<http://cpanratings.perl.org/d/Cisco\-UCS\-Interconnect\-Stats>
.IP "\(bu" 4
Search \s-1CPAN\s0
.Sp
<http://search.cpan.org/dist/Cisco\-UCS\-Interconnect\-Stats/>
.SH "LICENSE AND COPYRIGHT"
.IX Header "LICENSE AND COPYRIGHT"
Copyright 2015 Luke Poskitt.
.PP
This program is free software; you can redistribute it and/or modify it
under the terms of either: the \s-1GNU\s0 General Public License as published
by the Free Software Foundation; or the Artistic License.
.PP
See http://dev.perl.org/licenses/ for more information.

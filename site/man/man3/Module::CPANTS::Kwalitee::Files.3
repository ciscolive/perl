.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Module::CPANTS::Kwalitee::Files 3"
.TH Module::CPANTS::Kwalitee::Files 3 "2019-08-08" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Module::CPANTS::Kwalitee::Files \- Check for various files
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
Find various files and directories that should be part of every self-respecting distribution.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
.SS "Methods"
.IX Subsection "Methods"
\fIorder\fR
.IX Subsection "order"
.PP
Defines the order in which Kwalitee tests should be run.
.PP
Returns \f(CW15\fR, as data generated by \f(CW\*(C`MCK::Files\*(C'\fR is used by all other tests.
.PP
\fIanalyse\fR
.IX Subsection "analyse"
.PP
\&\f(CW\*(C`MCK::Files\*(C'\fR uses \f(CW\*(C`File::Find::Object\*(C'\fR to get a list of all files and directories in a distribution. It checks if certain crucial files are there, and does some other file-specific stuff.
.PP
\fIkwalitee_indicators\fR
.IX Subsection "kwalitee_indicators"
.PP
Returns the Kwalitee Indicators data structure.
.IP "\(bu" 4
has_readme
.IP "\(bu" 4
has_manifest
.IP "\(bu" 4
has_meta_yml
.IP "\(bu" 4
has_buildtool
.IP "\(bu" 4
has_changelog
.IP "\(bu" 4
no_symlinks
.IP "\(bu" 4
has_tests
.IP "\(bu" 4
has_tests_in_t_dir
.IP "\(bu" 4
no_stdin_for_prompting
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Module::CPANTS::Analyse
.SH "AUTHOR"
.IX Header "AUTHOR"
Thomas Klausner <https://metacpan.org/author/domm>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright © 2003–2006, 2009 Thomas Klausner <https://metacpan.org/author/domm>
.PP
You may use and distribute this module according to the same terms
that Perl is distributed under.

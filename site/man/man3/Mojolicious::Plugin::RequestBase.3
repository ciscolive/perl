.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Mojolicious::Plugin::RequestBase 3"
.TH Mojolicious::Plugin::RequestBase 3 "2016-11-18" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mojolicious::Plugin::RequestBase \- Support setting base in frontend proxy
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.SS "Frontend proxy"
.IX Subsection "Frontend proxy"
The \*(L"X\-Request-Base\*(R" header must be set in the frontend proxy.
.PP
.Vb 4
\&  # nxinx
\&  proxy_set_header X\-Request\-Base "https://example.com/myapp";
\&  # or
\&  proxy_set_header X\-Request\-Base "/myapp";
.Ve
.SS "Application"
.IX Subsection "Application"
This plugin will read the \*(L"X\-Request-Base\*(R" header.
.PP
.Vb 2
\&  # Mojolicious
\&  $app\->plugin("RequestBase");
\&
\&  # Mojolicious::Lite
\&  plugin "RequestBase";
.Ve
.SS "Controller"
.IX Subsection "Controller"
\&\s-1URL\s0 generating helpers, such as url_for
will create the correct \s-1URL\s0 using the base \s-1URL\s0 from \f(CW\*(C`X\-Request\-Base\*(C'\fR.
.PP
Here are example with \f(CW\*(C`X\-Request\-Base\*(C'\fR set to \f(CW\*(C`https://example.com/myapp\*(C'\fR
and a request sent to Request to \f(CW\*(C`https://example.com/myapp/foo\*(C'\fR:
.PP
.Vb 2
\&  # /myapp/foo
\&  $c\->url_for;
\&
\&  # https://example.com/myapp/foo
\&  $c\->url_for\->to_abs;
\&
\&  # https://example.com/myapp/some/path
\&  $c\->url_for("/some/path")\->to_abs;
\&
\&  # https://example.com/foo (Probably not what you want)
\&  $c\->req\->url\->to_abs;
.Ve
.SS "Hooks"
.IX Subsection "Hooks"
.SS "before_dispatch"
.IX Subsection "before_dispatch"
In a before_dispatch the router has not yet started,
so you need to pass in the request path to get the expected result:
.PP
.Vb 2
\&  hook before_dispatch => sub {
\&    my $c = shift;
\&
\&    # https://example.com/myapp/foo
\&    $c\->url_for($c\->req\->url\->path)\->to_abs;
\&
\&    # https://example.com/foo (Probably not what you want)
\&    $c\->url_for\->to_abs;
\&  };
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Simple plugin to support Request Base header. Just load it and set
X\-Request-Base in your Frontend Proxy. For instance, if you are using
nginx you could use it like this:
.PP
.Vb 1
\&  proxy_set_header X\-Request\-Base \*(Aqhttps://example.com/myapp\*(Aq;
.Ve
.PP
Note that you can also pass a relative \s-1URL\s0 to retain the original hostname provided by the proxy.
.SH "METHODS"
.IX Header "METHODS"
Mojolicious::Plugin::RequestBase inherits all methods from
Mojolicious::Plugin and implements the following new ones.
.SS "register"
.IX Subsection "register"
.Vb 1
\&  $plugin\->register;
.Ve
.PP
Register plugin in Mojolicious application.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Catalyst::TraitFor::Request::ProxyBase, Mojolicious, Mojolicious::Guides, <http://mojolicio.us>.
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright (C) 2011, Marcus Ramberg.
.PP
This program is free software, you can redistribute it and/or modify it under
the terms of the Artistic License version 2.0.

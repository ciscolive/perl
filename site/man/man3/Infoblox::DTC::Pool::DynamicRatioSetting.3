.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Infoblox::DTC::Pool::DynamicRatioSetting 3"
.TH Infoblox::DTC::Pool::DynamicRatioSetting 3 "2018-06-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Infoblox::DTC::Pool::DynamicRatioSetting \- An DTC Pool dynamic ratio setting object.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The \s-1DTC\s0 Pool dynamic ratio setting object provides settings for dynamic ratio load balancing if you later select preferred
or alternate as the load balancing method.
.SH "CONSTRUCTOR"
.IX Header "CONSTRUCTOR"
.Vb 7
\& my $object = Infoblox::DTC::Pool::DynamicRatioSetting\->new(
\&     method                => \*(AqMONITOR\*(Aq | \*(AqROUND_TRIP_DELAY\*(Aq, # Optional
\&     monitor               => $dtc_monitor,                   # Optional
\&     monitor_metric        => $string,                        # Optional
\&     monitor_weighing      => \*(AqRATIO\*(Aq | \*(AqPRIORITY\*(Aq,           # Optional
\&     invert_monitor_metric => \*(Aqtrue\*(Aq | \*(Aqfalse\*(Aq,               # Optional
\& );
.Ve
.SH "SESSION METHODS"
.IX Header "SESSION METHODS"
The object does not support any session methods.
.SH "MODULE METHODS"
.IX Header "MODULE METHODS"
The following functions can be applied to the object.
.SS "Infoblox::DTC::Pool\->dynamic_ratio_preferred( )"
.IX Subsection "Infoblox::DTC::Pool->dynamic_ratio_preferred( )"
.RS 4
Use this method to set or retrieve the preferred dynamic ratio load balancing settings. 
See Infoblox::DTC::Pool\->\fBdynamic_ratio_preferred()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #get dynamic_ratio_preferred value
\& my $dynamic_ratio_preferred = $pool\->dynamic_ratio_preferred();
\&
\& #Construct dynamic_ratio_preferred value
\& my $dynamic_ratio = Infoblox::DTC::Pool::DynamicRatioSetting\->new(
\&     method                => \*(AqROUND_TRIP_DELAY\*(Aq,
\&     invert_monitor_metric => \*(Aqtrue\*(Aq,
\& );
\&
\& #modify dynamic_ratio_preferred value
\& $pool\->dynamic_ratio_preferred($dynamic_ratio);
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::DTC::Pool\->dynamic_ratio_alternate( )"
.IX Subsection "Infoblox::DTC::Pool->dynamic_ratio_alternate( )"
.RS 4
Use this method to set or retrieve the alternate dynamic ratio load balancing settings. 
See Infoblox::DTC::Pool\->\fBdynamic_ratio_alternate()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #get dynamic_ratio_alternate value
\& my $dynamic_ratio_alternate = $pool\->dynamic_ratio_alternate();
\&
\& #modify dynamic_ratio_alternate value
\& $pool\->dynamic_ratio_alternate($dynamic_ratio);
.Ve
.RE
.RS 4
.RE
.SH "METHODS"
.IX Header "METHODS"
This section describes all the methods that you can use to set or retrieve the attribute values of the object.
.SS "method( )"
.IX Subsection "method( )"
.RS 4
Use this method to set or retrieve the dynamic ratio load balancing method.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid values are '\s-1MONITOR\s0' and '\s-1ROUND_TRIP_DELAY\s0'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns 'true' when the modification succeeds, and returns 'false' when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get method value
\& my $method = $object\->method();
\&
\& #Modify method value
\& $object\->method(\*(AqMONITOR\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "monitor( )"
.IX Subsection "monitor( )"
.RS 4
Use this method to set or retrieve the \s-1DTC\s0 monitor that will be used for the dynamic ratio load balancing.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an Infoblox::DTC::Monitor::TCP, Infoblox::DTC::Monitor::ICMP, Infoblox::DTC::Monitor::SIP, Infoblox::DTC::Monitor::HTTP, or Infoblox::DTC::Monitor::PDP objects.
.Sp
Note that you must retrieve the object from the server first, or set the name of the monitor.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns 'true' when the modification succeeds, and returns 'false' when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get monitor value
\& my $monitor = $object\->monitor();
\&
\& #Construct Infoblox::DTC::Monitor::SNMP object (should be an existing object)
\& my $snmp_monitor = Infoblox::DTC::Monitor::SNMP\->new(name => \*(Aqsnmp1\*(Aq);
\&
\& #Modify monitor value
\& $object\->monitor($snmp_monitor);
.Ve
.RE
.RS 4
.RE
.SS "monitor_metric( )"
.IX Subsection "monitor_metric( )"
.RS 4
Use this method to set or retrieve the \s-1DTC\s0 monitor metric that will be used for dynamic weighing.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is a desired metric in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns 'true' when the modification succeeds, and returns 'false' when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get monitor_metric value
\& my $monitor_metric = $object\->monitor_metric();
\&
\& #Modify monitor_metric value
\& $object\->monitor_metric(\*(Aq222\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "monitor_weighing( )"
.IX Subsection "monitor_weighing( )"
.RS 4
Use this method to set or retrieve the weighing settings for the dynamic ratio load balancing servers.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid values are '\s-1PRIORITY\s0' and '\s-1RATIO\s0'.
\&'\s-1PRIORITY\s0' means that all clients will be forwarded to the least loaded server. '\s-1RATIO\s0' means that distribution will be calculated based on dynamic weights.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns 'true' when the modification succeeds, and returns 'false' when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get monitor_weighing value
\& my $monitor_weighing = $object\->monitor_weighing();
\&
\& #Modify monitor_weighing value
\& $object\->monitor_weighing(\*(AqRATIO\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "invert_monitor_metric( )"
.IX Subsection "invert_monitor_metric( )"
.RS 4
Use this method to set or retrieve the flag that indicates whether the inverted value of the monitor metric is used.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.Sp
.RS 4
Specify 'true' to force the server to use the inverted monitor metric and 'false' to use the direct metric value. The default is 'false'.
.Sp
\&\fBReturns\fR
.Sp
If you specified a parameter, the method returns 'true' when the modification succeeds, and returns 'false' when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.Sp
\&\fBExample\fR
.Sp
.Vb 2
\& #Get invert_monitor_metric value
\& my $invert_monitor_metric = $object\->invert_monitor_metric();
\&
\& #Modify invert_monitor_metric value
\& $object\->invert_monitor_metric(\*(Aqtrue\*(Aq);
.Ve
.RE
.RE
.RS 4
.RE
.SH "AUTHOR"
.IX Header "AUTHOR"
Infoblox Inc. <http://www.infoblox.com/>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Infoblox::DTC::Pool,
Infoblox::DTC::Pool\->\fBdynamic_ratio_preferred()\fR,
Infoblox::DTC::Pool\->\fBdynamic_ratio_alternate()\fR,
Infoblox::DTC::Monitor::TCP,
Infoblox::DTC::Monitor::ICMP,
Infoblox::DTC::Monitor::SIP,
Infoblox::DTC::Monitor::HTTP,
Infoblox::DTC::Monitor::PDP
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2017 Infoblox Inc.
.SH "POD ERRORS"
.IX Header "POD ERRORS"
Hey! \fBThe above document had some coding errors, which are explained below:\fR
.IP "Around line 222:" 4
.IX Item "Around line 222:"
You can't have =items (as at line 226) unless the first thing after the =over is an =item

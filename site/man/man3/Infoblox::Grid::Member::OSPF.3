.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Infoblox::Grid::Member::OSPF 3"
.TH Infoblox::Grid::Member::OSPF 3 "2018-06-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Infoblox::Grid::Member::OSPF \- OSPF (Open Shortest Path First) member object.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
A \s-1OSPF\s0 member represents the configuration for a \s-1OSPF\s0 area used at the grid member level.
.SH "CONSTRUCTOR"
.IX Header "CONSTRUCTOR"
.Vb 10
\& my  $ospf = Infoblox::Grid::Member::OSPF\->new(
\&     area_id             => $num | $ipv4addr,                      #Required
\&     interface           => "LAN_HA" | $ipaddr                     #Required
\&     area_type           => "standard" | "stub" | "nssa",          #Optional / Default is "standard"
\&     authentication_key  => $string | undef,                       #Optional / Default is undefined
\&     authentication_type => "none" | "simple" | "message\-digest",  #Optional / Default is "none"
\&     bfd_template        => $string | undef,                       #Optional / Default is undefined
\&     enable_bfd          => "true" | "false"                       #Optional / Default is "false"
\&     comment             => $string | undef,                       #Optional / Default is undefined
\&     cost                => $num | "AUTO",                         #Optional / Default is "AUTO"
\&     dead_interval       => $num,                                  #Optional / Default is 40
\&     hello_interval      => $num,                                  #Optional / Default is 10
\&     key_id              => $num | undef,                          #Optional / Default is 1
\&     retransmit_interval => $num,                                  #Optional / Default is 5
\&     transmit_delay      => $num                                   #Optional / Default is 1
\&     is_ipv4             => "true" | "false"                       #Optional / Default is "true"
\& );
.Ve
.SH "MODULE METHODS"
.IX Header "MODULE METHODS"
The following functions are available to be applied to a \s-1OSPF\s0 object.
.SS "Infoblox::Grid::Member\->ospf_list( )"
.IX Subsection "Infoblox::Grid::Member->ospf_list( )"
.RS 4
Use this function to specify \s-1OSPF\s0 for the Grid Member. See Infoblox::Grid::Member\->\fBospf_list()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 8
\& #Construct a OSPF object
\& my $ospf = Infoblox::Grid::Member::OSPF\->new(
\&     area_id             => "20",
\&     area_type           => "standard",
\&     interface           => "LAN_HA",
\&     authentication_type => "simple",
\&     authentication_key  => "infoblox"
\& );
\&
\& # Configure OSPF on the Grid Member object
\& my $response = $Grid_Member\->ospf_list([$ospf]);
.Ve
.RE
.RS 4
.RE
.SH "METHODS"
.IX Header "METHODS"
This section describes all the methods that can be used to configure and retrieve the attribute values of a \s-1OSPF\s0 object.
.SS "area_id( )"
.IX Subsection "area_id( )"
.RS 4
Use this method to set or retrieve the area id value of the \s-1OSPF\s0 object.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify the area id in a 32\-bit integer (range from 0 to 4294967295) format or in IPv4 address format. An IPv4 address is a 32\-bit number in dotted decimal notation. It consists of four 8\-bit groups of decimal digits separated by decimal points (example: 192.168.1.2).
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get area_id
\& my $area_id = $ospf\->area_id();
\& #Modify area_id
\& $ospf\->area_id(1);
.Ve
.RE
.RS 4
.RE
.SS "area_type( )"
.IX Subsection "area_type( )"
.RS 4
Use this method to set or retrieve the \s-1OSPF\s0 area type.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify the area type in string format. Valid values are \*(L"standard\*(R", \*(L"stub\*(R" \s-1OR\s0 \*(L"nssa\*(R"(Not\-so\-stubby). Default value is \*(L"standard\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get area_type
\& my $area_type = $ospf\->area_type();
\& #Modify area_type
\& $ospf\->area_type("stub");
.Ve
.RE
.RS 4
.RE
.SS "authentication_key( )"
.IX Subsection "authentication_key( )"
.RS 4
Use this method to set the authentication password to use for \s-1OSPF.\s0 This is a write-only attribute. The authentication key is valid only when authentication type is \*(L"simple\*(R" or \*(L"message-digest\*(R".
.Sp
Include the specified parameter to set the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify the authentication key in string format. The authentication key can have a maximum of 8 bytes if authentication type is \*(L"simple\*(R" or it can have a maximum of 16 bytes if the authentication type is \*(L"message-digest\*(R". Default value is undefined.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Modify authentication_key
\& $ospf\->authentication_key("infoblox");
.Ve
.RE
.RS 4
.RE
.SS "authentication_type( )"
.IX Subsection "authentication_type( )"
.RS 4
Use this method to set or retrieve the authentication type used for the \s-1OSPF\s0 advertisement.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify the authentication type in string format. Valid values are \*(L"none\*(R", \*(L"simple\*(R" or \*(L"message-digest\*(R". Default value is \*(L"none\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get authentication_type
\& my $authentication_type = $ospf\->authentication_type();
\& #Modify authentication_type
\& $ospf\->authentication_type("message\-digest");
.Ve
.RE
.RS 4
.RE
.SS "bfd_template( )"
.IX Subsection "bfd_template( )"
.RS 4
Use this method to set or retrieve the Bidirectional Forwarding Detection (\s-1BFD\s0) template name.
.Sp
\&\s-1BFD\s0 template is used to configure advanced \s-1BFD\s0 settings such as timer intervals, authentication.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Desired \s-1BFD\s0 template in string format. Default value is undefined.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get bfd_template value
\& my $bfd_template = $object\->bfd_template();
\& #Modify bfd_template value
\& $object\->bfd_template("template1");
.Ve
.RE
.RS 4
.RE
.SS "comment( )"
.IX Subsection "comment( )"
.RS 4
Use this method to set or retrieve a descriptive comment of the \s-1OSPF\s0 configuration.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Desired comment in string format with a maximum of 256 bytes. Default value is undefined.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get comment
\& my $comment = $ospf\->comment();
\& #Modify comment
\& $ospf\->comment("Modifying the OSPF comment");
.Ve
.RE
.RS 4
.RE
.SS "cost( )"
.IX Subsection "cost( )"
.RS 4
Use this method to set or retrieve the cost metric associated with the \s-1OSPF\s0 advertisement. If \*(L"\s-1AUTO\*(R"\s0 is provided, cost metric will be generated automatically.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify the cost metric in a 16\-bit integer (range from 0 to 65535) format or in string format as \*(L"\s-1AUTO\*(R".\s0 Default value is \*(L"\s-1AUTO\*(R".\s0
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get cost
\& my $cost = $ospf\->cost();
\& #Modify cost
\& $ospf\->cost(1);
.Ve
.RE
.RS 4
.RE
.SS "dead_interval( )"
.IX Subsection "dead_interval( )"
.RS 4
Use this method to set or retrieve the dead interval value of \s-1OSPF.\s0 The dead interval describes the time taken in seconds to wait before declaring that the device is unavailable and down.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify the dead interval in a 16\-bit integer (range from 0 to 65535) format that represents the duration in seconds. Default value is 40.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get dead_interval
\& my $dead_interval = $ospf\->dead_interval();
\& #Modify dead_interval
\& $ospf\->dead_interval(10);
.Ve
.RE
.RS 4
.RE
.SS "enable_bfd( )"
.IX Subsection "enable_bfd( )"
.RS 4
Use this method to set or retrieve the flag that indicates whether the Bidirectional Forwarding Detection (\s-1BFD\s0) fallover is enabled or not.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify 'true' to enable \s-1BFD\s0 fallover and false to disable it. The default value is 'false'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get enable_bfd value
\& my $enable_bfd = $object\->enable_bfd();
\& #Modify enable_bfd value
\& $object\->enable_bfd(\*(Aqtrue\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "hello_interval( )"
.IX Subsection "hello_interval( )"
.RS 4
Use this method to set or retrieve the hello interval value of \s-1OSPF.\s0 The hello interval specifies how often to send \s-1OSPF\s0 hello advertisement, in seconds.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify the hello interval in a 16\-bit integer (range from 0 to 65535) format that represents the duration in seconds. Default value is 10.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get hello_interval
\& my $hello_interval = $ospf\->hello_interval();
\& #Modify hello_interval
\& $ospf\->hello_interval(20);
.Ve
.RE
.RS 4
.RE
.SS "interface( )"
.IX Subsection "interface( )"
.RS 4
Use this method to set or retrieve the interface that send out \s-1OSPF\s0 advertisement information.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is \*(L"\s-1LAN_HA\*(R"\s0 or an IPv4 or IPv6 address of the \s-1VLAN\s0 interface.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get interface
\& my $interface = $ospf\->interface();
\& #Modify interface
\& $ospf\->interface("LAN_HA");
.Ve
.RE
.RS 4
.RE
.SS "is_ipv4( )"
.IX Subsection "is_ipv4( )"
.RS 4
Use this method to set or retrieve the \s-1OSPF\s0 protocol version.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" if the IPv4 version of \s-1OSPF\s0 is used, or \*(L"false\*(R" if the IPv6 version of \s-1OSPF\s0 is used. Default value is \*(L"true\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 5
\& #Get protocol version
\& my $ospf_is_ipv4 = $ospf\->is_ipv4();
\& #Modify protocol version
\& $ospf\->is_ipv4("true");
\& $ospf\->is_ipv4("false");
.Ve
.RE
.RS 4
.RE
.SS "key_id( )"
.IX Subsection "key_id( )"
.RS 4
Use this method to set or retrieve the hash key identifier to use for \*(L"message-digest\*(R" authentication. The hash key identifier is valid only when authentication type is \*(L"message-digest\*(R".
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify the hash key identifier in a 8\-bit integer (range from 0 to 255) format. Default value is 1.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get key_id
\& my $key_id = $ospf\->key_id();
\& #Modify key_id
\& $ospf\->key_id(100);
.Ve
.RE
.RS 4
.RE
.SS "retransmit_interval( )"
.IX Subsection "retransmit_interval( )"
.RS 4
Use this method to set or retrieve the retransmit interval time of \s-1OSPF.\s0 The retransmit interval describes the time taken in seconds to wait before retransmitting \s-1OSPF\s0 advertisement.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify the retransmit interval in a 16\-bit integer (range from 0 to 65535) format that represents the duration in seconds. Default value is 5.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get retransmit_interval
\& my $retransmit_interval = $ospf\->retransmit_interval();
\& #Modify retransmit_interval
\& $ospf\->retransmit_interval(50);
.Ve
.RE
.RS 4
.RE
.SS "transmit_delay( )"
.IX Subsection "transmit_delay( )"
.RS 4
Use this method to set or retrieve the transmit delay value of \s-1OSPF.\s0 The transmit delay describes the time taken in seconds to wait before sending an advertisement.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify the transmit delay in a 16\-bit integer (range from 0 to 65535) format that represents the duration in seconds. Default value is 1.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get transmit_delay
\& my $transmit_delay = $ospf\->transmit_delay();
\& #Modify transmit_delay
\& $ospf\->transmit_delay(60);
.Ve
.RE
.RS 4
.RE
.SH "SAMPLE CODE"
.IX Header "SAMPLE CODE"
The following sample code demonstrates the different functions that can be applied to an \s-1OSPF\s0 object such as add, modify, and remove. Also, this sample includes error handling for the operations.
.PP
\&\fB#Preparation prior to \s-1OSPF\s0 object insertion\fR
.PP
.Vb 3
\& use strict;
\& use warnings;
\& use Infoblox;
\&
\& my $host_name = "infoblox.localdomain";
\& my $host_ip = "192.168.1.2";
\& #Creating a session to Infoblox appliance.
\& my $session = Infoblox::Session\->new(
\&     master   => $host_ip,
\&     username => "admin",
\&     password => "infoblox"
\& );
\&
\& unless ($session) {
\&     die(qq(constructor for session failed: ),
\&         join(":", Infoblox::status_code(), Infoblox::status_detail()));
\& }
\& print "Session created successfully \en";
.Ve
.PP
\&\fB#Create a grid member \s-1OSPF\s0 object\fR
.PP
.Vb 10
\& #Creating OSPF object.
\& my $ospf1 = Infoblox::Grid::Member::OSPF\->new(
\&     area_id             => "20",
\&     area_type           => "standard",
\&     interface           => "LAN_HA",
\&     authentication_type => "simple",
\&     authentication_key  => "infoblox"
\&    ) or die(qq(Constructor for ospf1 failed: ),
\&    join(":", Infoblox::status_code(), Infoblox::status_detail()));
\& print "OSPF object constructed successfully \en";
.Ve
.PP
\&\fB#Add \s-1OSPF\s0 object to Grid Member\fR
.PP
.Vb 7
\& #Getting the member object from appliance through session.
\& my @result = $session\->get(
\&     object => "Infoblox::Grid::Member",
\&     name   => $host_name,
\&     ) or die(qq(Get Grid Member failed: ),
\&     join(":", $session\->status_code(), $session\->status_detail()));
\& print "Get Grid Member successful\en";
\&
\& my $result = $result[0];
\& if ($result) {
\&     #Modifying the value of the ospf method from the member object.
\&     $result\->ospf_list([$ospf1]);
\&     #Applying the changes to appliance through session.
\&     $session\->modify($result)
\&         or die(qq(Modify Grid Member failed: ),
\&         join(":", $session\->status_code(), $session\->status_detail()));
\& }
\& print "OSPF object added to Grid Member successfully\en";
.Ve
.PP
\&\fB#Modify \s-1OSPF\s0 object\fR
.PP
.Vb 2
\& #Modifying the area id of the OSPF object.
\& $ospf1\->area_id("50");
\&
\& #Apply changes to the Grid Member object.
\& $result\->ospf_list([$ospf1]);
\&
\& #Update Grid Member object through the Infoblox session.
\& $session\->modify($result)
\&   or die("Modify Grid Member object failed: ",
\&   $session\->status_code() . ":" . $session\->status_detail());
\& print "Grid Member object with modified OSPF updated to Infoblox appliance successfully\en";
.Ve
.PP
\&\fB#Remove \s-1OSPF\s0 object\fR
.PP
.Vb 2
\& #Remove the OSPF from the Grid Member object.
\& $result\->ospf_list([]);
\&
\& #Update Grid Member object through the Infoblox session.
\& $session\->modify($result)
\&   or die("Modify Grid Member object failed: ",
\&   $session\->status_code() . ":" . $session\->status_detail());
\& print "Removed OSPF object from Grid Member successfully\en";
\&
\& ####PROGRAM ENDS####
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Infoblox Inc. <http://www.infoblox.com/>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Infoblox::Grid::Member, Infoblox::Session, Infoblox::Session\->\fBget()\fR, Infoblox::Session\->\fBmodify()\fR
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2017 Infoblox Inc.

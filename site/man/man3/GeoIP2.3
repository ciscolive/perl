.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "GeoIP2 3"
.TH GeoIP2 3 "2019-06-18" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
GeoIP2 \- Perl API for MaxMind's GeoIP2 web services and databases
.SH "VERSION"
.IX Header "VERSION"
version 2.006002
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This distribution provides an \s-1API\s0 for the GeoIP2
web services <http://dev.maxmind.com/geoip/geoip2/web-services> and
databases <http://dev.maxmind.com/geoip/geoip2/downloadable>. The \s-1API\s0 also
works with the free
GeoLite2 databases <http://dev.maxmind.com/geoip/geoip2/geolite2/>.
.PP
See GeoIP2::WebService::Client for details on the web service client \s-1API\s0
and GeoIP2::Database::Reader for the database \s-1API.\s0
.SH "SPEEDING UP DATABASE READING"
.IX Header "SPEEDING UP DATABASE READING"
This module only depends on the pure Perl implementation of the MaxMind
database reader (MaxMind::DB::Reader). If you install the libmaxminddb
library (<http://maxmind.github.io/libmaxminddb/>) and
MaxMind::DB::Reader::XS, then the \s-1XS\s0 implementation will be loaded
automatically. The \s-1XS\s0 implementation is approximately 100x faster than the
pure Perl implementation.
.SH "VALUES TO USE FOR DATABASE OR HASH KEYS"
.IX Header "VALUES TO USE FOR DATABASE OR HASH KEYS"
\&\fBWe strongly discourage you from using a value from any \f(CB\*(C`names\*(C'\fB accessor as
a key in a database or hash.\fR
.PP
These names may change between releases. Instead we recommend using one of the
following:
.IP "\(bu" 4
GeoIP2::Record::City \- \f(CW\*(C`$city\->geoname_id\*(C'\fR
.IP "\(bu" 4
GeoIP2::Record::Continent \- \f(CW\*(C`$continent\->code\*(C'\fR or \f(CW\*(C`$continent\->geoname_id\*(C'\fR
.IP "\(bu" 4
GeoIP2::Record::Country and GeoIP2::Record::RepresentedCountry \- \f(CW\*(C`$country\->iso_code\*(C'\fR or \f(CW\*(C`$country\->geoname_id\*(C'\fR
.IP "\(bu" 4
GeoIP2::Record::Subdivision \- \f(CW\*(C`$subdivision\->iso_code\*(C'\fR or \f(CW\*(C`$subdivision\->geoname_id\*(C'\fR
.SH "INTEGRATION WITH GEONAMES"
.IX Header "INTEGRATION WITH GEONAMES"
GeoNames (<http://www.geonames.org/>) offers web services and downloadable
databases with data on geographical features around the world, including
populated places. They offer both free and paid premium data. Each feature is
uniquely identified by a \f(CW\*(C`geoname_id\*(C'\fR, which is an integer.
.PP
Many of the records returned by the GeoIP web services and databases include a
\&\f(CW\*(C`geoname_id\*(C'\fR field. This is the \s-1ID\s0 of a geographical feature (city, region,
country, etc.) in the GeoNames database.
.PP
Some of the data that MaxMind provides is also sourced from GeoNames. We
source data such as place names, \s-1ISO\s0 codes, and other similar data from the
GeoNames premium data set.
.SH "REPORTING DATA PROBLEMS"
.IX Header "REPORTING DATA PROBLEMS"
If the problem you find is that an \s-1IP\s0 address is incorrectly mapped, please
submit your correction to MaxMind at <http://www.maxmind.com/en/correction>.
.PP
If you find some other sort of mistake, like an incorrect spelling, please
check the GeoNames site (<http://www.geonames.org/>) first. Once you've searched
for a place and found it on the GeoNames map view, there are a number of links
you can use to correct data (\*(L"move\*(R", \*(L"edit\*(R", \*(L"alternate names\*(R", etc.). Once
the correction is part of the GeoNames data set, it will be automatically
incorporated into future MaxMind releases.
.PP
If you are a paying MaxMind customer and you're not sure where to submit a
correction, please contact MaxMind support at for help. See
<http://www.maxmind.com/en/support> for support details.
.SH "VERSIONING POLICY"
.IX Header "VERSIONING POLICY"
This module uses semantic versioning as described by
<http://semver.org/>. Version numbers can be read as X.YYYZZZ, where X is the
major number, \s-1YYY\s0 is the minor number, and \s-1ZZZ\s0 is the patch number.
.SH "PERL VERSION SUPPORT"
.IX Header "PERL VERSION SUPPORT"
This \s-1API\s0 supports Perl 5.10 and above.
.PP
The data returned from the GeoIP2 web services includes Unicode characters in
several locales. This may expose bugs in earlier versions of Perl. If Unicode
support is important to you, we recommend that you use the most recent version
of Perl available.
.SH "SUPPORT"
.IX Header "SUPPORT"
This module is deprecated and will only receive fixes for major bugs and
security vulnerabilities. New features and functionality will not be added.
.PP
Please report all issues with this code using the GitHub issue tracker at
<https://github.com/maxmind/GeoIP2\-perl/issues>.
.PP
If you are having an issue with a MaxMind service that is not specific to the
client \s-1API\s0 please see <http://www.maxmind.com/en/support> for details.
.PP
Bugs may be submitted through <https://github.com/maxmind/GeoIP2\-perl/issues>.
.SH "AUTHORS"
.IX Header "AUTHORS"
.IP "\(bu" 4
Dave Rolsky <drolsky@maxmind.com>
.IP "\(bu" 4
Greg Oschwald <goschwald@maxmind.com>
.IP "\(bu" 4
Mark Fowler <mfowler@maxmind.com>
.IP "\(bu" 4
Olaf Alders <oalders@maxmind.com>
.SH "CONTRIBUTORS"
.IX Header "CONTRIBUTORS"
.IP "\(bu" 4
Adam Lapczynski <alapczynski@maxmind.com>
.IP "\(bu" 4
Andy Jack <github@veracity.ca>
.IP "\(bu" 4
E. Choroba <choroba@matfyz.cz>
.IP "\(bu" 4
Florian Ragwitz <rafl@debian.org>
.IP "\(bu" 4
Graham Knop <haarg@haarg.org>
.IP "\(bu" 4
Mateu X Hunter <mhunter@maxmind.com>
.IP "\(bu" 4
Michael F. Canzoneri <mikecanzoneri@gmail.com>
.IP "\(bu" 4
Narsimham Chelluri <nchelluri@maxmind.com>
.IP "\(bu" 4
Narsimham Chelluri <nchelluri@users.noreply.github.com>
.IP "\(bu" 4
Patrick Cronin <PatrickCronin@users.noreply.github.com>
.IP "\(bu" 4
William Storey <wstorey@maxmind.com>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2013 \- 2019 by MaxMind, Inc.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

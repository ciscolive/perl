.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "System::Sub::AutoLoad 3"
.TH System::Sub::AutoLoad 3 "2016-10-06" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
System::Sub::AutoLoad \- Auto\-wrap external commands as DWIM subs
.SH "VERSION"
.IX Header "VERSION"
version 0.162800
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.SS "Basic usage"
.IX Subsection "Basic usage"
Any unknown sub will become a \f(CW\*(C`System::Sub\*(C'\fR.
.PP
.Vb 1
\&    use System::Sub::AutoLoad;
\&
\&    my $hostname = hostname();
.Ve
.SS "Usage with forward declaration"
.IX Subsection "Usage with forward declaration"
Allows to avoid using parentheses. \f(CW\*(C`System::Sub\*(C'\fR import stays lazy.
.PP
.Vb 1
\&    use System::Sub::AutoLoad qw(hostname);
\&
\&    my $hostname = hostname;
.Ve
.SS "Usage with forward declaration command options"
.IX Subsection "Usage with forward declaration command options"
Options definitions will be checked lazily at the first call to the \s-1AUTOLOAD\s0
for that sub.
.PP
.Vb 1
\&    use System::Sub::AutoLoad hostname => [ 0 => \*(Aq/bin/hostname\*(Aq ];
\&
\&    my $hostname = hostname;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Any unknown sub in your code will be transformed into a \f(CW\*(C`System::Sub\*(C'\fR at its
first call. This is lazy <http://en.wikipedia.org/wiki/Lazy_evaluation> import
for \f(CW\*(C`System::Sub\*(C'\fR.
.PP
To avoid using parentheses after the sub name, you usually have to predeclare
the sub with either a forward declaration (a sub without body such as
\&\f(CW\*(C`sub foo;\*(C'\fR) or with the \f(CW\*(C`subs\*(C'\fR module. With \f(CW\*(C`Sytem::Sub::AutoLoad\*(C'\fR
you can simply list the subs names on the \f(CW\*(C`use\*(C'\fR line and that will be done
for you.
.PP
You can also pass \f(CW\*(C`System::Sub\*(C'\fR options to the sub, but they will be lazily
analysed: this is the full \f(CW\*(C`System::Sub\*(C'\fR power, but with lazy import.
.SS "Implementation details"
.IX Subsection "Implementation details"
This module exports an \s-1AUTOLOAD\s0 sub that will import
the sub with \f(CW\*(C`System::Sub\*(C'\fR at its first call.
.SH "AUTHOR"
.IX Header "AUTHOR"
Olivier Mengué, \f(CW\*(C`dolmen@cpan.org\*(C'\fR.
.SH "COPYRIGHT & LICENSE"
.IX Header "COPYRIGHT & LICENSE"
Copyright © 2012 Olivier Mengué.
.PP
This library is free software; you can redistribute it and/or modify it under
the same terms as Perl 5 itself.

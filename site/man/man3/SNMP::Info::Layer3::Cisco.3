.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "SNMP::Info::Layer3::Cisco 3"
.TH SNMP::Info::Layer3::Cisco 3 "2020-07-12" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
SNMP::Info::Layer3::Cisco \- SNMP Interface to L3 and L2+L3 IOS Cisco Device
that are not covered in other classes and the base L3 Cisco class for other
device specific L3 Cisco classes.
.SH "AUTHOR"
.IX Header "AUTHOR"
Max Baker
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 10
\& # Let SNMP::Info determine the correct subclass for you.
\& my $cisco = new SNMP::Info(
\&                        AutoSpecify => 1,
\&                        Debug       => 1,
\&                        # These arguments are passed directly to SNMP::Session
\&                        DestHost    => \*(Aqmyswitch\*(Aq,
\&                        Community   => \*(Aqpublic\*(Aq,
\&                        Version     => 2
\&                        )
\&    or die "Can\*(Aqt connect to DestHost.\en";
\&
\& my $class      = $cisco\->class();
\& print "SNMP::Info determined this device to fall under subclass : $class\en";
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Subclass for Generic Cisco Routers running \s-1IOS\s0 and the base L3 Cisco class
for other device specific L3 Cisco classes.
.SS "Inherited Classes"
.IX Subsection "Inherited Classes"
.IP "SNMP::Info::CiscoVTP" 4
.IX Item "SNMP::Info::CiscoVTP"
.PD 0
.IP "SNMP::Info::CDP" 4
.IX Item "SNMP::Info::CDP"
.IP "SNMP::Info::CiscoStats" 4
.IX Item "SNMP::Info::CiscoStats"
.IP "SNMP::Info::CiscoRTT" 4
.IX Item "SNMP::Info::CiscoRTT"
.IP "SNMP::Info::CiscoQOS" 4
.IX Item "SNMP::Info::CiscoQOS"
.IP "SNMP::Info::CiscoConfig" 4
.IX Item "SNMP::Info::CiscoConfig"
.IP "SNMP::Info::Power" 4
.IX Item "SNMP::Info::Power"
.IP "SNMP::Info::CiscoStpExtensions" 4
.IX Item "SNMP::Info::CiscoStpExtensions"
.IP "SNMP::Info::Layer3" 4
.IX Item "SNMP::Info::Layer3"
.PD
.SS "Required MIBs"
.IX Subsection "Required MIBs"
.IP "\fICISCO-EIGRP-MIB\fR" 4
.IX Item "CISCO-EIGRP-MIB"
.PD 0
.IP "Inherited Classes' MIBs" 4
.IX Item "Inherited Classes' MIBs"
.PD
See \*(L"Required MIBs\*(R" in SNMP::Info::CiscoVTP for its own \s-1MIB\s0 requirements.
.Sp
See \*(L"Required MIBs\*(R" in SNMP::Info::CDP for its own \s-1MIB\s0 requirements.
.Sp
See \*(L"Required MIBs\*(R" in SNMP::Info::CiscoStats for its own \s-1MIB\s0 requirements.
.Sp
See \*(L"Required MIBs\*(R" in SNMP::Info::CiscoRTT for its own \s-1MIB\s0 requirements.
.Sp
See \*(L"Required MIBs\*(R" in SNMP::Info::CiscoQOS for its own \s-1MIB\s0 requirements.
.Sp
See \*(L"Required MIBs\*(R" in SNMP::Info::CiscoConfig for its own \s-1MIB\s0 requirements.
.Sp
See \*(L"Required MIBs\*(R" in SNMP::Info::CiscoPower for its own \s-1MIB\s0 requirements.
.Sp
See \*(L"Required MIBs\*(R" in SNMP::Info::CiscoStpExtensions for its own \s-1MIB\s0 requirements.
.Sp
See \*(L"Required MIBs\*(R" in SNMP::Info::Layer3 for its own \s-1MIB\s0 requirements.
.SH "GLOBALS"
.IX Header "GLOBALS"
These are methods that return scalar value from \s-1SNMP\s0
.ie n .IP "$cisco\->\fBeigrp_id()\fR" 4
.el .IP "\f(CW$cisco\fR\->\fBeigrp_id()\fR" 4
.IX Item "$cisco->eigrp_id()"
(\f(CW\*(C`cEigrpAsRouterId\*(C'\fR)
.ie n .IP "$switch\->\fBcisco_comm_indexing()\fR" 4
.el .IP "\f(CW$switch\fR\->\fBcisco_comm_indexing()\fR" 4
.IX Item "$switch->cisco_comm_indexing()"
Returns 1 when the device is likely to need vlan indexing.
Determined by checking \f(CW\*(C`vtpVersion\*(C'\fR.
.SS "Global Methods imported from SNMP::Info::CiscoVTP"
.IX Subsection "Global Methods imported from SNMP::Info::CiscoVTP"
See documentation in \*(L"\s-1GLOBALS\*(R"\s0 in SNMP::Info::CiscoVTP for details.
.SS "Globals imported from SNMP::Info::CDP"
.IX Subsection "Globals imported from SNMP::Info::CDP"
See documentation in \*(L"\s-1GLOBALS\*(R"\s0 in SNMP::Info::CDP for details.
.SS "Globals imported from SNMP::Info::CiscoStats"
.IX Subsection "Globals imported from SNMP::Info::CiscoStats"
See documentation in \*(L"\s-1GLOBALS\*(R"\s0 in SNMP::Info::CiscoStats for details.
.SS "Globals imported from SNMP::Info::CiscoRTT"
.IX Subsection "Globals imported from SNMP::Info::CiscoRTT"
See documentation in \*(L"\s-1GLOBALS\*(R"\s0 in SNMP::Info::CiscoRTT for details.
.SS "Globals imported from SNMP::Info::CiscoQOS"
.IX Subsection "Globals imported from SNMP::Info::CiscoQOS"
See documentation in \*(L"\s-1GLOBALS\*(R"\s0 in SNMP::Info::CiscoQOS for details.
.SS "Globals imported from SNMP::Info::CiscoConfig"
.IX Subsection "Globals imported from SNMP::Info::CiscoConfig"
See documentation in \*(L"\s-1GLOBALS\*(R"\s0 in SNMP::Info::CiscoConfig for details.
.SS "Globals imported from SNMP::Info::CiscoPower"
.IX Subsection "Globals imported from SNMP::Info::CiscoPower"
See documentation in \*(L"\s-1GLOBALS\*(R"\s0 in SNMP::Info::CiscoPower for details.
.SS "Globals imported from SNMP::Info::CiscoStpExtensions"
.IX Subsection "Globals imported from SNMP::Info::CiscoStpExtensions"
See documentation in \*(L"\s-1GLOBALS\*(R"\s0 in SNMP::Info::CiscoStpExtensions for details.
.SS "Globals imported from SNMP::Info::Layer3"
.IX Subsection "Globals imported from SNMP::Info::Layer3"
See documentation in \*(L"\s-1GLOBALS\*(R"\s0 in SNMP::Info::Layer3 for details.
.SH "TABLE METHODS"
.IX Header "TABLE METHODS"
These are methods that return tables of information in the form of a reference
to a hash.
.ie n .IP "$cisco\->\fBeigrp_peers()\fR" 4
.el .IP "\f(CW$cisco\fR\->\fBeigrp_peers()\fR" 4
.IX Item "$cisco->eigrp_peers()"
Returns \s-1EIGRP\s0 peer \s-1IP\s0 addresses
.Sp
(\f(CW\*(C`cEigrpPeerAddr\*(C'\fR)
.ie n .IP "$cisco\->\fBi_vlan()\fR" 4
.el .IP "\f(CW$cisco\fR\->\fBi_vlan()\fR" 4
.IX Item "$cisco->i_vlan()"
Returns a mapping between \f(CW\*(C`ifIndex\*(C'\fR and the \s-1PVID\s0 or default \s-1VLAN.\s0
.SS "Table Methods imported from SNMP::Info::CiscoVTP"
.IX Subsection "Table Methods imported from SNMP::Info::CiscoVTP"
See documentation in \*(L"\s-1TABLE METHODS\*(R"\s0 in SNMP::Info::CiscoVTP for details.
.SS "Table Methods imported from SNMP::Info::CDP"
.IX Subsection "Table Methods imported from SNMP::Info::CDP"
See documentation in \*(L"\s-1TABLE METHODS\*(R"\s0 in SNMP::Info::CDP for details.
.SS "Table Methods imported from SNMP::Info::CiscoStats"
.IX Subsection "Table Methods imported from SNMP::Info::CiscoStats"
See documentation in \*(L"\s-1TABLE METHODS\*(R"\s0 in SNMP::Info::CiscoStats for details.
.SS "Table Methods imported from SNMP::Info::CiscoRTT"
.IX Subsection "Table Methods imported from SNMP::Info::CiscoRTT"
See documentation in \*(L"\s-1TABLE METHODS\*(R"\s0 in SNMP::Info::CiscoRTT for details.
.SS "Table Methods imported from SNMP::Info::CiscoQOS"
.IX Subsection "Table Methods imported from SNMP::Info::CiscoQOS"
See documentation in \*(L"\s-1TABLE METHODS\*(R"\s0 in SNMP::Info::CiscoQOS for details.
.SS "Table Methods imported from SNMP::Info::CiscoConfig"
.IX Subsection "Table Methods imported from SNMP::Info::CiscoConfig"
See documentation in \*(L"\s-1TABLE METHODS\*(R"\s0 in SNMP::Info::CiscoConfig for details.
.SS "Table Methods imported from SNMP::Info::CiscoPower"
.IX Subsection "Table Methods imported from SNMP::Info::CiscoPower"
See documentation in \*(L"\s-1TABLE METHODS\*(R"\s0 in SNMP::Info::CiscoPower for details.
.SS "Table Methods imported from SNMP::Info::CiscoStpExtensions"
.IX Subsection "Table Methods imported from SNMP::Info::CiscoStpExtensions"
See documentation in \*(L"\s-1TABLE METHODS\*(R"\s0 in SNMP::Info::CiscoStpExtensions for details.
.SS "Table Methods imported from SNMP::Info::Layer3"
.IX Subsection "Table Methods imported from SNMP::Info::Layer3"
See documentation in \*(L"\s-1TABLE METHODS\*(R"\s0 in SNMP::Info::Layer3 for details.

.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "App::csv2sqlite 3"
.TH App::csv2sqlite 3 "2013-01-26" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
App::csv2sqlite \- Import CSV files into a SQLite database
.SH "VERSION"
.IX Header "VERSION"
version 0.004
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  csv2sqlite doggies.csv kitties.csv pets.sqlite
\&
\&  # configure CSV parsing as necessary:
\&  csv2sqlite \-o sep_char=$\*(Aq\et\*(Aq plants.tab plants.sqlite
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Import \s-1CSV\s0 files into a SQLite database
(using DBIx::TableLoader::CSV).
.PP
Each csv file specified on the command line
will became a table in the resulting sqlite database.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\-\-csv\-file (or \-\-csv)" 4
.IX Item "--csv-file (or --csv)"
The csv files to load
.IP "\-\-csv\-opt (or \-o)" 4
.IX Item "--csv-opt (or -o)"
A hash of key=value options to pass to Text::CSV
.IP "\-\-dbname (or \-\-database)" 4
.IX Item "--dbname (or --database)"
The file path for the SQLite database
.IP "\-\-encoding (or \-e)" 4
.IX Item "--encoding (or -e)"
The encoding of the csv files (a shortcut for \f(CW\*(C`\-\-loader\-opt file_encoding=$enc\*(C'\fR);
(Strings will be stored in the database in \s-1UTF\-8.\s0)
.IP "\-\-loader\-opt (or \-l)" 4
.IX Item "--loader-opt (or -l)"
A hash of key=value options to pass to DBIx::TableLoader::CSV
.SH "TODO"
.IX Header "TODO"
.IP "\(bu" 4
specific DBIx::TableLoader options?
.IP "\(bu" 4
confirm using a pre-existing database?
.IP "\(bu" 4
more tests
.IP "\(bu" 4
allow specifying table names for csv files
.SH "SUPPORT"
.IX Header "SUPPORT"
.SS "Perldoc"
.IX Subsection "Perldoc"
You can find documentation for this module with the perldoc command.
.PP
.Vb 1
\&  perldoc App::csv2sqlite
.Ve
.SS "Websites"
.IX Subsection "Websites"
The following websites have more information about this module, and may be of help to you. As always,
in addition to those websites please use your favorite search engine to discover more resources.
.IP "\(bu" 4
Search \s-1CPAN\s0
.Sp
The default \s-1CPAN\s0 search engine, useful to view \s-1POD\s0 in \s-1HTML\s0 format.
.Sp
<http://search.cpan.org/dist/App\-csv2sqlite>
.IP "\(bu" 4
\&\s-1RT: CPAN\s0's Bug Tracker
.Sp
The \s-1RT\s0 ( Request Tracker ) website is the default bug/issue tracking system for \s-1CPAN.\s0
.Sp
<http://rt.cpan.org/NoAuth/Bugs.html?Dist=App\-csv2sqlite>
.IP "\(bu" 4
\&\s-1CPAN\s0 Ratings
.Sp
The \s-1CPAN\s0 Ratings is a website that allows community ratings and reviews of Perl modules.
.Sp
<http://cpanratings.perl.org/d/App\-csv2sqlite>
.IP "\(bu" 4
\&\s-1CPAN\s0 Testers
.Sp
The \s-1CPAN\s0 Testers is a network of smokers who run automated tests on uploaded \s-1CPAN\s0 distributions.
.Sp
<http://www.cpantesters.org/distro/A/App\-csv2sqlite>
.IP "\(bu" 4
\&\s-1CPAN\s0 Testers Matrix
.Sp
The \s-1CPAN\s0 Testers Matrix is a website that provides a visual overview of the test results for a distribution on various Perls/platforms.
.Sp
<http://matrix.cpantesters.org/?dist=App\-csv2sqlite>
.IP "\(bu" 4
\&\s-1CPAN\s0 Testers Dependencies
.Sp
The \s-1CPAN\s0 Testers Dependencies is a website that shows a chart of the test results of all dependencies for a distribution.
.Sp
<http://deps.cpantesters.org/?module=App::csv2sqlite>
.SS "Bugs / Feature Requests"
.IX Subsection "Bugs / Feature Requests"
Please report any bugs or feature requests by email to \f(CW\*(C`bug\-app\-csv2sqlite at rt.cpan.org\*(C'\fR, or through
the web interface at <http://rt.cpan.org/NoAuth/ReportBug.html?Queue=App\-csv2sqlite>. You will be automatically notified of any
progress on the request by the system.
.SS "Source Code"
.IX Subsection "Source Code"
<https://github.com/rwstauner/App\-csv2sqlite>
.PP
.Vb 1
\&  git clone https://github.com/rwstauner/App\-csv2sqlite.git
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Randy Stauner <rwstauner@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2012 by Randy Stauner.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

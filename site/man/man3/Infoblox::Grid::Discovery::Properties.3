.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Infoblox::Grid::Discovery::Properties 3"
.TH Infoblox::Grid::Discovery::Properties 3 "2018-06-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Infoblox::Grid::Discovery::Properties \- Grid discovery properties.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The object provides information about Grid discovery properties.
.SH "CONSTRUCTOR"
.IX Header "CONSTRUCTOR"
.Vb 10
\& my $object = Infoblox::Grid::Discovery::Properties\->new(
\&    \*(Aqadvanced_polling_settings\*(Aq     => $adv,                # Required
\&    \*(Aqauto_conversion_settings\*(Aq      => [$auto_conversion1, ...], # Optional
\&    \*(Aqbasic_polling_settings\*(Aq        => $basic,              # Required
\&    \*(Aqenable_auto_conversion\*(Aq        => \*(Aqtrue\*(Aq | \*(Aqfalse\*(Aq     # Optional
\&    \*(Aqenable_auto_updates\*(Aq           => \*(Aqtrue\*(Aq | \*(Aqfalse\*(Aq     # Optional
\&    \*(Aqsnmp3_credentials\*(Aq             => [$snmp3_1, ...],     # Optional
\&    \*(Aqsnmp_credentials\*(Aq              => [$snmp_1, ...],      # Optional
\&    \*(Aqcli_credentials\*(Aq               => [$cli1, ...],        # Optional
\&    \*(Aqdiscovery_blackout_setting\*(Aq    => $blackout,           # Optional
\&    \*(Aqport_control_blackout_setting\*(Aq => $blackout,           # Optional
\&    \*(Aqports\*(Aq                         => [$port1, ...],       # Optional
\&    \*(Aqignore_conflict_duration\*(Aq      => $uint,               # Optional
\&    \*(Aqsame_port_control_discovery_blackout\*(Aq => \*(Aqtrue\*(Aq | \*(Aqfalse\*(Aq # Optional
\&    \*(Aqunmanaged_ips_limit\*(Aq           => $uint,                  # Optional
\&    \*(Aqunmanaged_ips_timeout\*(Aq         => $uint,                  # Optional
\&    \*(Aqvrf_mapping_rules\*(Aq             => [$vrf_rule_1, ...],     # Optional
\&    \*(Aqvrf_mapping_policy\*(Aq            => \*(AqNONE\*(Aq | \*(AqRULE_BASED\*(Aq | \*(AqRULE_AND_INTERNAL_BASED\*(Aq, # Optional
\& );
.Ve
.SH "SESSION METHODS"
.IX Header "SESSION METHODS"
This section describes all the methods in Infoblox::Session that you can apply to a object.
.SS "Infoblox::Session\->get( )"
.IX Subsection "Infoblox::Session->get( )"
.RS 4
Use this method to retrieve the existing object from the Infoblox appliance. See Infoblox::Session\->\fBget()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 1
\& my $object = $session\->get(\*(Aqobject\*(Aq => \*(AqInfoblox::Grid::Discovery::Properties\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->modify( )"
.IX Subsection "Infoblox::Session->modify( )"
.RS 4
Use this method to modify object in the Infoblox appliance. See Infoblox::Session\->\fBmodify()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& my $port = Infoblox::Grid::Discovery::Port\->new(
\&    \*(Aqport\*(Aq => 40,
\&    \*(Aqtype\*(Aq => \*(AqUDP\*(Aq,
\& );
\&
\& # Use method to modify ports
\& $object\->ports([$port]);
\& # Submit modification
\& my $response = $session\->modify( $object );
.Ve
.RE
.RS 4
.RE
.SH "METHODS"
.IX Header "METHODS"
This section describes all the methods that you can use to set or retrieve the attribute values of the object.
.SS "advanced_polling_settings( )"
.IX Subsection "advanced_polling_settings( )"
.RS 4
Use this method to set or retrieve discovery advanced poll settings.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is an Infoblox::Grid::Discovery::AdvancedPollSettings object.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->advanced_polling_settings();
\& # Modify attribute value
\& $object\->advanced_polling_settings($adv);
.Ve
.RE
.RS 4
.RE
.SS "auto_conversion_settings( )"
.IX Subsection "auto_conversion_settings( )"
.RS 4
Use this method to set or retrieve a list of automatic conversion settings.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is an array reference that contains Infoblox::Grid::Discovery::AutoConversionSetting objects.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->auto_conversion_settings();
\& # Modify attribute value
\& $object\->auto_conversion_settings([$auto_conversion_settings1, $auto_conversion_settings2]);
.Ve
.RE
.RS 4
.RE
.SS "basic_polling_settings( )"
.IX Subsection "basic_polling_settings( )"
.RS 4
Use this method to set or retrieve discovery basic poll settings.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is an Infoblox::Grid::Discovery::BasicPollSettings object.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->basic_polling_settings();
\& # Modify attribute value
\& $object\->basic_polling_settings($basic);
.Ve
.RE
.RS 4
.RE
.SS "enable_auto_conversion( )"
.IX Subsection "enable_auto_conversion( )"
.RS 4
Use this method to set or retrieve the flag that enables automatic conversion of discovered data.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify 'true' to enable automatic conversion of discovery data or 'false' to disable it. The default value is 'false'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->enable_auto_conversion();
\& # Modify attribute value
\& $object\->enable_auto_conversion(\*(Aqtrue\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "enable_auto_updates( )"
.IX Subsection "enable_auto_updates( )"
.RS 4
Use this method to set or retrieve the flag that enables updating discovered data for managed objects.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify 'true' to enable updating discovered data for managed objects or 'false' to disable it. The default value is 'true'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->enable_auto_updates();
\& # Modify attribute value
\& $object\->enable_auto_updates(\*(Aqtrue\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "cli_credentials( )"
.IX Subsection "cli_credentials( )"
.RS 4
Use this method to set or retrieve the discovery \s-1CLI\s0 credentials.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is an array reference that contains Infoblox::Grid::Discovery::CLICredential objects.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->cli_credentials();
\& # Modify attribute value
\& $object\->cli_credentials([$cli1, $cli2]);
.Ve
.RE
.RS 4
.RE
.SS "discovery_blackout_setting( )"
.IX Subsection "discovery_blackout_setting( )"
.RS 4
Use this method to set or retrieve the discovery blackout setting.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is an Infoblox::Grid::Discovery::Properties::BlackoutSetting object.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->discovery_blackout_setting();
\& # Modify attribute value
\& $object\->discovery_blackout_setting($blackout);
.Ve
.RE
.RS 4
.RE
.SS "ignore_conflict_duration( )"
.IX Subsection "ignore_conflict_duration( )"
.RS 4
Use this method to set or retrieve the ignore discovery conflict duration.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The ignore discovery conflict duration in seconds.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->ignore_conflict_duration();
\& # Modify attribute value
\& $object\->ignore_conflict_duration(3600);
.Ve
.RE
.RS 4
.RE
.SS "ports( )"
.IX Subsection "ports( )"
.RS 4
Use this method to set or retrieve ports to scan.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is an array reference that contains Infoblox::Grid::Discovery::Port objects.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->ports();
\& # Modify attribute value
\& $object\->ports([$port1, $port2]);
.Ve
.RE
.RS 4
.RE
.SS "port_control_blackout_setting( )"
.IX Subsection "port_control_blackout_setting( )"
.RS 4
Use this method to set or retrieve the port control blackout setting.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is an Infoblox::Grid::Discovery::Properties::BlackoutSetting object.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->port_control_blackout_setting();
\& # Modify attribute value
\& $object\->port_control_blackout_setting($blackout);
.Ve
.RE
.RS 4
.RE
.SS "same_port_control_discovery_blackout( )"
.IX Subsection "same_port_control_discovery_blackout( )"
.RS 4
Use this method to set or retrieve the flag that enables using the same discovery blackout for port control blackout.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify 'true' to use same discovery blackout for port control blackout or 'false' to disable it. The default value is 'false'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->same_port_control_discovery_blackout();
\& # Modify attribute value
\& $object\->same_port_control_discovery_blackout(\*(Aqtrue\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "snmp3_credentials( )"
.IX Subsection "snmp3_credentials( )"
.RS 4
Use this method to set or retrieve a list of discovery SNMPv3 credentials.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is an array reference that contains Infoblox::Grid::Discovery::SNMP3Credential objects.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->snmp3_credentials();
\& # Modify attribute value
\& $object\->snmp3_credentials([$snmp3_1, $snmp3_2]);
.Ve
.RE
.RS 4
.RE
.SS "snmp_credentials( )"
.IX Subsection "snmp_credentials( )"
.RS 4
Use this method to set or retrieve a list of discovery \s-1SNMP\s0 v1 and v2 credentials>.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is an array reference that contains Infoblox::Grid::Discovery::SNMPCredential objects.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->snmp_credentials();
\& # Modify attribute value
\& $object\->snmp_credentials([$snmp1, $snmp2]);
.Ve
.RE
.RS 4
.RE
.SS "test_credential( )"
.IX Subsection "test_credential( )"
.RS 4
Use this method to test credentials.
.Sp
Note that this method does not perform automatic polling for the operational status. It returns a snapshot of the status at the time when you call the method, which may not be the final status. To get the latest status, the client script needs to provide polling logic for this method until the operation status is '\s-1INPROGRESS\s0' by calling the method with start parameter assigned to the end field in the previous call result. For more details, see the example below.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
.Vb 1
\& id               \- Optional. The test credential ID.
.Ve
.Sp
The following members are supported when id is defined:
.Sp
.Vb 1
\& start            \- Optional. The start position of the text.
.Ve
.Sp
The following members are supported when id is not defined:
.Sp
.Vb 1
\& view             \- Optional. The network view name. The default value is the system\-defined default network view.
\&
\& type             \- Optional if one of the following is defined: cli_credentials, snmp_credential, or snmp3_credential. Otherwise, this member is required. The valid value is \*(AqCLI\*(Aq, \*(AqSNMP\*(Aq or \*(AqSNMP3\*(Aq.
\&
\& device           \- Required if address is not defined. The Infoblox::Grid::Discovery::Device object.
\&
\& member           \- Optional. The discovery member name.
\&
\& address          \- Required if device is not defined. The IP address of the device.
\&
\& cli_credentials  \- Optional. At least one of the following must be defined: cli_credentials, snmp_credential, or snmp3_credential. The array reference that contains Infoblox::Grid::Discovery::CLICredential objects.
\&
\& snmp_credential  \- Optional. At least one of the following must be defined: cli_credentials, snmp_credential, or snmp3_credential. The Infoblox::Grid::Discovery::SNMPCredential object.
\&
\& snmp3_credential \- Optional. At least one of the following must be defined: cli_credentials, snmp_credential, or snmp3_credential. The Infoblox::Grid::Discovery::SNMP3Credential object.
.Ve
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns an Infoblox::Grid::Discovery::TestCredential object when the operation succeeds, and returns false when the operation fails.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 5
\& # Get a test credential ID
\& my $result = $object\->test_credential(
\&    \*(Aqaddress\*(Aq         => \*(Aq10.0.0.1\*(Aq,
\&    \*(Aqsnmp_credential\*(Aq => $snmp,
\& );
\&
\& # Get detailed information by id
\& if (ref($result) eq \*(AqInfoblox::Grid::Discovery::TestCredential\*(Aq) {
\&     $result = $object\->test_credential(\*(Aqid\*(Aq => $result\->id());
\& }
\&
\& # check for the \*(AqCOMPLETE\*(Aq or \*(AqFAILED\*(Aq status of test credential
\& while (ref($result) eq \*(AqInfoblox::Grid::Discovery::TestCredential\*(Aq &&
\&        $result\->status() eq \*(AqINPROGRESS\*(Aq) {
\&     $result = $grid\->test_credential(\*(Aqid\*(Aq => $result\->id(), \*(Aqstart\*(Aq => $result\->end());
\& }
.Ve
.RE
.RS 4
.RE
.SS "unmanaged_ips_limit( )"
.IX Subsection "unmanaged_ips_limit( )"
.RS 4
Use this method to set or retrieve the limit value for discovered unmanaged \s-1IP\s0 addresses. This value determines how often users are notified when new unmanaged \s-1IP\s0 addresses are discovered in a particular network.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an unsigned integer. The minimun value is 1.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->unmanaged_ips_limit();
\& # Modify attribute value
\& $object\->unmanaged_ips_limit(30);
.Ve
.RE
.RS 4
.RE
.SS "unmanaged_ips_timeout( )"
.IX Subsection "unmanaged_ips_timeout( )"
.RS 4
Use this method to set or retrieve the timeout value (in seconds) between notifications about new unmanaged \s-1IP\s0 addresses in a particular network.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an unsigned integer. The minimum value is 60 (one minute), and the maximum value is the number of seconds from the time you set it until January 2038.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->unmanaged_ips_timeout();
\& # Modify attribute value
\& $object\->unmanaged_ips_timeout(300);
.Ve
.RE
.RS 4
.RE
.SS "vrf_mapping_rules( )"
.IX Subsection "vrf_mapping_rules( )"
.RS 4
Use this method to set or retrieve a list of \s-1VRF\s0 mapping rules.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is an array reference that contains Infoblox::Grid::Discovery::VRFMappingRule objects.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->vrf_mapping_rules();
\& # Modify attribute value
\& $object\->vrf_mapping_rules([$vrf_mapping_rule1, $vrf_mapping_rule2]);
.Ve
.RE
.RS 4
.RE
.SS "vrf_mapping_policy( )"
.IX Subsection "vrf_mapping_policy( )"
.RS 4
Use this method to set or retrieve the \s-1VRF\s0 mapping policy.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The policy type used to define the behavior of the \s-1VRF\s0 mapping. Valid value is one of the following policy types: '\s-1NONE\s0', '\s-1RULE_BASED\s0', '\s-1RULE_AND_INTERNAL_BASED\s0'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->vrf_mapping_policy();
\& # Modify attribute value
\& $object\->vrf_mapping_policy(\*(AqRULE_AND_INTERNAL_BASED\*(Aq);
.Ve
.RE
.RS 4
.RE
.SH "AUTHOR"
.IX Header "AUTHOR"
Infoblox Inc. <http://www.infoblox.com/>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Infoblox::Session, Infoblox::Grid::Discovery::SNMPCredential, Infoblox::Grid::Discovery::SNMP3Credential, Infoblox::Grid::Discovery::Port, Infoblox::Grid::Discovery::CLICredential, Infoblox::Grid::Discovery::Properties::BlackoutSetting,
Infoblox::Grid::Discovery::VRFMappingRule, Infoblox::Grid::Discovery::AutoConversionSetting
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2017 Infoblox Inc.

.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "CPAN::Testers::Common::Client::Config 3"
.TH CPAN::Testers::Common::Client::Config 3 "2018-04-22" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
CPAN::Testers::Common::Client::Config \- basic configuration for CPAN Testers clients
.SH "WARNING!!!"
.IX Header "WARNING!!!"
C:T:C:C:Config is a *very* early module and a *highly* \s-1EXPERIMENTAL\s0 one for
that matter. The \s-1API\s0 \fB\s-1WILL CHANGE\s0\fR. We're still moving stuff around, so
please only use it if you understand and accept the consequences.
.PP
If you have any questions, please contact the author.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 3
\&    my $config = CPAN::Testers::Common::Client::Config\->new(
\&        prompt => \e&IO::Prompt::Tiny::prompt,
\&    );
\&
\&    if ( \-e $config\->get_config_filename ) {
\&        $config\->read or return;
\&    }
\&    else {
\&        print "CPAN Testers config file not found. Creating...";
\&        $config\->setup;
\&    }
\&
\&    ## perform your test logging according to $config\*(Aqs data
\&
\&    ## send the report!
\&    my $reporter = Test::Reporter\->new(
\&        from           => $config\->email_from,
\&        transport      => $config\->transport_name,
\&        transport_args => $config\->transport_args,
\&        ...
\&    );
.Ve
.SH "METHODS"
.IX Header "METHODS"
.SS "new"
.IX Subsection "new"
Instantiates a new CPAN::Testers::Common::Client::Config object. It may
receive the following (optional) parameters:
.IP "\(bu" 4
warn => \e&my_warn_function
.Sp
Inject your own warning function. Defaults to CORE::warn.
.IP "\(bu" 4
print => \e&my_print_function
.Sp
Inject your own printing function. Defaults to \f(CW\*(C`sub { print @_ }\*(C'\fR.
.IP "\(bu" 4
prompt => \e&my_prompt_function
.Sp
Inject your own prompt function. Does \fBnot\fR have a default. The function
is expected to receive two values: \f(CW\*(C`( $question, $default_value )\*(C'\fR, and
return a scalar containing the answer. Take a look at IO::Prompt::Tiny
and ExtUtils::MakeMaker's \f(CW\*(C`prompt()\*(C'\fR functions for suitable candidates.
.Sp
If you plan on calling \*(L"setup\*(R", make sure you pass the 'prompt' argument to
\&\f(CW\*(C`new()\*(C'\fR.
.SS "read"
.IX Subsection "read"
Reads and parses the existing \s-1CPAN\s0 Tester's configuration file
(usually \f(CW\*(C`$HOME/.cpanreporter/config.ini\*(C'\fR into the main object.
.SS "setup"
.IX Subsection "setup"
Prompts the user and sets up the \s-1CPAN\s0 Tester's configuration file (usually
\&\f(CW\*(C`$HOME/.cpanreporter/config.ini\*(C'\fR). This method \fBrequires\fR you to have set
a proper \f(CW\*(C`prompt\*(C'\fR function when you instantiated the object.
.SS "\fBget_config_dir()\fP"
.IX Subsection "get_config_dir()"
The base directory in which your '\f(CW\*(C`config.ini\*(C'\fR' and other files reside.
Defaults to the '.cpanreporter' directory  under your home directory
(if you're using Linux or \s-1OS X\s0) or under the 'my documents' folder
(if you're running Windows).
.SS "\fBget_config_filename()\fP"
.IX Subsection "get_config_filename()"
Returns the full path for the '\f(CW\*(C`config.ini\*(C'\fR' file.
.SS "\s-1CONFIGURATION AND ENVIRONMENT\s0"
.IX Subsection "CONFIGURATION AND ENVIRONMENT"
.IP "\(bu" 4
\&\s-1PERL_CPAN_REPORTER_DIR\s0
.Sp
Overrides the value for \f(CW\*(C`get_config_dir()\*(C'\fR.
.IP "\(bu" 4
\&\s-1PERL_CPAN_REPORTER_CONFIG\s0
.Sp
Overrides the value for \f(CW\*(C`get_config_filename()\*(C'\fR.
.SS "Other methos & accessors"
.IX Subsection "Other methos & accessors"
This class also provides some semi-public methods and accessors that most
likely will move around even more than the others, but that are listed here
for completeness sake. You should really not use nor rely on those:
.IP "\(bu" 4
edit_report \- accessor for the 'edit_report' setting.
.IP "\(bu" 4
email_from \- accessor for the 'email_from' setting.
.IP "\(bu" 4
myprint \- accessor for the print function.
.IP "\(bu" 4
myprompt \- accessor for the prompt function.
.IP "\(bu" 4
mywarn \- accessor for the warn function.
.IP "\(bu" 4
send_duplicates \- accessor for the 'send_duplicates' setting.
.IP "\(bu" 4
send_report \- accessor for the 'send_report' setting.
.IP "\(bu" 4
transport \- accessor for the 'transport' setting.
.IP "\(bu" 4
transport_name \- returns the transport name.
.IP "\(bu" 4
transport_args \- returns the transport arguments.

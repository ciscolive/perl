.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Excel::Template::Container::Conditional 3"
.TH Excel::Template::Container::Conditional 3 "2010-06-17" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Excel::Template::Container::Conditional \- Excel::Template::Container::Conditional
.SH "PURPOSE"
.IX Header "PURPOSE"
To provide conditional execution of children nodes
.SH "NODE NAME"
.IX Header "NODE NAME"
\&\s-1IF\s0
.SH "INHERITANCE"
.IX Header "INHERITANCE"
\&\s-1CONTAINER\s0
.SH "ATTRIBUTES"
.IX Header "ATTRIBUTES"
.IP "\(bu" 4
\&\s-1NAME\s0
.Sp
This is the name of the parameter to test. It is resolved like any other parameter name. (q.v. \s-1VAR\s0 for more info.)
.IP "\(bu" 4
\&\s-1VALUE\s0
.Sp
If \s-1VALUE\s0 is set, then a comparison operation is done. The value of \s-1NAME\s0 is compared to \s-1VALUE\s0 using the value of \s-1OP.\s0
.IP "\(bu" 4
\&\s-1OP\s0
.Sp
If \s-1VALUE\s0 is set, then this is checked. If it isn't present, then '==' (numeric equality) is assumed. \s-1OP\s0 must be one of Perl the numeric comparison operators or the string comparison operators. All 6 of each kind is supported.
.Sp
\&\fBNote\fR: If you want to use < or <=, you must instead use &lt; or &lt;=. This is to make sure it will parse with XML::Parser. You should not need to use &gt; or &gt;= instead of > and >=, respectively.
.IP "\(bu" 4
\&\s-1IS\s0
.Sp
If \s-1VALUE\s0 is not set, then \s-1IS\s0 is checked. \s-1IS\s0 is allowed to be either \*(L"\s-1TRUE\*(R"\s0 or \*(L"\s-1FALSE\*(R".\s0 The boolean value of \s-1NAME\s0 is checked against \s-1IS.\s0
.SH "CHILDREN"
.IX Header "CHILDREN"
None
.SH "EFFECTS"
.IX Header "EFFECTS"
None
.SH "DEPENDENCIES"
.IX Header "DEPENDENCIES"
None
.SH "USAGE"
.IX Header "USAGE"
.Vb 3
\&  <if name="_\|_ODD_\|_" is="false">
\&    ... Children here
\&  </if>
.Ve
.PP
In the above example, the children will be executed if the value of _\|_ODD_\|_ (which is set by the \s-1LOOP\s0 node) is false. So, for all even iterations.
.SH "AUTHOR"
.IX Header "AUTHOR"
Rob Kinyon (rob.kinyon@gmail.com)
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\s-1LOOP\s0, \s-1VAR\s0

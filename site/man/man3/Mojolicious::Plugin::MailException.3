.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Mojolicious::Plugin::MailException 3"
.TH Mojolicious::Plugin::MailException 3 "2018-07-03" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mojolicious::Plugin::MailException \- Mojolicious plugin to send crash information by email
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&    package MyServer;
\&    use Mojo::Base \*(AqMojolicious\*(Aq;
\&
\&    sub startup {
\&        my ($self) = @_;
\&
\&        $self\->plugin(MailException => {
\&            from    => \*(Aqrobot@my.site.com\*(Aq,
\&            to      => \*(Aqmail1@my.domain.com, mail2@his.domain.com\*(Aq,
\&            subject => \*(AqMy site crashed!\*(Aq,
\&            headers => {
\&                \*(AqX\-MySite\*(Aq => \*(Aqcrashed\*(Aq
\&            },
\&
\&            stack   => 10
\&        });
\&    }
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The plugin catches all exceptions, packs them into email and sends
them to email.
.PP
There are some plugin options:
.IP "from" 4
.IX Item "from"
From-address for email (default \fBroot@localhost\fR)
.IP "to" 4
.IX Item "to"
To\-address(es) for email (default \fBwebmaster@localhost\fR)
.IP "subject" 4
.IX Item "subject"
Subject for crash email
.IP "headers" 4
.IX Item "headers"
Hash with headers that have to be added to mail
.IP "stack" 4
.IX Item "stack"
Stack size for crash mail. Default is \f(CW20\fR.
.IP "maildir" 4
.IX Item "maildir"
This option saves (stores) messages in the maildir instead of
sending them. If you catch too many crashes, then their sending
probably uses too much of the \s-1CPU,\s0 so by using this option you
may save your messages instead of sending them.
.Sp
The option is ignored if \f(CW\*(C`send\*(C'\fR option is defined.
.IP "send" 4
.IX Item "send"
Subroutine that can be used to send the mail, example:
.Sp
.Vb 2
\&    sub startup {
\&        my ($self) = @_;
\&
\&        $self\->plugin(MailException => {
\&            send => sub {
\&                my ($mail, $exception) = @_;
\&
\&                $mail\->send;    # prepared MIME::Lite object
\&            }
\&        });
\&    }
.Ve
.Sp
In the function You can send email by yourself and (or) prepare and
send Your own mail (sms, etc) message using \fB\f(CB$exception\fB\fR object.
See Mojo::Exception.
.PP
The plugin provides additional method (helper) \fBmail_exception\fR.
.PP
.Vb 1
\&    $cx\->mail_exception(\*(Aqmy_error\*(Aq, { \*(AqX\-Add\-Header\*(Aq => \*(Aqvalue\*(Aq });
.Ve
.PP
You can use the helper to raise exception with additional mail headers.
.SH "VCS"
.IX Header "VCS"
The plugin is placed on
github <https://github.com/dr-co/libmojolicious-plugin-mail_exception>.
.SH "COPYRIGHT AND LICENCE"
.IX Header "COPYRIGHT AND LICENCE"
.Vb 2
\& Copyright (C) 2012 by Dmitry E. Oboukhov <unera@debian.org>
\& Copyright (C) 2012 by Roman V. Nikolaev <rshadow@rambler.ru>
.Ve
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself, either Perl version 5.8.8 or,
at your option, any later version of Perl 5 you may have available.

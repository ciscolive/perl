.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Infoblox::Grid::DHCP 3"
.TH Infoblox::Grid::DHCP 3 "2018-06-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Infoblox::Grid::DHCP \- Grid DHCP services object.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
When you configure an Infoblox appliance as a full-featured \s-1DHCP\s0 server, you can set operational parameters at the grid, member, network, \s-1DHCP\s0 range and individual \s-1IP\s0 address levels. This class supports grid-level \s-1DHCP\s0 services management and network configuration. It implements methods for configuring grid-level \s-1DHCP\s0 parameters, such as \s-1DHCP\s0 general properties,  ping and \s-1DHCP\s0 lease settings, Bootstrap Protocol (\s-1BOOTP\s0) properties, custom \s-1DHCP\s0 options, and \s-1DHCP\s0 logging.
.SH "CONSTRUCTOR"
.IX Header "CONSTRUCTOR"
The Infoblox::Grid::DHCP object is automatically generated upon the successful installation of the Infoblox appliance. It does not require manual construction.
.SH "SESSION METHODS"
.IX Header "SESSION METHODS"
This section describes all the methods in the Infoblox::Session module that you can apply to a grid \s-1DHCP\s0 object.
.SS "Infoblox::Session\->get( )"
.IX Subsection "Infoblox::Session->get( )"
.RS 4
Use this method to retrieve matching objects from the Infoblox appliance. See Infoblox::Session\->\fBget()\fR for parameters and return values.
.IP "\fBKey Reference\fR" 4
.IX Item "Key Reference"
.Vb 1
\& Apply the following attributes to get a specific grid DHCP object:
\&
\&  grid \- Required. A grid name in string format.
.Ve
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& my @retrieved_objs = $session\->get(
\&     object => "Infoblox::Grid::DHCP",
\&     grid   => "Infoblox"
\&     );
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->modify( )"
.IX Subsection "Infoblox::Session->modify( )"
.RS 4
Use this method to modify objects in the Infoblox appliance. See Infoblox::Session\->\fBmodify()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Use method to modify authority.
\& $griddhcp\->authority("true");
\& #Submit modification
\& my $response = $session\->modify( $griddhcp );
.Ve
.RE
.RS 4
.RE
.SH "METHODS"
.IX Header "METHODS"
This section describes all the methods that you can use to configure and retrieve the attribute values of the \s-1DHCP\s0 properties of a grid.
.SS "authority( )"
.IX Subsection "authority( )"
.RS 4
Use this method to set or retrieve the grid-level authority flag. This flag specifies whether a \s-1DHCP\s0 server is authoritative for a domain.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to set the authority flag or \*(L"false\*(R" to deactivate/unset it. The default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get authority
\& my $authority = $griddhcp\->authority();
\& #Modify authority
\& $griddhcp\->authority("true");
.Ve
.RE
.RS 4
.RE
.SS "bootfile( )"
.IX Subsection "bootfile( )"
.RS 4
Some \s-1DHCP\s0 clients use \s-1BOOTP\s0 (bootstrap protocol) or include the boot file name option in their \s-1DHCPREQUEST\s0 messages. Use this method to set or retrieve a boot file name.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The name of the file that the client must download.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get bootfile
\& my $bootfile = $griddhcp\->bootfile();
\& #Modify bootfile
\& $griddhcp\->bootfile("bootfile.txt");
.Ve
.RE
.RS 4
.RE
.SS "bootserver( )"
.IX Subsection "bootserver( )"
.RS 4
Use this method to set or retrieve the name of the server on which a boot file is stored.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The boot server \s-1IP\s0 address or name in \s-1FQDN\s0 (Fully Qualified Domain Name) format. The \s-1FQDN\s0 consists of the host name followed by the domain name (example: abc.com). A boot server name can have a maximum of 256 bytes.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get bootserver
\& my $bootserver = $griddhcp\->bootserver();
\& #Modify bootserver
\& $griddhcp\->bootserver("hostname.com");
.Ve
.RE
.RS 4
.RE
.SS "capture_hostname( )"
.IX Subsection "capture_hostname( )"
.RS 4
Use this method to set or retrieve the grid-level capture_hostname flag. Set this flag to capture the hostname and lease time when assigning a fixed address.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to enable this feature or \*(L"false\*(R" to disable it. The default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get capture_hostname
\& my $capture_hostname = $griddhcp\->capture_hostname();
\& #Modify disable
\& $griddhcp\->capture_hostname("true");
.Ve
.RE
.RS 4
.RE
.SS "ddns_generate_hostname( )"
.IX Subsection "ddns_generate_hostname( )"
.RS 4
Use this method to set or retrieve the grid-level ddns_generate_hostname flag. Set this flag to enable a \s-1DHCP\s0 server to generate a host name and update \s-1DNS\s0 with this host name when it receives a \s-1DHCP REQUEST\s0 message that does not include a host name.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to enable this feature or \*(L"false\*(R" to disable it. The default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get ddns_generate_hostname
\& my $ddns_generate_hostname = $griddhcp\->ddns_generate_hostname();
\& #Modify disable
\& $griddhcp\->ddns_generate_hostname("true");
.Ve
.RE
.RS 4
.RE
.SS "ddns_retry_interval( )"
.IX Subsection "ddns_retry_interval( )"
.RS 4
Use this method to set or retrieve the grid-level ddns_retry_interval value. Set the retry interval when the \s-1DHCP\s0 server makes repeated attempts to send \s-1DDNS\s0 updates to a \s-1DNS\s0 server.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
A 32\-bit integer (range from 0 to 4294967295) that represents the retry interval in minutes. The default retry interval is five minutes.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get ddns_retry_interval
\& my $ddns_retry_interval = $griddhcp\->ddns_retry_interval();
\& #Modify ddns_retry_interval
\& $griddhcp\->ddns_retry_interval(10);
.Ve
.RE
.RS 4
.RE
.SS "ddns_server_always_updates( )"
.IX Subsection "ddns_server_always_updates( )"
.RS 4
Use this method to set or retrieve the grid-level ddns_server_always_updates flag. Set this flag to allow only the \s-1DHCP\s0 server to update \s-1DNS,\s0 regardless of requests from \s-1DHCP\s0 clients.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to set the  ddns_server_always_updates flag or \*(L"false\*(R" to deactivate/unset it. The default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get ddns_server_always_updates
\& my $ddns_server_always_updates = $griddhcp\->ddns_server_always_updates();
\& #Modify ddns_server_always_updates
\& $griddhcp\->ddns_server_always_updates("true");
.Ve
.RE
.RS 4
.RE
.SS "ddns_ttl( )"
.IX Subsection "ddns_ttl( )"
.RS 4
Use this method to set or retrieve the grid-level ddns_ttl value. The \s-1DDNS TTL\s0 (Dynamic \s-1DNS\s0 Time To Live) value specifies the number of seconds a \s-1DNS\s0 record is cached.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
A 32\-bit integer (range from 0 to 4294967295) that specifies the number of seconds a \s-1DNS\s0 record is cached. Default value is half of lease time.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get ddns_ttl
\& my $ddns_ttl = $griddhcp\->ddns_ttl();
\& #Modify ddns_ttl
\& $griddhcp\->ddns_ttl(1000);
.Ve
.RE
.RS 4
.RE
.SS "ddns_domainname( )"
.IX Subsection "ddns_domainname( )"
.RS 4
Use this method to set or retrieve the grid-level \s-1DDNS\s0 domain name value.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The \s-1DDNS\s0 domain name in \s-1FQDN\s0 (Fully Qualified Domain Name) format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get ddns_domainname
\& my $ddns_domainname = $griddhcp\->ddns_domainname();
\& #Modify ddns_domainname
\& $griddhcp\->ddns_domainname("domain.com");
.Ve
.RE
.RS 4
.RE
.SS "ddns_update_fixed_addresses( )"
.IX Subsection "ddns_update_fixed_addresses( )"
.RS 4
Use this method to set or retrieve the grid-level ddns_update_fixed_addresses flag. Set this flag to enable the \s-1DHCP\s0 server to update the A and \s-1PTR\s0 records of clients with fixed addresses.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to enable the \s-1DHCP\s0 server to update the A and \s-1PTR\s0 records of clients with fixed addresses, or specify \*(L"false\*(R" to disable this feature. The default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get ddns_update_fixed_addresses
\& my $ddns_update_fixed_addresses = $griddhcp\->ddns_update_fixed_addresses();
\& #Modify ddns_update_fixed_addresses
\& $griddhcp\->ddns_update_fixed_addresses("true");
.Ve
.RE
.RS 4
.RE
.SS "ddns_use_option81( )"
.IX Subsection "ddns_use_option81( )"
.RS 4
Use this method to set or retrieve the grid-level ddns_use_option81 flag. Set this flag to enable support for option 81.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to enable support for option 81 or \*(L"false\*(R" to disable it. The default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get ddns_use_option81
\& my $ddns_use_option81 = $griddhcp\->ddns_use_option81();
\& #Modify ddns_use_option81
\& $griddhcp\->ddns_use_option81("true");
.Ve
.RE
.RS 4
.RE
.SS "deny_bootp( )"
.IX Subsection "deny_bootp( )"
.RS 4
Use this method to set or retrieve the grid-level deny_bootp flag. Set this flag to enable a \s-1BOOTP\s0 server to deny \s-1BOOTP\s0 request.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to enable this feature or \*(L"false\*(R" to disable it. The default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get deny_bootp
\& my $deny_bootp = $griddhcp\->deny_bootp();
\& #Modify deny_bootp
\& $griddhcp\->deny_bootp("true");
.Ve
.RE
.RS 4
.RE
.SS "disable_all_nac_filters( )"
.IX Subsection "disable_all_nac_filters( )"
.RS 4
Use this method to enable/disable the use of all \s-1NAC\s0 filters.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to disable the use of all \s-1NAC\s0 filters or \*(L"false\*(R" to enable it. The default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get disable_all_nac_filters
\& my $disable_all_nac_filters = $griddhcp\->disable_all_nac_filters();
\& #Modify disable_all_nac_filters
\& $griddhcp\->disable_all_nac_filters("true");
.Ve
.RE
.RS 4
.RE
.SS "dns_update_style( )"
.IX Subsection "dns_update_style( )"
.RS 4
Use this method to set or retrieve the update style for dynamic \s-1DNS\s0 updates (DHCPv4).
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid values are '\s-1INTERIM\s0' and '\s-1STANDARD\s0'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get dns_update_style value
\& my $value = $object\->dns_update_style();
\&
\& #Modify dns_update_style value
\& $object\->dns_update_style(\*(AqSTANDARD\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "format_log_option_82( )"
.IX Subsection "format_log_option_82( )"
.RS 4
Use this method to set or retrieve the format option for Option 82 logging. The possible values are '\s-1HEX\s0' or '\s-1TEXT\s0'.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Switch between \s-1HEX\s0 and human readable format of agent.remote\-id/circuit\-id in syslog for Option 82. Default is '\s-1HEX\s0'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get format of option82 logging
\& my $option82_format = $griddhcp\->format_log_option_82();
\& #Modify format of option82 logging
\& $griddhcp\->format_log_option_82(\*(AqTEXT\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "email_list( )"
.IX Subsection "email_list( )"
.RS 4
Use this method to specify or retrieve the grid-level email_list value. Specify an e\-mail address to which you want the Infoblox appliance to send e\-mail notifications when the \s-1DHCP\s0 address usage for the grid crosses a threshold. You can create a list of several e\-mail addresses.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Array reference with the e\-mail values.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get email_list
\& my $email_list = $griddhcp\->email_list();
\& #Modify email_list
\& $griddhcp\->email_list(["admin\e@infoblox.com"]);
.Ve
.RE
.RS 4
.RE
.SS "enable_ddns( )"
.IX Subsection "enable_ddns( )"
.RS 4
Use this method to set or retrieve the grid-level enable_ddns flag. Set this flag to enable \s-1DHCP\s0 servers in a grid to send \s-1DDNS\s0 updates.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to enable support for \s-1DDNS\s0 updates or \*(L"false\*(R" to disable it. The default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get enable_ddns
\& my $enable_ddns= $griddhcp\->enable_ddns();
\& #Modify enable_ddns
\& $griddhcp\->enable_ddns("true");
.Ve
.RE
.RS 4
.RE
.SS "enable_dhcp_thresholds( )"
.IX Subsection "enable_dhcp_thresholds( )"
.RS 4
Use this method to set or retrieve the grid-level enable_dhcp_thresholds flag. Thresholds represent the watermarks above or below which address usage in a network is unexpected and might warrant your attention.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to enable \s-1DHCP\s0 thresholds or \*(L"false\*(R" to disable them. The default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get enable_dhcp_thresholds
\& my $enable_dhcp_thresholds = $griddhcp\->enable_dhcp_thresholds();
\& #Modify enable_dhcp_thresholds
\& $griddhcp\->enable_dhcp_thresholds("true");
.Ve
.RE
.RS 4
.RE
.SS "enable_email_warnings( )"
.IX Subsection "enable_email_warnings( )"
.RS 4
Use this method to set or retrieve the grid-level enable_email_warnings flag. If you enable this feature and \s-1DHCP\s0 threshold is enabled, the Infoblox appliance sends an e\-mail notification to an administrator if \s-1DHCP\s0 address usage crosses a high or low watermark threshold.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to set the enable_email_warnings flag or \*(L"false\*(R" to deactivate/unset it. The default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get enable_email_warnings
\& my $enable_email_warnings = $griddhcp\->enable_email_warnings();
\& #Modify enable_email_warnings
\& $griddhcp\->enable_email_warnings("true");
.Ve
.RE
.RS 4
.RE
.SS "enable_fingerprint( )"
.IX Subsection "enable_fingerprint( )"
.RS 4
Use this method to set or retrieve the Grid-level enable_fingerprint flag. If you enable this feature, the server will match a fingerprint for incoming lease requests.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to set the enable_fingerprint flag or \*(L"false\*(R" to deactivate/unset it. The default value is \*(L"true\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get enable_fingerprint
\& my $enable_fingerprint = $griddhcp\->enable_fingerprint();
\& #Modify enable_fingerprint
\& $griddhcp\->enable_fingerprint("false");
.Ve
.RE
.RS 4
.RE
.SS "enable_gss_tsig( )"
.IX Subsection "enable_gss_tsig( )"
.RS 4
Use this method to retrieve the grid-level enable_gss_tsig flag. This method returns \*(L"true\*(R" only if both the gss_tsig_key and kdc_server are specified.
.Sp
This is for DHCPv4 GSS-TSIG authentication.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
This is a read-only method. You cannot enter any parameter.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
This method returns the enable_gss_tsig attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get enable_gss_tsig
\& my $enable_gss_tsig = $griddhcp\->enable_gss_tsig();
.Ve
.RE
.RS 4
.RE
.SS "enable_ifmap( )"
.IX Subsection "enable_ifmap( )"
.RS 4
Use this method to enable or disable the IF-MAP \s-1DHCP\s0 client feature on this grid.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Boolean to enable or disable IF-MAP client feature. The default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get IF\-MAP enable value
\& my $ifmap_enabled = $griddhcp\->enable_ifmap();
\& #Enable IF\-MAP Client feature
\& $griddhcp\->enable_ifmap("true");
.Ve
.RE
.RS 4
.RE
.SS "enable_ifmap_publishing( )"
.IX Subsection "enable_ifmap_publishing( )"
.RS 4
Use this method to enable or disable the IF-MAP publishing feature on this grid.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Boolean to enable or disable IF-MAP publishing feature. The default value is \*(L"true\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get IF\-MAP publishing enable value
\& my $ifmap_publishing_enabled = $griddhcp\->enable_ifmap_publishing();
\& #Disable IF\-MAP publishing feature
\& $griddhcp\->enable_ifmap_publishing("false");
.Ve
.RE
.RS 4
.RE
.SS "enable_hostname_rewrite( )"
.IX Subsection "enable_hostname_rewrite( )"
.RS 4
Use this method to set or retrieve the grid enable_hostname_rewrite flag.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Boolean to enable or disable hostname rewrite for the grid. The default value is \*(L"false\*(R".
.Sp
Cannot enable the hostname rewrite policy along with the Microsoft code page. See \*(L"\fBmicrosoft_code_page()\fR\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get enable_hostname_rewrite
\& $status = $griddhcp\->enable_hostname_rewrite();
\& #Modify enable_hostname_rewrite
\& $griddhcp\->enable_hostname_rewrite("true");
.Ve
.RE
.RS 4
.RE
.SS "enable_roaming_hosts( )"
.IX Subsection "enable_roaming_hosts( )"
.RS 4
Use this method to set or retrieve the grid-level enable_roaming_hosts flag. Set this flag to enable \s-1DHCP\s0 servers in a grid to support roaming hosts.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to set the enable_roaming_hosts flag or \*(L"false\*(R" to deactivate/unset it. The default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get enable_roaming_hosts
\& my $enable_roaming_hosts = $griddhcp\->enable_roamin_hosts();
\& #Modify enable_roaming_hosts
\& $griddhcp\->enable_roaming_hosts("true");
.Ve
.RE
.RS 4
.RE
.SS "enable_snmp_warnings( )"
.IX Subsection "enable_snmp_warnings( )"
.RS 4
Use this method to set or retrieve the grid-level enable_snmp_warnings flag. When \s-1DHCP\s0 address usage crosses a watermark threshold and \s-1DHCP\s0 threshold is enabled, the appliance sends an \s-1SNMP\s0 trap to trap receivers that you defined for the grid.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to set the enable_snmp_warnings flag or \*(L"false\*(R" to deactivate/unset it. The default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get enable_snmp_warnings
\& my $enable_snmp_warnings = $griddhcp\->enable_snmp_warnings();
\& #Modify enable_snmp_warnings
\& $griddhcp\->enable_snmp_warnings("true");
.Ve
.RE
.RS 4
.RE
.SS "grid( )"
.IX Subsection "grid( )"
.RS 4
Use  this method to retrieve the grid that serves \s-1DHCP.\s0 This specifies a group of Infoblox appliances that are connected together to provide a single point of device administration and service configuration in a secure, highly available environment.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Text with the name of the grid that provides \s-1DHCP\s0 service. Default value is \*(L"Infoblox\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #get grid
\& my $grid = $griddhcp\->grid();
.Ve
.RE
.RS 4
.RE
.SS "gss_tsig_keys( )"
.IX Subsection "gss_tsig_keys( )"
.RS 4
Use this method to set or retrieve the list of GSS-TSIG keys for a Grid DHCPv4 object.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an array reference that contains Infoblox::Grid::KerberosKey objects.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get the Kerberos keys list
\& my $kerberos_keys_list = $grid_dhcp\->gss_tsig_keys();
\&
\& #Modify the Kerberos keys list
\& my $kerberos_key1 = Infoblox::Cluster::KerberosKey\->new(
\&        principal => \*(Aqhost/appliance.ivan.test1@LADYBUG.LOCAL\*(Aq,
\&        );
\& my $kerberos_key2 = Infoblox::Cluster::KerberosKey\->new(
\&        principal => \*(Aqhost/appliance.ivan.test2@LADYBUG.LOCAL\*(Aq,
\&        );
\& $grid_dhcp\->gss_tsig_keys([$kerberos_key1, $kerberos_key2]);
.Ve
.RE
.RS 4
.RE
.SS "high_water_mark( )"
.IX Subsection "high_water_mark( )"
.RS 4
Use this method to set or retrieve the grid-level high_water_mark value. If the percent of allocated addresses exceeds this watermark, the appliance makes a syslog entry and if enabled, sends an e\-mail notification.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Number with the percentage value. Range is from 1 to 100. The high watermark value must be greater than the low watermark value. Default value is 95.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get high_water_mark
\& my $high_water_mark = $griddhcp\->high_water_mark();
\& #Modify high_water_mark
\& $griddhcp\->high_water_mark(80);
.Ve
.RE
.RS 4
.RE
.SS "high_water_mark_reset( )"
.IX Subsection "high_water_mark_reset( )"
.RS 4
Use this method to set or retrieve the grid-level high_water_mark_reset value. If the percentage of allocated addresses drops below this value, a corresponding \s-1SNMP\s0 trap is reset.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Number with the percentage value. Range is from 1 to 100. The high watermark value must be greater than the low watermark value. Default value is 85.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get high_water_mark_reset
\& my $high_water_mark_reset = $griddhcp\->high_water_mark_reset();
\& #Modify high_water_mark_reset
\& $griddhcp\->high_water_mark_reset(80);
.Ve
.RE
.RS 4
.RE
.SS "hostname_rewrite_policy( )"
.IX Subsection "hostname_rewrite_policy( )"
.RS 4
Use this method to retrieve the name of the default hostname rewrite policy, which is also in the protocol_hostname_rewrite_policies array. This attribute is read-only.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get hostname_rewrite_policy
\& my $name = $griddhcp\->hostname_rewrite_policy();
.Ve
.RE
.RS 4
.RE
.SS "ifmap_delete_option( )"
.IX Subsection "ifmap_delete_option( )"
.RS 4
Use this method to set or retrieve the IF-MAP delete option. The possible values are 'never', 'always', 'older_than'.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The IF-MAP delete option. The default value is 'always'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get IF\-MAP delete option
\& my $delete_option = $griddhcp\->ifmap_delete_option();
\& #Modify IF\-MAP delete option
\& $griddhcp\->ifmap_delete_option(\*(Aqnever\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "ifmap_ip_mac_lifetime( )"
.IX Subsection "ifmap_ip_mac_lifetime( )"
.RS 4
Use this method to set or retrieve the IF-MAP ip-mac (ip-duid) metadata lifetime. This method applies only if the IF-MAP delete option is set to \*(L"older_than\*(R".
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The IF-MAP ip mac lifetime.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get IF\-MAP ip mac lifetime
\& my $port = $griddhcp\->ifmap_ip_mac_lifetime();
\& #Modify IF\-MAP ip mac lifetime
\& $griddhcp\->ifmap_ip_mac_lifetime(300);
.Ve
.RE
.RS 4
.RE
.SS "ifmap_port( )"
.IX Subsection "ifmap_port( )"
.RS 4
Use this method to set or retrieve the IF-MAP server port used by \s-1DHCP\s0 IF-MAP clients. This setting is optional and defaults to the port associated with the protocol specified in ifmap_url (eg: for \s-1HTTP,\s0 the port is 80; for \s-1HTTPS,\s0 the port is 443).
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The IF-MAP server port number. The default value is undef.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get IF\-MAP server port
\& my $port = $griddhcp\->ifmap_port();
\& #Modify IF\-MAP server port
\& $griddhcp\->ifmap_port(1234);
.Ve
.RE
.RS 4
.RE
.SS "ifmap_protocol( )"
.IX Subsection "ifmap_protocol( )"
.RS 4
Use this method to set or retrieve the IF-MAP server protocol. This setting is required and must be one of 'ifmap_20' or 'ifmap_11'.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The IF-MAP server protocol. The default value is 'ifmap_20'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get IF\-MAP server protocol
\& my $protocol = $griddhcp\->ifmap_protocol();
\& #Modify IF\-MAP server protocol
\& $griddhcp\->ifmap_protocol(\*(Aqifmap_11\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "ifmap_url( )"
.IX Subsection "ifmap_url( )"
.RS 4
Use this method to set or retrieve the IF-MAP server \s-1URL\s0 used by \s-1DHCP\s0 IF-MAP clients. This setting is mandatory if IF-MAP is enabled on this grid.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
String for the IF-MAP server \s-1URL.\s0 The default value is undef.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get IF\-MAP server URL
\& my $url = $griddhcp\->ifmap_url();
\& #Modify IF\-MAP server URL
\& $griddhcp\->ifmap_url("https://ifmap.infoblox.com");
.Ve
.RE
.RS 4
.RE
.SS "ifmap_server_ca_cert( )"
.IX Subsection "ifmap_server_ca_cert( )"
.RS 4
Use this method to set or retrieve the ifmap server \s-1CA\s0 certificate.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
An Infoblox::IFMap::CACertificate object.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute server_ca_cert.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get server_ca_cert
\& my $server_ca_cert = $griddhcp\->server_ca_cert( );
\&
\& # Change it
\& $griddhcp\->server_ca_cert($ca_cert);
.Ve
.RE
.RS 4
.RE
.SS "ignore_id( )"
.IX Subsection "ignore_id( )"
.RS 4
Use this method to set or retrieve the grid-level ignore_id type. Indicates whether the appliance will ignore \s-1DHCP\s0 client IDs or \s-1MAC\s0 addresses.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid values are '\s-1NONE\s0', '\s-1CLIENT\s0', or '\s-1MACADDR\s0'. The default is '\s-1NONE\s0'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 6
\& # Get attribute value
\& $value = $griddhcp\->ignore_id();
\& # Modify attribute value
\& $griddhcp\->ignore_id(\*(AqCLIENT\*(Aq);
\& #Un\-override ignore_id
\& $griddhcp\->ignore_id(undef);
.Ve
.RE
.RS 4
.RE
.SS "ignore_mac_addresses( )"
.IX Subsection "ignore_mac_addresses( )"
.RS 4
Use this method to set or retrieve the grid-level ignore_mac_addresses list. A list of \s-1MAC\s0 addresses the appliance will ignore.
.Sp
If you enter \s-1MAC\s0 addresses in the ignore_mac_addresses, then the appliance will ignore them. If you enter empty array, then the appliance will ignore any \s-1MAC\s0 address.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an array reference that contains string objects.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& $value = $griddhcp\->ignore_mac_addresses();
\& # Modify attribute value
\& $griddhcp\->ignore_mac_addresses(["11::11::11::11::11::11"]);
.Ve
.RE
.RS 4
.RE
.SS "ignore_dhcp_option_list_request( )"
.IX Subsection "ignore_dhcp_option_list_request( )"
.RS 4
Use this method to set or retrieve the grid-level ignore_dhcp_option_list_request flag. If this flag is set to true all available \s-1DHCP\s0 options will be returned to the client.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to set the ignore_dhcp_option_list_request flag or \*(L"false\*(R" to deactivate/unset it. The default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get ignore_dhcp_option_list_request
\& my $ignore_dhcp_option_list_request = $griddhcp\->ignore_dhcp_option_list_request();
\& #Modify ignore_dhcp_option_list_request
\& $griddhcp\->ignore_dhcp_option_list_request("true");
.Ve
.RE
.RS 4
.RE
.SS "immediate_fa_configuration( )"
.IX Subsection "immediate_fa_configuration( )"
.RS 4
Use this method to control whether fixed address configuration takes effect immediately without \s-1DHCP\s0 service restart.
.Sp
Setting this method to a defined value implicitly sets the override_immediate_fa_configuration method to \*(L"true\*(R". Setting the parameter to undefined causes the appliance to use the \fBGrid|MS Server|...\fR default and automatically resets the override_immediate_fa_configuration attribute to \*(L"false\*(R".
.Sp
Note that when immediate_fa_configuration is set to a defined value and override_immediate_fa_configuration is set to \*(L"false\*(R", the last operation takes precedence. Thus the sequence \f(CW$object\fR\->immediate_fa_configuration(\fB\s-1VAL\s0\fR); \f(CW$object\fR\->override_immediate_fa_configuration(\*(L"false\*(R"); will set override_immediate_fa_configuration to \*(L"false\*(R", and the sequence \f(CW$object\fR\->override_immediate_fa_configuration(\*(L"false\*(R"); \f(CW$object\fR\->immediate_fa_configuration(\fB\s-1VAL\s0\fR); will result in override_immediate_fa_configuration=\*(L"true\*(R".
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an unsigned integer. Default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get immediate_fa_configuration
\& my $immediate_fa_configuration = $griddhcp\->immediate_fa_configuration();
\& #Modify disable
\& $griddhcp\->immediate_fa_configuration("true");
.Ve
.RE
.RS 4
.RE
.SS "ipv6_capture_hostname( )"
.IX Subsection "ipv6_capture_hostname( )"
.RS 4
Use this method to set or retrieve the grid-level ipv6_capture_hostname flag. Set this flag to capture the ipv6 hostname and lease time when assigning a fixed address.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to enable this feature or \*(L"false\*(R" to disable it. The default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get ipv6_capture_hostname
\& my $ipv6_capture_hostname = $griddhcp\->ipv6_capture_hostname();
\& #Modify disable
\& $griddhcp\->ipv6_capture_hostname("true");
.Ve
.RE
.RS 4
.RE
.SS "ipv6_ddns_enable_option_fqdn( )"
.IX Subsection "ipv6_ddns_enable_option_fqdn( )"
.RS 4
Use this method to set or retrieve the grid-level ipv6_ddns_enable_option_fqdn flag. This method controls whether the \s-1FQDN\s0 option sent by the client is to be used, or if the server can automatically generate the \s-1FQDN.\s0
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to enable this feature or \*(L"false\*(R" to disable it. The default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get ipv6_ddns_enable_option_fqdn
\& my $ipv6_ddns_enable_option_fqdn = $griddhcp\->ipv6_ddns_enable_option_fqdn();
\& #Modify disable
\& $griddhcp\->ipv6_ddns_enable_option_fqdn("true");
.Ve
.RE
.RS 4
.RE
.SS "ipv6_ddns_server_always_updates( )"
.IX Subsection "ipv6_ddns_server_always_updates( )"
.RS 4
Use this method to set or retrieve the grid-level ipv6_ddns_server_always_updates flag. Set this flag to \*(L"false\*(R" to update \s-1DNS\s0 only if requested by the client.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to enable this feature or \*(L"false\*(R" to disable it. The default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get ipv6_ddns_server_always_updates
\& my $ipv6_ddns_server_always_updates = $griddhcp\->ipv6_ddns_server_always_updates();
\& #Modify ipv6_ddns_server_always_updates
\& $griddhcp\->ipv6_ddns_server_always_updates("true");
.Ve
.RE
.RS 4
.RE
.SS "ipv6_ddns_domainname( )"
.IX Subsection "ipv6_ddns_domainname( )"
.RS 4
Use this method to set or retrieve the grid-level IPv6 \s-1DDNS\s0 domain name value.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The \s-1DDNS\s0 domain name in \s-1FQDN\s0 (Fully Qualified Domain Name) format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get ipv6_ddns_domainname
\& my $ipv6_ddns_domainname = $griddhcp\->ipv6_ddns_domainname();
\& #Modify ipv6_ddns_domainname
\& $griddhcp\->ipv6_ddns_domainname("domain.com");
.Ve
.RE
.RS 4
.RE
.SS "ipv6_ddns_ttl( )"
.IX Subsection "ipv6_ddns_ttl( )"
.RS 4
Use this method to set or retrieve the grid-level IPv6 \s-1DDNS TTL.\s0
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The preferred \s-1DDNS TTL\s0 value in seconds. The default is undefined.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get ipv6_ddns_ttl
\& my $ipv6_ddns_ttl = $griddhcp\->ipv6_ddns_ttl();
\& #Modify ipv6_ddns_ttl
\& $griddhcp\->ipv6_ddns_ttl(12345);
.Ve
.RE
.RS 4
.RE
.SS "ipv6_default_prefix( )"
.IX Subsection "ipv6_default_prefix( )"
.RS 4
Use this method to set or retrieve the grid-level IPv6 default prefix.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The desired IPv6 prefix. It must be one of those listed in the ipv6_prefixes method.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get ipv6_default_prefix
\& my $ipv6_default_prefix = $griddhcp\->ipv6_default_prefix();
\& #Modify ipv6_default_prefix
\& $griddhcp\->ipv6_default_prefix("2001::");
.Ve
.RE
.RS 4
.RE
.SS "ipv6_dns_update_style( )"
.IX Subsection "ipv6_dns_update_style( )"
.RS 4
Use this method to set or retrieve the update style for dynamic \s-1DNS\s0 updates (DHCPv6).
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid values are '\s-1INTERIM\s0' and '\s-1STANDARD\s0'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get ipv6_dns_update_style value
\& my $value = $object\->ipv6_dns_update_style();
\&
\& #Modify ipv6_dns_update_style value
\& $object\->ipv6_dns_update_style(\*(AqSTANDARD\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "ipv6_domain_name( )"
.IX Subsection "ipv6_domain_name( )"
.RS 4
Use this method to set or retrieve the ipv6_domain_name value for a Grid \s-1DHCP\s0 object.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The name of the client's domain for resolving names in \s-1DNS\s0 in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get ipv6_domain_name
\& my $ipv6_domain_name = $griddhcp\->ipv6_domain_name();
\& #Modify ipv6_domain_name
\& $griddhcp\->ipv6_domain_name("test_domain.com");
.Ve
.RE
.RS 4
.RE
.SS "ipv6_domain_name_servers( )"
.IX Subsection "ipv6_domain_name_servers( )"
.RS 4
Use this method to set or retrieve the ipv6_domain_name_servers value of a Grid \s-1DHCP\s0 object.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The comma-separated domain name server addresses in IPv6 address format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get ipv6_domain_name_servers
\& my $ipv6_domain_name_servers = $griddhcp\->ipv6_domain_name_servers();
\& #Modify ipv6_domain_name_servers
\& $griddhcp\->ipv6_domain_name_servers("2001::1,2001::2");
.Ve
.RE
.RS 4
.RE
.SS "ipv6_enable_ddns( )"
.IX Subsection "ipv6_enable_ddns( )"
.RS 4
Use this method to set or retrieve the grid-level ipv6_enable_ddns flag. Set this flag to enable DHCPv6 dynamic \s-1DNS\s0 updates.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to enable this feature or \*(L"false\*(R" to disable it. The default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get ipv6_enable_ddns
\& my $ipv6_enable_ddns = $griddhcp\->ipv6_enable_ddns();
\& #Modify ipv6_enable_ddns
\& $griddhcp\->ipv6_enable_ddns("true");
.Ve
.RE
.RS 4
.RE
.SS "ipv6_enable_gss_tsig( )"
.IX Subsection "ipv6_enable_gss_tsig( )"
.RS 4
Use this method to retrieve the grid-level ipv6_enable_gss_tsig flag. This method returns \*(L"true\*(R" only if both the ipv6_gss_tsig_key and ipv6_kdc_server are specified.
.Sp
This is for DHCPv6 GSS-TSIG authentication.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
This is a read-only method. You cannot enter any parameter.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
This method returns the ipv6_enable_gss_tsig attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get ipv6_enable_gss_tsig
\& my $ipv6_enable_gss_tsig = $griddhcp\->ipv6_enable_gss_tsig();
.Ve
.RE
.RS 4
.RE
.SS "ipv6_enable_lease_scavenge( )"
.IX Subsection "ipv6_enable_lease_scavenge( )"
.RS 4
Use this method to set or retrieve the flag that indicates whether the DHCPv6 lease scavenging is enabled or disabled.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify 'true' to enable DHCPv6 lease scavenging and 'false' to disable it. The default value is false.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get ipv6_enable_lease_scavenge
\& my $ipv6_enable_lease_scavenge = $griddhcp\->ipv6_enable_lease_scavenge();
\& #Modify ipv6_enable_lease_scavenge
\& $griddhcp\->ipv6_enable_lease_scavenge("true");
.Ve
.RE
.RS 4
.RE
.SS "ipv6_remember_expired_client_association( )"
.IX Subsection "ipv6_remember_expired_client_association( )"
.RS 4
Use this method to set or retrieve the flag that indicates whether the DHCPv6 server can 'remember' the client for a configurable amount of time and lease the same IPv6 address to the client.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify 'true' to enable the DHCPv6 server to 'remember' the client and 'false' to disable it. The default value is false.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get ipv6_remember_expired_client_association
\& my $ipv6_remember_expired_client_association = $griddhcp\->ipv6_remember_expired_client_association();
\& #Modify ipv6_remember_expired_client_association
\& $griddhcp\->ipv6_remember_expired_client_association("true");
.Ve
.RE
.RS 4
.RE
.SS "ipv6_enable_retry_updates( )"
.IX Subsection "ipv6_enable_retry_updates( )"
.RS 4
Use this method to set or retrieve the ipv6_enable_retry_updates flag. If this flag is set to \*(L"true\*(R", the DHCPv6 server retries failed dynamic \s-1DNS\s0 updates.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to enable the \s-1DHCP\s0 server to retry failed \s-1DNS\s0 updates or \*(L"false\*(R" to disable it. The default value is \*(L"true\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get ipv6_enable_retry_updates
\& my $ipv6_enable_retry_updates = $griddhcp\->ipv6_enable_retry_updates();
\& #Modify ipv6_enable_retry_updates
\& $griddhcp\->ipv6_enable_retry_updates("true");
.Ve
.RE
.RS 4
.RE
.SS "ipv6_generate_hostname( )"
.IX Subsection "ipv6_generate_hostname( )"
.RS 4
Use this method to set or retrieve the grid-level ipv6_generate_hostname flag. Set this flag to generate the hostname if it is not sent by the client.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to enable this feature or \*(L"false\*(R" to disable it. The default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get ipv6_generate_hostname
\& my $ipv6_generate_hostname = $griddhcp\->ipv6_generate_hostname();
\& #Modify ipv6_generate_hostname
\& $griddhcp\->ipv6_generate_hostname("true");
.Ve
.RE
.RS 4
.RE
.SS "ipv6_gss_tsig_keys( )"
.IX Subsection "ipv6_gss_tsig_keys( )"
.RS 4
Use this method to set or retrieve the list of GSS-TSIG keys for a Grid DHCPv6 object.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an array reference that contains Infoblox::Grid::KerberosKey objects.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get the Kerberos keys list
\& my $kerberos_keys_list = $grid_dhcp\->ipv6_gss_tsig_keys();
\&
\& #Modify the Kerberos keys list
\& my $kerberos_key1 = Infoblox::Cluster::KerberosKey\->new(
\&        principal => \*(Aqhost/appliance.ivan.test1@LADYBUG.LOCAL\*(Aq,
\&        );
\& my $kerberos_key2 = Infoblox::Cluster::KerberosKey\->new(
\&        principal => \*(Aqhost/appliance.ivan.test2@LADYBUG.LOCAL\*(Aq,
\&        );
\& $grid_dhcp\->ipv6_gss_tsig_keys([$kerberos_key1, $kerberos_key2]);
.Ve
.RE
.RS 4
.RE
.SS "ipv6_kdc_server( )"
.IX Subsection "ipv6_kdc_server( )"
.RS 4
Use this method to specify or retrieve the IPv4 address or \s-1FQDN\s0 of the Kerberos server for DHCPv6 GSS-TSIG authentication.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The Kerberos server IPv4 address or \s-1FQDN,\s0 with a maximum of 1023 bytes.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get ipv6_kdc_server
\& my $ipv6_kdc_server = $griddhcp\->ipv6_kdc_server();
\& #Modify ipv6_kdc_server
\& $griddhcp\->ipv6_kdc_server("10.32.0.8");
.Ve
.RE
.RS 4
.RE
.SS "ipv6_lease_scavenge_time( )"
.IX Subsection "ipv6_lease_scavenge_time( )"
.RS 4
Use this method to set or retrieve the Grid-level grace period in seconds to keep an expired lease before it gets deleted by the scavenging process.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an unsigned integer greater than or equal to 21600.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get ipv6_lease_scavenge_time
\& my $ipv6_lease_scavenge_time = $griddhcp\->ipv6_lease_scavenge_time();
\& #Modify ipv6_lease_scavenge_time
\& $griddhcp\->ipv6_lease_scavenge_time(22000);
.Ve
.RE
.RS 4
.RE
.SS "ipv6_microsoft_code_page( )"
.IX Subsection "ipv6_microsoft_code_page( )"
.RS 4
Use this method to set or retrieve the grid-level Microsoft client \s-1DHCP\s0 IPv6 code page value. This value is the hostname translation code page for Microsoft \s-1DHCP\s0 IPv6 clients.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Microsoft \s-1DHCP\s0 client code page in string format. Valid values are:
.Sp
None
.Sp
Arabic (1256)
.Sp
Arabic (\s-1ISO\-8859\-6\s0)
.Sp
Baltic (1257)
.Sp
Baltic (775)
.Sp
Baltic (\s-1ISO\-8859\-4\s0)
.Sp
Central Europe (1250)
.Sp
Cyrillic (1251)
.Sp
Cyrillic (855)
.Sp
Cyrillic (\s-1ISO\-8859\-5\s0)
.Sp
Greek (1253)
.Sp
Greek (737)
.Sp
Greek (\s-1ISO\-8859\-7\s0)
.Sp
Hebrew (1255)
.Sp
Hebrew (862)
.Sp
Hebrew (\s-1ISO\-8859\-8\s0)
.Sp
Japanese Shift-JIS (932)
.Sp
Korean (949)
.Sp
Latin 1 (\s-1ISO\-8859\-1\s0)
.Sp
Latin 2 (\s-1ISO\-8859\-2\s0)
.Sp
Latin 3 (\s-1ISO\-8859\-3\s0)
.Sp
Latin 9 (\s-1ISO\-8859\-15\s0)
.Sp
Latin I (1252)
.Sp
Latin \s-1II\s0 (852)
.Sp
Multilingual Latin I (850)
.Sp
Russian (866)
.Sp
Simplified Chinese \s-1GBK\s0 (936)
.Sp
Thai (874)
.Sp
Traditional Chinese Big5 (950)
.Sp
Turkish (1254)
.Sp
Turkish (857)
.Sp
Turkish (\s-1ISO\-8859\-9\s0)
.Sp
\&\s-1US\s0 (437)
.Sp
Vietnam (1258)
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get ipv6_microsoft_code_page
\& my $ipv6_microsoft_code_page = $griddhcp\->ipv6_microsoft_code_page();
\& #Modify ipv6_microsoft_code_page
\& $griddhcp\->ipv6_microsoft_code_page("Cyrillic (ISO\-8859\-5)");
.Ve
.RE
.RS 4
.RE
.SS "ipv6_options( )"
.IX Subsection "ipv6_options( )"
.RS 4
Use this method to set or retrieve the grid-level IPv6 options.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an array reference that contains Infoblox::DHCP::Option object(s).
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 8
\& #Get ipv6_options
\& my $ipv6_options = $griddhcp\->ipv6_options();
\& #Modify ipv6_options
\& my $option1 = Infoblox::DHCP::Option\->new(
\&     name   => "dhcp6.rapid\-commit",
\&     value  => "true"
\& );
\& $griddhcp\->ipv6_options([$option1]);
.Ve
.RE
.RS 4
.RE
.SS "ipv6_prefixes( )"
.IX Subsection "ipv6_prefixes( )"
.RS 4
Use this method to set or retrieve the grid-level list of IPv6 prefixes.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
A comma-separated list of IPv6 prefixes.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get ipv6_prefixes
\& my $ipv6_prefixes = $griddhcp\->ipv6_prefixes();
\& #Modify ipv6_prefixes
\& $griddhcp\->ipv6_prefixes("2001::,2002::");
.Ve
.RE
.RS 4
.RE
.SS "ipv6_recycle_leases( )"
.IX Subsection "ipv6_recycle_leases( )"
.RS 4
Use this method to set or retrieve the ipv6_recycle_leases flag of a grid \s-1DHCP\s0 server. If you enable this feature, and then delete an IPv6 \s-1DHCP\s0 range, the appliance stores active leases from this range up to one week after the leases expire.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to set the ipv6_recycle_leases flag or \*(L"false\*(R" to deactivate/unset it. The default value is \*(L"true\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get ipv6_recycle_leases
\& my $ipv6_recycle_leases = $griddhcp\->ipv6_recycle_leases();
\& #Modify ipv6_recycle_leases
\& $griddhcp\->ipv6_recycle_leases("true");
.Ve
.RE
.RS 4
.RE
.SS "ipv6_retry_updates_interval( )"
.IX Subsection "ipv6_retry_updates_interval( )"
.RS 4
Use this method to set or retrieve the ipv6_retry_updates_interval value. Set the retry interval when the member DHCPv6 server makes repeated attempts to send \s-1DDNS\s0 updates to a \s-1DNS\s0 server.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
A 32\-bit integer (range from 0 to 4294967295) that represents the retry interval in minutes. The default retry interval is five minutes.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get ipv6_retry_updates_interval
\& my $ipv6_retry_updates_interval = $griddhcp\->ipv6_retry_updates_interval();
\& #Modify ipv6_retry_updates_interval
\& $griddhcp\->ipv6_retry_updates_interval(10);
.Ve
.RE
.RS 4
.RE
.SS "ipv6_txt_record_handling( )"
.IX Subsection "ipv6_txt_record_handling( )"
.RS 4
Use this method to set or retrieve the grid-level \s-1TXT\s0 record handling value. This value specifies how \s-1DHCP\s0 should treat \s-1TXT\s0 records when performing \s-1DNS\s0 updates.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
\&\s-1TXT\s0 record handling value in string format. Valid values are: \*(L"\s-1IGNORE_CONTENTS\*(R", \*(L"ISC\*(R", \*(L"ISC_TRANSITIONAL\*(R"\s0 and \*(L"\s-1MS\*(R".\s0 The default value is \*(L"\s-1ISC\*(R".\s0
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get ipv6_txt_record_handling
\& my $ipv6_txt_record_handling = $griddhcp\->ipv6_txt_record_handling();
\& #Modify ipv6_txt_record_handling
\& $griddhcp\->ipv6_txt_record_handling("ISC_TRANSITIONAL");
.Ve
.RE
.RS 4
.RE
.SS "ipv6_update_dns_on_lease_renewal( )"
.IX Subsection "ipv6_update_dns_on_lease_renewal( )"
.RS 4
The ipv6_update_dns_on_lease_renewal attribute controls whether the \s-1DHCP\s0 server updates \s-1DNS\s0 when an IPv6 \s-1DHCP\s0 lease is renewed.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to set the ipv6_update_dns_on_lease_renewal flag or \*(L"false\*(R" to deactivate/unset it.
.Sp
The default value of this parameter is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\&    #Get ipv6_update_dns_on_lease_renewal
\&    my $ipv6_update_dns_on_lease_renewal=$griddhcp\->ipv6_update_dns_on_lease_renewal( );
\&    #Modify ipv6_update_dns_on_lease_renewal
\&    $griddhcp\->ipv6_update_dns_on_lease_renewal("true");
.Ve
.RE
.RS 4
.RE
.SS "kdc_server( )"
.IX Subsection "kdc_server( )"
.RS 4
Use this method to specify or retrieve the IPv4 address or \s-1FQDN\s0 of the Kerberos server for DHCPv4 GSS-TSIG authentication.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The Kerberos server IPv4 address or \s-1FQDN,\s0 with a maximum of 1023 bytes.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get kdc_server
\& my $kdc_server = $griddhcp\->kdc_server();
\& #Modify  kdc_server
\& $griddhcp\->kdc_server("10.32.0.7");
.Ve
.RE
.RS 4
.RE
.SS "lease_logging_member( )"
.IX Subsection "lease_logging_member( )"
.RS 4
Use this method to specify or retrieve the grid member on which you want to store the \s-1DHCP\s0 lease history log. Infoblox recommends that you dedicate a member other than the master as a logging member. If possible, use this member solely for storing the \s-1DHCP\s0 lease history log. If you do not select a member, no logging can occur.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an array reference that contains Infoblox::DHCP::Member object(s).
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 7
\& #Get lease_logging_member
\& my $lease_logging_member = $griddhcp\->lease_logging_member();
\& #Modify lease_logging_member
\& my $dhcpmember = Infoblox::DHCP::Member\->new(
\&     name     => "infoblox.localdomain",
\&     ipv4addr => "192.168.1.2"
\& );
\&
\& $griddhcp\->lease_logging_member($dhcpmember);
.Ve
.RE
.RS 4
.RE
.SS "lease_per_client_settings( )"
.IX Subsection "lease_per_client_settings( )"
.RS 4
Use this method to set or retrieve the setting that defines how \s-1DHCP\s0 server will free or release client leases.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid values are '\s-1ONE_LEASE_PER_CLIENT\s0', '\s-1RELEASE_MATCHING_ID\s0' and '\s-1NEVER_RELEASE\s0'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get lease_per_client_settings value
\& my $value = $object\->lease_per_client_settings();
\&
\& #Modify lease_per_client_settings value
\& $object\->lease_per_client_settings(\*(AqNEVER_RELEASE\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "lease_scavenge_time( )"
.IX Subsection "lease_scavenge_time( )"
.RS 4
Use this method to set or retrieve the grid-level lease_scavenge_time value.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
An integer that specifies the period of time, in seconds, that free and backup leases remain in the database before they are automatically deleted. To disable lease scavenging, set the parameter to \-1. The minimum positive value must be greater than 86400 seconds (1 day). The default value of this parameter is \-1, which means that lease scavenging is disabled.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get lease_scavenge_time
\& my $lease_scavenge = $griddhcp\->lease_scavenge_time();
\& #Modify lease_scavenge_time
\& $griddhcp\->lease_scavenge_time(30 * 24 * 60 * 60);
.Ve
.RE
.RS 4
.RE
.SS "log_lease_events( )"
.IX Subsection "log_lease_events( )"
.RS 4
Use this method to set or retrieve the grid-level log_lease_events flag. This value specifies whether grid members log lease events.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to set the log_lease_events flag or \*(L"false\*(R" to deactivate/unset it. The default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get log_lease_events
\& my $log_lease_events = $griddhcp\->log_lease_events();
\& #Modify log_lease_events
\& $griddhcp\->log_lease_events("true");
.Ve
.RE
.RS 4
.RE
.SS "logic_filters( )"
.IX Subsection "logic_filters( )"
.RS 4
Use this method to set or retrieve all the Grid-level logic (ordered) filters.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an array reference that contains either the Infoblox::DHCP::Filter::MAC, Infoblox::DHCP::Filter::NAC, Infoblox::DHCP::Filter::Option objects or the names of the corresponding filters. The filters in the list must satisfy the following conditions:
.RS 4
.IP "Filter name must be globally unique." 4
.IX Item "Filter name must be globally unique."
.PD 0
.IP "Filters without expressions must be at the end of the list." 4
.IX Item "Filters without expressions must be at the end of the list."
.IP "The filters should not be disabled." 4
.IX Item "The filters should not be disabled."
.RE
.RS 4
.PD
.Sp
The default value of the parameter is undefined.
.RE
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get logic_filters
\& my $ref_logic_filters = $griddhcp\->logic_filters();
\& #Modify logic_filters
\& $griddhcp\->logic_filters(["filter_1","filter_2",$exl1]); #$exl1 is an Infoblox::DHCP::Filter::MAC, Infoblox::DHCP::Filter::NAC or Infoblox::DHCP::Filter::Option object.
.Ve
.RE
.RS 4
.RE
.SS "low_water_mark( )"
.IX Subsection "low_water_mark( )"
.RS 4
Use this method to set or retrieve the grid-level low_water_mark value. If the percent of allocated addresses drops below this watermark, the appliance makes a syslog entry and if enabled, sends an e\-mail notification.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Number with the percentage value. Range is from 0 to 100. The low watermark value must be lower than the high watermark value. The default low watermark number is 0.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get low_water_mark
\& my $low_water_mark = $griddhcp\->low_water_mark();
\& #Modify low_water_mark
\& $griddhcp\->low_water_mark(10);
.Ve
.RE
.RS 4
.RE
.SS "low_water_mark_reset( )"
.IX Subsection "low_water_mark_reset( )"
.RS 4
Use this method to set or retrieve the grid-level low_water_mark_reset value. If the percentage of allocated addresses exceeds this value, a corresponding \s-1SNMP\s0 trap is reset.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Number with the percentage value. Range is from 0 to 100. The low watermark reset value must be higher than the low watermark value. The default low watermark reset value is 0.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get low_water_mark_reset
\& my $low_water_mark_reset = $griddhcp\->low_water_mark_reset();
\& #Modify low_water_mark_reset
\& $griddhcp\->low_water_mark_reset(10);
.Ve
.RE
.RS 4
.RE
.SS "microsoft_code_page( )"
.IX Subsection "microsoft_code_page( )"
.RS 4
Use this method to set or retrieve the grid-level Microsoft client \s-1DHCP\s0 IPv4 code page value. This value is the hostname translation code page for Microsoft \s-1DHCP\s0 IPv4 clients.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Microsoft \s-1DHCP\s0 client code page in string format. Valid values are the same as those for ipv6_microsoft_code_page. See \*(L"\fBipv6_microsoft_code_page()\fR\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get microsoft_code_page
\& my $microsoft_code_page = $griddhcp\->microsoft_code_page();
\& #Modify microsoft_code_page
\& $griddhcp\->microsoft_code_page("Cyrillic (ISO\-8859\-5)");
.Ve
.RE
.RS 4
.RE
.SS "nextserver( )"
.IX Subsection "nextserver( )"
.RS 4
Use this method to set or retrieve the grid-level \*(L"next server\*(R" value. This value is the \s-1IP\s0 address or name of the boot file server on which the boot file is stored.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The boot file server \s-1IP\s0 address or name in \s-1FQDN\s0 format. The \s-1FQDN\s0 consists of the host name followed by the domain name (example: abc.com). A boot file server name can have a maximum of 256 bytes.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get nextserver
\& my $nextserver = $griddhcp\->nextserver();
\& #Modify nextserver
\& $griddhcp\->nextserver("1.1.1.1");
.Ve
.RE
.RS 4
.RE
.SS "option60_match_rules( )"
.IX Subsection "option60_match_rules( )"
.RS 4
Use this method to set or retrieve grid-level \s-1DHCP\s0 option60 match rules. An Option60MatchRule object allows specifying match rules for Option 60 globally.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an array reference that contains Infoblox::DHCP::Option60MatchRule object(s).
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 10
\& #Get option60_match_rules
\& my $option_matchrule = $griddhcp\->option60_match_rules();
\& #Modify option60_match_rules
\& my $option60_match_rule = Infoblox::DHCP::Option60MatchRule\->new(
\&                                        "option_space" => "infospace",
\&                                        "match_value" => "Nortel\-i2004\-A",
\&                                        "is_substring" => "true",
\&                                        "substring_offset" => "8",
\&                                        "substring_length" => "14"
\&                                      );
\&
\& # Configure DHCP Option60MatchRule on the Grid DHCP object
\& $griddhcp\->option60_match_rules([$option60_match_rule]);
\&
\& #Remove Option60MatchRule object
\& $griddhcp\->option60_match_rules([]);
.Ve
.RE
.RS 4
.RE
.SS "options( )"
.IX Subsection "options( )"
.RS 4
Use this method to set or retrieve grid-level \s-1DHCP\s0 options. These options provide network configuration settings and various services available on the network.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an array reference that contains Infoblox::DHCP::Option object(s).
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 7
\& #Get options
\& my $options = $griddhcp\->options();
\& #Modify options
\& my $option1 = Infoblox::DHCP::Option\->new(
\&     name   => "lease\-time",
\&     value  => 50
\& );
\&
\& my $option2 = Infoblox::DHCP::Option\->new(
\&     name    => "routers",
\&     value   => "1.4.1.1,2.2.2.2",
\& );
\&
\& my $option3 = Infoblox::DHCP::Option\->new(
\&     name     => "nameservers",
\&     value    => "1.1.1.1, 2.2.2.2",
\& );
\&
\& my $option4 = Infoblox::DHCP::Option\->new(
\&     name  => "domain\-name",
\&     value => "domainname.com",
\& );
\&
\& my $option5 = Infoblox::DHCP::Option\->new(
\&     name     => "broadcast",
\&     value    => "255.0.0.0",
\& );
\&
\& $griddhcp\->options([$option1, $option2, $option3, $option4, $option5]);
.Ve
.RE
.RS 4
.RE
.SS "override_immediate_fa_configuration( )"
.IX Subsection "override_immediate_fa_configuration( )"
.RS 4
The override_immediate_fa_configuration attribute controls whether the immediate_fa_configuration value in the object is used, instead of the Grid default.
.Sp
The override_immediate_fa_configuration attribute can be specified explicitly. It is also set implicitly when immediate_fa_configuration is set to a defined value.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to set override_ttl flag or \*(L"false\*(R" to disable it. Default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get override_immediate_fa_configuration
\& my $override_immediate_fa_configuration = $griddhcp\->override_immediate_fa_configuration();
\& #Modify override_immediate_fa_configuration
\& $griddhcp\->override_immediate_fa_configuration("true");
.Ve
.RE
.RS 4
.RE
.SS "ping_count( )"
.IX Subsection "ping_count( )"
.RS 4
Use this method to set or retrieve the grid-level ping_count value. This value specifies the number of pings that the Infoblox appliance sends to an \s-1IP\s0 address to verify that it is not in use.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Number of pings. Range is from 0 to 10, where 0 disables pings. The default value is 1.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get ping_count
\& my $ping_count = $griddhcp\->ping_count();
\& #Modify ping_count
\& $griddhcp\->ping_count(4);
.Ve
.RE
.RS 4
.RE
.SS "ping_timeout( )"
.IX Subsection "ping_timeout( )"
.RS 4
Use this method to set or retrieve the grid-level ping_timeout value. This value indicates the number of seconds the appliance waits for a response to its ping.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Ping timeout value in seconds. Valid values are 0.1, 0.5, 1, 2, 3, 4 and 5 seconds. The default value is 1.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get ping_timeout
\& my $ping_timeout = $griddhcp\->ping_timeout();
\& #Modify ping_timeout
\& $griddhcp\->ping_timeout(3);
.Ve
.RE
.RS 4
.RE
.SS "preferred_lifetime( )"
.IX Subsection "preferred_lifetime( )"
.RS 4
Use this method to set or retrieve the grid-level preferred lifetime.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Preferred lifetime value in seconds. The default value is 27000.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get preferred_lifetime
\& my $preferred_lifetime = $griddhcp\->preferred_lifetime();
\& #Modify preferred_lifetime
\& $griddhcp\->preferred_lifetime(12345);
.Ve
.RE
.RS 4
.RE
.SS "protocol_hostname_rewrite_policies( )"
.IX Subsection "protocol_hostname_rewrite_policies( )"
.RS 4
Use this method to set or retrieve a list of hostname rewrite policies. This attribute is mandatory if enable_hostname_rewrite is \*(L"true\*(R".
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Array reference with Infoblox::Grid::HostNameRewritePolicy objects.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get protocol_hostname_rewrite_policies
\& my $policies = $griddhcp\->protocol_hostname_rewrite_policies();
\&
\& #Modify protocol_hostname_rewrite_policies
\& push(@$policies, $policy2);
\& $griddhcp\->protocol_hostname_rewrite_policies($policies);
.Ve
.RE
.RS 4
.RE
.SS "pxe_lease_time( )"
.IX Subsection "pxe_lease_time( )"
.RS 4
Use this method to set or retrieve the grid-level pxe_lease_time value. This value is the duration of time it takes a host to connect to a boot server, such as a \s-1TFTP\s0 server, and download the file it needs to boot.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
A 32\-bit integer (range from 0 to 4294967295) that specifies the lease time in seconds. Default value is 43200 seconds.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get pxe_lease_time
\& my $pxe_lease_time = $griddhcp\->pxe_lease_time();
\& #Modify pxe_lease_time
\& $griddhcp\->pxe_lease_time(200);
.Ve
.RE
.RS 4
.RE
.SS "recycle_leases( )"
.IX Subsection "recycle_leases( )"
.RS 4
Use this method to set or retrieve the recycle_leases flag of a grid \s-1DHCP\s0 server. If you enable this feature, and then delete a \s-1DHCP\s0 range, the appliance stores active leases from this range up to one week after the leases expire.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to set the recycle_leases flag or \*(L"false\*(R" to deactivate/unset it. The default value is \*(L"true\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get recycle_leases
\& my $recycle_leases = $griddhcp\->recycle_leases();
\& #Modify recycle_leases
\& $griddhcp\->recycle_leases("true");
.Ve
.RE
.RS 4
.RE
.SS "restart_setting( )"
.IX Subsection "restart_setting( )"
.RS 4
Use this method to set or retrive Grid \s-1DHCP\s0 service restart settings.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an Infoblox::Grid::ServiceRestart object.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get restart_setting 
\& my $restart_setting = $grid_dhcp\->restart_setting();
\& #Modify the retry time
\& $grid_dhcp\->restart_setting($restart_setting);
.Ve
.RE
.RS 4
.RE
.SS "retry_ddns_updates( )"
.IX Subsection "retry_ddns_updates( )"
.RS 4
Use this method to set or retrieve the grid-level retry_ddns_updates flag. This value indicates whether the grid \s-1DHCP\s0 servers make repeated attempts to send \s-1DDNS\s0 updates to a \s-1DNS\s0 server.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to enable the \s-1DHCP\s0 servers to retry \s-1DDNS\s0 updates or \*(L"false\*(R" to disable this feature. The default value is \*(L"true\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get retry_ddns_updates
\& my $retry_ddns_updates = $griddhcp\->retry_ddns_updates();
\& #Modify retry_ddns_updates
\& $griddhcp\->retry_ddns_updates("true");
.Ve
.RE
.RS 4
.RE
.SS "syslog_facility( )"
.IX Subsection "syslog_facility( )"
.RS 4
Use this method to set or retrieve the grid-level syslog_facility value. The syslog facility is the location on the syslog server to which you want to sort syslog messages.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid values are: \f(CW"daemon", "local0", "local1", "local2", "local3", "local4", "local5", "local6", "local7"\fR. The default value is \*(L"daemon\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get syslog_facility
\& my $syslog_facility = $griddhcp\->syslog_facility();
\& #Modify syslog_facility
\& $griddhcp\->syslog_facility("local0");
.Ve
.RE
.RS 4
.RE
.SS "txt_record_handling( )"
.IX Subsection "txt_record_handling( )"
.RS 4
Use this method to set or retrieve the grid-level \s-1TXT\s0 record handling value. This value specifies how \s-1DHCP\s0 should treat \s-1TXT\s0 records when performing \s-1DNS\s0 updates.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
\&\s-1TXT\s0 record handling value in string format. Valid values are: \*(L"\s-1IGNORE_CONTENTS\*(R", \*(L"ISC\*(R", \*(L"ISC_TRANSITIONAL\*(R"\s0 and \*(L"\s-1MS\*(R".\s0 The default value is \*(L"\s-1ISC\*(R".\s0
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get txt_record_handling
\& my $txt_record_handling = $griddhcp\->txt_record_handling();
\& #Modify txt_record_handling
\& $griddhcp\->txt_record_handling("ISC_TRANSITIONAL");
.Ve
.RE
.RS 4
.RE
.SS "update_dns_on_lease_renewal( )"
.IX Subsection "update_dns_on_lease_renewal( )"
.RS 4
The update_dns_on_lease_renewal attribute controls whether the \s-1DHCP\s0 server updates \s-1DNS\s0 when a \s-1DHCP\s0 lease is renewed.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to set the update_dns_on_lease_renewal flag or \*(L"false\*(R" to deactivate/unset it.
.Sp
The default value of this parameter is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\&    #Get update_dns_on_lease_renewal
\&    my $update_dns_on_lease_renewal=$griddhcp\->update_dns_on_lease_renewal( );
\&    #Modify update_dns_on_lease_renewal
\&    $griddhcp\->update_dns_on_lease_renewal("true");
.Ve
.RE
.RS 4
.RE
.SS "valid_lifetime( )"
.IX Subsection "valid_lifetime( )"
.RS 4
Use this method to set or retrieve the valid lifetime value on the Grid level.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid lifetime value in seconds. The default value is 43200.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get valid_lifetime
\& my $valid_lifetime = $roaming_host\->valid_lifetime();
\& #Modify valid_lifetime
\& $roaming_host\->valid_lifetime(12345);
.Ve
.RE
.RS 4
.RE
.SS "validate_ifmap_ca_cert( )"
.IX Subsection "validate_ifmap_ca_cert( )"
.RS 4
Use this method to set or retrieve the validate \s-1CA\s0 certificate value.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to set the validate_ifmap_ca_cert flag or \*(L"false\*(R" to deactivate/unset it.
.Sp
The default value of this parameter is \*(L"true\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get validate_ifmap_ca_cert
\& my $validate_ifmap_ca_cert = $griddhcp\->validate_ifmap_ca_cert();
\& #Modify validate_ifmap_ca_cert
\& $griddhcp\->validate_ifmap_ca_cert(\*(Aqfalse\*(Aq);
.Ve
.RE
.RS 4
.RE
.SH "SAMPLE CODE"
.IX Header "SAMPLE CODE"
The following sample code demonstrates different operations that can be applied to a grid \s-1DHCP\s0 object, such as get and modify an object. This sample code also includes error handling for the operations.
.PP
\&\fB#Preparation prior to get and modify operations on a grid \s-1DHCP\s0 object\fR
.PP
.Vb 3
\& #PROGRAM STARTS: Include all the modules that will be used
\& use strict;
\& use Infoblox;
\&
\& #refers to Infoblox Appliance IP address
\& my $host_ip   = "192.168.1.2";
\& my $host_name = "infoblox.localdomain";
\&
\& #Creating a session to appliance.
\& my $session = Infoblox::Session\->new(
\&     master   => $host_ip,
\&     username => "admin",
\&     password => "infoblox"
\&     )
\&     or die("Constructor for session failed: ",
\&                Infoblox::status_code(). ":" .Infoblox::status_detail());
\&
\& print"Session created successfully.\en";
\&
\& #Creating a domain\-name option object.
\& my $option = Infoblox::DHCP::Option\->new(
\&                  name   => "domain\-name",
\&                  value  => "domainname.com",
\& )
\& or die("Constructor for option failed: ",
\&                Infoblox::status_code(). ":" .Infoblox::status_detail());
\&
\& print"dhcp option object created successfully.\en";
\&
\& #Creating a Member object.
\& my $dhcpmember = Infoblox::DHCP::Member\->new(
\&     name     => $host_name,
\&     ipv4addr => $host_ip
\&     )
\&     or die("Constructor for dhcpmember failed: ",
\&                Infoblox::status_code(). ":" .Infoblox::status_detail());
\&
\& print"dhcp member object created successfully.\en";
\&
\& #Creating a forward zone nameserver.
\& my $ns1 = Infoblox::DNS::Nameserver\->new(
\&     ddns_zone => "sub.test.com",
\&     name      => "server.dns.com",
\&     ipv4addr  => "1.1.1.1",
\&     TSIGname  => "tsig_name",
\&     TSIGkey   => "ZX1jVJl7C58GT/sc7Q3ucA=="
\&     )
\&     or die("Constructor for ns1 failed: ",
\&                Infoblox::status_code(). ":" .Infoblox::status_detail());
\&
\& print"forward zone nameserver object created successfully.\en";
\&
\& #Creating a reverse zone nameserver.
\& my $ns2 = Infoblox::DNS::Nameserver\->new(
\&     ddns_zone => "10.0.0.0/8",
\&     name      => "server.dns.com",
\&     ipv4addr  => "1.1.1.1"
\&     )
\&     or die("Constructor for ns2 failed: ",
\&                Infoblox::status_code(). ":" .Infoblox::status_detail());
\&
\& print"reverse zone nameserver object created successfully.\en";
.Ve
.PP
\&\fB#Get and modify the grid \s-1DHCP\s0 object\fR.
.PP
.Vb 8
\& #Getting the DHCP object from appliance through session.
\& my @result = $session\->get(
\&     object => "Infoblox::Grid::DHCP",
\&     grid   => "Infoblox"
\&     )
\&     or die("get DHCP failed: ",
\&                $session\->status_code(). ":" .$session\->status_detail());
\& print "get grid DHCP Objcet successful.\en";
\&
\& unless (scalar(@result) == 0) {
\&     my $griddhcp = $result[0];
\&     if ($griddhcp) {
\&
\&         #Modifying the value of the specified objects.
\&         $griddhcp\->authority("false");
\&         $griddhcp\->enable_ddns("true");
\&         $griddhcp\->bootserver("boot.test.com");
\&         $griddhcp\->ddns_ttl(21600);
\&         $griddhcp\->nextserver("77.77.77.7");
\&         $griddhcp\->pxe_lease_time(43200);
\&         $griddhcp\->bootfile("bootfile");
\&         $griddhcp\->ping_count(3);
\&         $griddhcp\->ping_timeout(2);
\&         $griddhcp\->email_list(["admin\e@infoblox.com", "bkp_admin\e@infoblox.com"]);
\&         $griddhcp\->options([$option]);
\&         $griddhcp\->lease_logging_member($dhcpmember);
\&         $griddhcp\->microsoft_code_page("Cyrillic (ISO\-8859\-5)");
\&
\&         #Applying the changes to appliance through session.
\&         $session\->modify($griddhcp)
\&             or die("Modify DHCP failed: ",
\&                $session\->status_code(). ":" .$session\->status_detail());
\&        print"Modified Grid DHCP Object successfully.\en";
\&     }
\& } else {
\&     print "No Grid DHCP object found.";
\& }
\&
\& ####PROGRAM ENDS####
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Infoblox Inc. <http://www.infoblox.com/>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Infoblox::DHCP::Member,Infoblox::DHCP::Option,Infoblox::DNS::Nameserver,Infoblox::Grid::KerberosKey,Infoblox::Session,Infoblox::Session\->\fBget()\fR,Infoblox::Session\->\fBmodify()\fR
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2017 Infoblox Inc.

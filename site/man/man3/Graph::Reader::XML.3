.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Graph::Reader::XML 3"
.TH Graph::Reader::XML 3 "2016-08-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Graph::Reader::XML \- class for reading a Graph instance from XML
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&  use Graph::Reader::XML;
\&  use Graph;
\&
\&  $reader = Graph::Reader::XML\->new();
\&  $graph = $reader\->read_graph(\*(Aqmygraph.xml\*(Aq);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBGraph::Reader::XML\fR is a perl class used to read a directed graph
stored as \s-1XML,\s0 and return an instance of the \fBGraph\fR class.
.PP
The \s-1XML\s0 format is designed to support the Graph classes:
it can be used to represent a single graph with a collection
of nodes, and edges between those nodes.
The graph, nodes, and edges can all have attributes specified,
.PP
\&\fBGraph::Reader::XML\fR is a subclass of \fBGraph::Reader\fR,
which defines the generic interface for Graph reader classes.
.SH "METHODS"
.IX Header "METHODS"
.SS "\fBnew()\fP"
.IX Subsection "new()"
Constructor \- generate a new reader instance.
.PP
.Vb 1
\&  $reader = Graph::Reader::XML\->new();
.Ve
.PP
This doesn't take any arguments.
.SS "\fBread_graph()\fP"
.IX Subsection "read_graph()"
Read a graph from a file:
.PP
.Vb 1
\&  $graph = $reader\->read_graph( $file );
.Ve
.PP
The \f(CW$file\fR argument can be either a filename
or a filehandle of a previously opened file.
.SH "KNOWN BUGS"
.IX Header "KNOWN BUGS"
Attribute values must be scalar. If they're not,
well, you're on your own.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.IP "Graph::Reader" 4
.IX Item "Graph::Reader"
The base class for \fBGraph::Reader::XML\fR.
.IP "Graph::Writer::XML" 4
.IX Item "Graph::Writer::XML"
Used to serialise a Graph instance as \s-1XML.\s0
.IP "Graph" 4
.IX Item "Graph"
Jarkko Hietaniemi's classes for representing directed graphs.
.SH "REPOSITORY"
.IX Header "REPOSITORY"
<https://github.com/neilb/Graph\-ReadWrite>
.SH "AUTHOR"
.IX Header "AUTHOR"
Neil Bowers <neil@bowers.com>
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2001\-2012, Neil Bowers. All rights reserved.
Copyright (c) 2001, Canon Research Centre Europe. All rights reserved.
.PP
This module is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.

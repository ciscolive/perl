.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Infoblox::Grid::FileDistribution 3"
.TH Infoblox::Grid::FileDistribution 3 "2018-06-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Infoblox::Grid::FileDistribution \- Grid FileDistribution object.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
You can configure the file distribution properties of a grid. You can enable and disable \s-1TFTP, HTTP,\s0 and \s-1FTP\s0 services, and set their operational parameters.
.SH "CONSTRUCTOR"
.IX Header "CONSTRUCTOR"
The Infoblox::Grid::FileDistribution object is automatically generated upon the successful installation of the Infoblox appliance. It does not require manual construction.
.SH "SESSION METHODS"
.IX Header "SESSION METHODS"
This section describes all the methods in the Infoblox::Session module that you can apply to a grid member FileDistribution object.
.SS "Infoblox::Session\->get( )"
.IX Subsection "Infoblox::Session->get( )"
.RS 4
Use this method to retrieve all the matching objects from the Infoblox appliance. See Infoblox::Session\->\fBget()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 3
\&  my $object   = $session\->get(
\&     object    => "Infoblox::Grid::FileDistribution",
\&     );
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->modify( )"
.IX Subsection "Infoblox::Session->modify( )"
.RS 4
Use this method to modify an object in the Infoblox appliance. See Infoblox::Session\->\fBmodify()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\&   #Use method to modify the enable_tftp Property.
\&   $object\->enable_tftp("true");
\&   #Submit modification
\&   my $response = $session\->modify( $object );
.Ve
.RE
.RS 4
.RE
.SH "METHODS"
.IX Header "METHODS"
This section describes all the methods that you can use to configure and retrieve the attribute values of the file distribution properties of a grid member.
.SS "allow_uploads( )"
.IX Subsection "allow_uploads( )"
.RS 4
Use this method to enable or disable file uploads for the grid.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to enable the file uploads or \*(L"false\*(R" to disable it. The default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\&   #Getting allow_uploads
\&   $allow_uploads = $grid\->allow_uploads( );
\&   #Modifying allow_uploads
\&   $grid\->allow_uploads("true");
.Ve
.RE
.RS 4
.RE
.SS "backup_storage( )"
.IX Subsection "backup_storage( )"
.RS 4
Use this method to control whether distributed files are included in the backup or not.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to enable the backup of distributed files or \*(L"false\*(R" to disable it. The default value is \*(L"true\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\&   #Getting backup_storage
\&   $backup_storage = $grid\->backup_storage( );
\&   #Modifying backup_storage
\&   $grid\->backup_storage("true");
.Ve
.RE
.RS 4
.RE
.SS "current_usage( )"
.IX Subsection "current_usage( )"
.RS 4
Use this method to retrieve the current usage of the allocated space.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The value is the percentage of the usage of the allocated space expressed in tenth of a %. Valid values are from 0 to 1000.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\&   #Getting current_usage
\&   $current_usage = $grid\->current_usage( );
.Ve
.RE
.RS 4
.RE
.SS "enable_anonymous_ftp( )"
.IX Subsection "enable_anonymous_ftp( )"
.RS 4
Use this method to enable or disable anonymous \s-1FTP\s0 access for the grid.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to enable anonymous \s-1FTP\s0 access or \*(L"false\*(R" to disable it. The default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\&   #Getting enable_anonymous_ftp
\&   $enable_anonymous_ftp = $grid\->enable_anonymous_ftp( );
\&   #Modifying enable_anonymous_ftp
\&   $grid\->enable_anonymous_ftp("true");
.Ve
.RE
.RS 4
.RE
.SS "global_status( )"
.IX Subsection "global_status( )"
.RS 4
Use this method to retrieve the overall status of all grid members.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The method returns the \*(L"worst\*(R" status among all grid members. Valid values are \*(L"\s-1FAILED\*(R", \*(L"INACTIVE\*(R", \*(L"UNKNOWN\*(R", \*(L"WARNING\*(R"\s0 or \*(L"\s-1WORKING\*(R".\s0
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\&   #Getting global_status
\&   $global_status = $grid\->global_status( );
.Ve
.RE
.RS 4
.RE
.SS "storage_limit( )"
.IX Subsection "storage_limit( )"
.RS 4
Use this method to set the maximum \s-1TFTP\s0 storage allowed on the grid.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The maximum storage size expressed in Megabytes. Valid values are from 1 to 10000.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\&   #Getting storage_limit
\&   $storage_limit = $grid\->storage_limit( );
\&   #Modifying storage_limit
\&   $grid\->storage_limit(2000);
.Ve
.RE
.RS 4
.RE
.SH "SAMPLE CODE"
.IX Header "SAMPLE CODE"
The following sample code demonstrates the different functions that can be applied to an object, such as modify and get. This sample also includes error handling for the operations.
.PP
\&\fB#Preparation prior to grid FileDistribution object operations\fR
.PP
.Vb 1
\& #PROGRAM STARTS: Include all the modules that will be used
\&
\& use strict;
\& use Infoblox;
\&
\& #Create a session to the Infoblox appliance
\& my $session = Infoblox::Session\->new(
\&     master   => "192.168.1.2",
\&     username => "admin",
\&     password => "infoblox"
\& );
\& unless ($session) {
\&    die("Construct session failed: ",
\&        Infoblox::status_code() . ":" . Infoblox::status_detail());
\& }
\& print "Session created successfully\en";
.Ve
.PP
\&\fB#Get and modify a Grid FileDistribution object\fR
.PP
.Vb 4
\& # Get and modify the grid FileDistribution property object.
\& my $object = $session\->get(
\&     object => "Infoblox::Grid::FileDistribution",
\& );
\&
\&  unless ($object) {
\&       die("get grid FileDistribution failed: ",
\&       $session\->status_code() . ":" . $session\->status_detail());
\& }
\&  print "grid FileDistribution get successful\en";
\&
\& #Modifying the value of the specified object
\& $object\->enable_anonymous_ftp("true");
\&
\& #Apply the changes
\& $session\->modify($object)
\&   or die("modify grid FileDistribution failed: ",
\&       $session\->status_code() . ":" . $session\->status_detail());
\&
\& print "FileDistribution grid object modified successfully \en";
\&
\& ####PROGRAM ENDS####
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Infoblox Inc. <http://www.infoblox.com/>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Infoblox::Session, Infoblox::Session\->\fBget()\fR, Infoblox::Session\->\fBmodify()\fR
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2017 Infoblox Inc.

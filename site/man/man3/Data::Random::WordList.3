.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Data::Random::WordList 3"
.TH Data::Random::WordList 3 "2018-04-18" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Data::Random::WordList \- Perl module to get random words from a word list
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  use Data::Random::WordList;
\&
\&  my $wl = new Data::Random::WordList( wordlist => \*(Aq/usr/dict/words\*(Aq );
\&
\&  my @rand_words = $wl\->get_words(10);
\&
\&  $wl\->close();
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Data::Random::WordList is a module that manages a file containing a list of words.
.PP
The module expects each line of the word list file to contain only one word.  It could thus be easily used to select random lines from a file, but for coherency's sake, I'll keep referring to each line as a word.
.PP
The module uses a persistent filehandle so that there isn't a lot of overhead every time you want to fetch a list of random words.  However, it's much more efficient to grab multiple words at a time than it is to fetch one word at a time multiple times.
.PP
The module also refrains from reading the whole file into memory, so it can be safer to use with larger files.
.SH "METHODS"
.IX Header "METHODS"
.SS "\fBnew()\fP"
.IX Subsection "new()"
Returns a reference to a new Data::Random::WordList object.  Use the \*(L"wordlist\*(R" param to initialize the object:
.IP "\(bu" 4
wordlist \- the path to the wordlist file.  If a path isn't supplied, the wordlist distributed with this module is used.
.SS "get_words([\s-1NUM\s0])"
.IX Subsection "get_words([NUM])"
\&\s-1NUM\s0 contains the number of words you want from the wordlist.  \s-1NUM\s0 defaults to 1 if it's not specified.  \fBget_words()\fR dies if \s-1NUM\s0 is greater than the number of words in the wordlist.  This function returns an array or an array reference depending on the context in which it's called.
.SS "\fBclose()\fP"
.IX Subsection "close()"
Closes the filehandle associated with the word list.  It's good practice to do this every time you're done with the word list.
.SH "VERSION"
.IX Header "VERSION"
0.12
.SH "AUTHOR"
.IX Header "AUTHOR"
Originally written by: Adekunle Olonoh
.PP
Currently maintained by: Buddy Burden (barefoot@cpan.org), starting with version 0.06
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2000\-2011 Adekunle Olonoh.
Copyright (c) 2011\-2015 Buddy Burden.
All rights reserved.  This program is free software; you
can redistribute it and/or modify it under the same terms as Perl itself.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Data::Random

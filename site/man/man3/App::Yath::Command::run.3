.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.41)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "App::Yath::Command::run 3"
.TH App::Yath::Command::run 3 "2020-11-03" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
App::Yath::Command::run \- Run tests using the persistent test runner
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This command will run tests through an already started persistent instance. See
the start command for details on how to launch a persistant instance.
.SH "USAGE"
.IX Header "USAGE"
.Vb 1
\&    $ yath [YATH OPTIONS] run [COMMAND OPTIONS]
.Ve
.SS "\s-1YATH OPTIONS\s0"
.IX Subsection "YATH OPTIONS"
\fIDeveloper\fR
.IX Subsection "Developer"
.IP "\-\-dev\-lib" 4
.IX Item "--dev-lib"
.PD 0
.IP "\-\-dev\-lib=lib" 4
.IX Item "--dev-lib=lib"
.IP "\-D" 4
.IX Item "-D"
.IP "\-D=lib" 4
.IX Item "-D=lib"
.IP "\-Dlib" 4
.IX Item "-Dlib"
.IP "\-\-no\-dev\-lib" 4
.IX Item "--no-dev-lib"
.PD
Add paths to \f(CW@INC\fR before loading \s-1ANYTHING.\s0 This is what you use if you are developing yath or yath plugins to make sure the yath script finds the local code instead of the installed versions of the same code. You can provide an argument (\-Dfoo) to provide a custom path, or you can just use \-D without and arg to add lib, blib/lib and blib/arch.
.Sp
Can be specified multiple times
.PP
\fIEnvironment\fR
.IX Subsection "Environment"
.IP "\-\-persist\-dir \s-1ARG\s0" 4
.IX Item "--persist-dir ARG"
.PD 0
.IP "\-\-persist\-dir=ARG" 4
.IX Item "--persist-dir=ARG"
.IP "\-\-no\-persist\-dir" 4
.IX Item "--no-persist-dir"
.PD
Where to find persistence files.
.IP "\-\-persist\-file \s-1ARG\s0" 4
.IX Item "--persist-file ARG"
.PD 0
.IP "\-\-persist\-file=ARG" 4
.IX Item "--persist-file=ARG"
.IP "\-\-pfile \s-1ARG\s0" 4
.IX Item "--pfile ARG"
.IP "\-\-pfile=ARG" 4
.IX Item "--pfile=ARG"
.IP "\-\-no\-persist\-file" 4
.IX Item "--no-persist-file"
.PD
Where to find the persistence file. The default is /{system\-tempdir}/project\-yath\-persist.json. If no project is specified then it will fall back to the current directory. If the current directory is not writable it will default to /tmp/yath\-persist.json which limits you to one persistent runner on your system.
.IP "\-\-project \s-1ARG\s0" 4
.IX Item "--project ARG"
.PD 0
.IP "\-\-project=ARG" 4
.IX Item "--project=ARG"
.IP "\-\-project\-name \s-1ARG\s0" 4
.IX Item "--project-name ARG"
.IP "\-\-project\-name=ARG" 4
.IX Item "--project-name=ARG"
.IP "\-\-no\-project" 4
.IX Item "--no-project"
.PD
This lets you provide a label for your current project/codebase. This is best used in a .yath.rc file. This is necessary for a persistent runner.
.PP
\fIFinder Options\fR
.IX Subsection "Finder Options"
.IP "\-\-finder MyFinder" 4
.IX Item "--finder MyFinder"
.PD 0
.IP "\-\-finder +Test2::Harness::Finder::MyFinder" 4
.IX Item "--finder +Test2::Harness::Finder::MyFinder"
.IP "\-\-no\-finder" 4
.IX Item "--no-finder"
.PD
Specify what Finder subclass to use when searching for files/processing the file list. Use the \*(L"+\*(R" prefix to specify a fully qualified namespace, otherwise Test2::Harness::Finder::XXX namespace is assumed.
.PP
\fIHelp and Debugging\fR
.IX Subsection "Help and Debugging"
.IP "\-\-show\-opts" 4
.IX Item "--show-opts"
.PD 0
.IP "\-\-no\-show\-opts" 4
.IX Item "--no-show-opts"
.PD
Exit after showing what yath thinks your options mean
.IP "\-\-version" 4
.IX Item "--version"
.PD 0
.IP "\-V" 4
.IX Item "-V"
.IP "\-\-no\-version" 4
.IX Item "--no-version"
.PD
Exit after showing a helpful usage message
.PP
\fIPlugins\fR
.IX Subsection "Plugins"
.IP "\-\-no\-scan\-plugins" 4
.IX Item "--no-scan-plugins"
.PD 0
.IP "\-\-no\-no\-scan\-plugins" 4
.IX Item "--no-no-scan-plugins"
.PD
Normally yath scans for and loads all App::Yath::Plugin::* modules in order to bring in command-line options they may provide. This flag will disable that. This is useful if you have a naughty plugin that it loading other modules when it should not.
.IP "\-\-plugins \s-1PLUGIN\s0" 4
.IX Item "--plugins PLUGIN"
.PD 0
.IP "\-\-plugins +App::Yath::Plugin::PLUGIN" 4
.IX Item "--plugins +App::Yath::Plugin::PLUGIN"
.IP "\-\-plugins PLUGIN=arg1,arg2,..." 4
.IX Item "--plugins PLUGIN=arg1,arg2,..."
.IP "\-\-plugin \s-1PLUGIN\s0" 4
.IX Item "--plugin PLUGIN"
.IP "\-\-plugin +App::Yath::Plugin::PLUGIN" 4
.IX Item "--plugin +App::Yath::Plugin::PLUGIN"
.IP "\-\-plugin PLUGIN=arg1,arg2,..." 4
.IX Item "--plugin PLUGIN=arg1,arg2,..."
.IP "\-pPLUGIN" 4
.IX Item "-pPLUGIN"
.IP "\-\-no\-plugins" 4
.IX Item "--no-plugins"
.PD
Load a yath plugin.
.Sp
Can be specified multiple times
.SS "\s-1COMMAND OPTIONS\s0"
.IX Subsection "COMMAND OPTIONS"
\fIDisplay Options\fR
.IX Subsection "Display Options"
.IP "\-\-color" 4
.IX Item "--color"
.PD 0
.IP "\-\-no\-color" 4
.IX Item "--no-color"
.PD
Turn color on, default is true if \s-1STDOUT\s0 is a \s-1TTY.\s0
.IP "\-\-no\-wrap" 4
.IX Item "--no-wrap"
.PD 0
.IP "\-\-no\-no\-wrap" 4
.IX Item "--no-no-wrap"
.PD
Do not do fancy text-wrapping, let the terminal handle it
.IP "\-\-progress" 4
.IX Item "--progress"
.PD 0
.IP "\-\-no\-progress" 4
.IX Item "--no-progress"
.PD
Toggle progress indicators. On by default if \s-1STDOUT\s0 is a \s-1TTY.\s0 You can use \-\-no\-progress to disable the 'events seen' counter and buffered event pre-display
.IP "\-\-quiet" 4
.IX Item "--quiet"
.PD 0
.IP "\-q" 4
.IX Item "-q"
.IP "\-\-no\-quiet" 4
.IX Item "--no-quiet"
.PD
Be very quiet.
.Sp
Can be specified multiple times
.IP "\-\-renderers +My::Renderer" 4
.IX Item "--renderers +My::Renderer"
.PD 0
.IP "\-\-renderers Renderer=arg1,arg2,..." 4
.IX Item "--renderers Renderer=arg1,arg2,..."
.IP "\-\-renderer +My::Renderer" 4
.IX Item "--renderer +My::Renderer"
.IP "\-\-renderer Renderer=arg1,arg2,..." 4
.IX Item "--renderer Renderer=arg1,arg2,..."
.IP "\-\-no\-renderers" 4
.IX Item "--no-renderers"
.PD
Specify renderers, (Default: \*(L"Formatter=Test2\*(R"). Use \*(L"+\*(R" to give a fully qualified module name. Without \*(L"+\*(R" \*(L"Test2::Harness::Renderer::\*(R" will be prepended to your argument.
.Sp
Can be specified multiple times. If the same key is listed multiple times the value lists will be appended together.
.IP "\-\-show\-times" 4
.IX Item "--show-times"
.PD 0
.IP "\-T" 4
.IX Item "-T"
.IP "\-\-no\-show\-times" 4
.IX Item "--no-show-times"
.PD
Show the timing data for each job
.IP "\-\-term\-width 80" 4
.IX Item "--term-width 80"
.PD 0
.IP "\-\-term\-width 200" 4
.IX Item "--term-width 200"
.IP "\-\-term\-size 80" 4
.IX Item "--term-size 80"
.IP "\-\-term\-size 200" 4
.IX Item "--term-size 200"
.IP "\-\-no\-term\-width" 4
.IX Item "--no-term-width"
.PD
Alternative to setting \f(CW$TABLE_TERM_SIZE\fR. Setting this will override the terminal width detection to the number of characters specified.
.IP "\-\-verbose" 4
.IX Item "--verbose"
.PD 0
.IP "\-v" 4
.IX Item "-v"
.IP "\-\-no\-verbose" 4
.IX Item "--no-verbose"
.PD
Be more verbose
.Sp
Can be specified multiple times
.PP
\fIFinder Options\fR
.IX Subsection "Finder Options"
.IP "\-\-changed path/to/file" 4
.IX Item "--changed path/to/file"
.PD 0
.IP "\-\-no\-changed" 4
.IX Item "--no-changed"
.PD
Specify one or more files as having been changed.
.Sp
Can be specified multiple times
.IP "\-\-changed\-only" 4
.IX Item "--changed-only"
.PD 0
.IP "\-\-no\-changed\-only" 4
.IX Item "--no-changed-only"
.PD
Only search for tests for changed files (Requires \-\-coverage\-from, also requires a list of changes either from the \-\-changed option, or a plugin that implements \fBchanged_files()\fR)
.IP "\-\-changes\-plugin Git" 4
.IX Item "--changes-plugin Git"
.PD 0
.IP "\-\-changes\-plugin +App::Yath::Plugin::Git" 4
.IX Item "--changes-plugin +App::Yath::Plugin::Git"
.IP "\-\-no\-changes\-plugin" 4
.IX Item "--no-changes-plugin"
.PD
What plugin should be used to detect changed files.
.IP "\-\-coverage\-from path/to/log.jsonl" 4
.IX Item "--coverage-from path/to/log.jsonl"
.PD 0
.IP "\-\-coverage\-from http://example.com/coverage" 4
.IX Item "--coverage-from http://example.com/coverage"
.IP "\-\-coverage\-from path/to/coverage.json" 4
.IX Item "--coverage-from path/to/coverage.json"
.IP "\-\-no\-coverage\-from" 4
.IX Item "--no-coverage-from"
.PD
Where to fetch coverage data. Can be a path to a .jsonl(.bz|.gz)? log file. Can be a path or url to a json file containing a hash where source files are key, and value is a list of tests to run.
.IP "\-\-coverage\-url\-use\-post" 4
.IX Item "--coverage-url-use-post"
.PD 0
.IP "\-\-no\-coverage\-url\-use\-post" 4
.IX Item "--no-coverage-url-use-post"
.PD
If coverage_from is a url, use the http \s-1POST\s0 method with a list of changed files. This allows the server to tell us what tests to run instead of downloading all the coverage data and determining what tests to run from that.
.IP "\-\-default\-at\-search \s-1ARG\s0" 4
.IX Item "--default-at-search ARG"
.PD 0
.IP "\-\-default\-at\-search=ARG" 4
.IX Item "--default-at-search=ARG"
.IP "\-\-no\-default\-at\-search" 4
.IX Item "--no-default-at-search"
.PD
Specify the default file/dir search when '\s-1AUTHOR_TESTING\s0' is set. Defaults to './xt'. The default \s-1AT\s0 search is only used if no files were specified at the command line
.Sp
Can be specified multiple times
.IP "\-\-default\-search \s-1ARG\s0" 4
.IX Item "--default-search ARG"
.PD 0
.IP "\-\-default\-search=ARG" 4
.IX Item "--default-search=ARG"
.IP "\-\-no\-default\-search" 4
.IX Item "--no-default-search"
.PD
Specify the default file/dir search. defaults to './t', './t2', and 'test.pl'. The default search is only used if no files were specified at the command line
.Sp
Can be specified multiple times
.IP "\-\-durations file.json" 4
.IX Item "--durations file.json"
.PD 0
.IP "\-\-durations http://example.com/durations.json" 4
.IX Item "--durations http://example.com/durations.json"
.IP "\-\-no\-durations" 4
.IX Item "--no-durations"
.PD
Point at a json file or url which has a hash of relative test filenames as keys, and '\s-1SHORT\s0', '\s-1MEDIUM\s0', or '\s-1LONG\s0' as values. This will override durations listed in the file headers. An exception will be thrown if the durations file or url does not work.
.IP "\-\-exclude\-file t/nope.t" 4
.IX Item "--exclude-file t/nope.t"
.PD 0
.IP "\-\-no\-exclude\-file" 4
.IX Item "--no-exclude-file"
.PD
Exclude a file from testing
.Sp
Can be specified multiple times
.IP "\-\-exclude\-list file.txt" 4
.IX Item "--exclude-list file.txt"
.PD 0
.IP "\-\-exclude\-list http://example.com/exclusions.txt" 4
.IX Item "--exclude-list http://example.com/exclusions.txt"
.IP "\-\-no\-exclude\-list" 4
.IX Item "--no-exclude-list"
.PD
Point at a file or url which has a new line separated list of test file names to exclude from testing. Starting a line with a '#' will comment it out (for compatibility with Test2::Aggregate list files).
.Sp
Can be specified multiple times
.IP "\-\-exclude\-pattern t/nope.t" 4
.IX Item "--exclude-pattern t/nope.t"
.PD 0
.IP "\-\-no\-exclude\-pattern" 4
.IX Item "--no-exclude-pattern"
.PD
Exclude a pattern from testing, matched using m/$PATTERN/
.Sp
Can be specified multiple times
.IP "\-\-extension \s-1ARG\s0" 4
.IX Item "--extension ARG"
.PD 0
.IP "\-\-extension=ARG" 4
.IX Item "--extension=ARG"
.IP "\-\-ext \s-1ARG\s0" 4
.IX Item "--ext ARG"
.IP "\-\-ext=ARG" 4
.IX Item "--ext=ARG"
.IP "\-\-no\-extension" 4
.IX Item "--no-extension"
.PD
Specify valid test filename extensions, default: t and t2
.Sp
Can be specified multiple times
.IP "\-\-maybe\-coverage\-from path/to/log.jsonl" 4
.IX Item "--maybe-coverage-from path/to/log.jsonl"
.PD 0
.IP "\-\-maybe\-coverage\-from http://example.com/coverage" 4
.IX Item "--maybe-coverage-from http://example.com/coverage"
.IP "\-\-maybe\-coverage\-from path/to/coverage.json" 4
.IX Item "--maybe-coverage-from path/to/coverage.json"
.IP "\-\-no\-maybe\-coverage\-from" 4
.IX Item "--no-maybe-coverage-from"
.PD
Where to fetch coverage data. Can be a path to a .jsonl(.bz|.gz)? log file. Can be a path or url to a json file containing a hash where source files are key, and value is a list of tests to run.
.IP "\-\-maybe\-durations file.json" 4
.IX Item "--maybe-durations file.json"
.PD 0
.IP "\-\-maybe\-durations http://example.com/durations.json" 4
.IX Item "--maybe-durations http://example.com/durations.json"
.IP "\-\-no\-maybe\-durations" 4
.IX Item "--no-maybe-durations"
.PD
Point at a json file or url which has a hash of relative test filenames as keys, and '\s-1SHORT\s0', '\s-1MEDIUM\s0', or '\s-1LONG\s0' as values. This will override durations listed in the file headers. An exception will be thrown if the durations file or url does not work.
.IP "\-\-no\-long" 4
.IX Item "--no-long"
.PD 0
.IP "\-\-no\-no\-long" 4
.IX Item "--no-no-long"
.PD
Do not run tests that have their duration flag set to '\s-1LONG\s0'
.IP "\-\-only\-long" 4
.IX Item "--only-long"
.PD 0
.IP "\-\-no\-only\-long" 4
.IX Item "--no-only-long"
.PD
Only run tests that have their duration flag set to '\s-1LONG\s0'
.IP "\-\-search \s-1ARG\s0" 4
.IX Item "--search ARG"
.PD 0
.IP "\-\-search=ARG" 4
.IX Item "--search=ARG"
.IP "\-\-no\-search" 4
.IX Item "--no-search"
.PD
List of tests and test directories to use instead of the default search paths. Typically these can simply be listed as command line arguments without the \-\-search prefix.
.Sp
Can be specified multiple times
.IP "\-\-show\-changed\-files" 4
.IX Item "--show-changed-files"
.PD 0
.IP "\-\-no\-show\-changed\-files" 4
.IX Item "--no-show-changed-files"
.PD
Print a list of changed files if any are found
.PP
\fIFormatter Options\fR
.IX Subsection "Formatter Options"
.IP "\-\-formatter \s-1ARG\s0" 4
.IX Item "--formatter ARG"
.PD 0
.IP "\-\-formatter=ARG" 4
.IX Item "--formatter=ARG"
.IP "\-\-no\-formatter" 4
.IX Item "--no-formatter"
.PD
\&\s-1NO DESCRIPTION\s0 \- \s-1FIX ME\s0
.IP "\-\-qvf" 4
.IX Item "--qvf"
.PD 0
.IP "\-\-no\-qvf" 4
.IX Item "--no-qvf"
.PD
[Q]uiet, but [V]erbose on [F]ailure. Hide all output from tests when they pass, except to say they passed. If a test fails then \s-1ALL\s0 output from the test is verbosely output.
.IP "\-\-show\-job\-end" 4
.IX Item "--show-job-end"
.PD 0
.IP "\-\-no\-show\-job\-end" 4
.IX Item "--no-show-job-end"
.PD
Show output when a job ends. (Default: on)
.IP "\-\-show\-job\-info" 4
.IX Item "--show-job-info"
.PD 0
.IP "\-\-no\-show\-job\-info" 4
.IX Item "--no-show-job-info"
.PD
Show the job configuration when a job starts. (Default: off, unless \-vv)
.IP "\-\-show\-job\-launch" 4
.IX Item "--show-job-launch"
.PD 0
.IP "\-\-no\-show\-job\-launch" 4
.IX Item "--no-show-job-launch"
.PD
Show output for the start of a job. (Default: off unless \-v)
.IP "\-\-show\-run\-info" 4
.IX Item "--show-run-info"
.PD 0
.IP "\-\-no\-show\-run\-info" 4
.IX Item "--no-show-run-info"
.PD
Show the run configuration when a run starts. (Default: off, unless \-vv)
.PP
\fIGit Options\fR
.IX Subsection "Git Options"
.IP "\-\-git\-change\-base master" 4
.IX Item "--git-change-base master"
.PD 0
.IP "\-\-git\-change\-base HEAD^" 4
.IX Item "--git-change-base HEAD^"
.IP "\-\-git\-change\-base df22abe4" 4
.IX Item "--git-change-base df22abe4"
.IP "\-\-no\-git\-change\-base" 4
.IX Item "--no-git-change-base"
.PD
Find files changed by all commits in the current branch from most recent stopping when a commit is found that is also present in the history of the branch/commit specified as the change base.
.PP
\fIHelp and Debugging\fR
.IX Subsection "Help and Debugging"
.IP "\-\-dummy" 4
.IX Item "--dummy"
.PD 0
.IP "\-d" 4
.IX Item "-d"
.IP "\-\-no\-dummy" 4
.IX Item "--no-dummy"
.PD
Dummy run, do not actually execute anything
.Sp
Can also be set with the following environment variables: \f(CW\*(C`T2_HARNESS_DUMMY\*(C'\fR
.IP "\-\-help" 4
.IX Item "--help"
.PD 0
.IP "\-h" 4
.IX Item "-h"
.IP "\-\-no\-help" 4
.IX Item "--no-help"
.PD
exit after showing help information
.IP "\-\-keep\-dirs" 4
.IX Item "--keep-dirs"
.PD 0
.IP "\-\-keep_dir" 4
.IX Item "--keep_dir"
.IP "\-k" 4
.IX Item "-k"
.IP "\-\-no\-keep\-dirs" 4
.IX Item "--no-keep-dirs"
.PD
Do not delete directories when done. This is useful if you want to inspect the directories used for various commands.
.IP "\-\-summary" 4
.IX Item "--summary"
.PD 0
.IP "\-\-summary=/path/to/summary.json" 4
.IX Item "--summary=/path/to/summary.json"
.IP "\-\-no\-summary" 4
.IX Item "--no-summary"
.PD
Write out a summary json file, if no path is provided 'summary.json' will be used. The .json extension is added automatically if omitted.
.PP
\fILogging Options\fR
.IX Subsection "Logging Options"
.IP "\-\-bzip2" 4
.IX Item "--bzip2"
.PD 0
.IP "\-\-bz2" 4
.IX Item "--bz2"
.IP "\-\-bzip2_log" 4
.IX Item "--bzip2_log"
.IP "\-B" 4
.IX Item "-B"
.IP "\-\-no\-bzip2" 4
.IX Item "--no-bzip2"
.PD
Use bzip2 compression when writing the log. This option implies \-L. The .bz2 prefix is added to log file name for you
.IP "\-\-gzip" 4
.IX Item "--gzip"
.PD 0
.IP "\-\-gz" 4
.IX Item "--gz"
.IP "\-\-gzip_log" 4
.IX Item "--gzip_log"
.IP "\-G" 4
.IX Item "-G"
.IP "\-\-no\-gzip" 4
.IX Item "--no-gzip"
.PD
Use gzip compression when writing the log. This option implies \-L. The .gz prefix is added to log file name for you
.IP "\-\-log" 4
.IX Item "--log"
.PD 0
.IP "\-L" 4
.IX Item "-L"
.IP "\-\-no\-log" 4
.IX Item "--no-log"
.PD
Turn on logging
.IP "\-\-log\-dir \s-1ARG\s0" 4
.IX Item "--log-dir ARG"
.PD 0
.IP "\-\-log\-dir=ARG" 4
.IX Item "--log-dir=ARG"
.IP "\-\-no\-log\-dir" 4
.IX Item "--no-log-dir"
.PD
Specify a log directory. Will fall back to the system temp dir.
.IP "\-\-log\-file \s-1ARG\s0" 4
.IX Item "--log-file ARG"
.PD 0
.IP "\-\-log\-file=ARG" 4
.IX Item "--log-file=ARG"
.IP "\-F \s-1ARG\s0" 4
.IX Item "-F ARG"
.IP "\-F=ARG" 4
.IX Item "-F=ARG"
.IP "\-\-no\-log\-file" 4
.IX Item "--no-log-file"
.PD
Specify the name of the log file. This option implies \-L.
.IP "\-\-log\-file\-format \s-1ARG\s0" 4
.IX Item "--log-file-format ARG"
.PD 0
.IP "\-\-log\-file\-format=ARG" 4
.IX Item "--log-file-format=ARG"
.IP "\-\-lff \s-1ARG\s0" 4
.IX Item "--lff ARG"
.IP "\-\-lff=ARG" 4
.IX Item "--lff=ARG"
.IP "\-\-no\-log\-file\-format" 4
.IX Item "--no-log-file-format"
.PD
Specify the format for automatically-generated log files. Overridden by \-\-log\-file, if given. This option implies \-L (Default: \e$YATH_LOG_FILE_FORMAT, if that is set, or else \*(L"%!P%Y\-%m\-%d~%H:%M:%S~%!U~%!p.jsonl\*(R"). This is a string in which percent-escape sequences will be replaced as per POSIX::strftime. The following special escape sequences are also replaced: (%!P : Project name followed by a ~, if a project is defined, otherwise empty string) (%!U : the unique test run \s-1ID\s0) (%!p : the process \s-1ID\s0) (%!S : the number of seconds since local midnight \s-1UTC\s0)
.Sp
Can also be set with the following environment variables: \f(CW\*(C`YATH_LOG_FILE_FORMAT\*(C'\fR, \f(CW\*(C`TEST2_HARNESS_LOG_FORMAT\*(C'\fR
.IP "\-\-write\-coverage" 4
.IX Item "--write-coverage"
.PD 0
.IP "\-\-write\-coverage=coverage.json" 4
.IX Item "--write-coverage=coverage.json"
.IP "\-\-no\-write\-coverage" 4
.IX Item "--no-write-coverage"
.PD
Create a json file of all coverage data seen during the run (This implies \-\-cover\-files).
.PP
\fINotification Options\fR
.IX Subsection "Notification Options"
.IP "\-\-notify\-email foo@example.com" 4
.IX Item "--notify-email foo@example.com"
.PD 0
.IP "\-\-no\-notify\-email" 4
.IX Item "--no-notify-email"
.PD
Email the test results to the specified email address(es)
.Sp
Can be specified multiple times
.IP "\-\-notify\-email\-fail foo@example.com" 4
.IX Item "--notify-email-fail foo@example.com"
.PD 0
.IP "\-\-no\-notify\-email\-fail" 4
.IX Item "--no-notify-email-fail"
.PD
Email failing results to the specified email address(es)
.Sp
Can be specified multiple times
.IP "\-\-notify\-email\-from foo@example.com" 4
.IX Item "--notify-email-from foo@example.com"
.PD 0
.IP "\-\-no\-notify\-email\-from" 4
.IX Item "--no-notify-email-from"
.PD
If any email is sent, this is who it will be from
.IP "\-\-notify\-email\-owner" 4
.IX Item "--notify-email-owner"
.PD 0
.IP "\-\-no\-notify\-email\-owner" 4
.IX Item "--no-notify-email-owner"
.PD
Email the owner of broken tests files upon failure. Add `# HARNESS-META-OWNER foo@example.com` to the top of a test file to give it an owner
.IP "\-\-notify\-no\-batch\-email" 4
.IX Item "--notify-no-batch-email"
.PD 0
.IP "\-\-no\-notify\-no\-batch\-email" 4
.IX Item "--no-notify-no-batch-email"
.PD
Usually owner failures are sent as a single batch at the end of testing. Toggle this to send failures as they happen.
.IP "\-\-notify\-no\-batch\-slack" 4
.IX Item "--notify-no-batch-slack"
.PD 0
.IP "\-\-no\-notify\-no\-batch\-slack" 4
.IX Item "--no-notify-no-batch-slack"
.PD
Usually owner failures are sent as a single batch at the end of testing. Toggle this to send failures as they happen.
.IP "\-\-notify\-slack '#foo'" 4
.IX Item "--notify-slack '#foo'"
.PD 0
.IP "\-\-notify\-slack '@bar'" 4
.IX Item "--notify-slack '@bar'"
.IP "\-\-no\-notify\-slack" 4
.IX Item "--no-notify-slack"
.PD
Send results to a slack channel and/or user
.Sp
Can be specified multiple times
.IP "\-\-notify\-slack\-fail '#foo'" 4
.IX Item "--notify-slack-fail '#foo'"
.PD 0
.IP "\-\-notify\-slack\-fail '@bar'" 4
.IX Item "--notify-slack-fail '@bar'"
.IP "\-\-no\-notify\-slack\-fail" 4
.IX Item "--no-notify-slack-fail"
.PD
Send failing results to a slack channel and/or user
.Sp
Can be specified multiple times
.IP "\-\-notify\-slack\-owner" 4
.IX Item "--notify-slack-owner"
.PD 0
.IP "\-\-no\-notify\-slack\-owner" 4
.IX Item "--no-notify-slack-owner"
.PD
Send slack notifications to the slack channels/users listed in test meta-data when tests fail.
.IP "\-\-notify\-slack\-url https://hooks.slack.com/..." 4
.IX Item "--notify-slack-url https://hooks.slack.com/..."
.PD 0
.IP "\-\-no\-notify\-slack\-url" 4
.IX Item "--no-notify-slack-url"
.PD
Specify an \s-1API\s0 endpoint for slack webhook integrations
.IP "\-\-notify\-text \s-1ARG\s0" 4
.IX Item "--notify-text ARG"
.PD 0
.IP "\-\-notify\-text=ARG" 4
.IX Item "--notify-text=ARG"
.IP "\-\-message \s-1ARG\s0" 4
.IX Item "--message ARG"
.IP "\-\-message=ARG" 4
.IX Item "--message=ARG"
.IP "\-\-msg \s-1ARG\s0" 4
.IX Item "--msg ARG"
.IP "\-\-msg=ARG" 4
.IX Item "--msg=ARG"
.IP "\-\-no\-notify\-text" 4
.IX Item "--no-notify-text"
.PD
Add a custom text snippet to email/slack notifications
.PP
\fIRun Options\fR
.IX Subsection "Run Options"
.IP "\-\-author\-testing" 4
.IX Item "--author-testing"
.PD 0
.IP "\-A" 4
.IX Item "-A"
.IP "\-\-no\-author\-testing" 4
.IX Item "--no-author-testing"
.PD
This will set the \s-1AUTHOR_TESTING\s0 environment to true
.IP "\-\-cover\-files" 4
.IX Item "--cover-files"
.PD 0
.IP "\-\-no\-cover\-files" 4
.IX Item "--no-cover-files"
.PD
Use Test2::Plugin::Cover to collect coverage data for what files are touched by what tests. Unlike Devel::Cover this has very little performance impact (About 4% difference)
.IP "\-\-dbi\-profiling" 4
.IX Item "--dbi-profiling"
.PD 0
.IP "\-\-no\-dbi\-profiling" 4
.IX Item "--no-dbi-profiling"
.PD
Use Test2::Plugin::DBIProfile to collect database profiling data
.IP "\-\-env\-var VAR=VAL" 4
.IX Item "--env-var VAR=VAL"
.PD 0
.IP "\-EVAR=VAL" 4
.IX Item "-EVAR=VAL"
.IP "\-E VAR=VAL" 4
.IX Item "-E VAR=VAL"
.IP "\-\-no\-env\-var" 4
.IX Item "--no-env-var"
.PD
Set environment variables to set when each test is run.
.Sp
Can be specified multiple times
.IP "\-\-event\-uuids" 4
.IX Item "--event-uuids"
.PD 0
.IP "\-\-uuids" 4
.IX Item "--uuids"
.IP "\-\-no\-event\-uuids" 4
.IX Item "--no-event-uuids"
.PD
Use Test2::Plugin::UUID inside tests (default: on)
.IP "\-\-fields name:details" 4
.IX Item "--fields name:details"
.PD 0
.IP "\-\-fields \s-1JSON_STRING\s0" 4
.IX Item "--fields JSON_STRING"
.IP "\-f name:details" 4
.IX Item "-f name:details"
.IP "\-f \s-1JSON_STRING\s0" 4
.IX Item "-f JSON_STRING"
.IP "\-\-no\-fields" 4
.IX Item "--no-fields"
.PD
Add custom data to the harness run
.Sp
Can be specified multiple times
.IP "\-\-input \s-1ARG\s0" 4
.IX Item "--input ARG"
.PD 0
.IP "\-\-input=ARG" 4
.IX Item "--input=ARG"
.IP "\-\-no\-input" 4
.IX Item "--no-input"
.PD
Input string to be used as standard input for \s-1ALL\s0 tests. See also: \-\-input\-file
.IP "\-\-input\-file \s-1ARG\s0" 4
.IX Item "--input-file ARG"
.PD 0
.IP "\-\-input\-file=ARG" 4
.IX Item "--input-file=ARG"
.IP "\-\-no\-input\-file" 4
.IX Item "--no-input-file"
.PD
Use the specified file as standard input to \s-1ALL\s0 tests
.IP "\-\-io\-events" 4
.IX Item "--io-events"
.PD 0
.IP "\-\-no\-io\-events" 4
.IX Item "--no-io-events"
.PD
Use Test2::Plugin::IOEvents inside tests to turn all prints into test2 events (default: off)
.IP "\-\-link 'https://travis.work/builds/42'" 4
.IX Item "--link 'https://travis.work/builds/42'"
.PD 0
.IP "\-\-link 'https://jenkins.work/job/42'" 4
.IX Item "--link 'https://jenkins.work/job/42'"
.IP "\-\-link 'https://buildbot.work/builders/foo/builds/42'" 4
.IX Item "--link 'https://buildbot.work/builders/foo/builds/42'"
.IP "\-\-no\-link" 4
.IX Item "--no-link"
.PD
Provide one or more links people can follow to see more about this run.
.Sp
Can be specified multiple times
.IP "\-\-load \s-1ARG\s0" 4
.IX Item "--load ARG"
.PD 0
.IP "\-\-load=ARG" 4
.IX Item "--load=ARG"
.IP "\-\-load\-module \s-1ARG\s0" 4
.IX Item "--load-module ARG"
.IP "\-\-load\-module=ARG" 4
.IX Item "--load-module=ARG"
.IP "\-m \s-1ARG\s0" 4
.IX Item "-m ARG"
.IP "\-m=ARG" 4
.IX Item "-m=ARG"
.IP "\-\-no\-load" 4
.IX Item "--no-load"
.PD
Load a module in each test (after fork). The \*(L"import\*(R" method is not called.
.Sp
Can be specified multiple times
.IP "\-\-load\-import Module" 4
.IX Item "--load-import Module"
.PD 0
.IP "\-\-load\-import Module=import_arg1,arg2,..." 4
.IX Item "--load-import Module=import_arg1,arg2,..."
.IP "\-\-loadim Module" 4
.IX Item "--loadim Module"
.IP "\-\-loadim Module=import_arg1,arg2,..." 4
.IX Item "--loadim Module=import_arg1,arg2,..."
.IP "\-M Module" 4
.IX Item "-M Module"
.IP "\-M Module=import_arg1,arg2,..." 4
.IX Item "-M Module=import_arg1,arg2,..."
.IP "\-\-no\-load\-import" 4
.IX Item "--no-load-import"
.PD
Load a module in each test (after fork). Import is called.
.Sp
Can be specified multiple times. If the same key is listed multiple times the value lists will be appended together.
.IP "\-\-mem\-usage" 4
.IX Item "--mem-usage"
.PD 0
.IP "\-\-no\-mem\-usage" 4
.IX Item "--no-mem-usage"
.PD
Use Test2::Plugin::MemUsage inside tests (default: on)
.IP "\-\-retry \s-1ARG\s0" 4
.IX Item "--retry ARG"
.PD 0
.IP "\-\-retry=ARG" 4
.IX Item "--retry=ARG"
.IP "\-r \s-1ARG\s0" 4
.IX Item "-r ARG"
.IP "\-r=ARG" 4
.IX Item "-r=ARG"
.IP "\-\-no\-retry" 4
.IX Item "--no-retry"
.PD
Run any jobs that failed a second time. \s-1NOTE:\s0 \-\-retry=1 means failing tests will be attempted twice!
.IP "\-\-retry\-isolated" 4
.IX Item "--retry-isolated"
.PD 0
.IP "\-\-retry\-iso" 4
.IX Item "--retry-iso"
.IP "\-\-no\-retry\-isolated" 4
.IX Item "--no-retry-isolated"
.PD
If true then any job retries will be done in isolation (as though \-j1 was set)
.IP "\-\-run\-id" 4
.IX Item "--run-id"
.PD 0
.IP "\-\-id" 4
.IX Item "--id"
.IP "\-\-no\-run\-id" 4
.IX Item "--no-run-id"
.PD
Set a specific run-id. (Default: a \s-1UUID\s0)
.IP "\-\-test\-args \s-1ARG\s0" 4
.IX Item "--test-args ARG"
.PD 0
.IP "\-\-test\-args=ARG" 4
.IX Item "--test-args=ARG"
.IP "\-\-no\-test\-args" 4
.IX Item "--no-test-args"
.PD
Arguments to pass in as \f(CW@ARGV\fR for all tests that are run. These can be provided easier using the '::' argument separator.
.Sp
Can be specified multiple times
.IP "\-\-stream" 4
.IX Item "--stream"
.PD 0
.IP "\-\-no\-stream" 4
.IX Item "--no-stream"
.PD
Use the stream formatter (default is on)
.IP "\-\-tap" 4
.IX Item "--tap"
.PD 0
.IP "\-\-TAP" 4
.IX Item "--TAP"
.IP "\-\-\-\-no\-stream" 4
.IX Item "----no-stream"
.IP "\-\-no\-tap" 4
.IX Item "--no-tap"
.PD
The \s-1TAP\s0 format is lossy and clunky. Test2::Harness normally uses a newer streaming format to receive test results. There are old/legacy tests where this causes problems, in which case setting \-\-TAP or \-\-no\-stream can help.
.PP
\fIYathUI Options\fR
.IX Subsection "YathUI Options"
.IP "\-\-yathui\-api\-key \s-1ARG\s0" 4
.IX Item "--yathui-api-key ARG"
.PD 0
.IP "\-\-yathui\-api\-key=ARG" 4
.IX Item "--yathui-api-key=ARG"
.IP "\-\-no\-yathui\-api\-key" 4
.IX Item "--no-yathui-api-key"
.PD
Yath-UI \s-1API\s0 key. This is not necessary if your Yath-UI instance is set to single-user
.IP "\-\-yathui\-coverage" 4
.IX Item "--yathui-coverage"
.PD 0
.IP "\-\-no\-yathui\-coverage" 4
.IX Item "--no-yathui-coverage"
.PD
Poll coverage data from Yath-UI to determine what tests should be run for changed files
.IP "\-\-yathui\-durations" 4
.IX Item "--yathui-durations"
.PD 0
.IP "\-\-no\-yathui\-durations" 4
.IX Item "--no-yathui-durations"
.PD
Poll duration data from Yath-UI to help order tests efficiently
.IP "\-\-yathui\-grace" 4
.IX Item "--yathui-grace"
.PD 0
.IP "\-\-no\-yathui\-grace" 4
.IX Item "--no-yathui-grace"
.PD
If yath cannot connect to yath-ui it normally throws an error, use this to make it fail gracefully. You get a warning, but things keep going.
.IP "\-\-yathui\-long\-duration 10" 4
.IX Item "--yathui-long-duration 10"
.PD 0
.IP "\-\-no\-yathui\-long\-duration" 4
.IX Item "--no-yathui-long-duration"
.PD
Minimum duration length (seconds) before a test goes from \s-1MEDIUM\s0 to \s-1LONG\s0
.IP "\-\-yathui\-medium\-duration 5" 4
.IX Item "--yathui-medium-duration 5"
.PD 0
.IP "\-\-no\-yathui\-medium\-duration" 4
.IX Item "--no-yathui-medium-duration"
.PD
Minimum duration length (seconds) before a test goes from \s-1SHORT\s0 to \s-1MEDIUM\s0
.IP "\-\-yathui\-mode summary" 4
.IX Item "--yathui-mode summary"
.PD 0
.IP "\-\-yathui\-mode qvf" 4
.IX Item "--yathui-mode qvf"
.IP "\-\-yathui\-mode qvfd" 4
.IX Item "--yathui-mode qvfd"
.IP "\-\-yathui\-mode complete" 4
.IX Item "--yathui-mode complete"
.IP "\-\-no\-yathui\-mode" 4
.IX Item "--no-yathui-mode"
.PD
Set the upload mode (default 'qvfd')
.IP "\-\-yathui\-project \s-1ARG\s0" 4
.IX Item "--yathui-project ARG"
.PD 0
.IP "\-\-yathui\-project=ARG" 4
.IX Item "--yathui-project=ARG"
.IP "\-\-no\-yathui\-project" 4
.IX Item "--no-yathui-project"
.PD
The Yath-UI project for your test results
.IP "\-\-yathui\-retry" 4
.IX Item "--yathui-retry"
.PD 0
.IP "\-\-no\-yathui\-retry" 4
.IX Item "--no-yathui-retry"
.PD
How many times to try an operation before giving up
.Sp
Can be specified multiple times
.IP "\-\-yathui\-upload" 4
.IX Item "--yathui-upload"
.PD 0
.IP "\-\-no\-yathui\-upload" 4
.IX Item "--no-yathui-upload"
.PD
Upload the log to Yath-UI
.IP "\-\-yathui\-url http://my\-yath\-ui.com/..." 4
.IX Item "--yathui-url http://my-yath-ui.com/..."
.PD 0
.IP "\-\-uri http://my\-yath\-ui.com/..." 4
.IX Item "--uri http://my-yath-ui.com/..."
.IP "\-\-no\-yathui\-url" 4
.IX Item "--no-yathui-url"
.PD
Yath-UI url
.SH "SOURCE"
.IX Header "SOURCE"
The source code repository for Test2\-Harness can be found at
\&\fIhttp://github.com/Test\-More/Test2\-Harness/\fR.
.SH "MAINTAINERS"
.IX Header "MAINTAINERS"
.IP "Chad Granum <exodist@cpan.org>" 4
.IX Item "Chad Granum <exodist@cpan.org>"
.SH "AUTHORS"
.IX Header "AUTHORS"
.PD 0
.IP "Chad Granum <exodist@cpan.org>" 4
.IX Item "Chad Granum <exodist@cpan.org>"
.PD
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright 2020 Chad Granum <exodist7@gmail.com>.
.PP
This program is free software; you can redistribute it and/or
modify it under the same terms as Perl itself.
.PP
See \fIhttp://dev.perl.org/licenses/\fR

.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.41)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "HTTP::Cookies::ChromeDevTools 3"
.TH HTTP::Cookies::ChromeDevTools 3 "2020-11-03" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
HTTP::Cookies::ChromeDevTools \- retrieve cookies from a live Chrome instance
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 3
\&  use HTTP::Cookies::ChromeDevTools;
\&  my $cookie_jar = HTTP::Cookies::ChromeDevTools\->new();
\&  # use just like HTTP::Cookies
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This package overrides the \fBload()\fR and \fBsave()\fR methods of HTTP::Cookies
so it can work with a live Chrome instance.
.SH "Reusing an existing connection"
.IX Header "Reusing an existing connection"
If you already have an existing connection to Chrome
that you want to reuse, just pass the Chrome::DevToolsProtocol
instance to the cookie jar constructor in the \f(CW\*(C`driver\*(C'\fR parameter:
.PP
.Vb 3
\&  my $cookie_jar = HTTP::Cookies::ChromeDevTools\->new(
\&      driver => $driver
\&  );
.Ve
.ie n .SS """\->load( $file, %options )"""
.el .SS "\f(CW\->load( $file, %options )\fP"
.IX Subsection "->load( $file, %options )"
.Vb 1
\&    $jar\->load( undef, driver => $driver );
.Ve
.PP
Loads the cookies from the Chrome instance. Passing in a filename to load
cookies from is currently unsupported.
.ie n .SS """\->load_jar( $jar, %options )"""
.el .SS "\f(CW\->load_jar( $jar, %options )\fP"
.IX Subsection "->load_jar( $jar, %options )"
.Vb 1
\&    $jar\->load( $jar, replace => 1;
.Ve
.PP
Imports the cookies from another cookie jar into Chrome.
.PP
\&\fBreplace\fR will clear out the cookie jar before loading the fresh cookies.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
HTTP::Cookies \- the interface used
.PP
HTTP::Cookies::Chrome \- offline access to Chrome cookies
.SH "REPOSITORY"
.IX Header "REPOSITORY"
The public repository of this module is
<http://github.com/Corion/www\-mechanize\-chrome>.
.SH "AUTHOR"
.IX Header "AUTHOR"
Max Maischein \f(CW\*(C`corion@cpan.org\*(C'\fR
.SH "COPYRIGHT (c)"
.IX Header "COPYRIGHT (c)"
Copyright 2009\-2020 by Max Maischein \f(CW\*(C`corion@cpan.org\*(C'\fR.
.SH "LICENSE"
.IX Header "LICENSE"
This module is released under the same terms as Perl itself.

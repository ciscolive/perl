.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.41)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "WWW::Mechanize::Chrome::Troubleshooting 3"
.TH WWW::Mechanize::Chrome::Troubleshooting 3 "2020-11-03" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
WWW::Mechanize::Chrome::Troubleshooting \- Things to watch out for
.SH "INSTALLATION"
.IX Header "INSTALLATION"
.SS "Chrome is installed but Perl does not connect to it"
.IX Subsection "Chrome is installed but Perl does not connect to it"
If you notice that tests get skipped and/or the module installs
but \*(L"does not seem to work\*(R", most likely you need to close \s-1ALL\s0 your Chrome
windows. If you want Perl to share your browser, you will need to start Chrome
yourself with the \f(CW\*(C`<\-\-remote\-debugging\-port=9222\*(C'\fR> command line switch.
.SS "Tests fail with URLs that do not appear in the distribution files"
.IX Subsection "Tests fail with URLs that do not appear in the distribution files"
If you notice that tests ( most likely, \f(CW\*(C`t/51\-mech\-links.t\*(C'\fR ) fail with
URLs that are not on \f(CW\*(C`localhost\*(C'\fR or \f(CW127.0.0.1\fR, another not entirely unlikely
explanation is that your machine or your browser has been infected by some
\&\*(L"Search Plugin\*(R" redirector which exfiltrates your browsing history or redirects
your search engine or banking websites to other websites.
.PP
For confirmation and/or finding out how to remove the offender, maybe a
search from a different machine for the URLs injected additionally into the
test pages helps you identify the offender.
.SH "OPERATION"
.IX Header "OPERATION"
.SS "Chrome / Chromium best practices"
.IX Subsection "Chrome / Chromium best practices"
Install your own version of Chrome/Chromium locally and disable automatic
updates. This prevents the \s-1API\s0 from changing under your scripts.
.SS "File downloads don't work"
.IX Subsection "File downloads don't work"
Chrome / Chromium doesn't have an \s-1API\s0 for determining whether a download
completed or not. Chrome versions v62 and v63 do have working downloads, but
Chrome v64 does not send the appropriate \s-1API\s0 messages.
.SS "Timeout when launching script while Chrome is running"
.IX Subsection "Timeout when launching script while Chrome is running"
You get the error message
.PP
.Vb 2
\&  Timeout while connecting to localhost:9222. Do you maybe have a non\-debug
\&  instance of Chrome already running?
.Ve
.PP
Most likely you already launched the Chrome binary without supplying the
\&\f(CW\*(C`\-\-remote\-debugging\-port\*(C'\fR option. Either stop all Chrome instances and
(re)launch them using the \f(CW\*(C`\-\-remote\-debugging\-port\*(C'\fR on the command line or
launch a separate Chrome session using a separate data directory using
the \f(CW\*(C`data_directory\*(C'\fR option.
.SS "Lost \s-1UI\s0 shared context"
.IX Subsection "Lost UI shared context"
When Chrome is run in headless mode, Chrome throws a \f(CW\*(C`Lost UI shared context\*(C'\fR
error. This error can be ignored and does not affect the operation of this
module.
.SH "REPORTING AN ISSUE"
.IX Header "REPORTING AN ISSUE"
Ideally you ask your question on the public support forum, as then other people
can also provide you with good answers. Your question should include a short
script of about 20 lines that reproduces the problem. Remember to remove all
passwords from the script.
.SH "REPOSITORY"
.IX Header "REPOSITORY"
The public repository of this module is
<https://github.com/Corion/www\-mechanize\-chrome>.
.SH "SUPPORT"
.IX Header "SUPPORT"
The public support forum of this module is <https://perlmonks.org/>.
.SH "BUG TRACKER"
.IX Header "BUG TRACKER"
Please report bugs in this module via the \s-1RT CPAN\s0 bug queue at
<https://rt.cpan.org/Public/Dist/Display.html?Name=WWW\-Mechanize\-Chrome>
or via mail to www\-mechanize\-Chrome\-Bugs@rt.cpan.org <mailto:www-mechanize-Chrome-Bugs@rt.cpan.org>.
.SH "AUTHOR"
.IX Header "AUTHOR"
Max Maischein \f(CW\*(C`corion@cpan.org\*(C'\fR
.SH "COPYRIGHT (c)"
.IX Header "COPYRIGHT (c)"
Copyright 2010\-2020 by Max Maischein \f(CW\*(C`corion@cpan.org\*(C'\fR.
.SH "LICENSE"
.IX Header "LICENSE"
This module is released under the same terms as Perl itself.

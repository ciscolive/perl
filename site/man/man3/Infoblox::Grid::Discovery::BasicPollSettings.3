.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Infoblox::Grid::Discovery::BasicPollSettings 3"
.TH Infoblox::Grid::Discovery::BasicPollSettings 3 "2018-06-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Infoblox::Grid::Discovery::BasicPollSettings \- basic polling settings.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The object provides information about basic polling settings.
.SH "CONSTRUCTOR"
.IX Header "CONSTRUCTOR"
.Vb 10
\& my $object = Infoblox::Grid::Discovery::BasicPollSettings\->new(
\&    \*(Aqauto_arp_refresh_before_switch_port_polling\*(Aq  => \*(Aqtrue\*(Aq | \*(Aqfalse\*(Aq,                        # Optional / Default value is \*(Aqfalse\*(Aq
\&    \*(Aqdevice_profile\*(Aq                               => \*(Aqtrue\*(Aq | \*(Aqfalse\*(Aq,                        # Optional / Default value is \*(Aqfalse\*(Aq
\&    \*(Aqcomplete_ping_sweep\*(Aq                          => \*(Aqtrue\*(Aq | \*(Aqfalse\*(Aq,                        # Optional / Default value is \*(Aqfalse\*(Aq
\&    \*(Aqnetbios_scanning\*(Aq                             => \*(Aqtrue\*(Aq | \*(Aqfalse\*(Aq,                        # Optional / Default value is \*(Aqfalse\*(Aq
\&    \*(Aqport_scanning\*(Aq                                => \*(Aqtrue\*(Aq | \*(Aqfalse\*(Aq,                        # Optional / Default value is \*(Aqfalse\*(Aq
\&    \*(Aqsmart_subnet_ping_sweep\*(Aq                      => \*(Aqtrue\*(Aq | \*(Aqfalse\*(Aq,                        # Optional / Default value is \*(Aqfalse\*(Aq
\&    \*(Aqsnmp_collection\*(Aq                              => \*(Aqtrue\*(Aq | \*(Aqfalse\*(Aq,                        # Optional / Default value is \*(Aqfalse\*(Aq
\&    \*(Aqcli_collection\*(Aq                               => \*(Aqtrue\*(Aq | \*(Aqfalse\*(Aq,                        # Optional / Default value is \*(Aqfalse\*(Aq
\&    \*(Aqswitch_port_data_collection_polling\*(Aq          => \*(AqDISABLED\*(Aq | \*(AqPERIODIC\*(Aq | \*(AqSCHEDULED\*(Aq,   # Optional
\&    \*(Aqswitch_port_data_collection_polling_interval\*(Aq => $uint,                                   # Optional
\&    \*(Aqswitch_port_data_collection_polling_schedule\*(Aq => $schedule,                               # Optional
\& );
.Ve
.SH "SESSION METHODS"
.IX Header "SESSION METHODS"
The object does not support any session methods.
.SH "METHODS"
.IX Header "METHODS"
This section describes all the methods that you can use to set or retrieve the attribute values of the object.
.SS "auto_arp_refresh_before_switch_port_polling( )"
.IX Subsection "auto_arp_refresh_before_switch_port_polling( )"
.RS 4
Use this method to enable or disable auto \s-1ARP\s0 refresh before switch port polling.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to enable auto \s-1ARP\s0 refresh before switch port polling or \*(L"false\*(R" to disable it. Default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->auto_arp_refresh_before_switch_port_polling();
\& # Modify attribute value
\& $object\->auto_arp_refresh_before_switch_port_polling(\*(Aqtrue\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "cli_collection( )"
.IX Subsection "cli_collection( )"
.RS 4
Use this method to disable or enable \s-1CLI\s0 collection.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to enable \s-1CLI\s0 collection or \*(L"false\*(R" to disable it. Default value if \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->cli_collection();
\& # Modify attribute value
\& $object\->cli_collection(\*(Aqtrue\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "complete_ping_sweep( )"
.IX Subsection "complete_ping_sweep( )"
.RS 4
Use this method to enable or disable ping sweep.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to enable ping sweep or \*(L"false\*(R" to disable it. Default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->complete_ping_sweep();
\& # Modify attribute value
\& $object\->complete_ping_sweep(\*(Aqtrue\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "device_profile( )"
.IX Subsection "device_profile( )"
.RS 4
Use this method to enable or disable \s-1DHCP\s0 fingerprinting.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to enable \s-1DHCP\s0 fingerprinting or \*(L"false\*(R" to disable it. Default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->device_profile();
\& # Modify attribute value
\& $object\->device_profile(\*(Aqtrue\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "netbios_scanning( )"
.IX Subsection "netbios_scanning( )"
.RS 4
Use this method to enable or disable \s-1NETBIOS\s0 scanning.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to enable \s-1NETBIOS\s0 scanning or \*(L"false\*(R" to disable it. Default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->netbios_scanning();
\& # Modify attribute value
\& $object\->netbios_scanning(\*(Aqtrue\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "port_scanning( )"
.IX Subsection "port_scanning( )"
.RS 4
Use this method to enable or disable port scanning.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to enable port scanning or \*(L"false\*(R" to disable it. Default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->port_scanning();
\& # Modify attribute value
\& $object\->port_scanning(\*(Aqtrue\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "smart_subnet_ping_sweep( )"
.IX Subsection "smart_subnet_ping_sweep( )"
.RS 4
Use this method to enable or disable smart subnet ping sweep.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to enable smart subnet ping sweep or \*(L"false\*(R" to disable it. Default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->smart_subnet_ping_sweep();
\& # Modify attribute value
\& $object\->smart_subnet_ping_sweep(\*(Aqtrue\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "snmp_collection( )"
.IX Subsection "snmp_collection( )"
.RS 4
Use this method to enable or disable \s-1SNMP\s0 collection.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to enable \s-1SNMP\s0 collection or \*(L"false\*(R" to disable it. Default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->snmp_collection();
\& # Modify attribute value
\& $object\->snmp_collection(\*(Aqtrue\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "switch_port_data_collection_polling( )"
.IX Subsection "switch_port_data_collection_polling( )"
.RS 4
Use this method to set or retrieve the polling mode.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is '\s-1DISABLED\s0', '\s-1PERIODIC\s0' or '\s-1SCHEDULED\s0'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->switch_port_data_collection_polling();
\& # Modify attribute value
\& $object\->switch_port_data_collection_polling(\*(AqSCHEDULED\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "switch_port_data_collection_polling_interval( )"
.IX Subsection "switch_port_data_collection_polling_interval( )"
.RS 4
Use this method to set or retrieve the polling interval.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is an unsigned integer.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->switch_port_data_collection_polling_interval();
\& # Modify attribute value
\& $object\->switch_port_data_collection_polling_interval(100);
.Ve
.RE
.RS 4
.RE
.SS "switch_port_data_collection_polling_schedule( )"
.IX Subsection "switch_port_data_collection_polling_schedule( )"
.RS 4
Use this method to set or retrieve the polling schedule.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is an Infoblox::Grid::ScheduleSetting object.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->switch_port_data_collection_polling_schedule();
\& # Modify attribute value
\& $object\->switch_port_data_collection_polling_schedule($schedule);
.Ve
.RE
.RS 4
.RE
.SH "AUTHOR"
.IX Header "AUTHOR"
Infoblox Inc. <http://www.infoblox.com/>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Infoblox::Grid::ScheduleSetting
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2017 Infoblox Inc.

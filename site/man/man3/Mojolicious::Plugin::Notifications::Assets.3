.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Mojolicious::Plugin::Notifications::Assets 3"
.TH Mojolicious::Plugin::Notifications::Assets 3 "2015-04-19" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mojolicious::Plugin::Notifications::Assets \- Collect Assets of Notification Engines
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  use Mojolicious::Plugin::Notifications::Assets;
\&
\&  my $assets = Mojolicious::Plugin::Notifications::Assets\->new;
\&  $assets\->scripts(\*(Aq/myscripts.js\*(Aq);
\&  $assets\->styles(\*(Aq/mystyles.css\*(Aq);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Mojolicious::Plugin::Notifications::Assets establishes a simple
collector object for assets, used by Mojolicious::Plugin::Notifications.
.SH "METHODS"
.IX Header "METHODS"
.SS "new"
.IX Subsection "new"
.Vb 1
\&  my $assets = Mojolicious::Plugin::Notifications::Assets\->new;
.Ve
.PP
Create a new assets object.
.SS "scripts"
.IX Subsection "scripts"
.Vb 2
\&  $assets\->scripts(\*(Aq/myscripts.js\*(Aq);
\&  my @scripts = $assets\->scripts;
.Ve
.PP
Add scripts to the asset list or return the collected scripts in sorted order.
.SS "styles"
.IX Subsection "styles"
.Vb 2
\&  $assets\->styles(\*(Aq/mystyles.css\*(Aq);
\&  my @styles = $assets\->styles;
.Ve
.PP
Add styles to the asset list or return the collected styles in sorted order.
.SH "AVAILABILITY"
.IX Header "AVAILABILITY"
.Vb 1
\&  https://github.com/Akron/Mojolicious\-Plugin\-Notifications
.Ve
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright (C) 2014\-2015, Nils Diewald <http://nils-diewald.de/>.
.PP
This program is free software, you can redistribute it
and/or modify it under the terms of the Artistic License version 2.0.

.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Infoblox::Grid::Member::BGP::AS 3"
.TH Infoblox::Grid::Member::BGP::AS 3 "2018-06-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Infoblox::Grid::Member::BGP::AS \- BGP (Border Gateway Protocol) Autonomous System (AS) object.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
An Infoblox::BGP::AS object represents a \s-1BGP\s0 Autonomous System configured at the grid member level.
.SH "CONSTRUCTOR"
.IX Header "CONSTRUCTOR"
.Vb 6
\& my $bgp_as = Infoblox::Grid::Member::BGP::AS\->new(
\&     as              => $num,                            # Optional / Default value is undefined
\&     keepalive       => $num,                            # Optional / Default value is 4
\&     holddown        => $num,                            # Optional / Default value is 16
\&     neighbors       => [ $neighbor1, $neighbor2, ... ], # Optional / Default value is empty
\& );
.Ve
.SH "MODULE METHODS"
.IX Header "MODULE METHODS"
The following functions can be applied to a \s-1BGP AS\s0 object.
.SS "Infoblox::Grid::Member\->bgp_as( )"
.IX Subsection "Infoblox::Grid::Member->bgp_as( )"
.RS 4
Use this function to specify \s-1BGP\s0 Autonomous Systems for the grid member. See Infoblox::Grid::Member\->\fBbgp_as()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 6
\& #Construct a BGP neighbor
\& my $neighbor = Infoblox::Grid::Member::BGP::Neighbor\->new(
\&     neighbor_ip          => "172.16.0.1",
\&     remote_as           => 1234,
\&     interface           => "LAN_HA",
\& );
\&
\& #Construct a BGP AS
\& my $autonomous_system = Infoblox::Grid::Member::BGP::AS\->new(
\&     as          => 269,
\&     keepalive       => 4,
\&     holddown        => 16,
\&     neighbors       => [ $neighbor ]
\& );
\&
\& # Configure BGP on the Grid Member object
\& my $response = $Grid_Member\->bgp_as([$as]);
.Ve
.RE
.RS 4
.RE
.SH "METHODS"
.IX Header "METHODS"
This section describes all the methods that can be used to configure and retrieve the attribute values of an Infoblox::BGP::AS object.
.SS "as( )"
.IX Subsection "as( )"
.RS 4
Use this method to set or retrieve the number of this \s-1AS.\s0
.Sp
A valid \s-1AS\s0 number is required to advertise to neighbors defined in this \s-1AS.\s0
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
An \s-1AS\s0 number is a 16\-bit integer from 1 to 65535.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get AS number
\& my $as_number = $autonomous_system\->as();
\& #Modify AS number
\& $autonomous_system\->as(300);
.Ve
.RE
.RS 4
.RE
.SS "keepalive( )"
.IX Subsection "keepalive( )"
.RS 4
Use this method to set or retrieve the \s-1AS\s0 keepalive timer.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The number of seconds for the keepalive timer. The valid value is from 1 to 21845 seconds.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get AS keepalive timer
\& my $keepalive = $autonomous_system\->keepalive();
\& #Modify AS keepalive timer
\& $autonomous_system\->keepalive(3600);
.Ve
.RE
.RS 4
.RE
.SS "holddown( )"
.IX Subsection "holddown( )"
.RS 4
Use this method to set or retrieve the \s-1AS\s0 hold down timer.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The number of seconds for the hold down timer. The valid value is from 3 to 65535 seconds.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get Autonomous System hold down timer
\& my $holddown = $autonomous_system\->holddown();
\& #Modify Autonomous System hold down timer
\& $autonomous_system\->holddown(3600);
.Ve
.RE
.RS 4
.RE
.SS "neighbors( )"
.IX Subsection "neighbors( )"
.RS 4
Use this method to set or retrieve the \s-1BGP\s0 neighbors for the Infoblox::BGP::AS object.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an array reference that contains Infoblox::Grid::Member::BGP::Neighbor object(s).
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get AS neighbor list
\& my $neighbors = $autonomous_system\->neighbors();
\& #Modify AS neighbors
\& $autonomous_system\->neighbors( [ $neighbor1, $neighbor2 ] );
.Ve
.RE
.RS 4
.RE
.SH "AUTHOR"
.IX Header "AUTHOR"
Infoblox Inc. <http://www.infoblox.com/>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Infoblox::Grid::Member, Infoblox::Grid::Member::BGP::Neighbor
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2017 Infoblox Inc.

.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Mail::Milter::Authentication::Client 3"
.TH Mail::Milter::Authentication::Client 3 "2020-09-30" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mail::Milter::Authentication::Client \- Client for connecting back to the authmilter server
.SH "VERSION"
.IX Header "VERSION"
version 2.20200930.2
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
Connect to the Authentication Milter and pass it email, returning the result.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Client to the Authentication Milter
.SH "CONSTRUCTOR"
.IX Header "CONSTRUCTOR"
.SS "\fInew( \fP\f(CI$args\fP\fI )\fP"
.IX Subsection "new( $args )"
Instantiate a new Client object
.PP
.Vb 12
\&    my $client = Mail::Milter::Authentication::Client\->new({
\&        \*(Aqmailer_name\*(Aq   => \*(Aqtest.mta.yoga.fastmail.com\*(Aq,
\&        \*(Aqconnect_ip\*(Aq    => \*(Aq66.111.4.148\*(Aq,
\&        \*(Aqconnect_name\*(Aq  => \*(Aqtest.fastmail.com\*(Aq,
\&        \*(Aqconnect_port\*(Aq  => \*(Aq54321\*(Aq,
\&        \*(Aqconnect_type\*(Aq  => \*(Aqtcp4\*(Aq,
\&        \*(Aqhelo_host\*(Aq     => \*(Aqtest.helo.fastmail.com\*(Aq,
\&        \*(Aqmail_from\*(Aq     => \*(Aqtest@marc.fastmail.com\*(Aq,
\&        \*(Aqrcpt_to\*(Aq       => \*(Aqmarc@yoga\*(Aq,
\&        \*(Aqmail_data\*(Aq     => $email_content,
\&        \*(Aqmail_file\*(Aq     => \*(Aq/path/to/email.txt\*(Aq,
\&    });
.Ve
.SH "METHODS"
.IX Header "METHODS"
.SS "\fIr()\fP"
.IX Subsection "r()"
Private method, do not call this directly
.SS "\fI\fP\f(BIinsert_header()\fP\fI\fP"
.IX Subsection "insert_header()"
Private method, do not call this directly
.SS "\fI\fP\f(BIreplace_header()\fP\fI\fP"
.IX Subsection "replace_header()"
Private method, do not call this directly
.SS "\fI\fP\f(BIadd_header()\fP\fI\fP"
.IX Subsection "add_header()"
Private method, do not call this directly
.SS "\fI\fP\f(BIload_mail()\fP\fI\fP"
.IX Subsection "load_mail()"
Private method, do not call this directly
.SS "\fI\fP\f(BIprocess()\fP\fI\fP"
.IX Subsection "process()"
Send the email to the milter and process the result.
.SS "\fI\fP\f(BIresult()\fP\fI\fP"
.IX Subsection "result()"
Return the result of the milter run
.SS "Arguments"
.IX Subsection "Arguments"
.IP "mailer_name" 4
.IX Item "mailer_name"
The name (fqdn) of the \s-1MTA\s0
.IP "connect_ip" 4
.IX Item "connect_ip"
The \s-1IP\s0 address of the host connecting to the mailer.
.IP "connect_name" 4
.IX Item "connect_name"
The name of the host connecting to the mailer.
.IP "connect_port" 4
.IX Item "connect_port"
The port of the connection to the mailer.
.IP "connect_type" 4
.IX Item "connect_type"
The type of connection to the mailer (eg tcp4).
.IP "helo_host" 4
.IX Item "helo_host"
The string passed in the \s-1HELO\s0 stage of the \s-1SMTP\s0 transaction.
.IP "mail_from" 4
.IX Item "mail_from"
The string passed in the \s-1MAIL FROM\s0 stage of the \s-1SMTP\s0 transaction.
.IP "rcpt_to" 4
.IX Item "rcpt_to"
The string passed in the \s-1RCPT TO\s0 stage of the \s-1SMTP\s0 transaction.
.IP "mail_data" 4
.IX Item "mail_data"
The EMail body as a string.
.IP "mail_file" 4
.IX Item "mail_file"
The EMail body can also be passed as a filename.
.SH "Net::Milter"
.IX Header "Net::Milter"
This project includes a modified copy of Net::Milter which is
imported into the Mail::Milter::Authentication::Net::Milter
namespace.
.PP
The included module has been modified to support all of the
features required by Authentication Milter.
.PP
If these required features are ever merged back into Net::Milter
then we may just use it instead, however at this point the
modified version does the job.
.SH "AUTHOR"
.IX Header "AUTHOR"
Marc Bradshaw <marc@marcbradshaw.net>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2020 by Marc Bradshaw.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

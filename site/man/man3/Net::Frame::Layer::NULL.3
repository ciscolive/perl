.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Net::Frame::Layer::NULL 3"
.TH Net::Frame::Layer::NULL 3 "2020-07-11" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Net::Frame::Layer::NULL \- BSD loopback layer object
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&   use Net::Frame::Layer::NULL qw(:consts);
\&
\&   # Build a layer
\&   my $layer = Net::Frame::Layer::NULL\->new(
\&      type => NF_NULL_TYPE_IPv4,
\&   );
\&   $layer\->pack;
\&
\&   print \*(AqRAW: \*(Aq.$layer\->dump."\en";
\&
\&   # Read a raw layer
\&   my $layer = Net::Frame::Layer::NULL\->new(raw => $raw);
\&
\&   print $layer\->print."\en";
\&   print \*(AqPAYLOAD: \*(Aq.unpack(\*(AqH*\*(Aq, $layer\->payload)."\en"
\&      if $layer\->payload;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This modules implements the encoding and decoding of the \s-1BSD\s0 loopback layer.
.PP
See also \fBNet::Frame::Layer\fR for other attributes and methods.
.SH "ATTRIBUTES"
.IX Header "ATTRIBUTES"
.IP "\fBtype\fR" 4
.IX Item "type"
Stores the type of encapsulated layer.
.PP
The following are inherited attributes. See \fBNet::Frame::Layer\fR for more information.
.IP "\fBraw\fR" 4
.IX Item "raw"
.PD 0
.IP "\fBpayload\fR" 4
.IX Item "payload"
.IP "\fBnextLayer\fR" 4
.IX Item "nextLayer"
.PD
.SH "METHODS"
.IX Header "METHODS"
.IP "\fBnew\fR" 4
.IX Item "new"
.PD 0
.IP "\fBnew\fR (hash)" 4
.IX Item "new (hash)"
.PD
Object constructor. You can pass attributes that will overwrite default ones. See \fB\s-1SYNOPSIS\s0\fR for default values.
.PP
The following are inherited methods. Some of them may be overridden in this layer, and some others may not be meaningful in this layer. See \fBNet::Frame::Layer\fR for more information.
.IP "\fBlayer\fR" 4
.IX Item "layer"
.PD 0
.IP "\fBcomputeLengths\fR" 4
.IX Item "computeLengths"
.IP "\fBcomputeChecksums\fR" 4
.IX Item "computeChecksums"
.IP "\fBpack\fR" 4
.IX Item "pack"
.IP "\fBunpack\fR" 4
.IX Item "unpack"
.IP "\fBencapsulate\fR" 4
.IX Item "encapsulate"
.IP "\fBgetLength\fR" 4
.IX Item "getLength"
.IP "\fBgetPayloadLength\fR" 4
.IX Item "getPayloadLength"
.IP "\fBprint\fR" 4
.IX Item "print"
.IP "\fBdump\fR" 4
.IX Item "dump"
.PD
.SH "CONSTANTS"
.IX Header "CONSTANTS"
Load them: use Net::Frame::Layer::NULL qw(:consts);
.IP "\fBNF_NULL_TYPE_IPv4\fR" 4
.IX Item "NF_NULL_TYPE_IPv4"
.PD 0
.IP "\fB\s-1NF_NULL_TYPE_ARP\s0\fR" 4
.IX Item "NF_NULL_TYPE_ARP"
.IP "\fB\s-1NF_NULL_TYPE_CGMP\s0\fR" 4
.IX Item "NF_NULL_TYPE_CGMP"
.IP "\fB\s-1NF_NULL_TYPE_80211\s0\fR" 4
.IX Item "NF_NULL_TYPE_80211"
.IP "\fB\s-1NF_NULL_TYPE_DDP\s0\fR" 4
.IX Item "NF_NULL_TYPE_DDP"
.IP "\fB\s-1NF_NULL_TYPE_AARP\s0\fR" 4
.IX Item "NF_NULL_TYPE_AARP"
.IP "\fB\s-1NF_NULL_TYPE_WCP\s0\fR" 4
.IX Item "NF_NULL_TYPE_WCP"
.IP "\fB\s-1NF_NULL_TYPE_8021Q\s0\fR" 4
.IX Item "NF_NULL_TYPE_8021Q"
.IP "\fB\s-1NF_NULL_TYPE_IPX\s0\fR" 4
.IX Item "NF_NULL_TYPE_IPX"
.IP "\fB\s-1NF_NULL_TYPE_STP\s0\fR" 4
.IX Item "NF_NULL_TYPE_STP"
.IP "\fBNF_NULL_TYPE_IPv6\fR" 4
.IX Item "NF_NULL_TYPE_IPv6"
.IP "\fB\s-1NF_NULL_TYPE_WLCCP\s0\fR" 4
.IX Item "NF_NULL_TYPE_WLCCP"
.IP "\fBNF_NULL_TYPE_PPPoED\fR" 4
.IX Item "NF_NULL_TYPE_PPPoED"
.IP "\fBNF_NULL_TYPE_PPPoES\fR" 4
.IX Item "NF_NULL_TYPE_PPPoES"
.IP "\fB\s-1NF_NULL_TYPE_8021X\s0\fR" 4
.IX Item "NF_NULL_TYPE_8021X"
.IP "\fBNF_NULL_TYPE_AoE\fR" 4
.IX Item "NF_NULL_TYPE_AoE"
.IP "\fB\s-1NF_NULL_TYPE_LLDP\s0\fR" 4
.IX Item "NF_NULL_TYPE_LLDP"
.IP "\fB\s-1NF_NULL_TYPE_LOOP\s0\fR" 4
.IX Item "NF_NULL_TYPE_LOOP"
.IP "\fB\s-1NF_NULL_TYPE_VLAN\s0\fR" 4
.IX Item "NF_NULL_TYPE_VLAN"
.IP "\fB\s-1NF_NULL_TYPE_ETH\s0\fR" 4
.IX Item "NF_NULL_TYPE_ETH"
.PD
Various supported encapsulated layer types.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Net::Frame::Layer
.SH "AUTHOR"
.IX Header "AUTHOR"
Patrice <GomoR> Auffret
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright (c) 2006\-2019, Patrice <GomoR> Auffret
.PP
You may distribute this module under the terms of the Artistic license.
See \s-1LICENSE\s0.Artistic file in the source distribution archive.

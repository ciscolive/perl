.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Mojolicious::Plugin::Notifications::Humane 3"
.TH Mojolicious::Plugin::Notifications::Humane 3 "2018-06-08" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mojolicious::Plugin::Notifications::Humane \- Event Notifications using Humane.js
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 6
\&  # Register the engine
\&  plugin Notifications => {
\&    Humane => {
\&      base_class => \*(Aqlibnotify\*(Aq
\&    }
\&  };
\&
\&  # In the template
\&  %= notifications \*(AqHumane\*(Aq
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This plugin is a notification engine using
Humane.js <http://wavded.github.io/humane-js/>.
.PP
If this does not suit your needs, you can easily
write your own engine.
.PP
If you want to use Humane.js without Mojolicious::Plugin::Notifications,
you should have a look at Mojolicious::Plugin::Humane,
which was the original inspiration for this plugin.
.SH "METHODS"
.IX Header "METHODS"
Mojolicious::Plugin::Notifications::Humane inherits all methods
from Mojolicious::Plugin::Notifications::Engine and implements or overrides
the following.
.SS "register"
.IX Subsection "register"
.Vb 5
\&  plugin Notifications => {
\&    Humane => {
\&       base_class => \*(Aqlibnotify\*(Aq
\&    }
\&  };
.Ve
.PP
Called when registering the main plugin.
All parameters under the key \f(CW\*(C`Humane\*(C'\fR are passed to the registration.
.PP
Accepts the following parameters:
.IP "\fBbase_class\fR" 4
.IX Item "base_class"
The base class for all humane notifications.
Defaults to \f(CW\*(C`libnotify\*(C'\fR. See the
Humane.js documentation <http://wavded.github.io/humane-js/>
for more information.
.IP "\fBbase_timeout\fR" 4
.IX Item "base_timeout"
The base timeout for all humane notifications. Defaults to \f(CW\*(C`3000 ms\*(C'\fR.
Set to \f(CW0\fR for no timeout.
.SH "HELPERS"
.IX Header "HELPERS"
.SS "notify"
.IX Subsection "notify"
.Vb 5
\&  # In controllers
\&  $c\->notify(warn => \*(AqSomething went wrong\*(Aq);
\&  $c\->notify(success => {
\&    clickToClose => Mojo::JSON\->true
\&  } => \*(AqEverything went fine\*(Aq);
.Ve
.PP
Notify the user on certain events.
.PP
See the documentation for your chosen class
at Humane.js <http://wavded.github.io/humane-js/> to see,
which notification types are presupported.
.PP
In addition to types and messages, further refinements can
be passed at the second position.
.PP
In case an \f(CW\*(C`ok\*(C'\fR parameter is passed, this will create a
notification that requires a click to be closed.
The \f(CW\*(C`ok\*(C'\fR \s-1URL\s0 will receive a \s-1POST\s0 request on closing.
The \s-1POST\s0 will have a csrf_token
parameter to validate.
.PP
\&\fBConfirmation is \s-1EXPERIMENTAL\s0!\fR
.SS "notifications"
.IX Subsection "notifications"
.Vb 5
\&  # In tempates
\&  %= notifications \*(Aqhumane\*(Aq;
\&  %= notifications \*(Aqhumane\*(Aq => [qw/warn success/];
\&  %= notifications \*(Aqhumane\*(Aq => [qw/warn success/], \-no_css;
\&  %= notifications \*(Aqhumane\*(Aq => [qw/warn success/], \*(Aqjackedup\*(Aq, \-no_css;
.Ve
.PP
Include humane notifications in your template.
.PP
You can add notification types in a list reference to ensure, they are
established (even if they were not called by \*(L"notify\*(R"), in case you
want them to be used in conjunction with JavaScript in your application.
.PP
If you want to use a class different to the defined base class, you can
pass this as a string attribute.
.PP
If you don't want to include the javascript and css assets for Humane.js,
append \f(CW\*(C`\-no_include\*(C'\fR. If you just don't want to render the
stylesheet tag for the inclusion of the \s-1CSS,\s0 append \f(CW\*(C`\-no_css\*(C'\fR.
.PP
All notifications are also rendered in a \f(CW\*(C`<noscript />\*(C'\fR tag,
following the notation described in the
\&\s-1HTML\s0 engine.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Humane.js <http://wavded.github.io/humane-js/>,
Mojolicious::Plugin::Humane.
.SH "AVAILABILITY"
.IX Header "AVAILABILITY"
.Vb 1
\&  https://github.com/Akron/Mojolicious\-Plugin\-Notifications
.Ve
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
.SS "Mojolicious::Plugin::Notifications::Humane"
.IX Subsection "Mojolicious::Plugin::Notifications::Humane"
Copyright (C) 2014\-2018, Nils Diewald <http://nils-diewald.de/>.
.PP
This program is free software, you can redistribute it
and/or modify it under the terms of the Artistic License version 2.0.
.SS "Humane.js (bundled)"
.IX Subsection "Humane.js (bundled)"
Copyright (c) 2011, Marc Harter
.PP
See <https://github.com/wavded/humane\-js> for further information.
.PP
Licensed under the terms of the
\&\s-1MIT\s0 License <http://opensource.org/licenses/MIT>.

.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Cisco::UCS::Blade::PowerBudget 3"
.TH Cisco::UCS::Blade::PowerBudget 3 "2016-05-25" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Cisco::UCS::Blade::PowerBudget \- Class for operations with a Cisco UCS blade 
power budgets.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 3
\&        # Print all blades in all chassis along with the chassis current 
\&        # output power and each blades current input power both in watts and 
\&        # as a percentage of the chassis input power level.
\&
\&        map { 
\&                my $c_power = $_\->stats\->output_power;
\&
\&                printf( "Chassis: %d \- Output power: %.3f\en", $_\->id, $c_power );
\&
\&                map {
\&                        printf( "\etBlade: %d \- Input power: %.3f (%.2f%%)\en",
\&                                $_\->id, $_\->power_budget\->current_power, 
\&                                ( $c_power == 0 
\&                                        ? \*(Aq\-\*(Aq 
\&                                        : ( $_\->power_budget\->current_power 
\&                                                / $c_power * 100 ) 
\&                                ) 
\&                        ) 
\&                }   
\&                sort { $a\->id <=> $b\->id } $_\->get_blades 
\&        } 
\&        sort { 
\&                $a\->id <=> $b\->id 
\&        } $ucs\->get_chassiss;
\&
\&        # E.g.
\&        #
\&        # Chassis: 1 \- Output power: 704.000
\&        #       Blade: 1 \- Input power: 119.000 (16.90%)
\&        #       Blade: 2 \- Input power: 134.000 (19.03%)
\&        #       Blade: 3 \- Input power: 135.000 (19.18%)
\&        #       Blade: 4 \- Input power: 0.000 (0.00%)
\&        #       Blade: 5 \- Input power: 0.000 (0.00%)
\&        #       Blade: 6 \- Input power: 0.000 (0.00%)
\&        #       Blade: 7 \- Input power: 0.000 (0.00%)
\&        #       Blade: 8 \- Input power: 136.000 (19.32%)
\&        # Chassis: 2 \- Output power: 1188.000
\&        #       Blade: 1 \- Input power: 127.000 (10.69%)
\&        #       Blade: 2 \- Input power: 0.000 (0.00%)
\&        #       Blade: 3 \- Input power: 120.000 (10.10%)
\&        #       Blade: 4 \- Input power: 0.000 (0.00%)
\&        #       Blade: 5 \- Input power: 127.000 (10.69%)
\&        #       Blade: 6 \- Input power: 121.000 (10.19%)
\&        #       Blade: 7 \- Input power: 172.000 (14.48%)
\&        #       Blade: 8 \- Input power: 136.000 (11.45%)
\&        # etc.
.Ve
.SH "DECRIPTION"
.IX Header "DECRIPTION"
Cisco::UCS::Blade::PowerBudget is a class providing operations with a Cisco 
\&\s-1UCS\s0 blade power budget.
.PP
Note that you are not supposed to call the constructor yourself, rather a 
Cisco::UCS::Blade::PowerBudget object is created automatically by method calls 
on a Cisco::UCS::Blade object.
.SH "METHODS"
.IX Header "METHODS"
\fIadmin_commited\fR
.IX Subsection "admin_commited"
.PP
Returns the administrative commited power level of the blade.
.PP
\fIadmin_peak\fR
.IX Subsection "admin_peak"
.PP
Returns the administrative peak power level of the blade.
.PP
\fIcap_action\fR
.IX Subsection "cap_action"
.PP
Returns the power cap action of the blade.
.PP
\fIcatalog_power\fR
.IX Subsection "catalog_power"
.PP
Returns the catalog power level of the blade.
.PP
\fIcurrent_power\fR
.IX Subsection "current_power"
.PP
Returns the current power level of the blade.
.PP
\fIdyn_reallocation\fR
.IX Subsection "dyn_reallocation"
.PP
Returns the power dynamic reallocation policy of the blade.
.PP
\fIgroup_name\fR
.IX Subsection "group_name"
.PP
Returns the power group name of the blade.
.PP
\fIidle_power\fR
.IX Subsection "idle_power"
.PP
Returns the idle power level of the blade.
.PP
\fImax_power\fR
.IX Subsection "max_power"
.PP
Returns the maximum power level of the blade.
.PP
\fImin_power\fR
.IX Subsection "min_power"
.PP
Returns the minimum power level of the blade.
.PP
\fIoper_commited\fR
.IX Subsection "oper_commited"
.PP
Returns the operator committed power level of the blade.
.PP
\fIoper_min\fR
.IX Subsection "oper_min"
.PP
Returns the operator committed minimum power level of the blade.
.PP
\fIoper_peak\fR
.IX Subsection "oper_peak"
.PP
Returns the operator committed peak power level of the blade.
.PP
\fIoper_state\fR
.IX Subsection "oper_state"
.PP
Returns the operational power state of the blade.
.PP
\fIpriority\fR
.IX Subsection "priority"
.PP
Returns the administrative power priority of the blade.
.PP
\fIpsu_capacity\fR
.IX Subsection "psu_capacity"
.PP
Returns the \s-1PSU\s0 capacity.
.PP
\fIpsu_state\fR
.IX Subsection "psu_state"
.PP
Returns the \s-1PSU\s0 state.
.PP
\fIscaled_wt\fR
.IX Subsection "scaled_wt"
.PP
Returns the scaled weighted threshold of the blade power budget.
.PP
\fIstyle\fR
.IX Subsection "style"
.PP
Returns the power budget management style of the blade.
.PP
\fIupdate_time\fR
.IX Subsection "update_time"
.PP
Returns a timestamp at which time the last time power budget statistics 
and information were last updated.
.PP
\fIweight\fR
.IX Subsection "weight"
.PP
Returns the power budget weight for the blade.
.SH "AUTHOR"
.IX Header "AUTHOR"
Luke Poskitt, \f(CW\*(C`<ltp at cpan.org>\*(C'\fR
.SH "BUGS"
.IX Header "BUGS"
Please report any bugs or feature requests to 
\&\f(CW\*(C`bug\-cisco\-ucs\-blade\-powerbudget at rt.cpan.org\*(C'\fR, or through the web interface
at <http://rt.cpan.org/NoAuth/ReportBug.html?Queue=Cisco\-UCS\-Blade\-PowerBudget>.
I will be notified, and then you'll automatically be notified of progress on 
your bug as I make changes.
.SH "SUPPORT"
.IX Header "SUPPORT"
You can find documentation for this module with the perldoc command.
.PP
.Vb 1
\&    perldoc Cisco::UCS::Blade::PowerBudget
.Ve
.PP
You can also look for information at:
.IP "\(bu" 4
\&\s-1RT: CPAN\s0's request tracker
.Sp
<http://rt.cpan.org/NoAuth/Bugs.html?Dist=Cisco\-UCS\-Blade\-PowerBudget>
.IP "\(bu" 4
AnnoCPAN: Annotated \s-1CPAN\s0 documentation
.Sp
<http://annocpan.org/dist/Cisco\-UCS\-Blade\-PowerBudget>
.IP "\(bu" 4
\&\s-1CPAN\s0 Ratings
.Sp
<http://cpanratings.perl.org/d/Cisco\-UCS\-Blade\-PowerBudget>
.IP "\(bu" 4
Search \s-1CPAN\s0
.Sp
<http://search.cpan.org/dist/Cisco\-UCS\-Blade\-PowerBudget/>
.SH "ACKNOWLEDGEMENTS"
.IX Header "ACKNOWLEDGEMENTS"
.SH "LICENSE AND COPYRIGHT"
.IX Header "LICENSE AND COPYRIGHT"
Copyright 2013 Luke Poskitt.
.PP
This program is free software; you can redistribute it and/or modify it
under the terms of either: the \s-1GNU\s0 General Public License as published
by the Free Software Foundation; or the Artistic License.
.PP
See http://dev.perl.org/licenses/ for more information.

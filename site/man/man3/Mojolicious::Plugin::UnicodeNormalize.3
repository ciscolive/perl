.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Mojolicious::Plugin::UnicodeNormalize 3"
.TH Mojolicious::Plugin::UnicodeNormalize 3 "2017-07-26" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mojolicious::Plugin::UnicodeNormalize \- normalize incoming Unicode parameters
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 4
\&    # Mojolicious
\&    sub startup {
\&        my $self = shift;
\&        $self\->plugin( \*(AqUnicodeNormalize\*(Aq );
\&
\&        ...
\&    }
\&
\&    # Mojolicious::Lite
\&    plugin \*(AqUnicodeNormalize\*(Aq;
\&
\&    ...
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Mojolicious::Plugin::UnicodeNormalize allows you to normalize all incoming
Unicode parameters to a single normalization form. (For more information on why
Unicode normalization is important, see Tom Christiansen's Unicode cookbook,
especially
<http://www.perl.com/pub/2012/05/perlunicookbook\-unicode\-normalization.html>.)
.PP
This plugin sets up a normalization hook to run before Mojolicious dispatch. It
will normalize all non-reference parameters. By default, this uses Unicode
Normalization Form C, which is almost always what you want. You may specify
another form when you register the plugin:
.PP
.Vb 4
\&    # Mojolicious
\&    sub startup {
\&        my $self = shift;
\&        $self\->plugin( \*(AqUnicodeNormalize\*(Aq, { form => \*(AqNFD\*(Aq } );
\&
\&        ...
\&    }
.Ve
.PP
Any normalization form supported by Unicode::Normalize is valid; currently
this list is:
.IP "\(bu" 4
\&\s-1NFC\s0 (the default)
.IP "\(bu" 4
\&\s-1NFD\s0
.IP "\(bu" 4
\&\s-1NFKC\s0
.IP "\(bu" 4
\&\s-1NFKD\s0
.PP
Unless you know why you might use an alternate form, use the default of \s-1NFC.\s0
.SH "AUTHOR"
.IX Header "AUTHOR"
chromatic <chromatic@cpan.org>.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Mojolicious, Unicode::Normalize
.SH "LICENSE"
.IX Header "LICENSE"
This library is free software; you can redistribute it and/or modify it under
the terms of the Artistic License, version 2 (the same terms as Perl 5.26
itself).

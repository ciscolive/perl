.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "convert_modules 3"
.TH convert_modules 3 "2018-06-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
.Vb 3
\& convert_modules.pl \- A script for converting Infoblox Perl modules for DNSone 3.x 
\&                      prior to 3.2r5 into a new format to support dynamic 
\&                      module\-loading capabilities
\&
\& This utility script converts an Infoblox Perl module set for DNSone 3.x 
\& prior to 3.2r5 into a new format that provides dynamic module\-loading support 
\& for backwards compatability.
\&
\& Infoblox Perl modules for DNSone 3.x prior to 3.2r5 supported only one version of 
\& modules in a Perl library directory. Now, DNSone 3.2r5 supports a runtime\-based reloading 
\& of Perl modules based on the version of code running on the contacted Infoblox appliance.
.Ve
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& convert_modules.pl \-\-src <src_dir> \-\-dest <dest_dir>
\&
\& OPTIONS
\&
\&   \-\-src <dir>   
\&           The location of a set of installed Perl modules.  This is where 
\&           you unpacked the Infoblox.tar file containing Infoblox Perl modules 
\&           downloaded from an Infoblox appliance. 
\&           The contents of this directory are as follows:
\&
\&                MANIFEST
\&                Makefile.PL
\&                README
\&                lib/
\&                t/
\&
\&   \-\-dest <dir>   
\&            The location of the converted set of Perl modules. All file names and 
\&            directories from the source directory remain the same. 
\&            Only the content of the files gets changed.
.Ve

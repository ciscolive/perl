.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.41)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Sys::Filesystem::Linux 3"
.TH Sys::Filesystem::Linux 3 "2020-10-21" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Sys::Filesystem::Linux \- Return Linux filesystem information to Sys::Filesystem
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
See Sys::Filesystem.
.SH "INHERITANCE"
.IX Header "INHERITANCE"
.Vb 3
\&  Sys::Filesystem::Linux
\&  ISA Sys::Filesystem::Unix
\&    ISA UNIVERSAL
.Ve
.SH "METHODS"
.IX Header "METHODS"
.IP "version ()" 4
.IX Item "version ()"
Return the version of the (sub)module.
.SH "ATTRIBUTES"
.IX Header "ATTRIBUTES"
The following is a list of filesystem properties which may
be queried as methods through the parent Sys::Filesystem object.
.IP "fs_spec" 4
.IX Item "fs_spec"
Describes the block special device or remote filesystem to be mounted.
.Sp
For  ordinary  mounts  it  will hold (a link to) a block special device
node (as created by \fBmknod\fR\|(8)) for  the  device  to  be  mounted, like
\&'/dev/cdrom' or '/dev/sdb7'.  For \s-1NFS\s0 mounts one will  have <host>:<dir>,
e.g., 'knuth.aeb.nl:/'.  For procfs, use 'proc'.
.Sp
Instead of giving the device explicitly, one may indicate the (ext2  or
xfs)  filesystem that is to be mounted by its \s-1UUID\s0 or volume label (cf.
\&\fBe2label\fR\|(8) or  \fBxfs_admin\fR\|(8)),  writing  LABEL=<label>  or  UUID=<uuid>,
e.g., 'LABEL=Boot' or 'UUID=3e6be9de\-8139\-11d1\-9106\-a43f08d823a6'.
This will make the system more robust: adding or removing a  \s-1SCSI\s0  disk
changes the disk device name but not the filesystem volume label.
.IP "fs_file" 4
.IX Item "fs_file"
Describes the mount point for the filesystem. For swap partitions,
this field should be specified as 'none'. If the name of the mount
point contains spaces these can be escaped as '\e040'.
.IP "fs_vfstype" 4
.IX Item "fs_vfstype"
Dscribes the type  of  the  filesystem.
Linux  supports  lots  of filesystem types, such as adfs, affs, autofs,
coda, coherent, cramfs, devpts, efs, ext2, ext3,  hfs,  hpfs,  iso9660,
jfs,  minix,  msdos,  ncpfs,  nfs,  ntfs,  proc, qnx4, reiserfs, romfs,
smbfs, sysv, tmpfs, udf, ufs, umsdos, vfat, xenix,  xfs,  and  possibly
others.  For more details, see \fBmount\fR\|(8).  For the filesystems currently
supported by the running kernel, see /proc/filesystems.  An entry  swap
denotes a file or partition to be used for swapping, cf. \fBswapon\fR\|(8).  An
entry ignore causes the line to be ignored.  This  is  useful  to  show
disk partitions which are currently unused.
.IP "fs_mntops" 4
.IX Item "fs_mntops"
Describes the mount options associated with the filesystem.
.Sp
It is formatted as a comma separated list of options.  It  contains  at
least  the type of mount plus any additional options appropriate to the
filesystem type.  For documentation on the available options  for  non\-
nfs  file systems, see \fBmount\fR\|(8).  For documentation on all nfs-specific
options have a look at \fBnfs\fR\|(5).  Common for all types of file system are
the options 'noauto' (do not mount when 'mount \-a' is given, e.g., at
boot time), 'user' (allow a user  to  mount),  and  'owner'  (allow
device  owner to mount), and '_netdev' (device requires network to be
available).  The 'owner' and '_netdev' options are  Linux-specific.
For more details, see \fBmount\fR\|(8).
.IP "fs_freq" 4
.IX Item "fs_freq"
Used  for  these filesystems by the
\&\fBdump\fR\|(8) command to determine which filesystems need to be  dumped.   If
the  fifth  field  is not present, a value of zero is returned and dump
will assume that the filesystem does not need to be dumped.
.IP "fs_passno" 4
.IX Item "fs_passno"
Used by the \fBfsck\fR\|(8) program to  determine the order in which filesystem
checks are done at reboot time.  The
root filesystem should be specified with a fs_passno of  1,  and  other
filesystems  should  have a fs_passno of 2.  Filesystems within a drive
will be checked sequentially, but filesystems on different drives  will
be  checked  at  the  same time to utilize parallelism available in the
hardware.  If the sixth field is not present or zero, a value  of  zero
is  returned  and fsck will assume that the filesystem does not need to
be checked.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Sys::Filesystem, Sys::Filesystem::Unix, \fBfstab\fR\|(5)
.SH "AUTHOR"
.IX Header "AUTHOR"
Nicola Worthington <nicolaw@cpan.org> \- <http://perlgirl.org.uk>
.PP
Jens Rehsack <rehsack@cpan.org> \- <http://www.rehsack.de/>
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright 2004,2005,2006 Nicola Worthington.
.PP
Copyright 2009\-2020 Jens Rehsack.
.PP
This software is licensed under The Apache Software License, Version 2.0.
.PP
<http://www.apache.org/licenses/LICENSE\-2.0>

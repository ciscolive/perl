.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Infoblox::Notification::REST::Endpoint 3"
.TH Infoblox::Notification::REST::Endpoint 3 "2018-06-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Infoblox::Notification::REST::Endpoint \- A REST API endpoint object.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The \s-1REST API\s0 endpoint object provides configuration for third party \s-1REST API\s0 servers integration.
.SH "CONSTRUCTOR"
.IX Header "CONSTRUCTOR"
.Vb 10
\& my $endpoint = Infoblox::Notification::REST::Endpoint\->new(
\&     name                   => $string,                                                              # Required
\&     uri                    => $string,                                                              # Required
\&     outbound_member_type   => \*(AqGM\*(Aq | \*(AqMEMBER\*(Aq,                                                      # Required
\&     client_certificate     => $path,                                                                # Optional / Default is undefined
\&     comment                => $string,                                                              # Optional / Default is undefined
\&     disable                => \*(Aqtrue\*(Aq | \*(Aqfalse\*(Aq,                                                     # Optional / Default is \*(Aqtrue\*(Aq
\&     extattrs               => { $string => $extattr, ... },                                         # Optional / Default is undefined
\&     extensible_attributes  => {$string => $string | $num, $string => [ $string | $num, ... ], ... } # Optional / Default is undefined
\&     log_level              => \*(AqWARNING\*(Aq | \*(AqDEBUG\*(Aq | \*(AqINFO\*(Aq | \*(AqERROR\*(Aq,                               # Optional / Default is \*(AqWARNING\*(Aq
\&     outbound_members       => [$string, $string, ...],                                              # Optional / Default is empty list
\&     password               => $string,                                                              # Optional / Default is undefined
\&     template_instance      => $template_instance                                                    # Optional / Default is undefined
\&     timeout                => $uint,                                                                # Optional / Default is 0
\&     username               => $string,                                                              # Optional / Default is undefined
\&     vendor_identifier      => $string,                                                              # Optional / Default is undefined
\&     server_cert_validation => \*(AqCA_CERT\*(Aq | \*(AqCA_CERT_NO_HOSTNAME\*(Aq | \*(AqNO_VALIDATION\*(Aq,                  # Optional / Default is \*(AqCA_CERT\*(Aq
\&     wapi_user_name         => $string,                                                              # Optional / Default is undefined
\&     wapi_user_password     => $string,                                                              # Optional / Default is undefined
\&
\& );
.Ve
.PP
You cannot set both extattrs and extensible_attributes attributes at the same time.
.SH "SESSION METHODS"
.IX Header "SESSION METHODS"
This section describes all the methods in an Infoblox::Session module that you can apply to a \s-1REST API\s0 endpoint object.
.SS "Infoblox::Session\->add( )"
.IX Subsection "Infoblox::Session->add( )"
.RS 4
Use this method to add the object to the Infoblox appliance.
See Infoblox::Session\->\fBadd()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 6
\& #Construct an object
\& my $object = Infoblox::Notification::REST::Endpoint\->new(
\&     uri                  => \*(Aqhttp://10.0.0.1/office\*(Aq,
\&     name                 => \*(Aqrestapi_endpoint\*(Aq,
\&     outbound_member_type => \*(AqGM\*(Aq,
\& );
\&
\& #Submit for addition
\& my $response = $session\->add($object);
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->get( )"
.IX Subsection "Infoblox::Session->get( )"
.RS 4
Use this method to retrieve all the matching objects from the Infoblox appliance.
See Infoblox::Session\->\fBget()\fR for parameters and return values.
.IP "\fBKey References\fR" 4
.IX Item "Key References"
.Vb 1
\& Apply the following attributes to get a specific REST API endpoint object:
\&
\&  comment                    \- Optional. The REST API endpoint comment in string format.
\&  name                       \- Optional. The REST API endpoint name in string format.
\&  uri                        \- Optional. The REST API endpoint URI in string format.
\&  vendor_identifier          \- Optional. The REST API endpoint vendor identifier in string format.
\&  extattrs                   \- Optional. A hash reference containing Infoblox::Grid::Extattr object.
\&  extensible_attributes      \- Optional. A hash reference containing extensible attributes.
.Ve
.IP "\fBExamples\fR" 4
.IX Item "Examples"
.Vb 4
\& my @retrieved_objs = $session\->get(
\&     object => \*(AqInfoblox::Notification::REST::Endpoint\*(Aq,
\&     uri    => \*(Aqhttp://10.0.0.1/office\*(Aq,
\& );
\&
\& my @retrieved_objs = $session\->get(
\&     object                => \*(AqInfoblox::Notification::REST::Endpoint\*(Aq,
\&     extensible_attributes => {\*(AqSite\*(Aq => \*(AqSanta Clara\*(Aq},
\& );
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->modify( )"
.IX Subsection "Infoblox::Session->modify( )"
.RS 4
Use this method to modify the object in the Infoblox appliance.
See Infoblox::Session\->\fBmodify()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Modify comment value
\& $object\->comment(\*(Aqthis is a modified comment\*(Aq);
\&
\& #Submit modification
\& my $response = $session\->modify($object);
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->remove( )"
.IX Subsection "Infoblox::Session->remove( )"
.RS 4
Use this method to remove the object from the Infoblox appliance. See Infoblox::Session\->\fBremove()\fR for parameters and return values.
.Sp
To remove a specific object, first use \fBget()\fR or \fBsearch()\fR to retrieve the specific \s-1REST API\s0 endpoint object, and then submit this object for removal.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 5
\& #Get the objects
\& my @retrieved_objs = $session\->get(
\&     object       => \*(AqInfoblox::Notification::REST::Endpoint\*(Aq,
\&     uri          => \*(Aqhttp://10.0.0.1/office\*(Aq,
\& );
\&
\& #Find the desired object from the retrieved list
\& my $desired_object = $retrieved_objs[0];
\&
\& #Submit for removal
\& my $response = $session\->remove($desired_object);
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->search( )"
.IX Subsection "Infoblox::Session->search( )"
.RS 4
Use this method to search for objects in the Infoblox appliance. See Infoblox::Session\->\fBsearch()\fR for parameters and return values.
.IP "\fBKey References\fR" 4
.IX Item "Key References"
.Vb 1
\& Apply the following attributes to search for the REST API endpoint object:
\&
\&  comment                    \- Optional. The REST API endpoint comment in string format (regexp).
\&  name                       \- Optional. The REST API endpoint name in string format (regexp).
\&  uri                        \- Optional. The REST API endpoint URI in string format (regexp).
\&  vendor_identifier          \- Optional. The REST API endpoint vendor identifier in string format (regexp).
\&  extattrs                   \- Optional. A hash reference containing Infoblox::Grid::Extattr object.
\&  extensible_attributes      \- Optional. A hash reference containing extensible attributes.
.Ve
.Sp
For more information about searching extensible attributes, 
see Infoblox::Grid::ExtensibleAttributeDef/Searching Extensible Attributes.
.IP "\fBExamples\fR" 4
.IX Item "Examples"
.Vb 6
\& # search for objects
\& my @retrieved_objs = $session\->search(
\&     object            => \*(AqInfoblox::Notification::REST::Endpoint\*(Aq,
\&     uri               => \*(Aqhttp.*\*(Aq,
\&     vendor_identifier => \*(AqCarbon\*(Aq,
\&);
\&
\& # search for objects defining \*(AqSanta Clara\*(Aq for \*(AqSite\*(Aq extensible attribute
\& my @retrieved_objs = $session\->search(
\&     object                => \*(AqInfoblox::DHCP::Range\*(Aq,
\&     extensible_attributes => {\*(AqSite\*(Aq => \*(AqSanta Clara\*(Aq},
\& );
.Ve
.RE
.RS 4
.RE
.SH "METHODS"
.IX Header "METHODS"
This section describes all the methods that you can use to configure and retrieve the attribute values of a \s-1REST API\s0 endpoint.
.SS "client_certificate( )"
.IX Subsection "client_certificate( )"
.RS 4
Use this method to set the path to a client certificate file. This is a write-only attribute.
.Sp
Include the specified parameter to set the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is a path to a certificate in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you have specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Modify client_certificate value
\& $object\->client_certificate(\*(Aq/path/to/cert.pem\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "client_certificate_subject( )"
.IX Subsection "client_certificate_subject( )"
.RS 4
Use this method to retrieve the client certificate subject. This is a read-only attrbiute.
.Sp
Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get client_certificate_subject value
\& my $client_certificate_subject = $object\->client_certificate_subject();
.Ve
.RE
.RS 4
.RE
.SS "client_certificate_valid_from( )"
.IX Subsection "client_certificate_valid_from( )"
.RS 4
Use this method to retrieve the time from which the client certificate is valid. This is a read-only attrbiute.
.Sp
Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value. The number of seconds that have elapsed since January 1st, 1970 \s-1UTC.\s0
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get client_certificate_valid_from value
\& my $client_certificate_valid_from = $object\->client_certificate_valid_from();
.Ve
.RE
.RS 4
.RE
.SS "client_certificate_valid_to( )"
.IX Subsection "client_certificate_valid_to( )"
.RS 4
Use this method to retrieve the bulk client certificate expiration time. This is a read-only attrbiute.
.Sp
Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value. The number of seconds that have elapsed since January 1st, 1970 \s-1UTC.\s0
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get client_certificate_valid_to value
\& my $client_certificate_valid_to = $object\->client_certificate_valid_to();
.Ve
.RE
.RS 4
.RE
.SS "comment( )"
.IX Subsection "comment( )"
.RS 4
Use this method to set or retrieve the \s-1REST API\s0 endpoint comment.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is a desired comment in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you have specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get comment value
\& my $comment = $object\->comment();
\&
\& #Modify comment value
\& $object\->comment(\*(Aqmodified comment\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "disable( )"
.IX Subsection "disable( )"
.RS 4
Use this method to set or retrieve the flag that indicates whether the \s-1REST API\s0 endpoint is enabled or disabled.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify 'true' to disable the \s-1REST API\s0 endpoint or 'false' to enable it. The default value is 'true'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you have specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get disable value
\& my $disable = $object\->disable();
\&
\& #Modify disable value
\& $object\->disable(\*(Aqfalse\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "extattrs( )"
.IX Subsection "extattrs( )"
.RS 4
Use this method to set or retrieve the extensible attributes associated with a \s-1REST API\s0 endpoint object.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is a hash reference that contains the names of extensible attributes and their associated values (Infoblox::Grid::Extattr objects).
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you have specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get extattrs value
\& my $extattrs = $object\->extattrs();
\&
\& #Modify extattrs value
\& $object\->extattrs({\*(AqSite\*(Aq => $extattr1, \*(AqAdministrator\*(Aq => $extattr2});
.Ve
.RE
.RS 4
.RE
.SS "extensible_attributes( )"
.IX Subsection "extensible_attributes( )"
.RS 4
Use this method to set or retrieve the extensible attributes associated with a \s-1REST API\s0 endpoint object.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
For valid values for extensible attributes, see Infoblox::Grid::ExtensibleAttributeDef/Extensible Attribute Values.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you have specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get extensible attributes value
\& my $extensible_attributes = $object\->extensible_attributes();
\& #Modify extensible attributes
\& $object\->extensible_attributes({\*(AqSite\*(Aq => \*(AqSanta Clara\*(Aq, \*(AqAdministrator\*(Aq => [\*(AqPeter\*(Aq, \*(AqTom\*(Aq]});
.Ve
.RE
.RS 4
.RE
.SS "name( )"
.IX Subsection "name( )"
.RS 4
Use this method to set or retrieve the \s-1REST API\s0 endpoint name.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is a desired name in string format.
.Sp
Note that this field will default to \s-1URI\s0 value if no value is specified.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you have specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get name value
\& my $name = $object\->name();
\&
\& #Modify name value
\& $object\->name(\*(Aqmodified_name\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "outbound_members( )"
.IX Subsection "outbound_members( )"
.RS 4
Use this method to set or retrieve the list of \s-1REST API\s0 endpoint members which are responsible for event generation.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an array that contains Grid member names in a string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you have specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get outbound_members value
\& my $outbound_members = $object\->outbound_members();
\&
\& #Modify outbound_members value
\& $object\->outbound_members([\*(Aqmember1\*(Aq, \*(Aqmember2\*(Aq]);
.Ve
.RE
.RS 4
.RE
.SS "outbound_member_type( )"
.IX Subsection "outbound_member_type( )"
.RS 4
Use this method to set or retrieve the \s-1REST API\s0 endpoint member which is responsible for event generation.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid values are '\s-1GM\s0' and '\s-1MEMBER\s0'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you have specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get outbound_member_type value
\& my $outbound_member_type = $object\->outbound_member_type();
\&
\& #Modify outbound_member_type value
\& $object\->outbound_member_type(\*(AqMEMBER\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "log_level( )"
.IX Subsection "log_level( )"
.RS 4
Use this method to set or retrieve the \s-1REST API\s0 endpoint logging level.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid values are '\s-1DEBUG\s0', '\s-1ERROR\s0', '\s-1INFO\s0', and '\s-1WARNING\s0'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you have specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get log_level value
\& my $value = $object\->log_level();
\&
\& #Modify log_level value
\& $object\->log_level(\*(AqINFO\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "password( )"
.IX Subsection "password( )"
.RS 4
Use this method to set or retrieve the \s-1REST API\s0 endpoint auth password. This is a write-only attribute.
.Sp
Include the specified parameter to set the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is a desired password in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns true when the modification succeeds, and returns false when the operation fails.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Modify password value
\& $object\->password(\*(Aqusr1\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "server_cert_validation( )"
.IX Subsection "server_cert_validation( )"
.RS 4
Use this method to set or retrieve the server certificate validation type.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid values are '\s-1CA_CERT\s0', '\s-1CA_CERT_NO_HOSTNAME\s0' and '\s-1NO_VALIDATION\s0'. The default value is '\s-1CA_CERT\s0'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get server_cert_validation value
\& my $value = $object\->server_cert_validation();
\&
\& #Modify server_cert_validation value
\& $object\->server_cert_validation(\*(AqNO_VALIDATION\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "template_instance( )"
.IX Subsection "template_instance( )"
.RS 4
Use this method to set or retrieve the \s-1REST API\s0 endpoint \s-1REST API\s0 template instance.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.Sp
Note that 'parameters' value of a template instance object cannot be changed for \s-1REST API\s0 endpoint.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an Infoblox::Notification::REST::TemplateInstance object.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you have specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get template_instance value
\& my $value = $object\->template_instance();
\&
\& #Modify template_instance value
\& $object\->template_instance($instance);
.Ve
.RE
.RS 4
.RE
.SS "timeout( )"
.IX Subsection "timeout( )"
.RS 4
Use this method to set or retrieve the \s-1REST API\s0 endpoint management session timeout.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an unsigned integer that represents the number of seconds for the management session timeout.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you have specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get timeout value
\& my $value = $object\->timeout();
\&
\& #Modify timeout value
\& $object\->timeout(100);
.Ve
.RE
.RS 4
.RE
.SS "uri( )"
.IX Subsection "uri( )"
.RS 4
Use this method to set or retrieve the \s-1REST API\s0 endpoint \s-1URI.\s0
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is a desired \s-1URI\s0 in string format which should be valid \s-1URL.\s0
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you have specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get uri value
\& my $uri = $object\->uri();
\&
\& #Modify uri value
\& $object\->uri(\*(Aqhttp://10.0.0.1/new_uri\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "username( )"
.IX Subsection "username( )"
.RS 4
Use this method to set or retrieve the \s-1REST API\s0 endpoint auth username.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is a desired username in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you have specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get username value
\& my $username = $object\->username();
\&
\& #Modify username value
\& $object\->username(\*(Aqusr1\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "vendor_identifier( )"
.IX Subsection "vendor_identifier( )"
.RS 4
Use this method to set or retrieve the \s-1REST API\s0 endpoint vendor identifier.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is a desired vendor identifier in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you have specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get vendor_identifier value
\& my $vendor_identifier = $object\->vendor_identifier();
\&
\& #Modify vendor_identifier value
\& $object\->vendor_identifier(\*(AqCarbonBlack\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "wapi_user_name( )"
.IX Subsection "wapi_user_name( )"
.RS 4
Use this method to set or retrieve the user name for \s-1WAPI\s0 integration.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is a desired user name in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get wapi_user_name value
\& my $value = $object\->wapi_user_name();
\&
\& #Modify wapi_user_name value
\& $object\->wapi_user_name(\*(Aqadmin\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "wapi_user_password( )"
.IX Subsection "wapi_user_password( )"
.RS 4
Use this method to set the user password for \s-1WAPI\s0 integration. This is a write-only attribute.
.Sp
Include the specified parameter to set the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is a desired user password in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns true when the modification succeeds, and returns false when the operation fails.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Modify wapi_user_password value
\& $object\->wapi_user_password(\*(Aqinfoblox\*(Aq);
.Ve
.RE
.RS 4
.RE
.SH "AUTHOR"
.IX Header "AUTHOR"
Infoblox Inc. <http://www.infoblox.com/>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Infoblox::Session,
Infoblox::Session\->\fBadd()\fR,
Infoblox::Session\->\fBget()\fR,
Infoblox::Session\->\fBmodify()\fR,
Infoblox::Session\->\fBremove()\fR,
Infoblox::Session\->\fBsearch()\fR,
Infoblox::Grid::Extattr,
Infoblox::Grid::ExtensibleAttributeDef/Searching Extensible Attributes,
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2017 Infoblox Inc.
.SH "POD ERRORS"
.IX Header "POD ERRORS"
Hey! \fBThe above document had some coding errors, which are explained below:\fR
.IP "Around line 169:" 4
.IX Item "Around line 169:"
alternative text 'Infoblox::Grid::ExtensibleAttributeDef/Searching Extensible Attributes' contains non-escaped | or /
.IP "Around line 409:" 4
.IX Item "Around line 409:"
alternative text 'Infoblox::Grid::ExtensibleAttributeDef/Extensible Attribute Values' contains non-escaped | or /
.IP "Around line 844:" 4
.IX Item "Around line 844:"
alternative text 'Infoblox::Grid::ExtensibleAttributeDef/Searching Extensible Attributes' contains non-escaped | or /

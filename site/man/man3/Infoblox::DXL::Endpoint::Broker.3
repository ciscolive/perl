.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Infoblox::DXL::Endpoint::Broker 3"
.TH Infoblox::DXL::Endpoint::Broker 3 "2018-06-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Infoblox::DXL::Endpoint::Broker \- A Data Exchange Layer (DXL) endpoint broker object.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\s-1DXL\s0 brokers are installed on managed systems for routing messages between connected clients.
The network of brokers tracks active consumers and dynamically adjusts the message
routing as needed. When a client requests a service or when an update is broadcasted,
brokers relay these messages.
.PP
The \s-1DXL\s0 endpoint broker is used to configure \s-1DXL\s0 broker for a particular endpoint.
.SH "CONSTRUCTOR"
.IX Header "CONSTRUCTOR"
.Vb 6
\& my $object = Infoblox::DXL::Endpoint::Broker\->new(
\&     host_name => $fqdn,   #Required
\&     address   => $ipaddr, #Optional / Default is undefined
\&     port      => $uint,   #Optional / Default is 8883
\&     unique_id => $string, #Optional / Default is undefined
\& );
.Ve
.SH "SESSION METHODS"
.IX Header "SESSION METHODS"
The object does not support any session methods.
.SH "MODULE METHODS"
.IX Header "MODULE METHODS"
This section describes all the functions that you can apply to a \s-1DXL\s0 Broker object.
.SS "Infoblox::DXL::Endpoint\->brokers( )"
.IX Subsection "Infoblox::DXL::Endpoint->brokers( )"
.RS 4
Use this method to set or retrieve the list of \s-1DXL\s0 brokers for the \s-1DXL\s0 endpoint.
See Infoblox::DXL::Endpoint\->\fBbrokers()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get brokers value
\& my $brokers = $object\->brokers();
\&
\& #Construct Infoblox::DXL::Endpoint::Broker object
\& my $broker = Infoblox::DXL::Endpoint::Broker\->new(
\&     host_name => \*(Aqdxl\-br.localdomain\*(Aq,
\& );
\&
\& #Modify brokers value
\& $object\->brokers([$broker]);
.Ve
.RE
.RS 4
.RE
.SH "METHODS"
.IX Header "METHODS"
This section describes all the methods that you can use to set or retrieve the attribute values of the object.
.SS "address( )"
.IX Subsection "address( )"
.RS 4
Use this method to set or retrieve the \s-1DXL\s0 broker \s-1IP\s0 address.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an \s-1IP\s0 address in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns 'true' when the modification succeeds, and returns 'false' when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get address value
\& my $value = $object\->address();
\&
\& #Modify address value
\& $object\->address(\*(Aq1.1.1.1\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "host_name( )"
.IX Subsection "host_name( )"
.RS 4
Use this method to set or retrieve the host name for the \s-1DXL\s0 broker.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is a desired \s-1FQDN\s0 in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns 'true' when the modification succeeds, and returns 'false' when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get host_name value
\& my $value = $object\->host_name();
\&
\& #Modify host_name value
\& $object\->host_name(\*(Aqdxl\-broker.localdomain\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "port( )"
.IX Subsection "port( )"
.RS 4
Use this method to set or retrieve the port number for the \s-1DXL\s0 broker communication.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an unsigned integer between 1 and 65535. The default value is 8883.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns 'true' when the modification succeeds, and returns 'false' when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get port value
\& my $value = $object\->port();
\&
\& #Modify port value
\& $object\->port(\*(Aq1312\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "unique_id( )"
.IX Subsection "unique_id( )"
.RS 4
Use this method to set or retrieve the unique \s-1ID\s0 for the \s-1DXL\s0 broker.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is a desired \s-1ID\s0 in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns 'true' when the modification succeeds, and returns 'false' when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get unique_id value
\& my $value = $object\->unique_id();
\&
\& #Modify unique_id value
\& $object\->unique_id(\*(Aq5d73b77f\-8c4b\-4ae0\-b437\-febd12facfd4\*(Aq);
.Ve
.RE
.RS 4
.RE
.SH "AUTHOR"
.IX Header "AUTHOR"
Infoblox Inc. <http://www.infoblox.com/>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Infoblox::DXL::Endpoint,
Infoblox::DXL::Endpoint\->\fBbrokers()\fR.
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2017 Infoblox Inc.

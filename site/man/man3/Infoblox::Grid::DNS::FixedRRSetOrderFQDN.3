.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Infoblox::Grid::DNS::FixedRRSetOrderFQDN 3"
.TH Infoblox::Grid::DNS::FixedRRSetOrderFQDN 3 "2018-06-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Infoblox::Grid::DNS::FixedRRSetOrderFQDN \- A fixed RRset order FQDN object.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
A fixed RRset order \s-1FQDN\s0 contains information about the fixed RRset configuration items.
.PP
By default, when a client queries a domain name, the \s-1DNS\s0 caching appliance returns the A and \s-1AAAA\s0 records of the domain name in the cyclic order. However, this default behavior can be overridden if you have enabled and configured (at the Grid level) fixed RRset order for hosts that have multiple addresses. When you override the default behavior and preserve the fixed RRset order for cached \s-1DNS\s0 responses, the \s-1DNS\s0 caching appliance returns A and \s-1AAAA\s0 records associated with domain names in the order they were received from an upstream server. You can preserve the RRset order for the cached \s-1DNS\s0 responses and specify the fixed RRset order for A, \s-1AAAA,\s0 or both A and \s-1AAAA\s0 records at the Grid level and override at the member and \s-1DNS\s0 view levels.
.PP
Note that configuring fixed RRset order for specific FQDNs might significantly affect the performance of the \s-1DNS\s0 caching appliance.
.SH "CONSTRUCTOR"
.IX Header "CONSTRUCTOR"
.Vb 4
\& my $rrset_order = Infoblox::Grid::DNS::FixedRRSetOrderFQDN\->new(
\&     fqdn        => $string,               #Required
\&     record_type => \*(AqA\*(Aq | \*(AqAAAA\*(Aq | \*(AqBOTH\*(Aq, #Optional / Default is \*(AqA\*(Aq
\& );
.Ve
.SH "SESSION METHODS"
.IX Header "SESSION METHODS"
The object does not support any session methods. It's used for fixed RRset order configuration for Infoblox::Grid::DNS, Infoblox::Grid::Member::DNS, Infoblox::DNS::View objects.
.SH "METHODS"
.IX Header "METHODS"
This section describes all the methods that you can use to set or retrieve the attribute values of the object.
.SS "fqdn( )"
.IX Subsection "fqdn( )"
.RS 4
Use this method to set or retrieve the \s-1FQDN\s0 of the fixed RRset configuration item.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is a string containing desired \s-1FQDN.\s0
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get fqdn value
\& my $fqdn = $order_fqdn\->fqdn();
\& #Modify fqdn
\& $order_fqdn\->fqdn(\*(Aqdomain.com\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "record_type( )"
.IX Subsection "record_type( )"
.RS 4
Use this method to set or retrieve the returned record type for the specified \s-1FQDN\s0 in the fixed RRset configuration.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid values are 'A', '\s-1AAAA\s0' and '\s-1BOTH\s0'. The default value is 'A'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get record_type value
\& my $record_type = $order_fqdn\->record_type();
\& #Modify record_type
\& $order_fqdn\->record_type(\*(AqAAAA\*(Aq);
.Ve
.RE
.RS 4
.RE
.SH "AUTHOR"
.IX Header "AUTHOR"
Infoblox Inc. <http://www.infoblox.com/>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Infoblox::Grid::DNS, Infoblox::Grid::Member::DNS, Infoblox::DNS::View
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2017 Infoblox Inc.

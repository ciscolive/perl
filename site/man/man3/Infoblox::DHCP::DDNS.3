.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Infoblox::DHCP::DDNS 3"
.TH Infoblox::DHCP::DDNS 3 "2018-06-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Infoblox::DHCP::DDNS \- DHCP DDNS object.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The object is used to configure Multi-Grid Master preferences for updates from \s-1DHCP\s0 to Multi-Grid Master zones.
.SH "CONSTRUCTOR"
.IX Header "CONSTRUCTOR"
.Vb 8
\& my $ddns = Infoblox::DHCP::DDNS\->new(
\&    dns_ext_zone     => $string,           # required if zone_match is \*(AqEXTERNAL\*(Aq
\&    dns_grid_zone    => $string,           # required if zone_match is \*(AqGRID\*(Aq
\&    view             => $string,           # optional / The default value is the name of the default view
\&    external_primary => $ipaddr,           # required if zone_match is \*(AqEXTERNAL\*(Aq or \*(AqANY_EXTERNAL\*(Aq
\&    grid_primary     => $string,           # required if zone_match is \*(AqGRID\*(Aq or \*(AqANY_GRID\*(Aq
\&    zone_match       => \*(AqANY_EXTERNAL\*(Aq | \*(AqANY_GRID\*(Aq | \*(AqEXTERNAL\*(Aq | \*(AqGRID\*(Aq,  # required
\& );
.Ve
.SH "SESSION METHODS"
.IX Header "SESSION METHODS"
The object doesn't support any session methods.
.SH "METHODS"
.IX Header "METHODS"
This section describes all the methods that you can use to configure and retrieve a \s-1DHCP DDNS\s0 object.
.SS "dns_ext_zone( )"
.IX Subsection "dns_ext_zone( )"
.RS 4
Use this method to set or retrieve a zone name, in \s-1FQDN\s0 (Fully Qualified Domain Name) format, that is contained in an external member.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
A zone name in \s-1FQDN\s0 format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get the attribute value
\& my $value = $ddns\->dns_ext_zone();
\& # Modify the attribute value
\& $ddns\->dns_ext_zone(\*(Aqexmmdns.com\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "dns_grid_zone( )"
.IX Subsection "dns_grid_zone( )"
.RS 4
Use this method to set or retrieve a zone name, in \s-1FQDN\s0 (Fully Qualified Domain Name) format, that is contained in a Grid member.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
A zone name in \s-1FQDN\s0 format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get the attribute value
\& my $value = $ddns\->dns_grid_zone();
\& # Modify the attribute value
\& $ddns\->dns_grid_zone(\*(Aqmmdns.com\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "view( )"
.IX Subsection "view( )"
.RS 4
Use this method to set or retrieve the name of the \s-1DNS\s0 view in which the zone is located.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The name of the \s-1DNS\s0 view in string format. The default value is the name of the default view.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get the attribute value
\& my $value = $ddns\->view();
\& # Modify the attribute value
\& $ddns\->view(\*(Aqdnsview\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "external_primary( )"
.IX Subsection "external_primary( )"
.RS 4
Use this method to set or retrieve the \s-1IP\s0 address of an external member.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The \s-1IP\s0 address of an external member.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get the attribute value
\& my $value = $ddns\->external_primary();
\& # Modify the attribute value
\& $ddns\->external_primary(\*(Aq10.0.0.1\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "grid_primary( )"
.IX Subsection "grid_primary( )"
.RS 4
Use this method to set or retrieve the name of the primary Grid member.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The name of the primary Grid member.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get the attribute value
\& my $value = $ddns\->grid_primary();
\& # Modify the attribute value
\& $ddns\->grid_primary(\*(Aqgrid.com\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "zone_match( )"
.IX Subsection "zone_match( )"
.RS 4
Use this method to set or retrieve the matching type.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is '\s-1ANY_EXTERNAL\s0', '\s-1ANY_GRID\s0', '\s-1EXTERNAL\s0' or '\s-1GRID\s0'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get the attribute value
\& my $value = $ddns\->zone_match();
\& # Modify the attribute value
\& $ddns\->zone_match(\*(AqGRID\*(Aq);
.Ve
.RE
.RS 4
.RE
.SH "AUTHOR"
.IX Header "AUTHOR"
Infoblox Inc. <http://www.infoblox.com/>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Infoblox::DHCP::View, Infoblox::Grid::Member::DHCP
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2017 Infoblox Inc.

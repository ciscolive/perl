.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Net::OAuth2::Profile::Password 3"
.TH Net::OAuth2::Profile::Password 3 "2019-10-01" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Net::OAuth2::Profile::Password \- OAuth2 for web\-server use
.SH "INHERITANCE"
.IX Header "INHERITANCE"
.Vb 2
\& Net::OAuth2::Profile::Password
\&   is a Net::OAuth2::Profile
.Ve
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&  my $auth = Net::OAuth2::Profile::Password\->new(...);
\&  $auth\->get_access_token(...);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Extends \*(L"\s-1DESCRIPTION\*(R"\s0 in Net::OAuth2::Profile.
.SH "METHODS"
.IX Header "METHODS"
Extends \*(L"\s-1METHODS\*(R"\s0 in Net::OAuth2::Profile.
.SS "Constructors"
.IX Subsection "Constructors"
Extends \*(L"Constructors\*(R" in Net::OAuth2::Profile.
.IP "Net::OAuth2::Profile::Password\->\fBnew\fR(%options)" 4
.IX Item "Net::OAuth2::Profile::Password->new(%options)"
.Vb 11
\& \-Option           \-\-Defined in          \-\-Default
\&  client_id          Net::OAuth2::Profile  <required>
\&  client_secret      Net::OAuth2::Profile  <required>
\&  grant_type         Net::OAuth2::Profile  \*(Aqpassword\*(Aq
\&  hd                 Net::OAuth2::Profile  undef
\&  scope              Net::OAuth2::Profile  undef
\&  secrets_in_params  Net::OAuth2::Profile  <true>
\&  site               Net::OAuth2::Profile  undef
\&  state              Net::OAuth2::Profile  undef
\&  token_scheme       Net::OAuth2::Profile  \*(Aqauth\-header:Bearer\*(Aq
\&  user_agent         Net::OAuth2::Profile  <created internally>
.Ve
.RS 4
.IP "client_id => \s-1STRING\s0" 2
.IX Item "client_id => STRING"
.PD 0
.IP "client_secret => \s-1STRING\s0" 2
.IX Item "client_secret => STRING"
.IP "grant_type => \s-1STRING\s0" 2
.IX Item "grant_type => STRING"
.IP "hd => \s-1STRING\s0" 2
.IX Item "hd => STRING"
.IP "scope => \s-1STRING\s0" 2
.IX Item "scope => STRING"
.IP "secrets_in_params => \s-1BOOLEAN\s0" 2
.IX Item "secrets_in_params => BOOLEAN"
.IP "site => \s-1URI\s0" 2
.IX Item "site => URI"
.IP "state => \s-1STRING\s0" 2
.IX Item "state => STRING"
.IP "token_scheme => \s-1SCHEME\s0" 2
.IX Item "token_scheme => SCHEME"
.IP "user_agent => LWP::UserAgent object" 2
.IX Item "user_agent => LWP::UserAgent object"
.RE
.RS 4
.RE
.PD
.SS "Accessors"
.IX Subsection "Accessors"
Extends \*(L"Accessors\*(R" in Net::OAuth2::Profile.
.ie n .IP "$obj\->\fBbearer_token_scheme\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBbearer_token_scheme\fR()" 4
.IX Item "$obj->bearer_token_scheme()"
Inherited, see \*(L"Accessors\*(R" in Net::OAuth2::Profile
.ie n .IP "$obj\->\fBgrant_type\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBgrant_type\fR()" 4
.IX Item "$obj->grant_type()"
Inherited, see \*(L"Accessors\*(R" in Net::OAuth2::Profile
.ie n .IP "$obj\->\fBhd\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBhd\fR()" 4
.IX Item "$obj->hd()"
Inherited, see \*(L"Accessors\*(R" in Net::OAuth2::Profile
.ie n .IP "$obj\->\fBid\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBid\fR()" 4
.IX Item "$obj->id()"
Inherited, see \*(L"Accessors\*(R" in Net::OAuth2::Profile
.ie n .IP "$obj\->\fBscope\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBscope\fR()" 4
.IX Item "$obj->scope()"
Inherited, see \*(L"Accessors\*(R" in Net::OAuth2::Profile
.ie n .IP "$obj\->\fBsecret\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBsecret\fR()" 4
.IX Item "$obj->secret()"
Inherited, see \*(L"Accessors\*(R" in Net::OAuth2::Profile
.ie n .IP "$obj\->\fBsite\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBsite\fR()" 4
.IX Item "$obj->site()"
Inherited, see \*(L"Accessors\*(R" in Net::OAuth2::Profile
.ie n .IP "$obj\->\fBstate\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBstate\fR()" 4
.IX Item "$obj->state()"
Inherited, see \*(L"Accessors\*(R" in Net::OAuth2::Profile
.ie n .IP "$obj\->\fBuser_agent\fR()" 4
.el .IP "\f(CW$obj\fR\->\fBuser_agent\fR()" 4
.IX Item "$obj->user_agent()"
Inherited, see \*(L"Accessors\*(R" in Net::OAuth2::Profile
.SS "Actions"
.IX Subsection "Actions"
Extends \*(L"Actions\*(R" in Net::OAuth2::Profile.
.SS "Helpers"
.IX Subsection "Helpers"
Extends \*(L"Helpers\*(R" in Net::OAuth2::Profile.
.ie n .IP "$obj\->\fBadd_token\fR($request, $token, $scheme)" 4
.el .IP "\f(CW$obj\fR\->\fBadd_token\fR($request, \f(CW$token\fR, \f(CW$scheme\fR)" 4
.IX Item "$obj->add_token($request, $token, $scheme)"
Inherited, see \*(L"Helpers\*(R" in Net::OAuth2::Profile
.ie n .IP "$obj\->\fBbuild_request\fR($method, $uri, $params)" 4
.el .IP "\f(CW$obj\fR\->\fBbuild_request\fR($method, \f(CW$uri\fR, \f(CW$params\fR)" 4
.IX Item "$obj->build_request($method, $uri, $params)"
Inherited, see \*(L"Helpers\*(R" in Net::OAuth2::Profile
.ie n .IP "$obj\->\fBparams_from_response\fR($response, $reason)" 4
.el .IP "\f(CW$obj\fR\->\fBparams_from_response\fR($response, \f(CW$reason\fR)" 4
.IX Item "$obj->params_from_response($response, $reason)"
Inherited, see \*(L"Helpers\*(R" in Net::OAuth2::Profile
.ie n .IP "$obj\->\fBsite_url\fR( <$uri|$path>, $params )" 4
.el .IP "\f(CW$obj\fR\->\fBsite_url\fR( <$uri|$path>, \f(CW$params\fR )" 4
.IX Item "$obj->site_url( <$uri|$path>, $params )"
Inherited, see \*(L"Helpers\*(R" in Net::OAuth2::Profile
.SS "Action"
.IX Subsection "Action"
.ie n .IP "$obj\->\fBget_access_token\fR(%options)" 4
.el .IP "\f(CW$obj\fR\->\fBget_access_token\fR(%options)" 4
.IX Item "$obj->get_access_token(%options)"
.Vb 3
\& \-Option  \-\-Default
\&  password  <required>
\&  username  <required>
.Ve
.RS 4
.IP "password => \s-1PASSWORD\s0" 2
.IX Item "password => PASSWORD"
.PD 0
.IP "username => \s-1USER\s0" 2
.IX Item "username => USER"
.RE
.RS 4
.RE
.PD
.SH "SEE ALSO"
.IX Header "SEE ALSO"
This module is part of Net\-OAuth2 distribution version 0.66,
built on October 01, 2019. Website: \fIhttp://perl.overmeer.net/CPAN/\fR.
.SH "COPYRIGHTS"
.IX Header "COPYRIGHTS"
Copyrights 2013\-2019\-2018 on the perl code and the related documentation
 by [Mark Overmeer <markov@cpan.org>] for SURFnet bv, The Netherlands.  For other contributors see ChangeLog.
.PP
Copyrights 2011\-12 by Keith Grennan.
.PP
This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
See \fIhttp://dev.perl.org/licenses/\fR

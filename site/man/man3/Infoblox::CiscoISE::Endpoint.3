.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Infoblox::CiscoISE::Endpoint 3"
.TH Infoblox::CiscoISE::Endpoint 3 "2018-06-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Infoblox::CiscoISE::Endpoint \- A Cisco ISE endpoint object.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The CiscoISE endpoint object provides configuration for third party Cisco \s-1ISE\s0 servers integration.
.SH "CONSTRUCTOR"
.IX Header "CONSTRUCTOR"
.Vb 10
\& my $ise_endpoint = Infoblox::CiscoISE::Endpoint\->new(
\&     address                   => $fqdn | $ipaddr,                                                      # Required
\&     bulk_download_certificate => $path,                                                                # Required
\&     client_certificate        => $path,                                                                # Required
\&     subscribe_settings        => $subscribe_settings,                                                  # Required
\&     subscribing_member        => $string,                                                              # Required
\&     version                   => \*(AqVERSION_1_3\*(Aq | \*(AqVERSION_1_4\*(Aq | \*(AqVERSION_2_0\*(Aq,                        # Required
\&     comment                   => $string,                                                              # Optional / Default is undefined
\&     connection_timeout        => $uint,                                                                # Optional / Default is 10
\&     disable                   => \*(Aqtrue\*(Aq | \*(Aqfalse\*(Aq,                                                     # Optional / Default is \*(Aqtrue\*(Aq
\&     extattrs                  => { $string => $extattr, ... },                                         # Optional / Default is undefined
\&     extensible_attributes     => {$string => $string | $num, $string => [ $string | $num, ... ], ... } # Optional / Default is undefined
\&     network_view              => $string,                                                              # Optional / Default is \*(Aqdefault\*(Aq
\&     publish_settings          => $publish_settings,                                                    # Optional / Default is undefined
\&     secondary_address         => $fqdn | $ipaddr,                                                      # Optional / Default is undefined
\&     type                      => \*(AqTYPE_CISCO\*(Aq,                                                         # Optional / Default is \*(AqTYPE_CISCO\*(Aq,
\& );
.Ve
.PP
You cannot set both extattrs and extensible_attributes attributes at the same time.
.SH "SESSION METHODS"
.IX Header "SESSION METHODS"
This section describes all the methods in an Infoblox::Session module that you can apply to a Cisco \s-1ISE\s0 endpoint object.
.SS "Infoblox::Session\->add( )"
.IX Subsection "Infoblox::Session->add( )"
.RS 4
Use this method to add the object to the Infoblox appliance.
See Infoblox::Session\->\fBadd()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 9
\& #Construct an object
\& my $object = Infoblox::CiscoISE::Endpoint\->new(
\&     address                   => \*(Aq10.0.0.1\*(Aq,
\&     bulk_download_certificate => \*(Aq/path/to/bulk_download_cert.pem\*(Aq,
\&     client_certificate        => \*(Aq/path/to/client_cert.pem\*(Aq,
\&     subscribe_settings        => $subscribe_settings,
\&     subscribing_member        => \*(Aqinfoblox.com\*(Aq,
\&     version                   => \*(AqVERSION_1_3\*(Aq,
\& );
\&
\& #Submit for addition
\& my $response = $session\->add($object);
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->get( )"
.IX Subsection "Infoblox::Session->get( )"
.RS 4
Use this method to retrieve all the matching objects from the Infoblox appliance.
See Infoblox::Session\->\fBget()\fR for parameters and return values.
.IP "\fBKey References\fR" 4
.IX Item "Key References"
.Vb 1
\& Apply the following attributes to get a specific Cisco ISE endpoint object:
\&
\&  address                    \- Optional. The FQDN or IP address of the Cisco ISE endpoint.
\&  comment                    \- Optional. The Cisco ISE endpoint comment in string format
\&  extattrs                   \- Optional. A hash reference containing Infoblox::Grid::Extattr object.
\&  extensible_attributes      \- Optional. A hash reference containing extensible attributes.
\&  network_view               \- Optional. The Cisco ISE endpoint network view name.
\&  resolved_address           \- Optional. The resolved IP address of the Cisco ISE endpoint.
\&  resolved_secondary_address \- Optional. The resolved secondary IP address of the Cisco ISE endpoint.
\&  secondary_address          \- Optional. The secondary FQDN or IP address of the Cisco ISE endpoint.
\&  subscribing_member         \- Optional. The Cisco ISE endpoint subscribing member name.
\&  type                       \- Optional. The Cisco ISE endpoint type.
\&  version                    \- Optional. The Cisco ISE endpoint version.
.Ve
.IP "\fBExamples\fR" 4
.IX Item "Examples"
.Vb 4
\& my @retrieved_objs = $session\->get(
\&     object  => \*(AqInfoblox::CiscoISE::Endpoint\*(Aq,
\&     address => \*(Aq10.0.0.1\*(Aq,
\& );
\&
\& my @retrieved_objs = $session\->get(
\&     object                => \*(AqInfoblox::CiscoISE::Endpoint\*(Aq,
\&     extensible_attributes => {\*(AqSite\*(Aq => \*(AqSanta Clara\*(Aq},
\& );
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->modify( )"
.IX Subsection "Infoblox::Session->modify( )"
.RS 4
Use this method to modify the object in the Infoblox appliance.
See Infoblox::Session\->\fBmodify()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Modify comment value
\& $object\->comment(\*(Aqthis is a modified comment\*(Aq);
\&
\& #Submit modification
\& my $response = $session\->modify($object);
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->remove( )"
.IX Subsection "Infoblox::Session->remove( )"
.RS 4
Use this method to remove the object from the Infoblox appliance. See Infoblox::Session\->\fBremove()\fR for parameters and return values.
.Sp
To remove a specific object, first use \fBget()\fR or \fBsearch()\fR to retrieve the specific \s-1DHCP\s0 range object, and then submit this object for removal.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 6
\& #Get the objects
\& my @retrieved_objs = $session\->get(
\&     object       => \*(AqInfoblox::CiscoISE::Endpoint\*(Aq,
\&     address      => \*(Aq10.0.0.1\*(Aq,
\&     newtork_view => \*(Aqdefault\*(Aq,
\& );
\&
\& #Find the desired object from the retrieved list
\& my $desired_object = $retrieved_objs[0];
\&
\& #Submit for removal
\& my $response = $session\->remove($desired_object);
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->search( )"
.IX Subsection "Infoblox::Session->search( )"
.RS 4
Use this method to search for objects in the Infoblox appliance. See Infoblox::Session\->\fBsearch()\fR for parameters and return values.
.IP "\fBKey References\fR" 4
.IX Item "Key References"
.Vb 1
\& Apply the following attributes to search for the Cisco ISE endpoint object:
\&
\&  address                    \- Optional. The FQDN or IP address of the Cisco ISE endpoint (regexp).
\&  comment                    \- Optional. The Cisco ISE endpoint comment in string format (regexp).
\&  extattrs                   \- Optional. A hash reference containing Infoblox::Grid::Extattr object.
\&  extensible_attributes      \- Optional. A hash reference containing extensible attributes.
\&  network_view               \- Optional. The Cisco ISE endpoint network view name (exact).
\&  resolved_address           \- Optional. The resolved IP address of the Cisco ISE endpoint (regexp).
\&  resolved_secondary_address \- Optional. The resolved secondary IP address of the Cisco ISE endpoint (regexp).
\&  secondary_address          \- Optional. The secondary FQDN or IP address of the Cisco ISE endpoint (regexp).
\&  subscribing_member         \- Optional. The Cisco ISE endpoint subscribing member name (exact).
\&  type                       \- Optional. The Cisco ISE endpoint type (exact).
\&  version                    \- Optional. The Cisco ISE endpoint version (exact).
.Ve
.Sp
For more information about searching extensible attributes, 
see Infoblox::Grid::ExtensibleAttributeDef/Searching Extensible Attributes.
.IP "\fBExamples\fR" 4
.IX Item "Examples"
.Vb 7
\& # search for objects
\& my @retrieved_objs = $session\->search(
\&     object       => \*(AqInfoblox::CiscoISE::Endpoint\*(Aq,
\&     network_view => \*(Aqdefault\*(Aq,
\&     address      => \*(Aq10.*\*(Aq,
\&     comment      => \*(Aq.*comment\*(Aq,
\&);
\&
\& # search for objects defining \*(AqSanta Clara\*(Aq for \*(AqSite\*(Aq extensible attribute
\& my @retrieved_objs = $session\->search(
\&     object                => \*(AqInfoblox::DHCP::Range\*(Aq,
\&     extensible_attributes => {\*(AqSite\*(Aq => \*(AqSanta Clara\*(Aq},
\& );
.Ve
.RE
.RS 4
.RE
.SH "METHODS"
.IX Header "METHODS"
This section describes all the methods that you can use to configure and retrieve the attribute values of a Cisco \s-1ISE\s0 endpoint.
.SS "address( )"
.IX Subsection "address( )"
.RS 4
Use this method to set or retrieve the fully-qualified domain name (\s-1FQDN\s0) or \s-1IP\s0 address of the Cisco \s-1ISE\s0 endpoint.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is a desired \s-1IP\s0 address or \s-1FQDN\s0 in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get address value
\& my $address = $object\->address();
\&
\& #Modify address value
\& $object\->address(\*(Aqfoo.com\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "bulk_download_certificate( )"
.IX Subsection "bulk_download_certificate( )"
.RS 4
Use this method to set the path to a bulk download certificate file. This is a write-only attribute.
.Sp
Include the specified parameter to set the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is a path to a certificate in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Modify bulk_download_certificate value
\& $object\->bulk_download_certificate(\*(Aq/path/to/cert.pem\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "bulk_download_certificate_subject( )"
.IX Subsection "bulk_download_certificate_subject( )"
.RS 4
Use this method to retrieve the bulk download certificate subject. This is a read-only attrbiute.
.Sp
Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get bulk_download_certificate_subject value
\& my $bulk_download_certificate_subject = $object\->bulk_download_certificate_subject();
.Ve
.RE
.RS 4
.RE
.SS "bulk_download_certificate_valid_from( )"
.IX Subsection "bulk_download_certificate_valid_from( )"
.RS 4
Use this method to retrieve the time from which the bulk download certificate is valid. This is a read-only attrbiute.
.Sp
Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value. The number of seconds that have elapsed since January 1st, 1970 \s-1UTC.\s0
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get bulk_download_certificate_valid_from value
\& my $bulk_download_certificate_valid_from = $object\->bulk_download_certificate_valid_from();
.Ve
.RE
.RS 4
.RE
.SS "bulk_download_certificate_valid_to( )"
.IX Subsection "bulk_download_certificate_valid_to( )"
.RS 4
Use this method to retrieve the bulk download certificate expiration time. This is a read-only attrbiute.
.Sp
Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value. The number of seconds that have elapsed since January 1st, 1970 \s-1UTC.\s0
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get bulk_download_certificate_valid_to value
\& my $bulk_download_certificate_valid_to = $object\->bulk_download_certificate_valid_to();
.Ve
.RE
.RS 4
.RE
.SS "client_certificate( )"
.IX Subsection "client_certificate( )"
.RS 4
Use this method to set the path to a client certificate file. This is a write-only attribute.
.Sp
Include the specified parameter to set the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is a path to a certificate in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Modify client_certificate value
\& $object\->client_certificate(\*(Aq/path/to/cert.pem\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "client_certificate_subject( )"
.IX Subsection "client_certificate_subject( )"
.RS 4
Use this method to retrieve the client certificate subject. This is a read-only attrbiute.
.Sp
Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get client_certificate_subject value
\& my $client_certificate_subject = $object\->client_certificate_subject();
.Ve
.RE
.RS 4
.RE
.SS "client_certificate_valid_from( )"
.IX Subsection "client_certificate_valid_from( )"
.RS 4
Use this method to retrieve the time from which the client certificate is valid. This is a read-only attrbiute.
.Sp
Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value. The number of seconds that have elapsed since January 1st, 1970 \s-1UTC.\s0
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get client_certificate_valid_from value
\& my $client_certificate_valid_from = $object\->client_certificate_valid_from();
.Ve
.RE
.RS 4
.RE
.SS "client_certificate_valid_to( )"
.IX Subsection "client_certificate_valid_to( )"
.RS 4
Use this method to retrieve the bulk client certificate expiration time. This is a read-only attrbiute.
.Sp
Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value. The number of seconds that have elapsed since January 1st, 1970 \s-1UTC.\s0
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get client_certificate_valid_to value
\& my $client_certificate_valid_to = $object\->client_certificate_valid_to();
.Ve
.RE
.RS 4
.RE
.SS "comment( )"
.IX Subsection "comment( )"
.RS 4
Use this method to set or retrieve the Cisco \s-1ISE\s0 endpoint comment.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is a desired comment in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get comment value
\& my $comment = $object\->comment();
\&
\& #Modify comment value
\& $object\->comment(\*(Aqise comment\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "connection_status( )"
.IX Subsection "connection_status( )"
.RS 4
Use this method to retrieve the Cisco \s-1ISE\s0 endpoint connection status. This is a read-only attrbiute.
.Sp
Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get connection_status value
\& my $connection_status = $object\->connection_status();
.Ve
.RE
.RS 4
.RE
.SS "connection_timeout( )"
.IX Subsection "connection_timeout( )"
.RS 4
Use this method to set or retrieve the timeout value (in seconds) for the Cisco \s-1ISE\s0 endpoint connections.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an unsigned integer between 1 and 180. The default value is 10.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get connection_timeout value
\& my $connection_timeout = $object\->connection_timeout();
\&
\& #Modify connection_timeout value
\& $object\->connection_timeout(\*(Aq20\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "disable( )"
.IX Subsection "disable( )"
.RS 4
Use this method to set or retrieve the flag that indicates whether the Cisco \s-1ISE\s0 endpoint is enabled or disabled.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify 'true' to disable the Cisco \s-1ISE\s0 endpoint or 'false' to enable it. The default value is 'true'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get disable value
\& my $disable = $object\->disable();
\&
\& #Modify disable value
\& $object\->disable(\*(Aqfalse\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "extattrs( )"
.IX Subsection "extattrs( )"
.RS 4
Use this method to set or retrieve the extensible attributes associated with a Cisco \s-1ISE\s0 endpoint object.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is a hash reference that contains the names of extensible attributes and their associated values (Infoblox::Grid::Extattr objects).
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get extattrs value
\& my $extattrs = $object\->extattrs();
\&
\& #Modify extattrs value
\& $dhcp_range\->extattrs({\*(AqSite\*(Aq => $extattr1, \*(AqAdministrator\*(Aq => $extattr2});
.Ve
.RE
.RS 4
.RE
.SS "extensible_attributes( )"
.IX Subsection "extensible_attributes( )"
.RS 4
Use this method to set or retrieve the extensible attributes associated with a Cisco \s-1ISE\s0 endpoint object.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
For valid values for extensible attributes, see Infoblox::Grid::ExtensibleAttributeDef/Extensible Attribute Values.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get extensible attributes value
\& my $extensible_attributes = $object\->extensible_attributes();
\& #Modify extensible attributes
\& $object\->extensible_attributes({\*(AqSite\*(Aq => \*(AqSanta Clara\*(Aq, \*(AqAdministrator\*(Aq => [\*(AqPeter\*(Aq, \*(AqTom\*(Aq]});
.Ve
.RE
.RS 4
.RE
.SS "network_view( )"
.IX Subsection "network_view( )"
.RS 4
Use this method to set or retrieve the Cisco \s-1ISE\s0 endpoint network view name.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is a desired network view name in string format. The default value is 'default'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get network_view value
\& my $network_view = $object\->network_view();
\&
\& #Modify network_view value
\& $object\->network_view(\*(Aqinternal\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "publish_settings( )"
.IX Subsection "publish_settings( )"
.RS 4
Use this method to set or retrieve the Cisco \s-1ISE\s0 endpoint publish settings.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an Infoblox::CiscoISE::PublishSetting object.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get publish_settings value
\& my $publish_settings = $object\->publish_settings();
\&
\& #Modify publish_settings value
\& $object\->publish_settings($publish_settings);
.Ve
.RE
.RS 4
.RE
.SS "resolved_address( )"
.IX Subsection "resolved_address( )"
.RS 4
Use this method to retrieve the resolved \s-1IP\s0 address of the Cisco \s-1ISE\s0 endpoint. This is a read-only attribute.
.Sp
Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get resolved_address value
\& my $resolved_address = $object\->resolved_address();
.Ve
.RE
.RS 4
.RE
.SS "resolved_secondary_address( )"
.IX Subsection "resolved_secondary_address( )"
.RS 4
Use this method to retrieve the resolved secondary \s-1IP\s0 address of the Cisco \s-1ISE\s0 endpoint. This is a read-only attribute.
.Sp
Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get resolved_secondary_address value
\& my $resolved_secondary_address = $object\->resolved_secondary_address();
.Ve
.RE
.RS 4
.RE
.SS "secondary_address( )"
.IX Subsection "secondary_address( )"
.RS 4
Use this method to set or retrieve the secondary fully-qualified domain name (\s-1FQDN\s0) or \s-1IP\s0 address of the Cisco \s-1ISE\s0 endpoint.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is a desired \s-1IP\s0 address or \s-1FQDN\s0 in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get secondary_address value
\& my $secondary_address = $object\->secondary_address();
\&
\& #Modify secondary_address value
\& $object\->secondary_address(\*(Aqfoo.com\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "subscribe_settings( )"
.IX Subsection "subscribe_settings( )"
.RS 4
Use this method to set or retrieve the Cisco \s-1ISE\s0 endpoint subscribe settings.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an Infoblox::CiscoISE::SubscribeSetting object.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get subscribe_settings value
\& my $subscribe_settings = $object\->subscribe_settings();
\&
\& #Modify subscribe_settings value
\& $object\->subscribe_settings($subscribe_settings);
.Ve
.RE
.RS 4
.RE
.SS "subscribing_member( )"
.IX Subsection "subscribing_member( )"
.RS 4
Use this method to set or retrieve the Cisco \s-1ISE\s0 endpoint subscribing member host name.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is a desired subscribing member host name in string format. The default value is 'default'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get subscribing_member value
\& my $subscribing_member = $object\->subscribing_member();
\&
\& #Modify subscribing_member value
\& $object\->subscribing_member(\*(Aqinfoblox.com\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "type( )"
.IX Subsection "type( )"
.RS 4
Use this method to set or retrieve the Cisco \s-1ISE\s0 endpoint type.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is '\s-1TYPE_CISCO\s0'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get type value
\& my $type = $object\->type();
\&
\& #Modify type value
\& $object\->type(\*(AqTYPE_CISCO\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "version( )"
.IX Subsection "version( )"
.RS 4
Use this method to set or retrieve the Cisco \s-1ISE\s0 endpoint version.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid values are '\s-1VERSION_1_3\s0', '\s-1VERSION_1_4\s0' and '\s-1VERSION_2_0\s0'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get version value
\& my $version = $object\->version();
\&
\& #Modify version value
\& $object\->version(\*(AqVERSION_2_0\*(Aq);
.Ve
.RE
.RS 4
.RE
.SH "AUTHOR"
.IX Header "AUTHOR"
Infoblox Inc. <http://www.infoblox.com/>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Infoblox::Session,
Infoblox::Session\->\fBadd()\fR,
Infoblox::Session\->\fBget()\fR,
Infoblox::Session\->\fBmodify()\fR,
Infoblox::Session\->\fBremove()\fR,
Infoblox::Session\->\fBsearch()\fR,
Infoblox::Grid::Extattr,
Infoblox::Grid::ExtensibleAttributeDef/Searching Extensible Attributes, 
Infoblox::CiscoISE::PublishSetting,
Infoblox::CiscoISE::SubscribeSetting,
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2017 Infoblox Inc.

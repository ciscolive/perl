.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Infoblox::Grid::InformationalBannerSetting 3"
.TH Infoblox::Grid::InformationalBannerSetting 3 "2018-06-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Infoblox::Grid::InformationalBannerSetting \- The informational banner setting.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The informational banner setting object that controls the banner displayed on the login page of Grid Manager.
.SH "CONSTRUCTOR"
.IX Header "CONSTRUCTOR"
.Vb 1
\& my $color = "BLACK" | "BLUE" | "BROWN" | "CYAN" | "GREEN" | "MAGENTA" | "ORANGE" | "PURPLE" | "RED" | "YELLOW";
\&
\& my $informational = Infoblox::Grid::InformationalBannerSetting\->new(
\&     enable    => "true" | "false", #Mandatory
\&     color     => $color,           #Mandatory
\&     message   => $string,          #Optional / Default is empty
\& );
.Ve
.SH "MODULE METHODS"
.IX Header "MODULE METHODS"
The following functions are available to apply to an informational banner setting object.
.SS "Infoblox::Grid\->informational_banner_setting( )"
.IX Subsection "Infoblox::Grid->informational_banner_setting( )"
.RS 4
Use this function to specify the informational banner settings for the Grid.
See Infoblox::Grid\->\fBinformational_banner_setting()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 1
\& my $grid = $session\->get(object => \*(AqInfoblox::Grid\*(Aq);
\&
\& my $banner = Infoblox::Grid::InformationalBannerSetting\->new(enable => \*(Aqtrue\*(Aq, color => \*(AqBLUE\*(Aq, message => \*(AqInformational message\*(Aq);
\& $grid\->informational_banner_setting($banner);
\& my $response = $session\->modify($grid);
\& unless($response) {
\&      die("Modify grid failed: ",
\&            session\->status_code() . ":" . session\->status_detail());
\& }
\& print "Grid banner setting modified successfully\en";
.Ve
.RE
.RS 4
.RE
.SH "METHODS"
.IX Header "METHODS"
This section describes all the methods that you can use to set and retrieve the attribute values of an informational banner setting object.
.SS "enable( )"
.IX Subsection "enable( )"
.RS 4
Use this method to set the enable flag.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to enable the banner or \*(L"false\*(R" to disable it.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get enable
\& my $enable = $banner\->enable();
\& #Modify enable
\& $banner\->enable("true");
.Ve
.RE
.RS 4
.RE
.SS "color( )"
.IX Subsection "color( )"
.RS 4
Use this method to set the color of the message that will be displayed on the login page of Grid Manager.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
A string containing the color.
Banner colors can be one of the following: '\s-1BLACK\s0', '\s-1BLUE\s0', '\s-1BROWN\s0', '\s-1CYAN\s0', '\s-1GREEN\s0', '\s-1MAGENTA\s0', '\s-1ORANGE\s0', '\s-1PURPLE\s0', '\s-1RED\s0', '\s-1YELLOW\s0'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get color
\& my $color = $banner\->color();
\& #Modify color
\& $banner\->color("RED");
.Ve
.RE
.RS 4
.RE
.SS "message( )"
.IX Subsection "message( )"
.RS 4
Use this method to set the message that will be displayed on the login page of Grid Manager.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
A string containing the message.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get message
\& my $message = $banner\->message();
\& #Modify message
\& $banner\->message("Test message");
.Ve
.RE
.RS 4
.RE
.SH "AUTHOR"
.IX Header "AUTHOR"
Infoblox Inc. <http://www.infoblox.com/>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Infoblox::Grid
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2017 Infoblox Inc.

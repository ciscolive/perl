.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Pod::Elemental::Element::Pod5::Region 3"
.TH Pod::Elemental::Element::Pod5::Region 3 "2020-01-25" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Pod::Elemental::Element::Pod5::Region \- a region of Pod (this role likely to be removed)
.SH "VERSION"
.IX Header "VERSION"
version 0.103005
.SH "OVERVIEW"
.IX Header "OVERVIEW"
A Pod5::Region element represents a region marked by a \f(CW\*(C`=for\*(C'\fR command or a
pair of \f(CW\*(C`=begin\*(C'\fR and \f(CW\*(C`=end\*(C'\fR commands.  It may have content of its own as well
as child paragraphs.
.PP
Its \f(CW\*(C`as_pod_string\*(C'\fR method will emit either a \f(CW\*(C`=begin/=end\*(C'\fR\-enclosed string
or a \f(CW\*(C`=for\*(C'\fR command, based on whichever is permissible.
.SH "ATTRIBUTES"
.IX Header "ATTRIBUTES"
.SS "format_name"
.IX Subsection "format_name"
This is the format to which the region was targeted.
.PP
\&\fBNote!\fR  The format name should \fInot\fR include the leading colon to indicate a
pod paragraph.  For that, see \f(CW"is_pod"\fR.
.SS "is_pod"
.IX Subsection "is_pod"
If true, this region contains pod (ordinary or verbatim) paragraphs, as opposed
to data paragraphs.  This will generally result from the document originating
in a \f(CW\*(C`=begin\*(C'\fR block with a colon-prefixed target identifier:
.PP
.Vb 1
\&  =begin :html
\&
\&    This is still a verbatim paragraph.
\&
\&  =end :html
.Ve
.SH "WARNING"
.IX Header "WARNING"
This class is somewhat sketchy and may be refactored somewhat in the future,
specifically to refactor its similarities to
Pod::Elemental::Element::Nested.
.SH "AUTHOR"
.IX Header "AUTHOR"
Ricardo \s-1SIGNES\s0 <rjbs@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2020 by Ricardo \s-1SIGNES.\s0
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

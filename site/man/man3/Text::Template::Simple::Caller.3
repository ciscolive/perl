.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Text::Template::Simple::Caller 3"
.TH Text::Template::Simple::Caller 3 "2018-12-25" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Text::Template::Simple::Caller
.SH "VERSION"
.IX Header "VERSION"
version 0.91
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 6
\&   use strict;
\&   use Text::Template::Simple::Caller;
\&   x();
\&   sub x {  y() }
\&   sub y {  z() }
\&   sub z { print Text::Template::Simple::Caller\->stack }
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Caller stack tracer for Text::Template::Simple. This module is not used
directly inside templates. You must use the global template function
instead. See Text::Template::Simple::Dummy for usage from the templates.
.SH "NAME"
Text::Template::Simple::Caller \- Caller stack tracer
.SH "METHODS"
.IX Header "METHODS"
.SS "stack"
.IX Subsection "stack"
Class method. Accepts parameters as a single hash reference:
.PP
.Vb 1
\&   my $dump = Text::Template::Simple::Caller\->stack(\e%opts);
.Ve
.PP
\fIframe\fR
.IX Subsection "frame"
.PP
Integer. Defines how many call frames to go back. Default is zero (full list).
.PP
\fItype\fR
.IX Subsection "type"
.PP
Defines the dump type. Available options are:
.IP "string" 4
.IX Item "string"
A simple text dump.
.IP "html_comment" 4
.IX Item "html_comment"
Same as string, but the output wrapped with \s-1HTML\s0 comment codes:
.Sp
.Vb 1
\&   <!\-\- [DUMP] \-\->
.Ve
.IP "html_table" 4
.IX Item "html_table"
Returns the dump as a \s-1HTML\s0 table.
.IP "text_table" 4
.IX Item "text_table"
Uses the optional module \f(CW\*(C`Text::Table\*(C'\fR to format the dump.
.SH "AUTHOR"
.IX Header "AUTHOR"
Burak Gursoy <burak@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2004 by Burak Gursoy.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

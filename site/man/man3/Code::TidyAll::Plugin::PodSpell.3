.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Code::TidyAll::Plugin::PodSpell 3"
.TH Code::TidyAll::Plugin::PodSpell 3 "2020-04-25" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Code::TidyAll::Plugin::PodSpell \- Use Pod::Spell + ispell with tidyall
.SH "VERSION"
.IX Header "VERSION"
version 0.78
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&   In configuration:
\&
\&   [PodSpell]
\&   select = lib/**/*.{pm,pod}
\&   ispell_argv = \-p $ROOT/.ispell_english
\&   suggest = 1
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Uses Pod::Spell in combination with
ispell <http://fmg-www.cs.ucla.edu/geoff/ispell.html> to spell-check \s-1POD.\s0 Any
seemingly misspelled words will be output one per line.
.PP
You can specify additional valid words by:
.IP "\(bu" 4
Adding them to your personal ispell dictionary, e.g. ~/.ispell_english
.IP "\(bu" 4
Adding them to an ispell dictionary in the project root, then including this in
the configuration:
.Sp
.Vb 1
\&    ispell_argv = \-p $ROOT/.ispell_english
.Ve
.PP
The dictionary file should contain one word per line.
.SH "INSTALLATION"
.IX Header "INSTALLATION"
Install ispell from your package manager or from the link above.
.SH "CONFIGURATION"
.IX Header "CONFIGURATION"
This plugin accepts the following configuration options:
.SS "ispell_argv"
.IX Subsection "ispell_argv"
Arguments to pass to ispell. The \*(L"\-a\*(R" flag will always be passed, in order to
parse the results.
.SS "ispell_cmd"
.IX Subsection "ispell_cmd"
The path for the \f(CW\*(C`ispell\*(C'\fR command. By default this is just \f(CW\*(C`ispell\*(C'\fR, meaning
that the user's \f(CW\*(C`PATH\*(C'\fR will be searched for the command.
.SS "suggest"
.IX Subsection "suggest"
If true, show suggestions next to misspelled words. Default is false.
.SH "SUPPORT"
.IX Header "SUPPORT"
Bugs may be submitted at
<https://github.com/houseabsolute/perl\-code\-tidyall/issues>.
.PP
I am also usually active on \s-1IRC\s0 as 'autarch' on \f(CW\*(C`irc://irc.perl.org\*(C'\fR.
.SH "SOURCE"
.IX Header "SOURCE"
The source code repository for Code-TidyAll can be found at
<https://github.com/houseabsolute/perl\-code\-tidyall>.
.SH "AUTHORS"
.IX Header "AUTHORS"
.IP "\(bu" 4
Jonathan Swartz <swartz@pobox.com>
.IP "\(bu" 4
Dave Rolsky <autarch@urth.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2011 \- 2020 by Jonathan Swartz.
.PP
This is free software; you can redistribute it and/or modify it under the same
terms as the Perl 5 programming language system itself.
.PP
The full text of the license can be found in the \fI\s-1LICENSE\s0\fR file included with
this distribution.

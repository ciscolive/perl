.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Term::Title 3"
.TH Term::Title 3 "2018-06-20" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Term::Title \- Portable API to set the terminal titlebar
.SH "VERSION"
.IX Header "VERSION"
version 0.09
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    use Term::Title \*(Aqset_titlebar\*(Aq, \*(Aqset_tab_title\*(Aq;
\&
\&    set_titlebar("This goes into the title");
\&
\&    set_titlebar("Title", "And also print this to the terminal");
\&
\&    set_tab_title("This goes into the tab title");
\&
\&    set_tab_title("Tab Title", "And also print this to the terminal");
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Term::Title provides an abstraction for setting the titlebar or the tab title
across different types of terminals.  For *nix terminals, it prints the
appropriate escape sequences to set the terminal or tab title based on the
value of \f(CW$ENV{TERM}\fR.  On Windows, it uses Win32::Console to set the
title directly.
.PP
Currently, changing the titlebar is supported in these terminals:
.IP "\(bu" 4
xterm
.IP "\(bu" 4
rxvt
.IP "\(bu" 4
screen
.IP "\(bu" 4
iTerm2.app
.IP "\(bu" 4
Win32 console
.PP
The terminals that support changing the tab title include:
.IP "\(bu" 4
iTerm2.app
.SH "USAGE"
.IX Header "USAGE"
.SS "set_titlebar"
.IX Subsection "set_titlebar"
.Vb 1
\&    set_titlebar( $title, @optional_text );
.Ve
.PP
Sets the titlebar to \f(CW$title\fR or clears the titlebar if \f(CW$title\fR is 
undefined.
.PP
On terminals that require printing escape codes to the terminal, a newline
character is also printed to the terminal.  If \f(CW @optional_text \fR is given, it
will be printed to the terminal prior to the newline.  Thus, to keep terminal
output cleaner, use \f(CW\*(C`set_titlebar()\*(C'\fR in place of a \f(CW\*(C`print()\*(C'\fR statement to
set the titlebar and print at the same time.
.PP
If the terminal is not supported, set_titlebar silently continues, printing
\&\f(CW@optional_text\fR if any.
.SS "set_tab_title"
.IX Subsection "set_tab_title"
.Vb 1
\&    set_tab_title( $title, @optional_text );
.Ve
.PP
Has the exact same semantics as the \*(L"set_titlebar\*(R" but changes the tab title.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.IP "\(bu" 4
Win32::Console
.IP "\(bu" 4
<http://www.ibiblio.org/pub/Linux/docs/HOWTO/Xterm\-Title>
.SH "SUPPORT"
.IX Header "SUPPORT"
.SS "Bugs / Feature Requests"
.IX Subsection "Bugs / Feature Requests"
Please report any bugs or feature requests through the issue tracker
at <https://github.com/dagolden/Term\-Title/issues>.
You will be notified automatically of any progress on your issue.
.SS "Source Code"
.IX Subsection "Source Code"
This is open source software.  The code repository is available for
public review and contribution under the terms of the license.
.PP
<https://github.com/dagolden/Term\-Title>
.PP
.Vb 1
\&  git clone https://github.com/dagolden/Term\-Title.git
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
David Golden <dagolden@cpan.org>
.SH "CONTRIBUTORS"
.IX Header "CONTRIBUTORS"
.IP "\(bu" 4
Alexandr Ciornii <alexchorny@gmail.com>
.IP "\(bu" 4
Pedro Melo <melo@simplicidade.org>
.IP "\(bu" 4
Slobodan Mišković <slobodan@miskovic.ca>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is Copyright (c) 2008 by David Golden.
.PP
This is free software, licensed under:
.PP
.Vb 1
\&  The Apache License, Version 2.0, January 2004
.Ve

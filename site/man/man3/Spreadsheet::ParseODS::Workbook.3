.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Spreadsheet::ParseODS::Workbook 3"
.TH Spreadsheet::ParseODS::Workbook 3 "2020-10-06" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Spreadsheet::ParseODS::Workbook \- a workbook
.ie n .SS """\->filename"""
.el .SS "\f(CW\->filename\fP"
.IX Subsection "->filename"
.Vb 1
\&  print $workbook\->filename;
.Ve
.PP
The name of the file if applicable.
.ie n .SS """\->table_styles"""
.el .SS "\f(CW\->table_styles\fP"
.IX Subsection "->table_styles"
The styles that identify whether a table is hidden, and other styles
.ie n .SS """\->get_print_areas()"""
.el .SS "\f(CW\->get_print_areas()\fP"
.IX Subsection "->get_print_areas()"
.Vb 2
\&    my $print_areas = $workbook\->get_print_areas();
\&    # [[ [$start_row, $start_col, $end_row, $end_col], ... ]]
.Ve
.PP
The \f(CW\*(C`\->get_print_areas()\*(C'\fR method returns the print areas
of each sheet as an arrayref of arrayrefs. If a sheet has no
print area, \f(CW\*(C`undef\*(C'\fR is returned for its print area.
.ie n .SS """\->get_active_sheet()"""
.el .SS "\f(CW\->get_active_sheet()\fP"
.IX Subsection "->get_active_sheet()"
.Vb 5
\&    my $sheet = $workbook\->get_active_sheet();
\&    if( !$sheet ) {
\&        # If there is no defined active worksheet, take the first:
\&        ($sheet) = $workbook\->worksheets();
\&    };
.Ve
.PP
Returns the active worksheet, or if there is no such sheet, returns \f(CW\*(C`undef\*(C'\fR.
.ie n .SS """\->worksheets()"""
.el .SS "\f(CW\->worksheets()\fP"
.IX Subsection "->worksheets()"
.Vb 1
\&    my @sheets = $workbook\->worksheets;
.Ve
.PP
Returns the list of worksheets as Spreadsheet::ParseODS::Worksheet
objects.
.ie n .SS """\->worksheet($name)"""
.el .SS "\f(CW\->worksheet($name)\fP"
.IX Subsection "->worksheet($name)"
.Vb 1
\&    my $sheet1 = $workbook\->worksheet(\*(AqSheet 1\*(Aq);
.Ve
.PP
Returns the worksheet with the given name, or if no such worksheet exists,
returns \f(CW\*(C`undef\*(C'\fR.

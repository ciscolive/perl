.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Infoblox::Grid::Discovery::Data 3"
.TH Infoblox::Grid::Discovery::Data 3 "2018-06-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Infoblox::Grid::Discovery::Data \- the discovered data.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The object provides information about the discovered data.
.SH "CONSTRUCTOR"
.IX Header "CONSTRUCTOR"
.Vb 10
\& my $object = Infoblox::Grid::Discovery::Data\->new(
\&    \*(Aqap_name\*(Aq                            => $string,
\&    \*(Aqap_ip_address\*(Aq                      => $ipaddr,
\&    \*(Aqap_ssid\*(Aq                            => $string,
\&    \*(Aqbridge_domain                       => $string,
\&    \*(Aqduid\*(Aq                               => $string,
\&    \*(Aqmac_address\*(Aq                        => $string,
\&    \*(Aqnetbios\*(Aq                            => $string,
\&    \*(Aqos\*(Aq                                 => $string,
\&    \*(Aqdevice_model\*(Aq                       => $string,
\&    \*(Aqdevice_port_name\*(Aq                   => $string,
\&    \*(Aqdevice_port_type\*(Aq                   => $string,
\&    \*(Aqdevice_type\*(Aq                        => $string,
\&    \*(Aqdevice_vendor\*(Aq                      => $string,
\&    \*(Aqdiscovered_name\*(Aq                    => $string,
\&    \*(Aqdiscoverer\*(Aq                         => $string,
\&    \*(Aqendpoint_groups\*(Aq                    => $string,
\&    \*(Aqfirst_discovered\*(Aq                   => $datetime,
\&    \*(Aqlast_discovered\*(Aq                    => $datetime,
\&    \*(Aqmgmt_ip_address\*(Aq                    => $ipaddr,
\&    \*(Aqnetwork_component_description\*(Aq      => $string,
\&    \*(Aqnetwork_component_ip\*(Aq               => $ipaddr,
\&    \*(Aqnetwork_component_model\*(Aq            => $string,
\&    \*(Aqnetwork_component_name\*(Aq             => $string,
\&    \*(Aqnetwork_component_port_description\*(Aq => $string,
\&    \*(Aqnetwork_component_port_name\*(Aq        => $string,
\&    \*(Aqnetwork_component_port_number\*(Aq      => $uint,
\&    \*(Aqnetwork_component_type\*(Aq             => $string,
\&    \*(Aqnetwork_component_vendor\*(Aq           => $string,
\&    \*(Aqopen_ports\*(Aq                         => $string,
\&    \*(Aqport_duplex\*(Aq                        => \*(AqFull\*(Aq | \*(AqHalf\*(Aq,
\&    \*(Aqport_link_status\*(Aq                   => \*(AqConnected\*(Aq | \*(AqNot Connected\*(Aq | \*(AqUnknown\*(Aq,
\&    \*(Aqport_speed\*(Aq                         => \*(Aq100G\*(Aq | \*(Aq100M\*(Aq | \*(Aq10G\*(Aq | \*(Aq10M\*(Aq | \*(Aq1G\*(Aq | \*(AqUnknown\*(Aq,
\&    \*(Aqport_status\*(Aq                        => \*(AqDown\*(Aq | \*(AqUnknown\*(Aq | \*(AqUp\*(Aq,
\&    \*(Aqport_type\*(Aq                          => $string,
\&    \*(Aqport_vlan_description\*(Aq              => $string,
\&    \*(Aqport_vlan_name\*(Aq                     => $string,
\&    \*(Aqport_vlan_number\*(Aq                   => $uint,
\&    \*(Aqtask_name\*(Aq                          => $string,
\&    \*(Aqtenant\*(Aq                             => $string,
\&    \*(Aqnetwork_component_location\*(Aq         => $string,
\&    \*(Aqnetwork_component_contact\*(Aq          => $string,
\&    \*(Aqdevice_location\*(Aq                    => $string,
\&    \*(Aqdevice_contact\*(Aq                     => $string,
\&    \*(Aqv_netadapter\*(Aq                       => $string,
\&    \*(Aqv_cluster\*(Aq                          => $string,
\&    \*(Aqv_datacenter\*(Aq                       => $string,
\&    \*(Aqv_name\*(Aq                             => $string,
\&    \*(Aqv_type\*(Aq                             => \*(AqVirtualCenter\*(Aq | \*(AqHostSystem\*(Aq | \*(AqVirtualMachine\*(Aq,
\&    \*(Aqv_host\*(Aq                             => $string,
\&    \*(Aqv_os\*(Aq                               => $string,
\&    \*(Aqv_switch\*(Aq                           => $string,
\& );
.Ve
.SH "SESSION METHODS"
.IX Header "SESSION METHODS"
The object does not support any session methods.
.SH "METHODS"
.IX Header "METHODS"
This section describes all the methods that you can use to set or retrieve the attribute values of the discovered data object.
.SS "device_model( )"
.IX Subsection "device_model( )"
.RS 4
Use this method to set or retrieve the model name of the device in the vendor terminology.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The model name of the device in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->device_model();
\& # Modify attribute value
\& $object\->device_model(\*(Aqmodel\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "device_port_name( )"
.IX Subsection "device_port_name( )"
.RS 4
Use this method to set or retrieve the system name of the interface the \s-1IP\s0 associates with.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The system name of the interface in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->device_port_name();
\& # Modify attribute value
\& $object\->device_port_name(\*(Aqport\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "device_port_type( )"
.IX Subsection "device_port_type( )"
.RS 4
Use this method to set or retrieve the hardware type of the interface the \s-1IP\s0 associates with.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The hardware type of the interface in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->device_port_type();
\& # Modify attribute value
\& $object\->device_port_type(\*(Aqtype\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "device_type( )"
.IX Subsection "device_type( )"
.RS 4
Use this method to set or retrieve the type of the device in the vendor terminology.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The type of the device in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->device_type();
\& # Modify attribute value
\& $object\->device_type(\*(Aqtype\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "device_vendor( )"
.IX Subsection "device_vendor( )"
.RS 4
Use this method to set or retrieve the vendor name of the device.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The vendor name of the device in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->device_vendor();
\& # Modify attribute value
\& $object\->device_vendor(\*(Aqvendor\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "discovered_name( )"
.IX Subsection "discovered_name( )"
.RS 4
Use this method to set or retrieve the name of the \s-1IP\s0 as seen by the discovery station.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The discovered name in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->discovered_name();
\& # Modify attribute value
\& $object\->discovered_name(\*(Aqname\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "discoverer( )"
.IX Subsection "discoverer( )"
.RS 4
Use this method to set or retrieve the name of the discoverer.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The name of the discoverer in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->discoverer();
\& # Modify attribute value
\& $object\->discoverer(\*(Aqdiscoverer\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "duid( )"
.IX Subsection "duid( )"
.RS 4
Use this method to set or retrieve the discovered DHCPv6 \s-1UID\s0 (\s-1DUID\s0).
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The discovered DHCPv6 \s-1UID\s0 (\s-1DUID\s0) in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->duid();
\& # Modify attribute value
\& $object\->duid(\*(Aqaa:aa\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "endpoint_groups( )"
.IX Subsection "endpoint_groups( )"
.RS 4
Use this method to retrieve comma-separated list of discovered endpoint groups. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $object\->endpoint_groups();
.Ve
.RE
.RS 4
.RE
.SS "first_discovered( )"
.IX Subsection "first_discovered( )"
.RS 4
Use this method to set or retrieve the date and time when the object was first discovered.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The date and time in the \s-1ISO 8601\s0 extended format (e.g. 2008\-10\-21T10:56:33Z or 2008\-10\-21T10:56:33.001Z).
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->first_discovered();
\& # Modify attribute value
\& $object\->first_discovered(\*(Aq2008\-10\-21T10:56:33Z\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "iprg_no( )"
.IX Subsection "iprg_no( )"
.RS 4
Use this method to set or retrieve the port redundant group number.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is an unsigned integer which describes port redundant group number.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->iprg_no();
\& # Modify attribute value
\& $object\->iprg_no(10);
.Ve
.RE
.RS 4
.RE
.SS "iprg_state( )"
.IX Subsection "iprg_state( )"
.RS 4
Use this method to set or retrieve the status for the \s-1IP\s0 address within port redundant group.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is \*(L"\s-1VIP\*(R", \*(L"ACTIVE\*(R", \*(L"NEGOTIATION\*(R"\s0 or \*(L"\s-1STANDBY\*(R".\s0
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->iprg_state();
\& # Modify attribute value
\& $object\->iprg_state(\*(AqACTIVE\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "iprg_type( )"
.IX Subsection "iprg_type( )"
.RS 4
Use this method to set or retrieve the port redundant group type.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is \*(L"\s-1HSRP\*(R"\s0 or \*(L"\s-1VRRP\*(R".\s0
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->iprg_type();
\& # Modify attribute value
\& $object\->iprg_type(\*(AqHSRP\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "last_discovered( )"
.IX Subsection "last_discovered( )"
.RS 4
Use this method to set or retrieve the date and time when the object was last discovered.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The date and time in the \s-1ISO 8601\s0 extended format (e.g. 2008\-10\-21T10:56:33Z or 2008\-10\-21T10:56:33.001Z).
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->last_discovered();
\& # Modify attribute value
\& $object\->last_discovered(\*(Aq2008\-10\-21T10:56:33Z\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "mac_address( )"
.IX Subsection "mac_address( )"
.RS 4
Use this method to set or retrieve the \s-1MAC\s0 address.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The \s-1MAC\s0 address in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->mac_address();
\& # Modify attribute value
\& $object\->mac_address(\*(Aq11:11:11:11:11:11\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "mgmt_ip_address( )"
.IX Subsection "mgmt_ip_address( )"
.RS 4
Use this method to set or retrieve the management \s-1IP\s0 address of the device if the device has more than one \s-1IP.\s0
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The management \s-1IP\s0 address of the device.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->mgmt_ip_address();
\& # Modify attribute value
\& $object\->mgmt_ip_address(\*(Aq10.0.0.1\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "netbios( )"
.IX Subsection "netbios( )"
.RS 4
Use this method to set or retrieve the discovered NetBIOS name.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The discovered NetBIOS name in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->netbios();
\& # Modify attribute value
\& $object\->netbios(\*(Aqnetbios\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "network_component_description( )"
.IX Subsection "network_component_description( )"
.RS 4
Use this method to set or retrieve the descriptive string for the network component.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The descriptive string for the network component.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->network_component_description();
\& # Modify attribute value
\& $object\->network_component_description(\*(Aqdescription\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "network_component_ip( )"
.IX Subsection "network_component_ip( )"
.RS 4
Use this method to set or retrieve the \s-1IP\s0 Address the network component.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The \s-1IP\s0 Address the network component.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->network_component_ip();
\& # Modify attribute value
\& $object\->network_component_ip(\*(Aq10.0.0.2\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "network_component_model( )"
.IX Subsection "network_component_model( )"
.RS 4
Use this method to set or retrieve the model name of the network component.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The model name of the network component in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->network_component_model();
\& # Modify attribute value
\& $object\->network_component_model(\*(Aqmodel\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "network_component_name( )"
.IX Subsection "network_component_name( )"
.RS 4
Use this method to set or retrieve the name of the network component.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The name of the network component in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->network_component_name();
\& # Modify attribute value
\& $object\->network_component_name(\*(Aqname\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "network_component_port_description( )"
.IX Subsection "network_component_port_description( )"
.RS 4
Use this method to set or retrieve the description of the port on the network component.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The description of the port on the network component in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->network_component_port_description();
\& # Modify attribute value
\& $object\->network_component_port_description(\*(Aqdescription\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "network_component_port_name( )"
.IX Subsection "network_component_port_name( )"
.RS 4
Use this method to set or retrieve the port name on the network component on which the \s-1IP\s0 was discovered.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The port name on the network component in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->network_component_port_name();
\& # Modify attribute value
\& $object\->network_component_port_name(\*(Aqport\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "network_component_port_number( )"
.IX Subsection "network_component_port_number( )"
.RS 4
Use this method to set or retrieve the port number on the network component on which the \s-1IP\s0 was discovered.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The port number on the network component.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->network_component_port_number();
\& # Modify attribute value
\& $object\->network_component_port_number(10);
.Ve
.RE
.RS 4
.RE
.SS "network_component_type( )"
.IX Subsection "network_component_type( )"
.RS 4
Use this method to set or retrieve the type of network component.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The type of network component in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->network_component_type();
\& # Modify attribute value
\& $object\->network_component_type(\*(Aqtype\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "network_component_vendor( )"
.IX Subsection "network_component_vendor( )"
.RS 4
Use this method to set or retrieve the vendor name of the network component to which the device is connected.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The vendor name of the network component in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->network_component_vendor();
\& # Modify attribute value
\& $object\->network_component_vendor(\*(Aqvendor\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "open_ports( )"
.IX Subsection "open_ports( )"
.RS 4
Use this method to set or retrieve the list of opened ports on the \s-1IP\s0 address, represented as: \*(L"\s-1TCP: 21,22,23 UDP: 137,139\*(R".\s0
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The list of opened ports in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->open_ports();
\& # Modify attribute value
\& $object\->open_ports(\*(AqTCP: 21,22,23 UDP: 137,139\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "os( )"
.IX Subsection "os( )"
.RS 4
Use this method to set or retrieve the name of the operation system by network discovery.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The name of the operation system in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->os();
\& # Modify attribute value
\& $object\->os(\*(Aqlinux\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "port_duplex( )"
.IX Subsection "port_duplex( )"
.RS 4
Use this method to set or retrieve duplex settings on the port on the network component.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is 'Full' or 'Half'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->port_duplex();
\& # Modify attribute value
\& $object\->port_duplex(\*(AqFull\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "port_link_status( )"
.IX Subsection "port_link_status( )"
.RS 4
Use this method to set or retrieve the link status of the port on the network component.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is 'Connected', 'Not Connected' or 'Unknown'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->port_link_status();
\& # Modify attribute value
\& $object\->port_link_status(\*(AqConnected\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "port_speed( )"
.IX Subsection "port_speed( )"
.RS 4
Use this method to set or retrieve speed settings on the port on the network component.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is '10M', '100M', '1G', '10G', '100G' or 'Unknown'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->port_speed();
\& # Modify attribute value
\& $object\->port_speed(\*(AqUnknown\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "port_status( )"
.IX Subsection "port_status( )"
.RS 4
Use this method to set or retrieve the status of the port on the network component.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is 'Up', 'Down' or 'Unknown'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->port_status();
\& # Modify attribute value
\& $object\->port_status(\*(AqUnknown\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "port_type( )"
.IX Subsection "port_type( )"
.RS 4
Use this method to set or retrieve the type of the interface on the network component to which the device is connected.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The type of the interface on the network component in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->port_type();
\& # Modify attribute value
\& $object\->port_type(\*(Aqtype\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "port_vlan_description( )"
.IX Subsection "port_vlan_description( )"
.RS 4
Use this method to set or retrieve the description of the \s-1VLAN\s0 on the port on the network component.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The description of the \s-1VLAN\s0 on the port on the network component in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->port_vlan_description();
\& # Modify attribute value
\& $object\->port_vlan_description(\*(Aqdescription\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "port_vlan_name( )"
.IX Subsection "port_vlan_name( )"
.RS 4
Use this method to set or retrieve the name of the \s-1VLAN\s0 on the port on the network component.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The name of the \s-1VLAN\s0 on the port on the network component in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->port_vlan_name();
\& # Modify attribute value
\& $object\->port_vlan_name(\*(Aqname\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "port_vlan_number( )"
.IX Subsection "port_vlan_number( )"
.RS 4
Use this method to set or retrieve the number VLANs on the port on the network component.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The number of VLANs on the port on the network component.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->port_vlan_number();
\& # Modify attribute value
\& $object\->port_vlan_number(10);
.Ve
.RE
.RS 4
.RE
.SS "task_name( )"
.IX Subsection "task_name( )"
.RS 4
Use this method to retrieve the name of discovery task. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $object\->task_name();
.Ve
.RE
.RS 4
.RE
.SS "tenant( )"
.IX Subsection "tenant( )"
.RS 4
Use this method to retrieve the discovered tenant. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $object\->tenant();
.Ve
.RE
.RS 4
.RE
.SS "network_component_location( )"
.IX Subsection "network_component_location( )"
.RS 4
Use this method to retrieve location of the network component on which the \s-1IP\s0 address was discovered. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $object\->network_component_location();
.Ve
.RE
.RS 4
.RE
.SS "ap_name( )"
.IX Subsection "ap_name( )"
.RS 4
Use this method to retrieve discovered name of Wireless Access Point. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $object\->ap_name();
.Ve
.RE
.RS 4
.RE
.SS "ap_ip_address( )"
.IX Subsection "ap_ip_address( )"
.RS 4
Use this method to retrieve discovered \s-1IP\s0 address of Wireless Access Point. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $object\->ap_ip_address();
.Ve
.RE
.RS 4
.RE
.SS "ap_ssid( )"
.IX Subsection "ap_ssid( )"
.RS 4
Use this method to retrieve service set identifier (\s-1SSID\s0) associated with Wireless Access Point. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $object\->ap_ssid();
.Ve
.RE
.RS 4
.RE
.SS "bridge_domain( )"
.IX Subsection "bridge_domain( )"
.RS 4
Use this method to retrieve the discovered bridge domain. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $object\->bridge_domain();
.Ve
.RE
.RS 4
.RE
.SS "network_component_contact( )"
.IX Subsection "network_component_contact( )"
.RS 4
Use this method to retrieve contact information from the network component on which the \s-1IP\s0 address was discovered. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $object\->network_component_contact();
.Ve
.RE
.RS 4
.RE
.SS "device_location( )"
.IX Subsection "device_location( )"
.RS 4
Location of device on which the \s-1IP\s0 address was discovered. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $object\->device_location();
.Ve
.RE
.RS 4
.RE
.SS "device_contact( )"
.IX Subsection "device_contact( )"
.RS 4
Contact information from device on which the \s-1IP\s0 address was discovered. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $object\->device_contact();
.Ve
.RE
.RS 4
.RE
.SS "v_cluster( )"
.IX Subsection "v_cluster( )"
.RS 4
Use this method to set or retrieve the VMware cluster in the entity found.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The VMware cluster in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->v_cluster();
\& # Modify attribute value
\& $object\->v_cluster(\*(Aqcluster\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "v_datacenter( )"
.IX Subsection "v_datacenter( )"
.RS 4
Use this method to set or retrieve the VMware datacenter in the entity found.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The VMware datacenter in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->v_datacenter();
\& # Modify attribute value
\& $object\->v_datacenter(\*(Aqdatacenter\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "v_host( )"
.IX Subsection "v_host( )"
.RS 4
Use this method to set or retrieve the VMware host system in the entity found.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The VMware host system in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->v_host();
\& # Modify attribute value
\& $object\->v_host(\*(Aqhost\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "v_name( )"
.IX Subsection "v_name( )"
.RS 4
Use this method to set or retrieve the VMware entity name in the entity found.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The VMware entity name in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->v_name();
\& # Modify attribute value
\& $object\->v_name(\*(Aqname\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "v_netadapter( )"
.IX Subsection "v_netadapter( )"
.RS 4
Use this method to set or retrieve the VMware physical adapter in the entity found.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The VMware physical adapter in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->v_netadapter();
\& # Modify attribute value
\& $object\->v_netadapter(\*(Aqnetadapter\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "v_os( )"
.IX Subsection "v_os( )"
.RS 4
Use this method to set or retrieve the VMware Operating System in the entity found.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The VMware Operating System in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->v_os();
\& # Modify attribute value
\& $object\->v_os(\*(Aqlinux\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "v_switch( )"
.IX Subsection "v_switch( )"
.RS 4
Use this method to set or retrieve the VMware virtual switch in the entity found.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The VMware virtual switch in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->v_switch();
\& # Modify attribute value
\& $object\->v_switch(\*(Aqswitch\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "v_type( )"
.IX Subsection "v_type( )"
.RS 4
Use this method to set or retrieve the type of encryption to use.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is 'VirtualCenter', 'HostSystem' or 'VirtualMachine'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& # Get attribute value
\& my $value = $object\->v_type();
\& # Modify attribute value
\& $object\->v_type(\*(AqVirtualMachine\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "vmi_name( )"
.IX Subsection "vmi_name( )"
.RS 4
Use this method to retrieve the name of the virtual machine. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $object\->vmi_name();
.Ve
.RE
.RS 4
.RE
.SS "vmi_id( )"
.IX Subsection "vmi_id( )"
.RS 4
Use this method to retrieve the \s-1ID\s0 of the virtual machine. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $object\->vmi_id();
.Ve
.RE
.RS 4
.RE
.SS "vmi_tenant_id( )"
.IX Subsection "vmi_tenant_id( )"
.RS 4
Use this method to retrieve the Tenant \s-1ID\s0 to which the virtual machine belongs. This is a read-only attribute
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $object\->vmi_tenant_id();
.Ve
.RE
.RS 4
.RE
.SS "vlan_port_group( )"
.IX Subsection "vlan_port_group( )"
.RS 4
Use this method to retrieve the port group to which the virtual machine belongs. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $object\->vlan_port_group();
.Ve
.RE
.RS 4
.RE
.SS "vswitch_name( )"
.IX Subsection "vswitch_name( )"
.RS 4
Use this method to retrieve the name of the virtual switch. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $object\->vswitch_name();
.Ve
.RE
.RS 4
.RE
.SS "vswitch_id( )"
.IX Subsection "vswitch_id( )"
.RS 4
Use this method to retrieve the \s-1ID\s0 of the virtual switch. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $object\->vswitch_id();
.Ve
.RE
.RS 4
.RE
.SS "vswitch_type( )"
.IX Subsection "vswitch_type( )"
.RS 4
Use this method to retrieve the type of the virtual switch: Standard or Distributed. 'Unknown' indicates the value is not avialable. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $object\->vswitch_type();
.Ve
.RE
.RS 4
.RE
.SS "vswitch_ipv6_enabled( )"
.IX Subsection "vswitch_ipv6_enabled( )"
.RS 4
Use this method to retrieve the flag used to indicate if the virtual swich has IPv6 enabled or not. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $object\->vswitch_ipv6_enabled();
.Ve
.RE
.RS 4
.RE
.SS "vport_name( )"
.IX Subsection "vport_name( )"
.RS 4
Use this method to retrieve the name of the network adapter on the virtual switch to which the virtual machine is connected. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $object\->vport_name();
.Ve
.RE
.RS 4
.RE
.SS "vport_mac_address( )"
.IX Subsection "vport_mac_address( )"
.RS 4
Use this method to retrieve the \s-1MAC\s0 address of the network adapter on the virtual switch to which the the virtual machine is connected. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $object\->vport_mac_address();
.Ve
.RE
.RS 4
.RE
.SS "vport_link_status( )"
.IX Subsection "vport_link_status( )"
.RS 4
Use this method to retrieve the status of the link of the network adapter on the virtual switch to which the virtual machine is connected. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $object\->vport_link_status();
.Ve
.RE
.RS 4
.RE
.SS "vport_conf_speed( )"
.IX Subsection "vport_conf_speed( )"
.RS 4
Use this method to retrieve the configured speed (in Kb) of the network adapter on the virtual switch to which the virtual machine is connected. Example: 1500Kb. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $object\->vport_conf_speed();
.Ve
.RE
.RS 4
.RE
.SS "vport_conf_mode( )"
.IX Subsection "vport_conf_mode( )"
.RS 4
Use this method to retrieve the configured mode of the network adapter on the virtual switch to which the virtual machine is connected. Valid value is Full-duplex or Half-duplex. 'Unknown' indicates the value is not available. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $object\->vport_conf_mode();
.Ve
.RE
.RS 4
.RE
.SS "vport_speed( )"
.IX Subsection "vport_speed( )"
.RS 4
Use this method to retrieve the actual speed (in Kb) of the network adapter on the virtual switch to which the virtual machine is connected. Example: 1500Kb. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $object\->vport_speed();
.Ve
.RE
.RS 4
.RE
.SS "vport_mode( )"
.IX Subsection "vport_mode( )"
.RS 4
Use this method to retrieve the actual mode of the network adapter on the virtual switch to which the virtual machine is connected. Valid value is Full-duplex or Half-duplex. 'Unknown' indicates the value is not available. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $object\->vport_mode();
.Ve
.RE
.RS 4
.RE
.SS "vswitch_segment_type( )"
.IX Subsection "vswitch_segment_type( )"
.RS 4
Use this method to retrieve the type of the network segment to which the current virtual machine/vport is connected. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $object\->vswitch_segment_type();
.Ve
.RE
.RS 4
.RE
.SS "vswitch_segment_name( )"
.IX Subsection "vswitch_segment_name( )"
.RS 4
Use this method to retrieve the name of the network segment to which the current virtual machine/vport is connected. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $object\->vswitch_segment_name();
.Ve
.RE
.RS 4
.RE
.SS "vswitch_segment_id( )"
.IX Subsection "vswitch_segment_id( )"
.RS 4
Use this method to retrieve the \s-1ID\s0 of the network segment to which the current virtual machine/vport is connected. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $object\->vswitch_segment_id();
.Ve
.RE
.RS 4
.RE
.SS "vswitch_segment_port_group( )"
.IX Subsection "vswitch_segment_port_group( )"
.RS 4
Use this method to retrieve the port group of the network segment to which the current virtual machine/vport is connected. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $object\->vswitch_segment_port_group();
.Ve
.RE
.RS 4
.RE
.SS "vswitch_available_ports_count( )"
.IX Subsection "vswitch_available_ports_count( )"
.RS 4
Use this method to retrieve the number of available ports reported by the virtual switch to which the virtual machine/vport is connected. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $object\->vswitch_available_ports_count();
.Ve
.RE
.RS 4
.RE
.SS "vswitch_tep_type( )"
.IX Subsection "vswitch_tep_type( )"
.RS 4
Use this method to retrieve the type of virtual tunnel endpoint (\s-1VTEP\s0) in the virtual switch. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $object\->vswitch_tep_type();
.Ve
.RE
.RS 4
.RE
.SS "vswitch_tep_ip ( )"
.IX Subsection "vswitch_tep_ip ( )"
.RS 4
Use this method to retrieve the \s-1IP\s0 address of the virtual tunnel endpoint (\s-1VTEP\s0) in the virtual switch. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $object\->vswitch_tep_ip ();
.Ve
.RE
.RS 4
.RE
.SS "vswitch_tep_port_group( )"
.IX Subsection "vswitch_tep_port_group( )"
.RS 4
Use this method to retrieve the port group of the virtual tunnel endpoint (\s-1VTEP\s0) in the virtual switch. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $object\->vswitch_tep_port_group();
.Ve
.RE
.RS 4
.RE
.SS "vswitch_tep_vlan( )"
.IX Subsection "vswitch_tep_vlan( )"
.RS 4
Use this method to retrieve the \s-1VLAN\s0 of the virtual tunnel endpoint (\s-1VTEP\s0) in the virtual switch. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $object\->vswitch_tep_vlan();
.Ve
.RE
.RS 4
.RE
.SS "vswitch_tep_dhcp_server( )"
.IX Subsection "vswitch_tep_dhcp_server( )"
.RS 4
Use this method to retrieve the \s-1DHCP\s0 server of the virtual tunnel endpoint (\s-1VTEP\s0) in the virtual switch. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $object\->vswitch_tep_dhcp_server();
.Ve
.RE
.RS 4
.RE
.SS "vswitch_tep_multicast( )"
.IX Subsection "vswitch_tep_multicast( )"
.RS 4
Use this method to retrieve the multicast address of the virtual tunnel endpoint (\s-1VTEP\s0) in the virtual swtich. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $object\->vswitch_tep_multicast();
.Ve
.RE
.RS 4
.RE
.SS "vmhost_ip_address( )"
.IX Subsection "vmhost_ip_address( )"
.RS 4
Use this method to retrieve the \s-1IP\s0 address of the physical node on which the virtual machine is hosted. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $object\->vmhost_ip_address ();
.Ve
.RE
.RS 4
.RE
.SS "vmhost_name( )"
.IX Subsection "vmhost_name( )"
.RS 4
Use this method to retrieve the name of the physical node on which the virtual machine is hosted. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $object\->vmhost_name();
.Ve
.RE
.RS 4
.RE
.SS "vmhost_mac_address ( )"
.IX Subsection "vmhost_mac_address ( )"
.RS 4
Use this method to retrieve the \s-1MAC\s0 address of the physical node on which the virtual machine is hosted. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $object\->vmhost_mac_address ();
.Ve
.RE
.RS 4
.RE
.SS "vmhost_subnet_cidr ( )"
.IX Subsection "vmhost_subnet_cidr ( )"
.RS 4
Use this method to retrieve the \s-1CIDR\s0 subnet of the physical node on which the virtual machine is hosted. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $object\->vmhost_subnet_cidr ();
.Ve
.RE
.RS 4
.RE
.SS "vmhost_nic_names( )"
.IX Subsection "vmhost_nic_names( )"
.RS 4
Use this method to retrieve the list of all physical port names used by the virtual switch on the physical node on which the virtual machine is hosted. Represented as: \*(L"eth1,eth2,eth3\*(R". This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $object\->vmhost_nic_names();
.Ve
.RE
.RS 4
.RE
.SS "cisco_ise_endpoint_profile( )"
.IX Subsection "cisco_ise_endpoint_profile( )"
.RS 4
Use this method to retrieve a name of the endpoint profile created in Cisco \s-1ISE.\s0 This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $object\->cisco_ise_endpoint_profile();
.Ve
.RE
.RS 4
.RE
.SS "cisco_ise_security_group( )"
.IX Subsection "cisco_ise_security_group( )"
.RS 4
Use this method to retrieve the Cisco \s-1ISE\s0 security group. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $object\->cisco_ise_security_group();
.Ve
.RE
.RS 4
.RE
.SS "cisco_ise_session_state( )"
.IX Subsection "cisco_ise_session_state( )"
.RS 4
Use this method to retrieve the Cisco \s-1ISE\s0 session state. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $object\->cisco_ise_session_state();
.Ve
.RE
.RS 4
.RE
.SS "cisco_ise_ssid( )"
.IX Subsection "cisco_ise_ssid( )"
.RS 4
Use this method to retrieve the Cisco \s-1ISE SSID.\s0 This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $object\->cisco_ise_ssid();
.Ve
.RE
.RS 4
.RE
.SS "cmp_type( )"
.IX Subsection "cmp_type( )"
.RS 4
Use this method to retrieve the Cloud Management Platform type. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $object\->cmp_type();
.Ve
.RE
.RS 4
.RE
.SS "vmi_ip_type( )"
.IX Subsection "vmi_ip_type( )"
.RS 4
Use this method to retrieve the discovered \s-1IP\s0 address type. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $object\->vmi_ip_type();
.Ve
.RE
.RS 4
.RE
.SS "vmi_private_address( )"
.IX Subsection "vmi_private_address( )"
.RS 4
Use this method to retrieve the private \s-1IP\s0 address of the virtual machine. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $object\->vmi_private_address();
.Ve
.RE
.RS 4
.RE
.SS "vmi_is_public_address( )"
.IX Subsection "vmi_is_public_address( )"
.RS 4
Use this method to retrieve the flag used to indicate whether the \s-1IP\s0 address is a public address or not. This is a read-only attribute.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # Get attribute value
\& my $value = $object\->vmi_is_public_address();
.Ve
.RE
.RS 4
.RE
.SH "SAMPLE CODE"
.IX Header "SAMPLE CODE"
The following sample code demonstrates the different functions that can be applied to a discovered data object.
.PP
\&\fB#Preparation\fR
.PP
.Vb 2
\& use strict;
\& use Infoblox;
\&
\& #Create a session to the Infoblox appliance
\& my $host_ip   = "192.168.1.2";
\& my $host_name = "infoblox.localdomain";
\& my $session = Infoblox::Session\->new(
\&     master   => $host_ip,       #appliance host ip
\&     username => "admin",        #appliance user login
\&     password => "infoblox"      #appliance password
\& );
\& unless ($session) {
\&    die("Construct session failed: ".
\&         Infoblox::status_code() . ":" . Infoblox::status_detail());
\& }
\& print "Session created successfully.\en";
.Ve
.PP
\&\fB#Get an Infoblox::Grid::Discovery::Data object\fR
.PP
.Vb 6
\& my @retrieved_objs = $session\->get(\*(Aqobject\*(Aq => \*(AqInfoblox::DHCP::FixedAddr\*(Aq, \*(Aqipv4addr\*(Aq => \*(Aq10.0.0.5\*(Aq);
\& my $fa = $retrieved_objs[0];
\& unless ($fa) {
\&    die("Get FixedAddr object failed: ".
\&        $session\->status_code() . ":" . $session\->status_detail());
\& }
\&
\& my $data = $fa\->discovered_data();
\& unless ($data) {
\&    die("FixedAddr object doesn\*(Aqt contain the discovered data");
\& }
.Ve
.PP
\&\fB#Search by discovered data\fR
.PP
.Vb 8
\& $data = Infoblox::Grid::Discovery::Data\->new(
\&    \*(Aqnetbios\*(Aq => \*(AqFixed*\*(Aq,
\&    \*(Aqv_type\*(Aq  => \*(AqVirtualCenter\*(Aq,
\& );
\& unless ($data) {
\&    die("Construct Infoblox::Grid::Discovery::Data object failed: ".
\&         Infoblox::status_code() . ":" . Infoblox::status_detail());
\& }
\&
\& @retrieved_objs = $session\->get(\*(Aqobject\*(Aq => \*(AqInfoblox::DHCP::FixedAddr\*(Aq, \*(Aqdiscovered_data\*(Aq => $data);
\& $fa = $retrieved_objs[0];
\& unless ($fa) {
\&    die("Get FixedAddr object failed: ".
\&        $session\->status_code() . ":" . $session\->status_detail());
\& }
\&
\& ####PROGRAM ENDS####
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Infoblox Inc. <http://www.infoblox.com/>
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2017 Infoblox Inc.

.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Infoblox::Grid::Admin::AdAuthServer 3"
.TH Infoblox::Grid::Admin::AdAuthServer 3 "2018-06-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Infoblox::Grid::Admin::AdAuthServer \- Active Directory Authentication Server object
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Represents an \s-1AD\s0 authentication server (i.e., domain controller) that is used to authenticate administrators.
.SH "CONSTRUCTOR"
.IX Header "CONSTRUCTOR"
.Vb 8
\& my $ad_auth_server = Infoblox::Grid::Admin::AdAuthServer\->new(
\&     name        => $fqdn | $ipv4addr,    # Required
\&     port        => $num,                 # Required
\&     comment     => $string,              # Optional / Default is empty
\&     disabled    => "true" | "false",     # Optional / Default is "false"
\&     encryption  => "SSL" | "None",       # Optional / Default is "None"
\&     mgmt_port   => "true" | "false",     # Optional / Default is "false"
\& );
.Ve
.SH "SESSION METHODS"
.IX Header "SESSION METHODS"
This section describes all the methods in an Infoblox::Session module that you can apply to an object.
.SS "Infoblox::Grid::Admin::AdAuthService\->\fBad_auth_server_list()\fP"
.IX Subsection "Infoblox::Grid::Admin::AdAuthService->ad_auth_server_list()"
.RS 4
Use this method to specify \s-1AD\s0 authentication servers that are used to authenticate administrators.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 9
\& # Construct an object
\& my $ad_auth_server1 = Infoblox::Grid::Admin::AdAuthServer\->new(
\&     name       => "1.2.3.4",
\&     port       => 636,
\&     comment    => "domain controller in room 1"
\&     disabled   => "false",
\&     encryption => "SSL",
\&     mgmt_port  => "false",
\& );
\&
\& # Construct another object
\& my $ad_auth_server2 = Infoblox::Grid::Admin::AdAuthServer\->new(
\&     name       => "foo.com",
\&     port       => 389,
\&     comment    => "domain controller in room 2"
\&     disabled   => "false",
\&     encryption => "None",
\&     mgmt_port  => "false",
\& );
\&
\& # Configure AdAuthServer
\& my $response = $ad_auth_service\->ad_auth_server_list([$ad_auth_server1, $ad_auth_server2]);
.Ve
.RE
.RS 4
.RE
.SH "METHODS"
.IX Header "METHODS"
Use the following methods to access the attributes of an Infoblox::Grid::Admin::AdAuthServer object. Specify a parameter to set the attribute's value, or omit the parameter to get the attribute's value.
.SS "comment( )"
.IX Subsection "comment( )"
.RS 4
Use this method to set or retrieve comments about the server.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Comments in string format with a maximum of 256 bytes.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get comment
\& my $val = $obj\->comment();
\& #Modify comment
\& $obj\->comment("head office");
.Ve
.RE
.RS 4
.RE
.SS "disabled( )"
.IX Subsection "disabled( )"
.RS 4
Use this method to disable the Active Directory authentication service.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Set the parameter to \*(L"true\*(R" to disable the service. Set the parameter to \*(L"false\*(R" to enable the service. The default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get disabled
\& my $val = $obj\->disabled();
\& #Modify disabled
\& $obj\->disabled("true");
.Ve
.RE
.RS 4
.RE
.SS "encryption( )"
.IX Subsection "encryption( )"
.RS 4
Use this method to set or retrieve the encryption flag.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"\s-1SSL\*(R"\s0 to use \s-1SSL\s0 encryption or \*(L"None\*(R" to use no encryption.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get encryption
\& my $val = $obj\->encryption();
\& #Modify encryption
\& $obj\->encryption("SSL");
.Ve
.RE
.RS 4
.RE
.SS "name( )"
.IX Subsection "name( )"
.RS 4
Use this method to set or retrieve the \s-1FQDN\s0 or IPv4 address of the \s-1AD\s0 authentication server.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The \s-1FQDN\s0 or IPv4 address of the \s-1AD\s0 authentication server in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get name
\& my $val = $obj\->name();
\& #Modify name
\& $obj\->name("1.2.3.5");
.Ve
.RE
.RS 4
.RE
.SS "port( )"
.IX Subsection "port( )"
.RS 4
Use this method to set or retrieve the port number on the \s-1AD\s0 server to which the appliance sends authentication requests.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
\&\s-1TCP\s0 port of the \s-1AD\s0 authentication server
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get port
\& my $val = $obj\->port();
\& #Modify port
\& $obj\->port(389);
.Ve
.RE
.RS 4
.RE
.SS "mgmt_port( )"
.IX Subsection "mgmt_port( )"
.RS 4
Use this method to set or retrieve the \s-1MGMT\s0 port flag of the \s-1AD\s0 server. Set this flag to \*(L"true\*(R" to restrict the appliance to connecting to the \s-1AD\s0 server through the management port
only.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
.Vb 1
\& Specify "true" to set the mgmt_port flag or "false" to deactivate/unset it. The default value is "false".
.Ve
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get mgmt_port
\& my $val = $obj\->mgmt_port();
\& #Modify mgmt_port
\& $obj\->mgmt_port(\*(Aqfalse\*(Aq);
.Ve
.RE
.RS 4
.RE
.SH "AUTHOR"
.IX Header "AUTHOR"
Infoblox Inc. <http://www.infoblox.com>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Infoblox::Grid::Admin::AdAuthService, Infoblox::Session, Infoblox::Session\->\fBadd()\fR, Infoblox::Session\->\fBget()\fR, Infoblox::Session\->\fBmodify()\fR, Infoblox::Session\->\fBremove()\fR
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2017 Infoblox Inc.

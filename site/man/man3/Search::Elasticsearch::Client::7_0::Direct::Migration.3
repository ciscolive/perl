.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Search::Elasticsearch::Client::7_0::Direct::Migration 3"
.TH Search::Elasticsearch::Client::7_0::Direct::Migration 3 "2020-09-15" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Search::Elasticsearch::Client::7_0::Direct::Migration \- Plugin providing Migration API for Search::Elasticsearch 7.x
.SH "VERSION"
.IX Header "VERSION"
version 7.30
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    my $response = $es\->migration\->deprecations();
.Ve
.SS "\s-1DESCRIPTION\s0"
.IX Subsection "DESCRIPTION"
This class extends the Search::Elasticsearch client with a \f(CW\*(C`migration\*(C'\fR
namespace, to support the \s-1API\s0
Migration APIs <https://www.elastic.co/guide/en/elasticsearch/reference/current/migration-api.html>.
.SH "METHODS"
.IX Header "METHODS"
The full documentation for the Migration APIs is available here:
<https://www.elastic.co/guide/en/elasticsearch/reference/current/migration\-api.html>
.ie n .SS """deprecations()"""
.el .SS "\f(CWdeprecations()\fP"
.IX Subsection "deprecations()"
.Vb 3
\&    $response = $es\->migration\->deprecations(
\&        index => $index      # optional
\&    )
.Ve
.PP
The \f(CW\*(C`deprecations()\*(C'\fR \s-1API\s0 is to be used to retrieve information about different cluster, node,
and index level settings that use deprecated features that will be removed or changed in the
next major version.
.PP
See the deprecations docs <https://www.elastic.co/guide/en/elasticsearch/reference/current/migration-api-deprecation.html>
for more information.
.PP
Query string parameters:
    \f(CW\*(C`error_trace\*(C'\fR,
    \f(CW\*(C`human\*(C'\fR
.ie n .SS """get_assistance()"""
.el .SS "\f(CWget_assistance()\fP"
.IX Subsection "get_assistance()"
.Vb 3
\&    $response = $es\->migration\->get_assistance(
\&        index => $index | \e@indices      # optional
\&    )
.Ve
.PP
The \f(CW\*(C`get_assistance()\*(C'\fR \s-1API\s0 analyzes existing indices in the cluster and returns the information
about indices that require some changes before the cluster can be upgraded to the next major version.
.PP
See the get_assistance docs <https://www.elastic.co/guide/en/elasticsearch/reference/current/migration-api-assistance.html>
for more information.
.PP
Query string parameters:
    \f(CW\*(C`allow_no_indices\*(C'\fR,
    \f(CW\*(C`error_trace\*(C'\fR,
    \f(CW\*(C`expand_wildcards\*(C'\fR,
    \f(CW\*(C`human\*(C'\fR,
    \f(CW\*(C`ignore_unavailable\*(C'\fR
.ie n .SS """upgrade()"""
.el .SS "\f(CWupgrade()\fP"
.IX Subsection "upgrade()"
.Vb 3
\&    $response = $es\->migration\->upgrade(
\&        index => $index       # required
\&    )
.Ve
.PP
The \f(CW\*(C`upgrade()\*(C'\fR \s-1API\s0 performs the upgrade of internal indices to make them compatible with the
next major version.
.PP
See the \fBupgrade()\fR docs <https://www.elastic.co/guide/en/elasticsearch/reference/current/migration-api-upgrade.html>
for more information.
.PP
Query string parameters:
    \f(CW\*(C`error_trace\*(C'\fR,
    \f(CW\*(C`human\*(C'\fR,
    \f(CW\*(C`wait_for_completion\*(C'\fR
.SH "AUTHOR"
.IX Header "AUTHOR"
Enrico Zimuel <enrico.zimuel@elastic.co>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is Copyright (c) 2020 by Elasticsearch \s-1BV.\s0
.PP
This is free software, licensed under:
.PP
.Vb 1
\&  The Apache License, Version 2.0, January 2004
.Ve

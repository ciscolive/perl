.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Cisco::UCS::Chassis::PSU 3"
.TH Cisco::UCS::Chassis::PSU 3 "2016-05-25" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Cisco::UCS::Common::PSU \- Class for operations with a Cisco UCS PSU.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 3
\&    foreach my $psu (sort $ucs\->chassis(1)\->get_psus) {
\&      print \*(AqPSU \*(Aq . $psu\->id . \*(Aq voltage: \*(Aq . $psu\->voltage . "\en" 
\&    }
\&
\&    # PSU 1 voltage: ok
\&    # PSU 2 voltage: ok
\&    # PSU 3 voltage: ok
\&    # PSU 4 voltage: ok
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Cisco::UCS::Common::PSU is a class providing common operations with a Cisco 
\&\s-1UCS PSU.\s0
.PP
Note that you are not supposed to call the constructor yourself, rather a 
Cisco::UCS::Common::PSU object is created for you automatically by query 
methods in other classes like Cisco::UCS::Chassis.
.SH "METHODS"
.IX Header "METHODS"
\fIid\fR
.IX Subsection "id"
.PP
Returns the \s-1ID\s0 of the \s-1PSU.\s0
.PP
\fIdn\fR
.IX Subsection "dn"
.PP
Returns the distinguished name of the \s-1PSU.\s0
.PP
\fIserial\fR
.IX Subsection "serial"
.PP
Returns the serial number of the \s-1PSU.\s0
.PP
\fImodel\fR
.IX Subsection "model"
.PP
Returns the model number of the \s-1PSU.\s0
.PP
\fIrevision\fR
.IX Subsection "revision"
.PP
Returns the hardware revision number of the \s-1PSU.\s0
.PP
\fIvendor\fR
.IX Subsection "vendor"
.PP
Returns the vendor name of the \s-1PSU.\s0
.PP
\fIpresence\fR
.IX Subsection "presence"
.PP
Returns the presence status of the \s-1PSU.\s0
.PP
\fIoperability\fR
.IX Subsection "operability"
.PP
Returns the operability status of the \s-1PSU.\s0
.PP
\fIvoltage\fR
.IX Subsection "voltage"
.PP
Returns the voltage status of the \s-1PSU.\s0
.PP
\fIpower\fR
.IX Subsection "power"
.PP
Returns the power status of the \s-1PSU.\s0
.PP
\fIthermal\fR
.IX Subsection "thermal"
.PP
Returns the thermal status of the \s-1PSU.\s0
.PP
\fIoperational\fR
.IX Subsection "operational"
.PP
Returns the operational status of the \s-1PSU.\s0
.PP
\fIperformance\fR
.IX Subsection "performance"
.PP
Returns the performance status of the \s-1PSU.\s0
.SH "AUTHOR"
.IX Header "AUTHOR"
Luke Poskitt, \f(CW\*(C`<ltp at cpan.org>\*(C'\fR
.SH "BUGS"
.IX Header "BUGS"
Some methods may return undefined, empty or not yet implemented values.  This 
is dependent on the software and firmware revision level of \s-1UCSM\s0 and 
components of the \s-1UCS\s0 cluster.  This is not a bug but is a limitation of \s-1UCSM.\s0
.PP
Please report any bugs or feature requests to 
\&\f(CW\*(C`bug\-cisco\-ucs\-common\-psu at rt.cpan.org\*(C'\fR, or through the web interface at 
<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=Cisco\-UCS\-Common\-PSU>.  I 
will be notified, and then you'll automatically be notified of progress on 
your bug as I make changes.
.SH "SUPPORT"
.IX Header "SUPPORT"
You can find documentation for this module with the perldoc command.
.PP
.Vb 1
\&    perldoc Cisco::UCS::Common::PSU
.Ve
.PP
You can also look for information at:
.IP "\(bu" 4
\&\s-1RT: CPAN\s0's request tracker
.Sp
<http://rt.cpan.org/NoAuth/Bugs.html?Dist=Cisco\-UCS\-Common\-PSU>
.IP "\(bu" 4
AnnoCPAN: Annotated \s-1CPAN\s0 documentation
.Sp
<http://annocpan.org/dist/Cisco\-UCS\-Common\-PSU>
.IP "\(bu" 4
\&\s-1CPAN\s0 Ratings
.Sp
<http://cpanratings.perl.org/d/Cisco\-UCS\-Common\-PSU>
.IP "\(bu" 4
Search \s-1CPAN\s0
.Sp
<http://search.cpan.org/dist/Cisco\-UCS\-Common\-PSU/>
.SH "ACKNOWLEDGEMENTS"
.IX Header "ACKNOWLEDGEMENTS"
.SH "LICENSE AND COPYRIGHT"
.IX Header "LICENSE AND COPYRIGHT"
Copyright 2012 Luke Poskitt.
.PP
This program is free software; you can redistribute it and/or modify it
under the terms of either: the \s-1GNU\s0 General Public License as published
by the Free Software Foundation; or the Artistic License.
.PP
See http://dev.perl.org/licenses/ for more information.

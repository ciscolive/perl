.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Infoblox::DNS::DDNS::PrincipalCluster 3"
.TH Infoblox::DNS::DDNS::PrincipalCluster 3 "2018-06-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Infoblox::DNS::DDNS::PrincipalCluster \- A DDNS Principal Cluster object.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The \s-1DDNS\s0 Principal Cluster object represents a set of principals such that any principal in a \s-1DDNS\s0 Principal Cluster can update records created by any other principal in the same cluster.
.SH "CONSTRUCTOR"
.IX Header "CONSTRUCTOR"
.Vb 6
\&    my $cluster = Infoblox::DNS::DDNS::PrincipalCluster\->new(
\&        name       => $string,                   # Required
\&        group      => $string,                   # Required
\&        comment    => $string,                   # Optional / Default is undefined
\&        principals => [$string1, $string2, ...], # Optional / Default is undefined
\&    );
.Ve
.SH "SESSION METHODS"
.IX Header "SESSION METHODS"
This section describes all the methods in a Session module that you can apply to a \s-1DDNS\s0 Principal Cluster object.
.SS "Infoblox::Session\->add( )"
.IX Subsection "Infoblox::Session->add( )"
.RS 4
Use this method to add an object to the Infoblox appliance. See Infoblox::Session\->\fBadd()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 1
\& #create DDNS principal cluster group
\&
\& my $cluster_group = Infoblox::DNS::DDNS::PrincipalCluster::Group\->new(
\&     name => \*(Aqcluster_group\*(Aq,
\& );
\& 
\& #submit for addition
\& my $response = $session\->add($cluster_group);
\&
\& #construct an object
\& my $object = Infoblox::DNS::DDNS::PrincipalCluster\->new(
\&    name  => \*(Aqcluster1\*(Aq,
\&    group => \*(Aqcluster_group\*(Aq,
\& );
\&
\& #submit for addition
\& my $response = $session\->add($object);
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->get( )"
.IX Subsection "Infoblox::Session->get( )"
.RS 4
Use this method to retrieve all the matching objects from the Infoblox appliance. See Infoblox::Session\->\fBget()\fR for parameters and return values.
.IP "\fBKey Reference\fR" 4
.IX Item "Key Reference"
.Vb 1
\& Apply the following attribute to get a specific object:
\&
\&  name    \- Optional. A DDNS Principal cluster name in a string format.
\&  comment \- Optional. A DDNS Principal cluster comment.
\&  group   \- Optional. A DDNS Principal cluster group name.
.Ve
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 5
\& my @retrieved_objs = $session\->get(
\&     object => \*(AqInfoblox::DNS::DDNS::PrincipalCluster\*(Aq,
\&     name   => \*(Aqcluster1\*(Aq,
\&     group  => \*(Aqcluster_group\*(Aq,
\& );
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->modify( )"
.IX Subsection "Infoblox::Session->modify( )"
.RS 4
Use this method to modify an object in the Infoblox appliance. See Infoblox::Session\->\fBmodify()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Use method to modify the comment.
\& $object\->comment(\*(Aqthis is a modified comment\*(Aq);
\& #Submit modification
\& my $response = $session\->modify($object);
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->remove( )"
.IX Subsection "Infoblox::Session->remove( )"
.RS 4
Use this method to remove an object from the Infoblox appliance. See Infoblox::Session\->\fBremove()\fR for parameters and return values.
.Sp
To remove a specific object, first use \fBget()\fR or \fBsearch()\fR to retrieve the specific object, and then submit this object for removal.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 9
\& #Get the objects with the same name
\& my @retrieved_objs = $session\->get(
\&     object => \*(AqInfoblox::DNS::DDNS::PrincipalCluster\*(Aq,
\&     name   => \*(Aqcluster1\*(Aq,
\& );
\& #Find the desired object from the retrieved list.
\& my $desired_cluster = $retrieved_objs[0];
\& #Submit for removal
\& my $response = $session\->remove($desired_cluster);
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->search( )"
.IX Subsection "Infoblox::Session->search( )"
.RS 4
Use this method to search for objects in the Infoblox appliance. See Infoblox::Session\->\fBsearch()\fR for parameters and return values.
.IP "\fBKey Reference\fR" 4
.IX Item "Key Reference"
.Vb 1
\& Apply the following attribute to get a specific object:
\&
\&  name    \- Optional. A DDNS Principal Cluster name in a string format.
\&  comment \- Optional. A DDNS Principal Cluster comment.
\&  group   \- Optional. A DDNS Principal cluster group name.
.Ve
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& my @retrieved_objs = $session\->get(
\&     object => \*(AqInfoblox::DNS::DDNS::PrincipalCluster\*(Aq,
\&     name   => \*(Aqgroup11\*(Aq,
\& );
.Ve
.RE
.RS 4
.RE
.SH "MODULE METHODS"
.IX Header "MODULE METHODS"
.SS "Infoblox::DNS::DDNS::PrincipalCluster::Group\->clusters( )"
.IX Subsection "Infoblox::DNS::DDNS::PrincipalCluster::Group->clusters( )"
.RS 4
Use this method to retrieve a list of \s-1DDNS\s0 Principal Clusters. 
See Infoblox::DNS::DDNS::PrincipalCluster::Group\->\fBclusters()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #get clusters value
\& my $clusters = $object\->clusters();
.Ve
.RE
.RS 4
.RE
.SH "METHODS"
.IX Header "METHODS"
This section describes all the methods that you can use to set or retrieve the attribute values of the object.
.SS "comment( )"
.IX Subsection "comment( )"
.RS 4
Use this method to set or retrieve a descriptive comment.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is a comment in string format (\s-1UTF\-8\s0) with a maximum of 256 bytes.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns 'true' when the modification succeeds, and returns 'false' when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #get comment value
\& my $comment = $object\->comment();
\&
\& #modify comment value
\& $object\->comment(\*(Aqdesired comment\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "group( )"
.IX Subsection "group( )"
.RS 4
Use this method to set or retrieve the \s-1DDNS\s0 Principal Cluster group the cluster associated with.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is a \s-1DDNS\s0 Principal Cluster group name in string format (\s-1UTF\-8\s0) with a maximum of 256 bytes.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns 'true' when the modification succeeds, and returns 'false' when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #get group value
\& my $group = $object\->group();
\&
\& #modify group value
\& $object\->group(\*(Aqdesired_group\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "name( )"
.IX Subsection "name( )"
.RS 4
Use this method to set or retrieve the \s-1DDNS\s0 Principal Cluster name.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Desired name in string format with a maximum of 256 bytes.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns 'true' when the modification succeeds, and returns 'false' when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #get name value
\& my $name = $object\->name();
\&
\& #modify name value
\& $object\->name(\*(Aqfoo\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "principals( )"
.IX Subsection "principals( )"
.RS 4
Use this method to set or retrieve a list of equivalent principals.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an array of desired principal names in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns 'true' when the modification succeeds, and returns 'false' when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #get principals value
\& my $principals = $object\->principals();
\&
\& #modify principals value
\& $object\->principals([\*(Aqfoo\*(Aq, \*(Aqbar\*(Aq]);
.Ve
.RE
.RS 4
.RE
.SH "AUTHOR"
.IX Header "AUTHOR"
Infoblox Inc. <http://www.infoblox.com/>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Infoblox::Session, 
Infoblox::Session\->\fBadd()\fR, 
Infoblox::Session\->\fBget()\fR, 
Infoblox::Session\->\fBmodify()\fR, 
Infoblox::Session\->\fBremove()\fR, 
Infoblox::Session\->\fBsearch()\fR, 
Infoblox::DNS::DDNS::PrincipalCluster::Group, 
Infoblox::DNS::DDNS::PrincipalCluster::Group\->\fBclusters()\fR.
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2017 Infoblox Inc.

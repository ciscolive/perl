.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "match::smart 3"
.TH match::smart 3 "2017-01-31" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
match::smart \- clone of smartmatch operator
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&   use v5.10;
\&   use match::smart;
\&   
\&   if ($this |M| $that)
\&   {
\&      say "$this matches $that";
\&   }
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
match::smart provides a match operator \f(CW\*(C`|M|\*(C'\fR that acts like more or
less identically to the (as of Perl 5.18) deprecated smart match operator.
.PP
If you don't like the crazy Sub::Infix operator, you can alternatively
export a more normal function:
.PP
.Vb 2
\&   use v5.10;
\&   use match::smart qw(match);
\&   
\&   if (match($this, $that))
\&   {
\&      say "$this matches $that";
\&   }
.Ve
.SS "Differences with ~~"
.IX Subsection "Differences with ~~"
There were major changes to smart match between 5.10.0 and 5.10.1. This
module attempts to emulate the behaviour of the operator in more recent
versions of Perl. In particular, 5.18.0 (minus the warnings). Divergences
not noted below should be considered bugs.
.PP
While the real smart match operator implicitly takes references to operands
that are hashes or arrays, match::smart's operator does not.
.PP
.Vb 2
\&   @foo ~~ %bar       # means: \e@foo ~~ \e%bar
\&   @foo |M| %bar      # means: scalar(@foo) |M| scalar(%bar)
.Ve
.PP
If you want the \f(CW\*(C`\e@foo ~~ \e%bar\*(C'\fR behaviour, you need to add the
backslashes yourself:
.PP
.Vb 1
\&   \e@foo |M| \e%bar
.Ve
.PP
Similarly:
.PP
.Vb 3
\&   "foo" ~~  /foo/    # works
\&   "foo" |M| /foo/    # no worky!
\&   "foo" |M| qr/foo/  # do this instead
.Ve
.PP
match::smart treats the \f(CW\*(C`MATCH\*(C'\fR method on blessed objects (if it exists)
like an overloaded \f(CW\*(C`~~\*(C'\fR. This is for compatibility with match::simple,
and for compatibility with pre\-5.10 Perls that don't allow overloading
\&\f(CW\*(C`~~\*(C'\fR.
.SH "BUGS"
.IX Header "BUGS"
Please report any bugs to
<http://rt.cpan.org/Dist/Display.html?Queue=match\-simple>.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
match::simple.
.PP
This module uses Exporter::Tiny.
.SH "AUTHOR"
.IX Header "AUTHOR"
Toby Inkster <tobyink@cpan.org>.
.SH "COPYRIGHT AND LICENCE"
.IX Header "COPYRIGHT AND LICENCE"
This software is copyright (c) 2013\-2014, 2017 by Toby Inkster.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
.SH "DISCLAIMER OF WARRANTIES"
.IX Header "DISCLAIMER OF WARRANTIES"
\&\s-1THIS PACKAGE IS PROVIDED \*(L"AS IS\*(R" AND WITHOUT ANY EXPRESS OR IMPLIED
WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
MERCHANTIBILITY AND FITNESS FOR A PARTICULAR PURPOSE.\s0

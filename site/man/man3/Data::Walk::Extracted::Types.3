.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Data::Walk::Extracted::Types 3"
.TH Data::Walk::Extracted::Types 3 "2016-08-16" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Data::Walk::Extracted::Types \- A type library for Data::Walk::Extracted
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 8
\&    package Data::Walk::Extracted::MyRole;
\&        use Moose::Role;
\&        use Data::Walk::Extracted::Types qw(
\&                posInt
\&        );
\&    use Log::Shiras::Types qw(
\&        posInt #See Code for other options
\&    );
\&
\&    has \*(Aqsomeattribute\*(Aq =>(
\&            isa     => posInt,#Note the lack of quotes
\&        );
\&
\&    sub valuetestmethod{
\&        my ( $self, $value ) = @_;
\&        return is_posInt( $value );
\&    }
\&
\&    no Moose::Role;
\&
\&    1;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This is the custom type class that ships with the Data::Walk::Extracted
 <https://metacpan.org/module/Data::Walk::Extracted> package.  Wherever
possible errors to coersions are passed back to the type so coersion failure
will be explained.
.PP
There are only subtypes in this package!  \fB\s-1WARNING\s0\fR These types should be
considered in a beta state.  Future type fixing will be done with a set of tests in
the test suit of this package.  (currently none are implemented)
.PP
See MooseX::Types <https://metacpan.org/module/MooseX::Types> for general re-use
of this module.
.SH "Types"
.IX Header "Types"
.SS "posInt"
.IX Subsection "posInt"
.RS 4
\&\fBDefinition: \fRall integers equal to or greater than 0
.Sp
\&\fBCoercions: \fRno coersion available
.RE
.SH "TODO"
.IX Header "TODO"
.RS 4
\&\fB1.\fR write a test suit for the types to permanently define behavior!
.Sp
\&\fB2.\fR Add Log::Shiras <https://metacpan.org/module/Log::Shiras> debugging statements
.RE
.SH "SUPPORT"
.IX Header "SUPPORT"
github Data\-Walk\-Extracted/issues <https://github.com/jandrew/Data-Walk-Extracted/issues>
.SH "AUTHOR"
.IX Header "AUTHOR"
.RS 4
Jed Lund
.Sp
jandrew@cpan.com
.RE
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
This program is free software; you can redistribute
it and/or modify it under the same terms as Perl itself.
.PP
The full text of the license can be found in the
\&\s-1LICENSE\s0 file included with this module.
.PP
This software is copyrighted (c) 2013, 2016 by Jed Lund.
.SH "DEPENDENCIES"
.IX Header "DEPENDENCIES"
.RS 4
version
.Sp
utf8
.Sp
MooseX::Types
.Sp
MooseX::Types::Moose
.RE
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.RS 4
MooseX::Types::Perl
.RE

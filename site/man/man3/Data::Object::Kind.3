.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Data::Object::Kind 3"
.TH Data::Object::Kind 3 "2020-04-18" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Data::Object::Kind
.SH "ABSTRACT"
.IX Header "ABSTRACT"
Abstract Base Class for Data::Object Value Classes
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  package Data::Object::Hash;
\&
\&  use base \*(AqData::Object::Kind\*(Aq;
\&
\&  sub new {
\&    bless {};
\&  }
\&
\&  package main;
\&
\&  my $hash = Data::Object::Hash\->new;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This package provides methods common across all Data::Object value classes.
.SH "LIBRARIES"
.IX Header "LIBRARIES"
This package uses type constraints from:
.PP
Data::Object::Types
.SH "METHODS"
.IX Header "METHODS"
This package implements the following methods:
.SS "class"
.IX Subsection "class"
.Vb 1
\&  class() : Str
.Ve
.PP
The class method returns the class name for the given class or object.
.IP "class example #1" 4
.IX Item "class example #1"
.Vb 1
\&  # given: synopsis
\&
\&  $hash\->class; # Data::Object::Hash
.Ve
.SS "detract"
.IX Subsection "detract"
.Vb 1
\&  detract() : Any
.Ve
.PP
The detract method returns the raw data value for a given object.
.IP "detract example #1" 4
.IX Item "detract example #1"
.Vb 1
\&  # given: synopsis
\&
\&  $hash\->detract; # {}
.Ve
.SS "space"
.IX Subsection "space"
.Vb 1
\&  space() : SpaceObject
.Ve
.PP
The space method returns a Data::Object::Space object for the given object.
.IP "space example #1" 4
.IX Item "space example #1"
.Vb 1
\&  # given: synopsis
\&
\&  $hash\->space; # <Data::Object::Space>
.Ve
.SS "type"
.IX Subsection "type"
.Vb 1
\&  type() : Str
.Ve
.PP
The type method returns object type string.
.IP "type example #1" 4
.IX Item "type example #1"
.Vb 1
\&  # given: synopsis
\&
\&  $hash\->type; # HASH
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Al Newkirk, \f(CW\*(C`awncorp@cpan.org\*(C'\fR
.SH "LICENSE"
.IX Header "LICENSE"
Copyright (C) 2011\-2019, Al Newkirk, et al.
.PP
This is free software; you can redistribute it and/or modify it under the terms
of the The Apache License, Version 2.0, as elucidated in the \*(L"license
file\*(R" <https://github.com/iamalnewkirk/foobar/blob/master/LICENSE>.
.SH "PROJECT"
.IX Header "PROJECT"
Wiki <https://github.com/iamalnewkirk/foobar/wiki>
.PP
Project <https://github.com/iamalnewkirk/foobar>
.PP
Initiatives <https://github.com/iamalnewkirk/foobar/projects>
.PP
Milestones <https://github.com/iamalnewkirk/foobar/milestones>
.PP
Contributing <https://github.com/iamalnewkirk/foobar/blob/master/CONTRIBUTE.md>
.PP
Issues <https://github.com/iamalnewkirk/foobar/issues>

.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "App::UnANSI 3"
.TH App::UnANSI 3 "2016-12-19" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
App::UnANSI \- Remove ANSI coloring from output or files
.SH "VERSION"
.IX Header "VERSION"
version 0.003
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 5
\&    use App::UnANSI;
\&    my $unansi = App::UnANSI\->new();
\&    my $some_line = get_line_with_coloring();
\&    $unansi\->remove_ansi_colors($some_line);
\&    # $some_line is now clean
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This is the underlying implementation of
unansi <https://metacpan.org/pod/distribution/App-UnANSI/bin/unansi>.
.PP
This is the documentation of the command implementation. You are most likely
looking for the command documentation itself:
unansi <https://metacpan.org/pod/distribution/App-UnANSI/bin/unansi>.
.SH "ATTRIBUTES"
.IX Header "ATTRIBUTES"
.SS "files"
.IX Subsection "files"
Can be set on instantiation, returns a list of files to process.
.PP
.Vb 1
\&    my @files_to_process = $unansi\->files;
.Ve
.SH "METHODS"
.IX Header "METHODS"
.SS "new"
.IX Subsection "new"
Creates a new instance. You can provide \f(CW\*(C`files\*(C'\fR to process.
.PP
.Vb 1
\&    my $unansi = App::UnANSI\->new();
\&
\&    # or
\&
\&    my $unansi = App::UnANSI\->new(
\&        \*(Aqfiles\*(Aq => [ \*(Aqfoo.txt\*(Aq, \*(Aqbar.txt\*(Aq ],
\&    );
.Ve
.SS "new_with_options"
.IX Subsection "new_with_options"
Creates a new instance using options from the command line. This
is what the \s-1CLI\s0 uses.
.SS "run"
.IX Subsection "run"
Processes either the files or the input from the command line. In both cases
it prints to the screen. This might change for files in the future.
.SS "remove_ansi_colors"
.IX Subsection "remove_ansi_colors"
The actual code that removes the \s-1ANSI\s0 coloring from a string. It alters the
string it receives, for speed purposes.
.PP
.Vb 2
\&    my $line = \*(Aq...\*(Aq;
\&    $unansi\->remove_ansi_colors($line);
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Sawyer X
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is Copyright (c) 2016 by Sawyer X.
.PP
This is free software, licensed under:
.PP
.Vb 1
\&  The MIT (X11) License
.Ve

.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.41)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "IP::World 3"
.TH IP::World 3 "2020-10-16" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
IP::World \- Fast IP\-address to country\-code translation using multiple databases
.SH "DEPRECATION"
.IX Header "DEPRECATION"
The databases that this module used to use have been discontinued in one case,
and are no longer updated in the other. Therefore this module is deprecated.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.SS "IP::Country::Fast"
.IX Subsection "IP::Country::Fast"
See <http://search.cpan.org/perldoc%3FIP::Country>
.PP
This module appears to have the disadvantage that its database can
only be updated by re-installing the module.
.SS "Geo::IP"
.IX Subsection "Geo::IP"
See <http://search.cpan.org/perldoc%3FGeo::IP>
.PP
This can use MaxMind's licensed, fee-based databases that include more data.
.PP
Unfortunately if you want this package to operate at the speeds 
shown in \*(L"\s-1PERFORMANCE\*(R"\s0, you have to download a C library from 
<http://www.maxmind.com> and install it from the command line.  
Someone should tell them about \s-1XS\s0 modules so that their whole 
package can be obtained from \s-1CPAN\s0 or \s-1CPANPLUS...\s0
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 3
\& use IP::World;
\& $ipw = IP::World\->new($mode);
\& $ccod = $ipw\->getcc($ipad);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The author uses this package for customizing served web pages to
the location of the visitor, particularly to quote prices of items
for sale in the visitor's currency.  Also for server log analysis.
.PP
IP::World returns the \s-1ISO\-3166\s0 country code associated with an \s-1IP4\s0
address. This version is based on the free database from
<http://www.wipmania.com>. Note, however, that that appears to no
longer be updated. Accordingly, this module is now deprecated.
.PP
It used to also use the free GeoLite database from MaxMind but that
has been discontinued (see <https://blog.maxmind.com/2018/01/02/discontinuation\-of\-the\-geolite\-legacy\-databases/>).
If you were relying on the GeoLite database you should upgrade to
using GeoLite2 (see <https://dev.maxmind.com/geoip/geoip2/geolite2/>).
.SS "\s-1EXPORTS\s0"
.IX Subsection "EXPORTS"
You can optionally export some constants (the IP_WORLD_* constants
listed below) when you 'use' the module. For example:
.PP
.Vb 1
\&  use IP::World qw(IP_WORLD_TINY_PERL);
.Ve
.SS "\s-1METHODS\s0"
.IX Subsection "METHODS"
\fInew\fR
.IX Subsection "new"
.PP
.Vb 1
\&  $ipw = IP::World\->new($mode);
.Ve
.PP
In object-oriented terms, this is a \fIconstructor\fR.  It returns a
scalar object that's used in calling the \fIgetcc\fR method as described
below.
.PP
\&\fI\f(CI$mode\fI\fR is optional and selects the operating mode:
.IP "0 or \s-1IP_WORLD_FAST\s0" 4
.IX Item "0 or IP_WORLD_FAST"
fast, keeps data in memory (643 \s-1KB\s0 at initial release, but 
who cares these days?) This is the default.
.IP "1 or \s-1IP_WORLD_MMAP\s0" 4
.IX Item "1 or IP_WORLD_MMAP"
Mmap, keeps data in Mmap memory, may reduce total memory 
requirement of sibling processes. If your system doesn't support Mmap, 
1 operates like 0.
.IP "2 or \s-1IP_WORLD_TINY\s0" 4
.IX Item "2 or IP_WORLD_TINY"
tiny, slow but saves memory by searching the database on disk using traditional
C library I/O calls.
.IP "3 or \s-1IP_WORLD_TINY_PERL\s0" 4
.IX Item "3 or IP_WORLD_TINY_PERL"
tiny PerlIO, slow but saves memory by searching the database on disk using Perl
I/O calls.  If your system doesn't support Perl I/O, 3 works like 2.  If it
does, performance may differ between this option and the preceding one.
.PP
\fIgetcc\fR
.IX Subsection "getcc"
.PP
.Vb 1
\&  $ccod = $ipw\->getcc($ipad);
.Ve
.PP
\&\fI\f(CI$ipad\fI\fR should contain an \s-1IP4\s0 address in one of two formats:
.IP "\(bu" 4
a \fIdotted quad\fR string like \f(CW\*(Aq13.117.255.3\*(Aq\fR
.IP "\(bu" 4
a 4\-byte packed binary string produced by \fIinet_aton\fR or
\&\f(CW\*(C`pack(\*(AqC4\*(Aq, four values 0\-255)\*(C'\fR
.PP
The return value from \fIgetcc\fR will always be a 2\-character string.
For most \s-1IP\s0 addresses this will be one of the codes defined in
the \s-1ISO\-3166\s0 standard.  You can see these codes on
<http://www.iso.org/iso/english_country_names_and_code_elements>.
.PP
Two return values indicate problems in determining the country code:
.IP "\(bu" 4
** indicates that \fI\f(CI$ipad\fI\fR was not in either of the
two formats described above.
.IP "\(bu" 4
?? indicates that the database doesn't include a mapping
for the \s-1IP\s0 address.
.SS "\s-1SCRIPTS\s0"
.IX Subsection "SCRIPTS"
Three Perl scripts are installed with IP::World:
.PP
\fImaint_ip_world_db\fR
.IX Subsection "maint_ip_world_db"
.PP
The application checks whether new data is available from either data 
source.  If there is, it downloads the data and builds a new database.
.PP
You can run this manually to check for a new database, or (on a
server or other 24/7 system) you can schedule it for automatic
execution at a non-busy time.
.PP
In either case you should run \fImaint_ip_world_db\fR with privilege to
rewrite the database file.  For Unix/Linux systems this means
running it as \fIroot\fR, such as by entering the command
\&\f(CW\*(C`sudo maint_ip_world_db\*(C'\fR.
.PP
During installation, you will be asked if a command should be
executed by \fImaint_ip_world_db\fR when a new database has been
created (e.g., to restart a web server that uses the database).
.PP
The install process for IP::World runs \fImaint_ip_world_db\fR to ensure
that the most recent data is installed.
.PP
\fIip_world_dump\fR
.IX Subsection "ip_world_dump"
.PP
Lists the database created by \fImaint_ip_world_db\fR.
.PP
\fIip_cc_benchmark\fR
.IX Subsection "ip_cc_benchmark"
.PP
Compares the performance of IP::World with that of similar modules.
.SS "\s-1PERFORMANCE\s0"
.IX Subsection "PERFORMANCE"
\&\fIip-benchmark\fR showed the following results in one run on the 
author's server:
.PP
.Vb 10
\&  Module                       Total uS  uS/call  % not covered
\&  Geo::IP Standard               281982    68.84  32
\&  Geo::IP Memory Cache            25626     6.26  32
\&  IP::Country::Fast              131887    32.20  29
\&  IP::Country::Fast    packed    101378    24.75  29
\&  IP::World fast                   9311     2.27  27
\&  IP::World fast       packed      6965     1.70  27
\&  IP::World mmap                   9084     2.22  27
\&  IP::World mmap       packed      7023     1.71  27
\&  IP::World tinyC                207054    50.55  27
\&  IP::World tinyC      packed    210123    51.30  27
\&  IP::World tinyPerl             654634   159.82  27
\&  IP::World tinyPerl   packed    554801   135.45  27
.Ve
.PP
\&\fIpacked\fR indicates conversion of a packed 32\-bit \s-1IP\s0 address rather
than a text address.  \fIip-benchmark\fR uses the same set of random 
\&\s-1IP\s0 addresses for all of the modules in each execution.
.SS "\s-1TERMINOLOGY\s0"
.IX Subsection "TERMINOLOGY"
Our scripts \fIip_world_dump\fR and \fIip-benchmark\fR both use the term 
\&'not covered' to describe \s-1IP\s0 addresses that do not map to country 
codes.  These fall into 4 categories:
.IP "addresses that were once used but are no longer used," 4
.IX Item "addresses that were once used but are no longer used,"
.PD 0
.IP "addresses that are assigned for private use," 4
.IX Item "addresses that are assigned for private use,"
.IP "addresses that are not assigned/allocated, and" 4
.IX Item "addresses that are not assigned/allocated, and"
.IP "addresses that were assigned/allocated in the last month or two, that our data sources do not yet include." 4
.IX Item "addresses that were assigned/allocated in the last month or two, that our data sources do not yet include."
.PD
.SH "INSTALLATION"
.IX Header "INSTALLATION"
See the \s-1README\s0 file in the distribution package, or let \s-1CPAN\s0 or 
\&\s-1CPANPLUS\s0 take care of installation.
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright (C) 2010, Craig MacKenna, with some contributions from
David Cantrell
.PP
This module is free software; you may redistribute it and/or
modify it under the terms of the Artistic Licence, a copy of which
is included in the file \s-1ARTISTIC\s0.txt.
.PP
This program is distributed in the hope that it will be useful, but
it is provided 'as is' and without any express or implied warranties.
For details, see the full text of the licenses.
.PP
The WIPmania database has its own Special licence which can be found
on their website at <http://www.wipmania.com/terms/>. In particular
note that it is \*(L"Creative Commons Attribution-Noncommercial-No Derivative
Works\*(R" but they also say \*(L"The Databases can be also used for any business
purposes for free\*(R" provided that you don't provide an \s-1API\s0 for querying
it, you don't sell derivative works, and you may have to credit them on
a website.
.SH "AUTHORS"
.IX Header "AUTHORS"
Craig MacKenna <craig@animalhead.com>
.PP
David Cantrell <david@cantrell.org.uk>

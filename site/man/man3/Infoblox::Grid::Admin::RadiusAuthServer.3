.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Infoblox::Grid::Admin::RadiusAuthServer 3"
.TH Infoblox::Grid::Admin::RadiusAuthServer 3 "2018-06-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Infoblox::Grid::Admin::RadiusAuthServer \- RADIUS Authentication Server object
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Represents a \s-1RADIUS\s0 server that is used to authenticate administrators and \s-1DHCP\s0 clients.
.SH "CONSTRUCTOR"
.IX Header "CONSTRUCTOR"
.Vb 11
\& my $radius_auth_server = Infoblox::Grid::Admin::RadiusAuthServer\->new(
\&     acct_enabled     => "true" | "false"      #Optional / Default is false
\&     acct_port        => $num,                 #Optional / Default is 1813
\&     auth_port        => $num,                 #Optional / Default is 1812
\&     auth_type        => "PAP" | "CHAP",       #Optional / Default is "PAP"
\&     comment          => $string,              #Optional / Default is empty
\&     disabled         => "true" | "false"      #Optional / Default is false
\&     fqdn_or_ip       => $fqdn | $ipv4addr     #Required
\&     shared_secret    => $string,              #Required
\&     use_mgmt_port    => "true" | "false"      #Optional / Default is false
\& );
.Ve
.SH "SESSION METHODS"
.IX Header "SESSION METHODS"
This section describes all the methods in an Infoblox::Session module that you can apply to an object.
.SS "Infoblox::Grid::Admin::RadiusAuthService\->\fBradius_servers()\fP"
.IX Subsection "Infoblox::Grid::Admin::RadiusAuthService->radius_servers()"
.RS 4
Use this method to add a list of \s-1RADIUS\s0 Server objects to the \s-1RADIUS\s0 Service object on an Infoblox appliance. See Infoblox::Grid::Admin::RadiusAuthService for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 5
\& # Construct an object
\& my $radius_auth_server1 = Infoblox::Grid::Admin::RadiusAuthServer\->new(
\&                                                            fqdn_or_ip    => \*(Aq10.0.1.1\*(Aq,
\&                                                            shared_secret => \*(Aqsecret\*(Aq,
\& );
\&
\& # Construct another object
\& my $radius_auth_server2 = Infoblox::Grid::Admin::RadiusAuthServer\->new(
\&                                                            fqdn_or_ip    => \*(Aq10.0.2.1\*(Aq,
\&                                                            shared_secret => \*(Aqsecret\*(Aq,
\& );
\&
\& # Configure RadiusAuthServer
\& my $response = $radius_auth_service\->radius_servers([$radius_auth_server1, $radius_auth_server2]);
.Ve
.RE
.RS 4
.RE
.SH "METHODS"
.IX Header "METHODS"
Use the following methods to access the attributes of an Infoblox::Grid::Admin::RadiusAuthServer object. Specify a parameter to set the attribute's value, or omit the parameter to get the attribute's value.
.SS "acct_enabled( )"
.IX Subsection "acct_enabled( )"
.RS 4
Use this method to set or retrieve the flag that indicates if the \s-1RADIUS\s0 server is enabled for accounting packets.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to set the disable flag or \*(L"false\*(R" to deactivate/unset it. The default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\&   #Get acct_enabled
\&   my $acct_enabled = $radius_server\->acct_enabled();
\&   #Modify acct_enabled
\&   $radius_server\->acct_enabled("true");
.Ve
.RE
.RS 4
.RE
.SS "acct_port( )"
.IX Subsection "acct_port( )"
.RS 4
Use this method to set or retrieve the port number used by \s-1RADIUS\s0 server for accounting packets.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
An unsigned integer between 1 and 65535, inclusive.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\&   #Getting acct_port
\&   my $acct_port = $radius_server\->acct_port( );
\&   #Modifying acct_port
\&   $radius_server\->acct_port("1813");
.Ve
.RE
.RS 4
.RE
.SS "auth_port( )"
.IX Subsection "auth_port( )"
.RS 4
Use this method to set or retrieve the port number used by the \s-1RADIUS\s0 server for accounting packets.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
An unsigned integer between 1 and 65535, inclusive.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\&   #Getting auth_port
\&   my $auth_port = $radius_server\->auth_port( );
\&   #Modifying auth_port
\&   $radius_server\->auth_port("1812");
.Ve
.RE
.RS 4
.RE
.SS "auth_type( )"
.IX Subsection "auth_type( )"
.RS 4
Use this method to set or retrieve the authentication type used by the \s-1RADIUS\s0 client and server.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is either \*(L"\s-1PAP\*(R"\s0 or \*(L"\s-1CHAP\*(R",\s0 the default is \*(L"\s-1PAP\*(R".\s0
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\&   #Getting auth_type
\&   my $auth_type = $radius_server\->auth_type( );
\&   #Modifying auth_type
\&   $radius_server\->auth_type("PAP");
.Ve
.RE
.RS 4
.RE
.SS "comment( )"
.IX Subsection "comment( )"
.RS 4
Use this method to set or retrieve a descriptive comment about the \s-1RADIUS\s0 server.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The comment in string format, with a maximum of 256 characters.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\&   #Get comment
\&   my $comment = $radius_server\->comment();
\&   #Modify comment
\&   $radius_server\->comment("NAC Authentication RADIUS server");
.Ve
.RE
.RS 4
.RE
.SS "disabled( )"
.IX Subsection "disabled( )"
.RS 4
Use this method to set or retrieve the disable flag of the \s-1RADIUS\s0 server.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to set the disable flag or \*(L"false\*(R" to deactivate/unset it. The default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\&   #Get disabled
\&   my $disable = $radius_server\->disabled();
\&   #Modify disabled
\&   $radius_server\->disabled("true");
.Ve
.RE
.RS 4
.RE
.SS "fqdn_or_ip( )"
.IX Subsection "fqdn_or_ip( )"
.RS 4
Use this method to set or retrieve the \s-1FQDN\s0 or \s-1IP\s0 address of the \s-1RADIUS\s0 server.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
A string in \s-1FQDN\s0 (Fully Qualified Domain Name) format, or an \s-1IP\s0 address.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\&   #Get fqdn_or_ip
\&   my $fqdn_or_ip = $radius_server\->fqdn_or_ip();
\&   #Modify fqdn_or_ip
\&   $radius_server\->fqdn_or_ip("10.0.0.1");
.Ve
.RE
.RS 4
.RE
.SS "shared_secret( )"
.IX Subsection "shared_secret( )"
.RS 4
Use this method to set the shared secret used by the \s-1RADIUS\s0 client and \s-1RADIUS\s0 server. This is a write-only attribute.
.Sp
Include the specified parameter to set the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The shared secret in string format, with a maximum of 128 characters.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\&   #Modify shared_secret
\&   $radius_server\->shared_secret("secret");
.Ve
.RE
.RS 4
.RE
.SS "use_mgmt_port( )"
.IX Subsection "use_mgmt_port( )"
.RS 4
Use this method to set or retrieve the flag that indicates if the appliance connects to the \s-1RADIUS\s0 server through the \s-1MGMT\s0 network interface.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify \*(L"true\*(R" to set the flag or \*(L"false\*(R" to deactivate/unset it. The default value is \*(L"false\*(R".
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\&   #Get use_mgmt_port
\&   my $use_mgmt_port = $radius_server\->use_mgmt_port();
\&   #Modify use_mgmt_port
\&   $radius_server\->use_mgmt_port("true");
.Ve
.RE
.RS 4
.RE
.SH "AUTHOR"
.IX Header "AUTHOR"
Infoblox Inc. <http://www.infoblox.com>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Infoblox::Grid::Admin::RadiusAuthService, Infoblox::Session, Infoblox::Session\->\fBadd()\fR, Infoblox::Session\->\fBget()\fR, Infoblox::Session\->\fBmodify()\fR, Infoblox::Session\->\fBremove()\fR
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2017 Infoblox Inc.

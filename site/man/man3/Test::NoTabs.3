.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Test::NoTabs 3"
.TH Test::NoTabs 3 "2018-04-21" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Test::NoTabs \- Check the presence of tabs in your project
.SH "VERSION"
.IX Header "VERSION"
version 2.02
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\f(CW\*(C`Test::NoTabs\*(C'\fR lets you check the presence of tabs in your perl code. It
report its results in standard \f(CW\*(C`Test::Simple\*(C'\fR fashion:
.PP
.Vb 2
\&  use Test::NoTabs tests => 1;
\&  notabs_ok( \*(Aqlib/Module.pm\*(Aq, \*(AqModule is tab free\*(Aq);
.Ve
.PP
Module authors can include the following in a t/notabs.t and have \f(CW\*(C`Test::NoTabs\*(C'\fR
automatically find and check all perl files in a module distribution:
.PP
.Vb 2
\&  use Test::NoTabs;
\&  all_perl_files_ok();
.Ve
.PP
or
.PP
.Vb 2
\&  use Test::NoTabs;
\&  all_perl_files_ok( @mydirs );
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module scans your project/distribution for any perl files (scripts,
modules, etc) for the presence of tabs.
.SH "FUNCTIONS"
.IX Header "FUNCTIONS"
.ie n .SS "all_perl_files_ok( [ @directories ] )"
.el .SS "all_perl_files_ok( [ \f(CW@directories\fP ] )"
.IX Subsection "all_perl_files_ok( [ @directories ] )"
Applies \f(CW\*(C`notabs_ok()\*(C'\fR to all perl files found in \f(CW@directories\fR (and sub
directories). If no <@directories> is given, the starting point is one level
above the current running script, that should cover all the files of a typical
\&\s-1CPAN\s0 distribution. A perl file is *.pl or *.pm or *.t or a file starting
with \f(CW\*(C`#!...perl\*(C'\fR
.PP
If the test plan is defined:
.PP
.Vb 2
\&  use Test::NoTabs tests => 3;
\&  all_perl_files_ok();
.Ve
.PP
the total number of files tested must be specified.
.ie n .SS "notabs_ok( $file [, $text] )"
.el .SS "notabs_ok( \f(CW$file\fP [, \f(CW$text\fP] )"
.IX Subsection "notabs_ok( $file [, $text] )"
Run a tab check on \f(CW$file\fR. For a module, the path (lib/My/Module.pm) or the
name (My::Module) can be both used.
.SH "ACKNOWLEDGEMENTS"
.IX Header "ACKNOWLEDGEMENTS"
Inspired by some code written by Paul Lindner.
.PP
Test::Strict was used as an example when creating this module and
distribution.
.PP
Rick Myers and Emanuele Zeppieri also provided valuable feedback.
.PP
Patch to fix warnings provided by Florian Ragwitz (rafl)
.PP
Currently maintained by Tomas Doran (t0m) \f(CW\*(C`bobtfish@bobtfish.net\*(C'\fR
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Test::More, Test::Pod. Test::Distribution, Test::NoWarnings
.SH "SUPPORT"
.IX Header "SUPPORT"
Bugs may be submitted through the \s-1RT\s0 bug tracker <https://rt.cpan.org/Public/Dist/Display.html?Name=Test-NoTabs>
(or bug\-Test\-NoTabs@rt.cpan.org <mailto:bug-Test-NoTabs@rt.cpan.org>).
.PP
There is also a mailing list available for users of this distribution, at
<http://lists.perl.org/list/perl\-qa.html>.
.PP
There is also an irc channel available for users of this distribution, at
\&\f(CW\*(C`#perl\*(C'\fR on \f(CW\*(C`irc.perl.org\*(C'\fR <irc://irc.perl.org/#perl-qa>.
.SH "AUTHORS"
.IX Header "AUTHORS"
.IP "\(bu" 4
Nick Gerakines <nick@socklabs.com>
.IP "\(bu" 4
Tomas Doran (t0m) <bobtfish@bobtfish.net>
.SH "CONTRIBUTORS"
.IX Header "CONTRIBUTORS"
.IP "\(bu" 4
Karen Etheridge <ether@cpan.org>
.IP "\(bu" 4
Nick Gerakines <nick@gerakines.net>
.IP "\(bu" 4
Prakash Kailasa <pk\-github@kailasa.net>
.IP "\(bu" 4
Justin Cook <jscook@users.noreply.github.com>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2006 by Nick Gerakines.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Markdent::Role::EventsAsMethods 3"
.TH Markdent::Role::EventsAsMethods 3 "2020-07-03" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Markdent::Role::EventsAsMethods \- Turns events into method calls
.SH "VERSION"
.IX Header "VERSION"
version 0.37
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This role takes an object which does Markdent::Role::Event role and turns
it into a method call.
.SH "METHODS"
.IX Header "METHODS"
This role provides the following methods:
.ie n .SS "$object\->handle_event($event)"
.el .SS "\f(CW$object\fP\->handle_event($event)"
.IX Subsection "$object->handle_event($event)"
Given an object which does Markdent::Role::Event role, this method makes a
method call on \f(CW$object\fR based on the event's name.
.PP
The method name is the same as the value of \f(CW\*(C`$event\->event_name()\*(C'\fR. The
hash reference returned by \f(CW\*(C`$event\->attributes()\*(C'\fR is turned into a set of
named parameters for the method. However, any keys starting with \*(L"!\*(R" in the
attributes will not be passed to the method.
.PP
So, for example, a Markdent::Event::StartLink event turns into a method
call like this:
.PP
.Vb 6
\&  $handler\->start_link(
\&      uri            => $event\->uri(),
\&      title          => $title,                     # optional
\&      id             => $id,                        # optional
\&      is_implicit_id => $event\->is_implicit_id(),
\&  );
.Ve
.SH "ROLES"
.IX Header "ROLES"
This role does the Markdent::Role::Handler role.
.SH "BUGS"
.IX Header "BUGS"
See Markdent for bug reporting details.
.PP
Bugs may be submitted at <https://github.com/houseabsolute/Markdent/issues>.
.PP
I am also usually active on \s-1IRC\s0 as 'autarch' on \f(CW\*(C`irc://irc.perl.org\*(C'\fR.
.SH "SOURCE"
.IX Header "SOURCE"
The source code repository for Markdent can be found at <https://github.com/houseabsolute/Markdent>.
.SH "AUTHOR"
.IX Header "AUTHOR"
Dave Rolsky <autarch@urth.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2020 by Dave Rolsky.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
.PP
The full text of the license can be found in the
\&\fI\s-1LICENSE\s0\fR file included with this distribution.

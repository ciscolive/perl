.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Infoblox::Grid::ThreatAnalytics::WhiteList 3"
.TH Infoblox::Grid::ThreatAnalytics::WhiteList 3 "2018-06-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Infoblox::Grid::ThreatAnalytics::WhiteList \- a Grid Threat Analytics White List object
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The Grid Threat Analytics White List provides information about allowed FQDNs in the \s-1DNS\s0 tunneling detection feature.
.SH "CONSTRUCTOR"
.IX Header "CONSTRUCTOR"
.Vb 5
\& my $whitelist = Infoblox::Grid::ThreatAnalytics::WhiteList\->new(
\&    fqdn    => $fqdn,            # Required
\&    comment => $string,          # Optional / Default is undefined
\&    disable => \*(Aqtrue\*(Aq | \*(Aqfalse\*(Aq, # Optional / Default is \*(Aqfalse\*(Aq
\& );
.Ve
.SH "SESSION METHODS"
.IX Header "SESSION METHODS"
The following functions can be applied to a Infoblox::Grid::ThreatAnalytics::WhiteList object.
.SS "Infoblox::Session\->add( )"
.IX Subsection "Infoblox::Session->add( )"
.RS 4
Use this method to add an object to the Infoblox appliance. See Infoblox::Session\->\fBadd()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 6
\& #Construct an object
\& my $whitelist = Infoblox::Grid::ThreatAnalytics::WhiteList\->new(
\&    fqdn => \*(Aqtest.com\*(Aq,
\&    comment => \*(Aqtest comment\*(Aq,
\&    disable => \*(Aqtrue\*(Aq,
\& );
\&
\& #Submit for addition
\& my $response = $session\->add( $whitelist );
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->get( )"
.IX Subsection "Infoblox::Session->get( )"
.RS 4
Use this method to retrieve all the matching objects from the Infoblox appliance. See Infoblox::Session\->\fBget()\fR for parameters and return values.
.IP "\fBKey References\fR" 4
.IX Item "Key References"
.Vb 4
\& Apply the following attributes to get a specific Infoblox::Grid::ThreatAnalytics::WhiteList object.
\&  fqdn    \- Optional. The Grid Threat Analytics White List FQDN. 
\&  status  \- Optional. The Grid Threat Analytics White List status.
\&  comment \- Optional. The Grid Threat Analytics White List comment.
.Ve
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& my @retrieved_objs = $session\->get(
\&     \*(Aqobject\*(Aq => \*(AqInfoblox::Grid::ThreatAnalytics::WhiteList\*(Aq, 
\&     \*(Aqfqdn\*(Aq   => \*(Aqtest.com\*(Aq,
\& );
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->modify( )"
.IX Subsection "Infoblox::Session->modify( )"
.RS 4
Use this method to modify an object in the Infoblox appliance. See Infoblox::Session\->\fBmodify()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& # modify whitelist object
\& $whitelist\->comment(\*(Aqcomment change\*(Aq);
\&
\& # Submit modification
\& my $response = $session\->modify( $whitelist );
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->remove( )"
.IX Subsection "Infoblox::Session->remove( )"
.RS 4
Use this method to remove an object from the Infoblox appliance. See Infoblox::Session\->\fBremove()\fR for parameters and return values.
.Sp
To remove a specific object, first use \fBget()\fR or \fBsearch()\fR to retrieve the specific object, and then submit this object for removal.
.Sp
Note that '\s-1SYSTEM\s0' Grid Threat Analytics White Lists cannot be removed.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Get the objects with the same name
\& my @retrieved_objs = $session\->get(
\&     object => \*(AqInfoblox::Grid::ThreatAnalytics::WhiteList\*(Aq, 
\&     fqdn   => \*(Aqtest.com\*(Aq);
\&
\& #Find the desired object from the retrieved list.
\& my $desired_whitelist = $retrieved_objs[0];
\&
\& # Submit for removal
\& my $response = $session\->remove( $desired_whitelist );
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->search( )"
.IX Subsection "Infoblox::Session->search( )"
.RS 4
Use this method to search for objects in the Infoblox appliance. See Infoblox::Session\->\fBsearch()\fR for parameters and return values.
.IP "\fBKey References\fR" 4
.IX Item "Key References"
.Vb 4
\& Apply the following attributes to search for a specific Infoblox::Grid::ThreatAnalytics::WhiteList object.
\&  fqdn    \- Optional. The Grid Threat Analytics White List FQDN. 
\&  status  \- Optional. The Grid Threat Analytics White List status.
\&  comment \- Optional. The Grid Threat Analytics White List comment.
.Ve
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& my @retrieved_objs = $session\->search(
\&     \*(Aqobject\*(Aq => \*(AqInfoblox::Grid::ThreatAnalytics::WhiteList\*(Aq,
\&     \*(Aqfqdn\*(Aq   => \*(Aqtest.*\*(Aq,
\& );
.Ve
.RE
.RS 4
.RE
.SH "METHODS"
.IX Header "METHODS"
.SS "comment( )"
.IX Subsection "comment( )"
.RS 4
Use this method to set or retrieve Grid Threat Analytics White List comment.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is desired comment in string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get comment
\& my $comment = $whitelist\->comment();
\&
\& #Modify comment
\& $whitelist\->comment(\*(Aqnew comment\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "disable( )"
.IX Subsection "disable( )"
.RS 4
Use this method to disable or enable Grid Threat Analytics White List.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify 'true' to disable Grid Threat Analytics White List or 'false' to enable it. The default value is 'false'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExmaple\fR" 4
.IX Item "Exmaple"
.Vb 2
\& #Get disable
\& my $disable = $whitelist\->disable();
\&
\& #Modify disable
\& $whitelist\->disable(\*(Aqtrue\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "fqdn( )"
.IX Subsection "fqdn( )"
.RS 4
Use this method to set or retrieve a fully-qualified domain name (\s-1FQDN\s0) of the Grid Threat Analytics White List.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is a desired \s-1FQDN\s0 in string format.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExmaple\fR" 4
.IX Item "Exmaple"
.Vb 2
\& #Get fqdn
\& my $fqdn = $whitelist\->fqdn();
\&
\& #Modify fqdn
\& $whitelist\->fqdn(\*(Aqtest2.com\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "status( )"
.IX Subsection "status( )"
.RS 4
Use this method to retrieve the status of Grid Threat Analytics White List. This is a read-only attribute.
.Sp
Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
None
.IP "\fBReturns\fR" 4
.IX Item "Returns"
The valid return value is '\s-1CUSTOM\s0', '\s-1BOTH\s0' or '\s-1SYSTEM\s0'.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get status
\& my $status = $whitelist\->status();
.Ve
.RE
.RS 4
.RE
.SH "AUTHOR"
.IX Header "AUTHOR"
Infoblox Inc. <http://www.infoblox.com/>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Infoblox::Session, Infoblox::Session\->\fBadd()\fR, Infoblox::Session\->\fBget()\fR, Infoblox::Session\->\fBremove()\fR, Infoblox::Session\->\fBsearch()\fR, Infoblox::Session\->\fBmodify()\fR
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2017 Infoblox Inc.

.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Infoblox::DTC::Monitor::SIP 3"
.TH Infoblox::DTC::Monitor::SIP 3 "2018-06-05" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Infoblox::DTC::Monitor::SIP \- A DTC SIP Health Monitor object.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The \s-1DTC SIP\s0 Health Monitor determines the health of a \s-1SIP\s0 servers such as \s-1SIP\s0 Proxies and Session Border Controllers, and \s-1SIP\s0 gateways by issuing \s-1SIP\s0 options to a server and examining the response provided by the server. The service is considered available if the received response matches the expected response.
.SH "CONSTRUCTOR"
.IX Header "CONSTRUCTOR"
.Vb 10
\& my $sip_monitor = Infoblox::DTC::Monitor::SIP\->new(
\&    name                  => $string,                                                               #Required
\&    ciphers               => [$cipher1, $cipher2, ...],                                             #Optional / Default is undefined
\&    client_cert           => $certificate                                                           #Optional / Default is undefined
\&    comment               => $string,                                                               #Optional / Default is undefined
\&    interval              => $uint,                                                                 #Optional / Default is undefined
\&    port                  => $uint,                                                                 #Optional / Default is undefined
\&    request               => $string,                                                               #Optional / Default is undefined
\&    result                => \*(AqANY\*(Aq | \*(AqCODE_IS\*(Aq | \*(AqCODE_IS_NOT\*(Aq,                                     #Optional / Default is undefined
\&    result_code           => $uint,                                                                 #Optional / Default is undefined
\&    retry_down            => $uint,                                                                 #Optional / Default is undefined 
\&    retry_up              => $uint,                                                                 #Optional / Default is undefined
\&    timeout               => $uint,                                                                 #Optional / Default is undefined
\&    transport             => \*(AqTCP\*(Aq | \*(AqUDP\*(Aq | \*(AqTLS\*(Aq | \*(AqSIPS\*(Aq,                                        #Optional / Default is undefined
\&    validate_cert         => \*(Aqtrue\*(Aq | \*(Aqfalse\*(Aq,                                                      #Optional / Default is \*(Aqfalse\*(Aq
\&    extattrs              => { $string => $extattr, ... },                                          #Optional / Default is undefined
\&    extensible_attributes => { $string => $string | $num, $string => [ $string | $num, ... ], ... } #Optional / Default is undefined
\& );
.Ve
.PP
You cannot set both extattrs and extensible_attributes attributes at the same time.
.SH "SESSION METHODS"
.IX Header "SESSION METHODS"
This section describes all the methods in a Session module that you can apply to a \s-1DTC SIP\s0 Monitor object
.SS "Infoblox::Session\->add( )"
.IX Subsection "Infoblox::Session->add( )"
.RS 4
Use this method to add an object to the Infoblox appliance. See Infoblox::Session\->\fBadd()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #construct an object
\& my $sip_monitor = Infoblox::DTC::Monitor::SIP\->new(
\&    name  => \*(Aqsip_monitor1\*(Aq,
\& );
\&
\& #submit for addition
\& my $response = $session\->add($sip_monitor);
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->get( )"
.IX Subsection "Infoblox::Session->get( )"
.RS 4
Use this method to retrieve all the matching objects from the Infoblox appliance. See Infoblox::Session\->\fBget()\fR for parameters and return values.
.IP "\fBKey Reference\fR" 4
.IX Item "Key Reference"
.Vb 1
\& Apply the following attribute to get a specific object:
\&
\&  name                  \- Optional. A DTC SIP Monitor name in a string format.
\&  comment               \- Optional. A DTC SIP Monitor comment.
\&  extattrs              \- Optional. A hash reference containing extensible attributes.
\&  extensible_attributes \- Optional. A hash reference that contains extensible attributes.
.Ve
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& my @retrieved_objs = $session\->get(
\&     object => \*(AqInfoblox::DTC::Monitor::SIP\*(Aq,
\&     name   => \*(Aqsip_monitor1\*(Aq,
\& );
\&
\& my @retrieved_objs = $session\->get(
\&     object => \*(AqInfoblox::DTC::Monitor::SIP\*(Aq,
\&     extensible_attributes => { \*(AqSite\*(Aq => \*(AqSanta Clara\*(Aq }
\& );
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->modify( )"
.IX Subsection "Infoblox::Session->modify( )"
.RS 4
Use this method to modify an object in the Infoblox appliance. See Infoblox::Session\->\fBmodify()\fR for parameters and return values.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& #Use method to modify the comment.
\& $sip_monitor\->comment(\*(Aqthis is a modified comment\*(Aq);
\& #Submit modification
\& my $response = $session\->modify($sip_monitor);
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->remove( )"
.IX Subsection "Infoblox::Session->remove( )"
.RS 4
Use this method to remove an object from the Infoblox appliance. See Infoblox::Session\->\fBremove()\fR for parameters and return values.
.Sp
To remove a specific object, first use \fBget()\fR or \fBsearch()\fR to retrieve the specific object, and then submit this object for removal.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 9
\& #Get the objects with the same name
\& my @retrieved_objs = $session\->get(
\&     object => \*(AqInfoblox::DTC::Monitor::SIP\*(Aq,
\&     name   => \*(Aqsip_monitor1\*(Aq,
\& );
\& #Find the desired object from the retrieved list.
\& my $desired_sip_monitor = $retrieved_objs[0];
\& #Submit for removal
\& my $response = $session\->remove($desired_sip_monitor);
.Ve
.RE
.RS 4
.RE
.SS "Infoblox::Session\->search( )"
.IX Subsection "Infoblox::Session->search( )"
.RS 4
Use this method to search for objects in the Infoblox appliance. See Infoblox::Session\->\fBsearch()\fR for parameters and return values.
.IP "\fBKey Reference\fR" 4
.IX Item "Key Reference"
.Vb 1
\& Apply the following attribute to get a specific object:
\&
\&  name                  \- Optional. A DTC SIP Monitor name in a string format.
\&  comment               \- Optional. A DTC SIP Monitor Descriptive comment.
\&  extattrs              \- Optional. A hash reference containing extensible attributes.
\&  extensible_attributes \- Optional. A hash reference that contains extensible attributes.
.Ve
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 4
\& my @retrieved_objs = $session\->search(
\&     object => \*(AqInfoblox::DTC::Monitor::SIP\*(Aq,
\&     name   => \*(Aqsip_monitor1\*(Aq,
\& );
\&
\& my @retrieved_objs = $session\->search(
\&     object => \*(AqInfoblox::DTC::Monitor::SIP\*(Aq,
\&     extensible_attributes => { \*(AqSite\*(Aq => \*(AqSanta Clara\*(Aq }
\& );
.Ve
.RE
.RS 4
.RE
.SH "METHODS"
.IX Header "METHODS"
This section describes all the methods that you can use to set or retrieve the attribute values of the object.
.SS "ciphers( )"
.IX Subsection "ciphers( )"
.RS 4
Use this method to set or retrieve a list of ciphers for a secure \s-1TLS\s0 or \s-1SIPS\s0 connection.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an array of ciphers in a string format. Ciphers use an OpenSSL syntax. Empty array is equivalent to '\s-1ALL\s0' in an OpenSSL notation.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns 'true' when the modification succeeds, and returns 'false' when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #get ciphers value
\& my @ciphers = $sip_monitor\->ciphers();
\&
\& #modify ciphers value
\& $sip_monitor\->ciphers([\*(AqRC4\-MD5\*(Aq, \*(AqKRB5\-RC4\-MD5\*(Aq]);
.Ve
.RE
.RS 4
.RE
.SS "client_cert( )"
.IX Subsection "client_cert( )"
.RS 4
Use this method to set or retrieve a client certificate, supplied in a secure \s-1TLS\s0 or \s-1SIPS\s0 mode if present.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an Infoblox::DTC::Certificate object.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns 'true' when the modification succeeds, and returns 'false' when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #get client_cert value
\& my $cert = $sip_monitor\->client_cert();
\&
\& #modify client_cert value
\& $sip_monitor\->client_cert($cert);
.Ve
.RE
.RS 4
.RE
.SS "comment( )"
.IX Subsection "comment( )"
.RS 4
Use this method to set or retrieve the comment for a \s-1DTC SIP\s0 Health Monitor object.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is a comment in string format (\s-1UTF\-8\s0) with a maximum of 256 bytes.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns 'true' when the modification succeeds, and returns 'false' when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #get comment value
\& my $comment = $sip_monitor\->comment();
\&
\& #modify comment value
\& $sip_monitor\->comment(\*(Aqdesired comment\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "extattrs( )"
.IX Subsection "extattrs( )"
.RS 4
Use this method to set or retrieve the extensible attributes associated with a \s-1DTC SIP\s0 Health Monitor object.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Valid value is a hash reference containing the names of extensible attributes and their associated values (Infoblox::Grid::Extattr objects).
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns 'true' when the modification succeeds, and returns 'false' when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #get extattrs value
\& my $ref_extattrs = $sip_monitor\->extattrs();
\&
\& #Modify extattrs
\& $sip_monitor\->extattrs({ \*(AqSite\*(Aq => $extattr1, \*(AqAdministrator\*(Aq => $extattr2 });
.Ve
.RE
.RS 4
.RE
.SS "extensible_attributes( )"
.IX Subsection "extensible_attributes( )"
.RS 4
Use this method to set or retrieve the extensible attributes associated with a \s-1DTC SIP\s0 Health Monitor object.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
For valid values for extensible attributes, see Infoblox::Grid::ExtensibleAttributeDef/Extensible Attribute Values.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns 'true' when the modification succeeds, and returns 'false' when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #Get extensible attributes
\& my $ref_extensible_attributes = $sip_monitor\->extensible_attributes();
\&
\& #Modify extensible attributes
\& $sip_monitor\->extensible_attributes({\*(AqSite\*(Aq => \*(AqSanta Clara\*(Aq, \*(AqAdministrator\*(Aq => [\*(AqPeter\*(Aq, \*(AqTom\*(Aq]});
.Ve
.RE
.RS 4
.RE
.SS "interval( )"
.IX Subsection "interval( )"
.RS 4
Use this method to set or retrieve the time interval for the \s-1SIP\s0 health check.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an unsigned integer.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns 'true' when the modification succeeds, and returns 'false' when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #get interval value
\& my $interval = $sip_monitor\->interval();
\&
\& #modify interval value
\& $sip_monitor\->interval(10);
.Ve
.RE
.RS 4
.RE
.SS "name( )"
.IX Subsection "name( )"
.RS 4
Use this method to set or retrieve a \s-1DTC SIP\s0 Health Monitor name.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is a desired name in a string format.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns 'true' when the modification succeeds, and returns 'false' when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #get name value
\& my $name = $sip_monitor\->name();
\&
\& #modify name value
\& $sip_monitor\->name(\*(Aqsip_monitor1\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "port( )"
.IX Subsection "port( )"
.RS 4
Use this method to set or retrieve the port value for \s-1SIP\s0 or \s-1SIPS\s0 requests.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an unsigned integer between 1 and 65535.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns 'true' when the modification succeeds, and returns 'false' when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #get port value
\& my $port = $sip_monitor\->port();
\&
\& #modify port value
\& $sip_monitor\->port(8080);
.Ve
.RE
.RS 4
.RE
.SS "request( )"
.IX Subsection "request( )"
.RS 4
Use this method to set or retrieve an \s-1SIP\s0 request to send.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is a string of 1024 characters maximum.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns 'true' when the modification succeeds, and returns 'false' when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #get request value
\& my $request = $sip_monitor\->request();
\&
\& #modify request value
\& $sip_monitor\->request(\*(AqGET /\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "result( )"
.IX Subsection "result( )"
.RS 4
Use this method to set or retrieve the type of expected result.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid values are '\s-1ANY\s0', '\s-1CODE_IS\s0' and '\s-1CODE_IS_NOT\s0'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns 'true' when the modification succeeds, and returns 'false' when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #get result value
\& my $result = $sip_monitor\->result();
\&
\& #modify result value
\& $sip_monitor\->result(\*(AqCODE_IS\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "result_code( )"
.IX Subsection "result_code( )"
.RS 4
Use this method to set or retrieve the expected return code.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an unsigned integer between 0 and 999.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns 'true' when the modification succeeds, and returns 'false' when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #get result_code value
\& my $result_code = $sip_monitor\->result_code();
\&
\& #modify result_code value
\& $sip_monitor\->result_code(300);
.Ve
.RE
.RS 4
.RE
.SS "retry_down( )"
.IX Subsection "retry_down( )"
.RS 4
Use this method to set or retrieve the number of times the server appears offline after it was online so it is treated as dead.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an unsigned integer between 1 and 10.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns 'true' when the modification succeeds, and returns 'false' when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #get retry_down value
\& my $retry_down = $sip_monitor\->retry_down();
\&
\& #modify retry_down value
\& $sip_monitor\->retry_down(3);
.Ve
.RE
.RS 4
.RE
.SS "retry_up( )"
.IX Subsection "retry_up( )"
.RS 4
Use this method to set or retrieve the number of times the server appears online after it was offline so it is treated as alive.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an unsigned integer between 1 and 10.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns 'true' when the modification succeeds, and returns 'false' when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #get retry_up value
\& my $retry_up = $sip_monitor\->retry_up();
\&
\& #modify retry_up value
\& $sip_monitor\->retry_up(3);
.Ve
.RE
.RS 4
.RE
.SS "timeout( )"
.IX Subsection "timeout( )"
.RS 4
Use this method to set or retrieve the value of a timeout for \s-1SIP\s0 health check.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid value is an unsigned integer between 1 and 15.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns 'true' when the modification succeeds, and returns 'false' when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #get timeout value
\& my $timeout = $sip_monitor\->timeout();
\&
\& #modify timeout value
\& $sip_monitor\->timeout(7);
.Ve
.RE
.RS 4
.RE
.SS "transport( )"
.IX Subsection "transport( )"
.RS 4
Use this method of set or retrieve the type of transport layer protocol being used for \s-1SIP\s0 health check.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
The valid values are '\s-1TCP\s0', '\s-1UDP\s0', '\s-1SIPS\s0' and '\s-1TLS\s0'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns 'true' when the modification succeeds, and returns 'false' when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #get transport value
\& my $transport = $sip_monitor\->transport();
\&
\& #modify transport value
\& $sip_monitor\->transport(\*(AqUDP\*(Aq);
.Ve
.RE
.RS 4
.RE
.SS "validate_cert( )"
.IX Subsection "validate_cert( )"
.RS 4
Use this method to set or retrieve the flag that indicates whether the validation of the remote server's certificate is enabled.
.Sp
Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.
.IP "\fBParameter\fR" 4
.IX Item "Parameter"
Specify 'true' to enable remote server's certificate validation and 'false' to disable it. The default is 'true'.
.IP "\fBReturns\fR" 4
.IX Item "Returns"
If you specified a parameter, the method returns 'true' when the modification succeeds, and returns 'false' when the operation fails.
.Sp
If you did not specify a parameter, the method returns the attribute value.
.IP "\fBExample\fR" 4
.IX Item "Example"
.Vb 2
\& #get validate_cert value
\& my $validate_cert = $http_monitor\->validate_cert();
\&
\& #modify validate_cert value
\& $http_monitor\->validate_cert(\*(Aqfalse\*(Aq);
.Ve
.RE
.RS 4
.RE
.SH "AUTHOR"
.IX Header "AUTHOR"
Infoblox Inc. <http://www.infoblox.com/>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Infoblox::Session, Infoblox::Session\->\fBadd()\fR, Infoblox::Session\->\fBget()\fR, Infoblox::Session\->\fBmodify()\fR, Infoblox::Session\->\fBremove()\fR, Infoblox::Session\->\fBsearch()\fR, Infoblox::Grid::Extattr, Infoblox::Grid::ExtensibleAttributeDef/Extensible Attribute Values, Infoblox::DTC::Certificate.
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2017 Infoblox Inc.

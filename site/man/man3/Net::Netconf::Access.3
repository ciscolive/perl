.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Net::Netconf::Access 3"
.TH Net::Netconf::Access 3 "2016-07-22" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Net::Netconf::Access
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
The Net::Netconf::Access module implements the Access Method superclass. All
Access Method classes must subclass from Net::Netconf::Access.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The Net::Netconf::Access class creates an Access object based on the access
method type specified when instantiating an object. This class is also
responsible for starting a session with the Netconf server at the destination
host by calling the connect method in the access object. After session
establishment, it exchanges hello messages with the Netconf server.
.SH "CONSTRUCTOR"
.IX Header "CONSTRUCTOR"
new(%args)
.PP
The argument to the constructor is a hash of which this class only looks at the
\&'access' key. Depending on the access method type specified, the corresponding
Access object Net::Netconf::Access::<access method type> is instantiated and
returned.
.SH "METHODS"
.IX Header "METHODS"
.IP "connect(%ARGS)" 4
.IX Item "connect(%ARGS)"
This method is called to establish a session with the destination host.
Internally, this calls the \fBstart()\fR method which is always overloaded by the
subclass.
.Sp
This method accepts a hash table as an argument that gives additional input
parameters to establish a session. See individual access method subclasses to
see if additional input parameters are accepted.
.IP "\fBdisconnect()\fR" 4
.IX Item "disconnect()"
Disconnect from the server. May be overloaded by the subclass.
.IP "\fBsend()\fR" 4
.IX Item "send()"
Send the \s-1XML\s0 request to the server. May be overloaded by the subclass.
.IP "\fBrecv()\fR" 4
.IX Item "recv()"
Receive a reply from the server. May be overloaded by the subclass.
.IP "\fBeof()\fR" 4
.IX Item "eof()"
Check to see if we have already seen an eof.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.SH "AUTHOR"
.IX Header "AUTHOR"
Juniper Networks Perl Team, send bug reports, hints, tips and suggestions to
netconf\-support@juniper.net

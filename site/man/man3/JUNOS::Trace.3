.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "JUNOS::Trace 3"
.TH JUNOS::Trace 3 "2003-03-02" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
JUNOS::Trace \- Outputs trace messages.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
This example enables all trace categories so all trace messages will be displayed on \s-1STDOUT.\s0
.PP
.Vb 1
\&    use JUNOS::Trace;
\&
\&    JUNOS::Trace::init(1);  # turn on all levels of tracing
\&
\&    trace("Trace", "starting rpc; ", ref($request), "sending::\en", $rpc);
\&     
\&    trace("Verbose", "\-\-\- begin request\-\-\-\en",
\&        $rpc, ($rpc =~ /\en$/) ? "" : "\en", "\-\-\- end request \-\-\-\en");
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module allows its user to define his own categories of trace messages.  
These categories can be enabled or disabled, and only the trace messages for
the enabled categories are displayed.
.SH "METHODS"
.IX Header "METHODS"
init($ALL, \f(CW$DO_FLAGS\fR, \f(CW$DO_FLAGS\fR)
.PP
Initializes the module to either enable all trace categories ($ALL = 1), 
disable all debgu categories ($ALL = 0), 
enable specific categories (@$DO_FLAGS = ('Noice')) or 
disable specific categories (@$DONT_FLAGS = ('Always')).
.PP
.Vb 1
\&    $ALL        Output everything if set to a non\-zero value.
\&
\&    $DO_FLAGS   The trace categories to be enabled on for tracing.  
\&                This is a reference to an array of trace categories.  
\&                (e.g. @$DO_FLAGS = (\*(AqNoise\*(Aq,\*(AqAlways\*(Aq);)
\&
\&    $DONT_FLAGS The trace categories to be disabled for tracing.  
\&                This is a reference to an array of trace categories.  
\&                (e.g. @$DONT_FLAGS = (\*(AqNoise\*(Aq,\*(AqAlways\*(Aq);)
.Ve
.PP
set_dont_trace(@DONT_FLAGS)
.PP
This method is called to disable trace categories so the trace messages for these categories won't be displayed.
.PP
set_trace(@DO_FLAGS)
.PP
This method is called to enable trace categories so the trace messages for these categories will be displayed.
.PP
trace($FLAG, \f(CW@MESSAGE\fR);
.PP
Assign a trace message to a trace category.  If the category is enabled, this trace message will be displayed immediately.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.SH "AUTHOR"
.IX Header "AUTHOR"
Juniper Junoscript Perl Team, send bug reports, hints, tips, and suggestions 
to support@juniper.net.
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2001 Juniper Networks, Inc.
All rights reserved.

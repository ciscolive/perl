.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "HTML::Display::Common 3"
.TH HTML::Display::Common 3 "2013-06-26" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
HTML::Display::Common \- routines common to all HTML::Display subclasses
.ie n .SS "_\|_PACKAGE_\|_\->new %ARGS"
.el .SS "_\|_PACKAGE_\|_\->new \f(CW%ARGS\fP"
.IX Subsection "__PACKAGE__->new %ARGS"
Creates a new object as a blessed hash. The passed arguments are stored within
the hash. If you need to do other things in your constructor, remember to call
this constructor as well :
.PP
.Vb 2
\&  package HTML::Display::WhizBang;
\&  use parent \*(AqHTML::Display::Common\*(Aq;
\&
\&  sub new {
\&    my ($class) = shift;
\&    my %args = @_;
\&    my $self = $class\->SUPER::new(%args);
\&
\&    # do stuff
\&
\&    $self;
\&  };
.Ve
.ie n .SS "$display\->display %ARGS"
.el .SS "\f(CW$display\fP\->display \f(CW%ARGS\fP"
.IX Subsection "$display->display %ARGS"
This is the routine used to display the \s-1HTML\s0 to the user. It takes the
following parameters :
.PP
.Vb 3
\&  html     => SCALAR containing the HTML
\&  file     => SCALAR containing the filename of the file to be displayed
\&  base     => optional base url for the HTML, so that relative links still work
\&
\&  location    (synonymous to base)
.Ve
.PP
\fIBasic usage :\fR
.IX Subsection "Basic usage :"
.PP
.Vb 3
\&  my $html = "<html><body><h1>Hello world!</h1></body></html>";
\&  my $browser = HTML::Display\->new();
\&  $browser\->display( html => $html );
.Ve
.PP
\fILocation parameter :\fR
.IX Subsection "Location parameter :"
.PP
If you fetch a page from a remote site but still want to display
it to the user, the \f(CW\*(C`location\*(C'\fR parameter comes in very handy :
.PP
.Vb 2
\&  my $html = \*(Aq<html><body><img src="/images/hp0.gif"></body></html>\*(Aq;
\&  my $browser = HTML::Display\->new();
\&
\&  # This will display part of the Google logo
\&  $browser\->display( html => $html, base => \*(Aqhttp://www.google.com\*(Aq );
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Copyright (c) 2004\-2013 Max Maischein \f(CW\*(C`<corion@cpan.org>\*(C'\fR
.SH "LICENSE"
.IX Header "LICENSE"
This module is released under the same terms as Perl itself.

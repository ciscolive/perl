.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "DSC_DUMP_SCHEMA 1"
.TH DSC_DUMP_SCHEMA 1 "2014-08-03" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
dsc_dump_schema.pl \- script to dump a schema from a database
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 3
\&  #dump all tables
\&  dsc_dump_schema.pl \-\-dsn DBI:mysql:database=mydb;host=127.0.0.1;mysql_enable_utf8=1 \e
\&  \-u me \-p mypassword \-\-overwrite 1 \-\-lib_root ./lib
\&
\&  #dump only the "users" table \- using short options and choosing a namespace
\&  dsc_dump_schema.pl \-dsn dbi:SQLite:database=etc/ado.sqlite \-n Ado::Model \-l lib \-t users
\&  
\&  dsc_dump_schema.pl \-? #for more help
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This is a helper script to dump DBIx::Simple::Class based classes from
an existing database. Currently it is known to work with mysql and SQLite databases.
.PP
You can then edit those classes, add methods and customise the checks for the accepted 
table fields in each of the dumped classes. You can also use these classes \s-1ASIS\s0 to 
access and update table rows in an object oriented fashion.
.SH "OPTIONS"
.IX Header "OPTIONS"
.SS "\-\-help|\-h|?"
.IX Subsection "--help|-h|?"
More verbose help screen
.SS "\-\-dsn|\-d"
.IX Subsection "--dsn|-d"
The connection string you would pass to \f(CW\*(C`DBI\->connect()\*(C'\fR 
when connecting to your database.
.SS "\-\-user|\-u"
.IX Subsection "--user|-u"
Username for the database.
.PP
.Vb 1
\&  \-\-username myuser@somehost
.Ve
.SS "\-\-password|\-p"
.IX Subsection "--password|-p"
.Vb 1
\&  \-\-password mysecret
.Ve
.PP
Password for the database.
.SS "\-\-namespace|\-n"
.IX Subsection "--namespace|-n"
Base class namespace used for your schema. Optional.
If not passed it will be guessed from the schema name:
.PP
.Vb 1
\&  my_dbname \-> MyDbname
\&
\&  \-\-namespace MyModel
.Ve
.SS "\-\-overwrite|\-o"
.IX Subsection "--overwrite|-o"
If there are alreday dumped classed to the desired location on the
filesystem they will be ovwerwritten.
.PP
.Vb 1
\&  \-\-overwrite 1
.Ve
.SS "\-\-lib_root|\-l"
.IX Subsection "--lib_root|-l"
Directory path in which the classes will be dumped. The directory must exist.
It will not be created.
.SS "\-\-table|\-t"
.IX Subsection "--table|-t"
This option allows you to specify a table name. In some cases after modifying 
some table you may need to dump a class only for this table.
\&\fBNote! When a table is specified the base (schema) class is not generated!\fR
.PP
.Vb 2
\&  #only table users
\&  \-t users
\&
\&  #all tables starting with "shop"
\&  \-t shop%
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
DBIx::Simple::Class, DBIx::Simple, 
DBIx::Simple::Class::Schema,
Mojolicious::Plugin::DSC
.SH "LICENSE AND COPYRIGHT"
.IX Header "LICENSE AND COPYRIGHT"
Copyright 2013 Красимир Беров (Krasimir Berov).
.PP
This program is free software, you can redistribute it and/or modify it under
the terms of the Artistic License version 2.0.
.PP
See http://www.opensource.org/licenses/artistic\-license\-2.0 for more information.

.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "YOUTUBE-DOWNLOAD 1"
.TH YOUTUBE-DOWNLOAD 1 "2020-09-20" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
youtube\-download.pl \- youtube\-download \- Download video(s) from YouTube
.SH "VERSION"
.IX Header "VERSION"
version 0.64
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 3
\&  $ youtube\-download bT8yLWy4B5w
\&  $ youtube\-download http://www.youtube.com/watch?v=bT8yLWy4B5w
\&  $ youtube\-download < video_list_file
.Ve
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\-C, \-\-no\-colors" 4
.IX Item "-C, --no-colors"
Force disable colored output
.IP "\-o, \-\-output" 4
.IX Item "-o, --output"
output filename, supports `{$value}` format (default: {video_id}.{suffix})
.IP "\-i, \-\-interval" 4
.IX Item "-i, --interval"
Download interval (default: 1 (sec))
.IP "\-p" 4
.IX Item "-p"
Use the given proxy. Requires LWP::Protocol::socks to be installed for socks proxies. See examples for syntax. (default: no proxy)
.IP "\-e, \-\-encode" 4
.IX Item "-e, --encode"
File system encoding (default: utf8)
.IP "\-s, \-\-skip" 4
.IX Item "-s, --skip"
Skip downloading a video, if target file exists.
.IP "\-f, \-\-force" 4
.IX Item "-f, --force"
Force overwrite output file (default: disabled)
.IP "\-n, \-\-dry\-run" 4
.IX Item "-n, --dry-run"
Do not download any videos, but print their target filenames,
as defined by \-o option. This option still sends query to
Google servers to fetch details about given video.
.IP "\-F, \-\-fmt" 4
.IX Item "-F, --fmt"
Video quality (\s-1SEE ALSO\s0 Wikipedia)
.IP "\-v, \-\-verbose" 4
.IX Item "-v, --verbose"
Turns on chatty output (default: enabled)
.IP "\-U, \-\-url" 4
.IX Item "-U, --url"
Show playback \s-1URL\s0 of a video, but do not download it
.IP "\-P, \-\-progress" 4
.IX Item "-P, --progress"
Show progress bar if you have Term::ProgressBar
.IP "\-q, \-\-quiet" 4
.IX Item "-q, --quiet"
Turns off the most output
.IP "\-h, \-\-help" 4
.IX Item "-h, --help"
Display help
.IP "\-m, \-\-man" 4
.IX Item "-m, --man"
Display help page
.IP "\-V, \-\-version" 4
.IX Item "-V, --version"
Display version
.IP "\-\-user\-agent" 4
.IX Item "--user-agent"
Supply your own user agent string
.SS "supported `{$value}` format"
.IX Subsection "supported `{$value}` format"
{video_id} / {user} / {title} / {fmt} / {suffix} / {resolution}
.PP
.Vb 3
\&  Example:
\&  $ youtube\-download \-o "[{video_id}] {title}.{suffix}"
\&  $ youtube\-download \-p socks://127.0.0.1:4321/ \-o "{title} by {user} (youtube {video_id}).{suffix}"
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
xaicron <xaicron {@} cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2013 by Yuji Shimada.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

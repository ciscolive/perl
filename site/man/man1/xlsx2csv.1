.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "XLSX2CSV 1"
.TH XLSX2CSV 1 "2020-09-18" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
.Vb 1
\&   xlsx2csv \- convert spreadsheet to CSV(s)
.Ve
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&   xlsx2csv [ \-A [ \-N || \-J str ] | \-o file.csv ] [\-f] [\-i] file.xls
\&   xlsx2csv   \-\-help | \-\-man | \-\-info
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Convert a spreadsheet (all formats supported by Spreadsheet::Read) to \s-1CSV\s0
(using Text::CSV_XS).
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\-?" 4
.PD 0
.IP "\-\-help" 4
.IX Item "--help"
.PD
Print short usage and exit.
.IP "\-\-man" 4
.IX Item "--man"
Print this help using nroff and exit.
.IP "\-\-info" 4
.IX Item "--info"
Print this help and exit.
.IP "\-V" 4
.IX Item "-V"
.PD 0
.IP "\-\-version" 4
.IX Item "--version"
.PD
Print the version and exit.
.IP "\-f" 4
.IX Item "-f"
.PD 0
.IP "\-\-force" 4
.IX Item "--force"
.PD
Overwrite existing output file.
.IP "\-A" 4
.IX Item "-A"
.PD 0
.IP "\-\-all" 4
.IX Item "--all"
.PD
Output data from all sheets.
.Sp
Each sheet will go to extra file with name built from output CSV-file and
sheet name.
.IP "\-N" 4
.IX Item "-N"
.PD 0
.IP "\-\-no\-pfx" 4
.IX Item "--no-pfx"
.PD
If specified, dump all will not use output CSV-file but sheet name only.
.IP "\-J str" 4
.IX Item "-J str"
.PD 0
.IP "\-\-join=str" 4
.IX Item "--join=str"
.PD
If specified, output file names under \f(CW\*(C`\-A\*(C'\fR will join on \f(CW\*(C`str\*(C'\fR instead of
the default \f(CW\*(C`\-\*(C'\fR.
.IP "\-o CSV-file" 4
.IX Item "-o CSV-file"
.PD 0
.IP "\-c CSV-file" 4
.IX Item "-c CSV-file"
.IP "\-\-out=CSV\-file" 4
.IX Item "--out=CSV-file"
.PD
Output file name (used only with \f(CW\*(C`\-\-all\*(C'\fR and without \f(CW\*(C`\-\-no\-pfx\*(C'\fR).
.Sp
Default value is derived from XLS-file.
.IP "\-i XLS-file" 4
.IX Item "-i XLS-file"
.PD 0
.IP "\-s XLS-file" 4
.IX Item "-s XLS-file"
.IP "\-\-in=XLS\-file" 4
.IX Item "--in=XLS-file"
.PD
Allows to specify input xls file.
.Sp
Default: Last \s-1ARGUMENT\s0 file that exists.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Spreadsheet::Read, Text::CSV_XS, xlscat
.SH "AUTHOR"
.IX Header "AUTHOR"
H.Merijn Brand, <h.m.brand@xs4all.nl>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright (C) 2016\-2020 H.Merijn Brand
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.

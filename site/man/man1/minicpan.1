.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "MINICPAN 1"
.TH MINICPAN 1 "2014-08-08" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
minicpan \- uses CPAN::Mini to create or update a local mirror
.SH "VERSION"
.IX Header "VERSION"
version 1.111016
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& minicpan [options]
\&
\& Options
\&   \-l LOCAL    \- where is the local minicpan?     (required)
\&   \-r REMOTE   \- where is the remote cpan mirror? (required)
\&   \-d 0###     \- permissions (numeric) to use when creating directories
\&   \-f          \- check all directories, even if indices are unchanged
\&   \-p          \- mirror perl, ponie, and parrot distributions
\&   \-\-debug     \- run in debug mode (print even banal messages)
\&   \-q          \- run in quiet mode (don\*(Aqt print status)
\&   \-qq         \- run in silent mode (don\*(Aqt even print warnings)
\&   \-c CLASS    \- what class to use to mirror (default: CPAN::Mini)
\&   \-C FILE     \- what config file to use (default: ~/.minicpanrc)
\&   \-h          \- print help and exit
\&   \-v          \- print version and exit
\&   \-x          \- build an exact mirror, getting even normally disallowed files
\&   \-t SEC      \- timeout in sec. Defaults to 180 sec
\&   \-\-offline   \- operate in offline mode (generally: do nothing)
\&   \-\-log\-level \- provide a log level; instead of \-\-debug, \-q, or \-qq
\&   \-\-remote\-from TYPE \- cpan remote from \*(Aqcpan\*(Aq or \*(Aqcpanplus\*(Aq configs
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This simple shell script just updates (or creates) a miniature \s-1CPAN\s0 mirror as
described in CPAN::Mini.
.SH "CONFIGURATION FILE"
.IX Header "CONFIGURATION FILE"
By default, \f(CW\*(C`minicpan\*(C'\fR will read a configuration file to get configuration
information.  The file is a simple set of names and values, as in the following
example:
.PP
.Vb 3
\& local:  /home/rjbs/mirrors/minicpan/
\& remote: http://your.favorite.cpan/cpan/
\& exact_mirror: 1
.Ve
.PP
\&\f(CW\*(C`minicpan\*(C'\fR tries to find a configuration file through the following process.
It takes the first defined it finds:
.IP "\(bu" 4
Use the value specified by \f(CW\*(C`\-C\*(C'\fR on the command line
.IP "\(bu" 4
Use the value in the \f(CW\*(C`CPAN_MINI_CONFIG\*(C'\fR environment variable
.IP "\(bu" 4
Use \fI~/.minicpanrc\fR
.IP "\(bu" 4
Use \fICPAN/Mini/minicpan.conf\fR
.PP
If the selected file does not exist, \f(CW\*(C`minicpan\*(C'\fR does not keep looking.
.PP
You can override this process with a \f(CW\*(C`config_file\*(C'\fR method in your subclass.
.PP
See \f(CW\*(C`CPAN::Mini\*(C'\fR for a full listing of available options.
.SH "TO DO"
.IX Header "TO DO"
Improve command-line options.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Randal Schwartz's original article, which can be found here:
.PP
.Vb 1
\&  http://www.stonehenge.com/merlyn/LinuxMag/col42.html
.Ve
.SH "AUTHORS"
.IX Header "AUTHORS"
.IP "\(bu" 4
Ricardo \s-1SIGNES\s0 <rjbs@cpan.org>
.IP "\(bu" 4
Randal Schwartz <merlyn@stonehenge.com>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2004 by Ricardo \s-1SIGNES.\s0
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

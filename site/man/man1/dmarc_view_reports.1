.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "DMARC_VIEW_REPORTS 1"
.TH DMARC_VIEW_REPORTS 1 "2020-07-12" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  dmarc_view_reports [ \-\-option=value ]
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Dumps the contents of the \s-1DMARC\s0 data store to your terminal. The most recent records are show first.
.SS "Search Options"
.IX Subsection "Search Options"
.Vb 7
\&    author       \- report author (Yahoo! Inc, google.com, etc..)
\&    from_dom     \- message sender domain
\&    begin        \- epoch start time to display messages after
\&    end          \- epoch end time to display messages before
\&    disposition  \- DMARC disposition (none,quarantine,reject)
\&    dkim         \- DKIM alignment result (pass/fail)
\&    spf          \- SPF alignment result  (pass/fail)
.Ve
.SS "Other Options"
.IX Subsection "Other Options"
.Vb 1
\&  dmarc_view_reports [ \-\-geoip \-\-dns \-\-help \-\-verbose ]
\&
\&    geoip        \- do GeoIP lookups (requires the free Maxmind GeoCityLitev6 database).
\&    dns          \- do reverse DNS lookups and display hostnames
\&    help         \- print this syntax guide
\&    verbose      \- print additional debug info
.Ve
.SH "EXAMPLES"
.IX Header "EXAMPLES"
To search for all reports from google.com that failed \s-1DMARC\s0 alignment:
.PP
.Vb 1
\&  dmarc_view_reports \-\-author=google.com \-\-dkim=fail \-\-spf=fail
.Ve
.PP
Note that we don't use \-\-disposition. That would only tell us the result of applying \s-1DMARC\s0 policy, not necessarily if the messages failed \s-1DMARC\s0 alignment.
.PP
To display GeoIP lookup data for the source ip:
.PP
.Vb 1
\&  dmarc_view_reports \-\-geoip
.Ve
.PP
By default; city, country_code & continent_code are shown. You can optionally pass a comma delimited string to \-\-geoip= with any of the following fields:
.PP
country_code
country_code3
country_name
region
region_name
city
postal_code
latitude
longitude
time_zone
area_code
continent_code
metro_code
.PP
.Vb 3
\&  dmarc_view_reports \-\-geoip=country_name,continent_code
\&  dmarc_view_reports \-\-geoip=continent_code,country_name # keep order
\&  dmarc_view_reports \-\-geoip=city,city,city              # repeat
.Ve
.SH "SAMPLE OUTPUT"
.IX Header "SAMPLE OUTPUT"
.Vb 2
\& ID             Recipient           From/Sender     Report\-Start
\&  | \-\- Qty                        Source IP   Disposition    DKIM     SPF
\&
\& 570        theartfarm.com          simerson.net  2013\-05\-20 09:40:50
\&  | \-\-   1                   75.126.200.152    quarantine    fail    fail
\&
\& 568              yeah.net              tnpi.net  2013\-05\-21 09:00:00
\&  | \-\-   1                   111.176.77.138        reject    fail    fail
\&
\& 567               126.com              tnpi.net  2013\-05\-21 09:00:00
\&  | \-\-   1                    49.73.135.125        reject    fail    fail
\&
\& 565            google.com             mesick.us  2013\-05\-20 17:00:00
\&  | \-\-  88                   208.75.177.101          none    pass    pass
\&
\& 564            google.com        theartfarm.com  2013\-05\-20 17:00:00
\&  | \-\-   3                   208.75.177.101          none    pass    pass
\&
\& 563            google.com          lynboyer.com  2013\-05\-20 17:00:00
\&  | \-\-   1          2a00:1450:4010:c03::235          none    pass    fail  forwarded
\&  | \-\-  12                   208.75.177.101          none    pass    pass
\&  | \-\-   1                   209.85.217.174          none    pass    fail  forwarded
\&
\& 561            google.com          simerson.net  2013\-05\-20 17:00:00
\&  | \-\-   1                   208.75.177.101          none    pass    pass
\&
\& 560            google.com              tnpi.net  2013\-05\-20 17:00:00
\&  | \-\-   1                   208.75.177.101          none    pass    pass
\&  | \-\-   1                    27.20.110.240        reject    fail    fail
\&
\& 559           hotmail.com          lynboyer.com  2013\-05\-20 20:00:00
\&  | \-\-   6                   208.75.177.101          none    pass    pass
.Ve
.SH "AUTHORS"
.IX Header "AUTHORS"
.IP "\(bu" 4
Matt Simerson <msimerson@cpan.org>
.IP "\(bu" 4
Davide Migliavacca <shari@cpan.org>
.IP "\(bu" 4
Marc Bradshaw <marc@marcbradshaw.net>

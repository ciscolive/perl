.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "YOUTUBE-PLAYLISTS 1"
.TH YOUTUBE-PLAYLISTS 1 "2020-09-20" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
youtube\-playlists.pl \- Find YouTube video URLs from playlist(s)
.SH "VERSION"
.IX Header "VERSION"
version 0.64
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 3
\&  # print the list of video URLs
\&  $ youtube\-playlists https://www.youtube.com/playlist?list=PLB199169FA7413767
\&  $ youtube\-playlists PLB199169FA7413767
\&
\&  # pipe result to youtube\-download
\&  $ youtube\-playlists PLB199169FA7413767 | youtube\-download
\&
\&  # with socks proxy
\&  $ youtube\-playlists \-p socks://<some IP>:<some port>/ PLB199169FA7413767
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
For each given argument \fByoutube-playlists\fR generates a list of YouTube
video URLs. Arguments can be \s-1URL\s0 to playlist or to favorite list, or
only IDs of a playlist or a favorite list.
.PP
In the spirit of the whole \fIWWW::YouTube::Download\fR distribution, playlist
extraction relies solely on scraping common YouTube pages and requires no \s-1API\s0 key.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\-C, \-\-no\-colors" 4
.IX Item "-C, --no-colors"
Force disable colored output
.IP "\-i, \-\-video\-id" 4
.IX Item "-i, --video-id"
Print only video IDs, not full URLs
.IP "\-n, \-\-normalize" 4
.IX Item "-n, --normalize"
Print only normalized playlist IDs, but do not fetch anything.
You can call it also dry run.
.IP "\-p, \-\-proxy" 4
.IX Item "-p, --proxy"
Use the given proxy. Note that using a socks proxy requires LWP::protocol::socks to be installed.
.IP "\-u, \-\-users" 4
.IX Item "-u, --users"
Parses given parameters as YouTube usernames and lists their uploaded videos.
.IP "\-\-user\-agent" 4
.IX Item "--user-agent"
Supply your own user agent string
.IP "\-\-limit" 4
.IX Item "--limit"
Limit how many fetches the script is allowed to make while scraping playlist items.
.IP "\-v, \-\-verbose" 4
.IX Item "-v, --verbose"
turns on chatty output
.IP "\-h, \-\-help" 4
.IX Item "-h, --help"
display help
.IP "\-V, \-\-version" 4
.IX Item "-V, --version"
display version
.SH "AUTHOR"
.IX Header "AUTHOR"
xaicron <xaicron {@} cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2013 by Yuji Shimada.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

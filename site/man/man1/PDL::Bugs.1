.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "BUGS 1"
.TH BUGS 1 "2019-12-08" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
PDL::Bugs \- How to diagnose and report PDL problems
.SH "VERSION"
.IX Header "VERSION"
version 1.0000
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module explains how to get help with a \s-1PDL\s0 problem
and how, when, and where to submit a bug report.  In the
future it may be extended to provide some sort of automated
bug reporting capability.
.SH "IF YOU HAVE A PDL PROBLEM"
.IX Header "IF YOU HAVE A PDL PROBLEM"
The primary resource for support for the Perl Data Language
is via the \s-1PDL\s0 mailing lists.  The pdl-general list is for general
use and discussions and is the one to use for questions about
problems with \s-1PDL\s0 or \s-1PDL\s0 use for computation.  This
\&\fIis almost always\fR the list to post to for \s-1PDL\s0 problems.
.PP
The pdl-devel list is \fIspecifically\fR for \s-1PDL\s0 development
and often contains discussions of a rather technical nature
relating to \s-1PDL\s0 internals.  This is \fInot\fR the list for
general \s-1PDL\s0 discussion or questions:
<http://pdl.perl.org/?page=mailing\-lists>.
.PP
\&\fB\s-1NOTE\s0\fR: Both pdl-general and pdl-devel are read by the \s-1PDL\s0
developers so you don't save time or increase the probability
of response by posting to pdl-devel or by cross-posting
to pdl-devel.  Please stick to pdl-general list posts unless
you want to talk \s-1PDL\s0 implementation and development.
.PP
\&\fB\s-1NOTE\s0\fR: There is also a \s-1PDL IRC\s0 channel which can be useful
for immediate questions if populated.  However, it has the
big disadvantage of not being easily searched or routinely
read by all \s-1PDL\s0 developers and users.  As a result, if you
get an answer there, it may be incorrect or incomplete
depending on who happens to be chatting at the time.  It
is definitely not readily searchable.
.SH "REPORTING BUGS"
.IX Header "REPORTING BUGS"
Please submit bug reports via the GitHub issue tracker at
<https://github.com/PDLPorters/pdl/issues>.
.PP
where you can review the previously submitted bug reports.
Click on \f(CW\*(C`New issue\*(C'\fR to generate a bug report.  If you do not
already have a GitHub account, you will need to
create one to submit the report.
.PP
Try to include any information you think might help someone
isolate, reproduce, and fix your problem.
.PP
At a \fIminimum\fR, include the following information:
.IP "\(bu" 4
\&\s-1PDL\s0 version number (e.g. \s-1PDL\-2.007\s0)
.IP "\(bu" 4
Perl version information.  Output from \f(CW\*(C`perl \-v\*(C'\fR or \f(CW\*(C`perl \-V\*(C'\fR (even better!)
.IP "\(bu" 4
Your operating System.  You can run the \f(CW\*(C`uname \-a\*(C'\fR command on many unix systems
.IP "\(bu" 4
The full output of \f(CW\*(C`perldl \-V\*(C'\fR
.Sp
If you are reporting a bug with an already installed \s-1PDL.\s0  If the \s-1PDL\s0
has compiled and built but not been installed, you may run
\&\f(CW\*(C`perl \-Mblib perldl \-V\*(C'\fR from the top level of the \s-1PDL\s0 build directory.
.IP "\(bu" 4
The bug description and how to reproduce it.
.Sp
Short examples using the \s-1PDL\s0 shells, \f(CW\*(C`pdl2\*(C'\fR or \f(CW\*(C`perldl\*(C'\fR, are excellent!
Don't forget to include needed input data (as small as possible) so that
the code can be run with a cut and paste.
.PP
Other things that are often helpful:
.IP "\(bu" 4
Details about your operating environment that might be related to the problem
.IP "\(bu" 4
Exact cut and pasted error or warning messages
.IP "\(bu" 4
The shortest, clearest code you can manage to write which reproduces the bug described.
.IP "\(bu" 4
A patch against the latest released version of this distribution which fixes this bug.
.PP
Alternatively, send an e\-mail report with the above
information (including the output of \f(CW\*(C`perldl \-V\*(C'\fR)
to the pdl-devel mailing list. See
<http://pdl.perl.org/?page=mailing\-lists>
for info on how to subscribe to this list.
.SH "BEFORE YOU SEND A REPORT"
.IX Header "BEFORE YOU SEND A REPORT"
\&\s-1BEFORE\s0 you report a bug make sure you got the latest
release version of \s-1PDL,\s0 always available from \s-1CPAN,\s0
check <http://metacpan.org/pod/PDL>.
.PP
Also, you can check the \s-1FAQ\s0 at <http://pdl.perl.org/?docs=FAQ&title=PDL::FAQ>.
and the mailing list archives for hints. You can find links to the
searchable archives at <http://pdl.perl.org/?page=mailing\-lists>.
.PP
and there is a Google enable search box on the top right of
<http://pdl.perl.org> which usually gives the best results.
.SH "PATCHES"
.IX Header "PATCHES"
Patches can be submitted in several ways, in order of decreasing preference:
.IP "1." 4
Fork the pdl repository on GitHub, make and test your changes, and submit a pull request;
.IP "2." 4
Edit (or suggesting an edit to) the files in-place on GitHub;
.IP "3." 4
Email a patch to the pdl-devel mailing list.
.PP
Patches should be made against the latest released
\&\s-1PDL\s0 or, ideally, against the current git sources
which you can browse and check out at <https://github.com/PDLPorters/pdl>.
.PP
Thanks,
The \s-1PDL\s0 developers.

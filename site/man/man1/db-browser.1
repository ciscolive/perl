.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "DB-BROWSER 1"
.TH DB-BROWSER 1 "2020-09-01" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
"db\-browser" \- Browse "SQLite"/"MySQL"/"PostgreSQL" databases and their tables interactively.
.SH "VERSION"
.IX Header "VERSION"
Version 2.253
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.SS "SQLite/MySQL/PostgreSQL"
.IX Subsection "SQLite/MySQL/PostgreSQL"
.Vb 1
\&    db\-browser \-h|\-\-help
\&
\&    db\-browser
\&
\&    db\-browser database\-name, ...
.Ve
.PP
When the \f(CW\*(C`db\-browser\*(C'\fR is called with the argument \f(CW\*(C`\-h|\-\-help\*(C'\fR, it shows a menu. The menu entry \fI\s-1HELP\s0\fR shows this
documentation \- see \*(L"\s-1OPTIONS\*(R"\s0.
.PP
If \f(CW\*(C`db\-browser\*(C'\fR is called without arguments, the user can choose from the databases offered by the database plugin.
.PP
If \f(CW\*(C`db\-browser\*(C'\fR is called with arguments, the arguments are used as the available databases.
.SS "SQLite"
.IX Subsection "SQLite"
.Vb 1
\&    db\-browser \-s|\-\-search
.Ve
.PP
\&\f(CW\*(C`db\-browser\*(C'\fR called with \f(CW\*(C`\-s|\-\-search\*(C'\fR causes a new search for \f(CW\*(C`SQLite\*(C'\fR databases instead of using the cached data.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Before using \f(CW\*(C`db\-browser\*(C'\fR, make sure you backed up your databases.
.PP
Search and read in \s-1SQL\s0 databases: one can browse databases and their tables interactively.
.PP
The database plugins bundled with \f(CW\*(C`App::DBBrowser\*(C'\fR provide support for the \s-1DBI\s0 drivers \f(CW\*(C`DBD::SQLite\*(C'\fR, \f(CW\*(C`DBD::mysql\*(C'\fR,
\&\f(CW\*(C`DBD::MariaDB\*(C'\fR and \f(CW\*(C`DBD::Pg\*(C'\fR. See App::DBBrowser::DB how to write a database plugin.
.SH "NAVIGATION"
.IX Header "NAVIGATION"
.SS "Menus"
.IX Subsection "Menus"
.IP "\(bu" 4
the \f(CW\*(C`Arrow\*(C'\fR keys (or \f(CW\*(C`h,j,k,l\*(C'\fR) to move up and down and to move to the right and to the left.
.IP "\(bu" 4
the \f(CW\*(C`PageUp\*(C'\fR key (or \f(CW\*(C`Ctrl\-B\*(C'\fR) to go back one page, the \f(CW\*(C`PageDown\*(C'\fR key (or \f(CW\*(C`Ctrl\-F\*(C'\fR) to go forward one page.
.IP "\(bu" 4
the \f(CW\*(C`Home\*(C'\fR key (or \f(CW\*(C`Ctrl\-A\*(C'\fR) to jump to the beginning of the menu, the \f(CW\*(C`End\*(C'\fR key (or \f(CW\*(C`Ctrl\-E\*(C'\fR) to jump to the end
of the menu.
.PP
With the option \fImouse\fR enabled it can be used the mouse with the left mouse key to navigate through the menus.
.PP
To confirm a chosen menu item use the \f(CW\*(C`Return\*(C'\fR key.
.PP
In some sub-menus it is possible to select more then one item before \f(CW\*(C`Return\*(C'\fR is pressed (e.g. the input filters
\&\fIChoose Rows\fR and \fIChoose Cols\fR); in such sub-menus the list of items marked with the \f(CW\*(C`SpaceBar\*(C'\fR are added to the
chosen items when \f(CW\*(C`Return\*(C'\fR is pressed. If a mouse mode is enabled, it can be used the right mouse key instead of the
\&\f(CW\*(C`SpaceBar\*(C'\fR. A \f(CW\*(C`Ctrl\-SpaceBar\*(C'\fR inverts the made choices \- so for example to select all but one select the one with the
\&\f(CW\*(C`SpaceBar\*(C'\fR and then press \f(CW\*(C`Ctrl\-SpaceBar\*(C'\fR.
.SS "Read-line"
.IX Subsection "Read-line"
.IP "\(bu" 4
\&\f(CW\*(C`BackSpace\*(C'\fR or \f(CW\*(C`Strg\-H\*(C'\fR to delete the character behind the cursor, \f(CW\*(C`Delete\*(C'\fR to delete  the  character at point.
.IP "\(bu" 4
\&\f(CW\*(C`Strg\-U\*(C'\fR to delete the text backward from the cursor to the beginning of the line, \f(CW\*(C`Strg\-K\*(C'\fR to delete the text from
the cursor to the end of the line.
.IP "\(bu" 4
\&\f(CW\*(C`Right\-Arrow\*(C'\fR to move forward a character, \f(CW\*(C`Left\-Arrow\*(C'\fR to move back a character.
.IP "\(bu" 4
\&\f(CW\*(C`Up\-Arrow\*(C'\fR to move back 10 characters, \f(CW\*(C`Down\-Arrow\*(C'\fR to move forward 10 characters.
.IP "\(bu" 4
\&\f(CW\*(C`Home\*(C'\fR or \f(CW\*(C`Strg\-A\*(C'\fR to move to the start of the line, \f(CW\*(C`End\*(C'\fR or \f(CW\*(C`Strg\-E\*(C'\fR to move to the end of the line.
.PP
To leave a \f(CW\*(C`read\-line\*(C'\fR without returning anything press \f(CW\*(C`Ctrl\-X\*(C'\fR. When the input puffer is empty and an \f(CW\*(C`Enter\*(C'\fR is
pressed, \f(CW\*(C`read\-line\*(C'\fR returns an empty string.
.SH "OUTPUT"
.IX Header "OUTPUT"
The elements are right-justified if they look like a number else they are left-justified.
.PP
If the option \fIsquash_spaces\fR is enabled, leading and trailing spaces are removed from the elements and spaces are
squashed to a single white-space.
.PP
Tab characters (\f(CW\*(C`\et\*(C'\fR) are replaces with a space.
.PP
Vertical spaces (\f(CW\*(C`\ev\*(C'\fR) are squashed to two spaces
.PP
Control characters, code points of the surrogate ranges and non-characters are removed.
.PP
See also the option group \*(L"Output\*(R".
.SH "MENUS"
.IX Header "MENUS"
.SS "Plugins Menu"
.IX Subsection "Plugins Menu"
Choosing a plugin leads to the \fIDatabases Menu\fR.
.PP
(If there is only one plugin, the plugins menu is not shown but the plugin is chosen automatically.)
.SS "Databases Menu"
.IX Subsection "Databases Menu"
Choosing a database leads to the \fISchemas Menu\fR.
.PP
(If there is only one database, the databases menu is not shown but the database is chosen automatically.)
.SS "Schemas Menu"
.IX Subsection "Schemas Menu"
Choosing a schema leads to the \fITables Menu\fR.
.PP
(If there is not more than one schema, the schemas menu is not shown but the schema is chosen automatically.)
.SS "Tables Menu"
.IX Subsection "Tables Menu"
The menu entries of the tables menu:
.PP
\fIPrompt Line\fR
.IX Subsection "Prompt Line"
.PP
Selecting the prompt line (the database name) opens a menu with these entries:
.IP "\(bu" 4
Create Table
.IP "\(bu" 4
Drop Table
.IP "\(bu" 4
Create View
.IP "\(bu" 4
Drop View
.IP "\(bu" 4
Attach \s-1DB\s0
.IP "\(bu" 4
Detach \s-1DB\s0
.PP
For \fICreate Table\fR, \fIDrop Table\fR, \fICreate View\fR and \fIDrop View\fR see \*(L"\s-1WRITE ACCESS\*(R"\s0. These entries are available if
enabled in \*(L"Extensions\*(R".
.PP
\&\fIAttache \s-1DB\s0\fR is available for \f(CW\*(C`SQLite\*(C'\fR databases. \fIAttach \s-1DB\s0\fR can be used to attach databases to the
current database. The menu entry \fIDetach \s-1DB\s0\fR is available if a \f(CW\*(C`SQLite\*(C'\fR database has attached databases.
.PP
By selecting the prompt line of this menu (the database name) one can change the \fISource type of input data\fR settings.
.PP
\fITables Entries\fR
.IX Subsection "Tables Entries"
.PP
Choosing one of the tables leads to the \fI\s-1SQL\s0 Menu\fR.
.PP
\fIDerived\fR
.IX Subsection "Derived"
.PP
Choosing this entry allows one to enter a subquery and use it as a table.
.PP
This entry is available if enabled in \*(L"Extensions\*(R".
.PP
\fIJoin\fR
.IX Subsection "Join"
.PP
Join tables.
.PP
This entry is available if enabled in \*(L"Extensions\*(R".
.PP
\fIUnion\fR
.IX Subsection "Union"
.PP
Combine the result from multiple \s-1SELECT\s0 statements.
.PP
This entry is available if enabled in \*(L"Extensions\*(R".
.PP
\fISettings\fR
.IX Subsection "Settings"
.PP
See \*(L"\s-1DB\s0 Settings\*(R".
.PP
This entry is available if enabled in \*(L"Extensions\*(R".
.SS "\s-1SQL\s0 Menu"
.IX Subsection "SQL Menu"
In this menu it can be formed the \s-1SQL\s0 query.
.PP
The \s-1SQL\s0 Menu has the following menu entries:
.PP
\fIPrompt Line\fR
.IX Subsection "Prompt Line"
.PP
Selecting this prompt line (\fICustomize:\fR) opens a menu with these entries:
.IP "\(bu" 4
Insert Into
.IP "\(bu" 4
Update
.IP "\(bu" 4
Delete
.PP
See \*(L"\s-1WRITE ACCESS\*(R"\s0. These entries are available if enabled in \*(L"Extensions\*(R".
.PP
By selecting the prompt line of this menu (\fIChoose \s-1SQL\s0 type:\fR) one can change the \fISource type of input data\fR settings.
.PP
\fIPrint \s-1TABLE\s0\fR
.IX Subsection "Print TABLE"
.PP
Select \fIPrint \s-1TABLE\s0\fR to show the result of the formed statement on the screen.
.PP
\fIThe Sub-Statements Entries\fR
.IX Subsection "The Sub-Statements Entries"
.PP
To reset a \s-1SQL\s0 \*(L"sub-statement\*(R" (e.g \f(CW\*(C`WHERE\*(C'\fR) re-enter into the respective menu and choose \f(CW\*(C`\-OK\-\*(C'\fR.
.PP
See also \*(L"Extensions\*(R" and \*(L"Operators\*(R"
.PP
\s-1SELECT\s0
.IX Subsection "SELECT"
.PP
Choose the required columns for the \f(CW\*(C`SELECT\*(C'\fR sub-statement.
.PP
It is possible to ad many columns at once by marking them with the \f(CW\*(C`SpaceBar\*(C'\fR key. If columns are marked with the
\&\f(CW\*(C`SpaceBar\*(C'\fR, the highlighted column is not added to the chosen when \f(CW\*(C`Return\*(C'\fR is pressed.
.PP
If an \fI\s-1AGGREGATE\s0\fR function or a \fI\s-1GROUP BY\s0\fR columns is selected, the available choices of this sub-statement are the
selected aggregate functions and the selected group-by columns.
.PP
\s-1AGGREGATE\s0
.IX Subsection "AGGREGATE"
.PP
\&\f(CW\*(C`AVG\*(C'\fR, \f(CW\*(C`COUNT\*(C'\fR, \f(CWCOUNT(*)\fR, \f(CW\*(C`GROUP_CONCAT\*(C'\fR/\f(CW\*(C`STRING_AGG\*(C'\fR, \f(CW\*(C`MAX\*(C'\fR, \f(CW\*(C`MIN\*(C'\fR, \f(CW\*(C`SUM\*(C'\fR
.PP
\s-1DISTINCT\s0
.IX Subsection "DISTINCT"
.PP
\s-1WHERE\s0
.IX Subsection "WHERE"
.PP
\s-1GROUP BY\s0
.IX Subsection "GROUP BY"
.PP
It is possible to ad many columns at once by marking them with the \f(CW\*(C`SpaceBar\*(C'\fR key. If columns are marked with the
\&\f(CW\*(C`SpaceBar\*(C'\fR, the highlighted column is not added to the chosen when \f(CW\*(C`Return\*(C'\fR is pressed.
.PP
\s-1HAVING\s0
.IX Subsection "HAVING"
.PP
\s-1ORDER BY\s0
.IX Subsection "ORDER BY"
.PP
\s-1LIMIT\s0
.IX Subsection "LIMIT"
.PP
\fIReset\fR
.IX Subsection "Reset"
.PP
Reset the \s-1SQL\s0 statement.
.SH "WRITE ACCESS"
.IX Header "WRITE ACCESS"
.SS "Create/Drop Table/View"
.IX Subsection "Create/Drop Table/View"
\&\fICreate/Drop Table/View\fR can be reached by selecting the prompt-line in the \*(L"Tables Menu\*(R" if the respective option is
activated.
.PP
Selecting the prompt line of the \fICreate/Drop Table/View\fR sub-menu allows one to set the parse settings described in
\&\*(L"Insert Data\*(R".
.PP
\fICreate Table\fR
.IX Subsection "Create Table"
.PP
If the option \fISource type of input data\fR is set to \fImenu\fR, selecting \fICreate Table\fR opens a sub-menu where one can choose the
type of the data source. If \fISource type of input data\fR is set to \fIplain\fR, \fIcopy&paste\fR or \fIfile\fR, the set data source type is
used automatically without showing a menu.
.PP
For the meaning of the different data source types see \*(L"Source type of input data\*(R".
.PP
After the data has been read the user can apply different input filters (See \*(L"Input filters\*(R"). When the input filters
are confirmed the user is asked
.IP "\- for the table name" 4
.IX Item "- for the table name"
.PD 0
.IP "\- if the first data row should be used as header" 4
.IX Item "- if the first data row should be used as header"
.ie n .IP "\- if an auto increment column should be added (if the option ""Auto increment"" is enabled)" 4
.el .IP "\- if an auto increment column should be added (if the option ``Auto increment'' is enabled)" 4
.IX Item "- if an auto increment column should be added (if the option Auto increment is enabled)"
.IP "\- to edit the column names" 4
.IX Item "- to edit the column names"
.IP "\- to edit the column data types" 4
.IX Item "- to edit the column data types"
.IP "\- to confirm the creating of the table" 4
.IX Item "- to confirm the creating of the table"
.PD
.PP
\fIDrop table\fR
.IX Subsection "Drop table"
.PP
Drop a table. The whole table is shown before the user confirms to drop the table.
.PP
\fICreate View\fR
.IX Subsection "Create View"
.PP
Before creating a view: print the required select-statement to make it available in the subquery menu.
.PP
\fIDrop View\fR
.IX Subsection "Drop View"
.PP
Drop a view. The whole view is shown before the user confirms to drop the view.
.SS "Insert Into/Update/Delete"
.IX Subsection "Insert Into/Update/Delete"
\&\fIInsert Into\fR, \fIUpdate\fR and \fIDelete\fR can be reached by selecting the prompt-line in the \*(L"\s-1SQL\s0 Menu\*(R" if the
respective option is activated.
.PP
\&\fIDelete\fR, \fIUpdate\fR or \fIInsert Into\fR  may not be available with \f(CW\*(C`JOIN\*(C'\fR and \f(CW\*(C`UNION\*(C'\fR statements.
.PP
Selecting the prompt line of the \fIInsert Into/Update/Delete\fR sub-menu allows one to set the parse settings described in
\&\*(L"Insert Data\*(R".
.PP
\fIInsert Into\fR
.IX Subsection "Insert Into"
.PP
If the option \fISource type of input data\fR is set to \fImenu\fR, selecting \fIInsert Into\fR opens a sub-menu where one can
choose the type of the data source. If \fISource type of input data\fR is set to \fIplain\fR, \fIcopy&paste\fR or \fIfile\fR, the
set data source type is used without showing a menu.
.PP
For the meaning of the different data source types see \*(L"Source type of input data\*(R".
.PP
After the data has been read the user can apply different input filters (See \*(L"Input filters\*(R").
.PP
If the first column of a table is an auto-increment column, the \f(CW\*(C`INSERT INTO\*(C'\fR statement is build without this first
column. This feature is available if supported by the database plugin.
.PP
\fIUpdate\fR
.IX Subsection "Update"
.PP
Update records. The affected (and not yet updated) records are shown shown before the user confirms the update.
.PP
See also \fISubqueries\fR in \*(L"Extensions\*(R"
.PP
\fIDelete\fR
.IX Subsection "Delete"
.PP
Delete records. The affected records are shown before the user confirms the deletion.
.SS "Data Input"
.IX Subsection "Data Input"
\fISource type of input data\fR
.IX Subsection "Source type of input data"
.IP "Plain" 4
.IX Item "Plain"
Insert the data cell by cell.
.IP "Copy and Paste" 4
.IX Item "Copy and Paste"
Reads from \s-1STDIN\s0 until the end of input.
.IP "From File" 4
.IX Item "From File"
The data is read from a chosen file.
.Sp
Supported file formats: text files and file formats supported by Spreadsheet::Read.
.Sp
Selecting \fIFrom File\fR opens the \fISource file directory\fR sub-menu where one can choose the directory which should be
searched for files.
.Sp
If \*(L"Directory history\*(R" is set to \f(CW1\fR and a directory has been saved, this menu is skipped and the directory is chosen
automatically.
.Sp
After a directory has been chosen a sub-menu is opened where one can choose the source file.
.Sp
Selecting the prompt line of the source file sub-menu allows one to set the parse settings described in \*(L"Insert Data\*(R".
If the previous sub-menu \fISource file directory\fR is not shown due to the settings described before, additionally to the
parse settings it is also possible the change the source file directory in this sub-menu by selecting \fI\s-1NEW\s0 search\fR.
.PP
See also the input filter \*(L"Reparse\*(R" in \fIInput filters\fR, which allows one to change the parse-settings and then
re-read the data.
.PP
\fIInput filters\fR
.IX Subsection "Input filters"
.IP "Choose Cols" 4
.IX Item "Choose Cols"
Use only selected columns of the imported data.
.Sp
If the data has empty columns (\f(CW\*(C`\-\-\*(C'\fR), the non-empty columns are preselected. Columns are regarded as
empty if the values of all fields in the column \- including the column header \- have no length.
.Sp
If the selected columns of a previous \fIChoose Cols\fR usage are a subset of the current available columns, this subset
of columns is preselected. A \fI\s-1RESET\s0\fR removes this preselection.
.Sp
Columns added with the filter \fIAppend Col\fR are empty and therefore not preselected.
.Sp
If a column is not empty, but has no header name the header is named temporarily \f(CW\*(C`tmp\*(C'\fR.
.IP "Choose Rows" 4
.IX Item "Choose Rows"
Use only selected rows of the imported data.
.Sp
If the data has empty rows, the non-empty rows are preselected. Rows are regarded as empty if the values of all fields
in the row have no length.
.IP "Range Rows" 4
.IX Item "Range Rows"
Use only a range of rows.
.IP "Row Groups" 4
.IX Item "Row Groups"
If the input has rows with different numbers of columns, \fIRow Groups\fR sorts rows with the same number of columns in a
group. The user can then choose one or more groups of rows. There is only one group, if all rows have the same column
count.
.IP "Remove Cell" 4
.IX Item "Remove Cell"
Remove a cell from a chosen row.
.IP "Insert Cell" 4
.IX Item "Insert Cell"
Insert a cell in a chosen row. The new cell is inserted in front of a chosen cell.
.IP "Append Col" 4
.IX Item "Append Col"
Append an empty column. Appends a header element to the header row and adjusts the remaining rows to the length of the
header row. If the input has rows with different numbers of cells, use the \fIRow Group\fR filter first to select the right
row-group.
.IP "Split Column" 4
.IX Item "Split Column"
.Vb 7
\&     Item | length/width/height             Item | length | width | height
\&    \-\-\-\-\-\-|\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-            \-\-\-\-\-|\-\-\-\-\-\-\-\-|\-\-\-\-\-\-\-|\-\-\-\-\-\-
\&      423 |            40/30/25              423 |     40 |    30 |    25
\&    \-\-\-\-\-\-|\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-              64 |     80 |    60 |    30
\&       64 |            80/60/30              705 |     50 |    50 |    40
\&    \-\-\-\-\-\-|\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
\&      705 |            50/50/40
.Ve
.IP "Search & Replace" 4
.IX Item "Search & Replace"
.Vb 7
\&     y  | factor                            y  | factor
\&    \-\-\-\-|\-\-\-\-\-\-\-\-\-                          \-\-\-|\-\-\-\-\-\-\-
\&     62 | 8,975.1                           62 | 8975.1
\&    \-\-\-\-|\-\-\-\-\-\-\-\-\-                          63 | 9745.8
\&     63 | 9,745.8                           64 | 9818.2
\&    \-\-\-\-|\-\-\-\-\-\-\-\-\-
\&     64 | 9,818.2
.Ve
.Sp
In the replacement it can be used the variable \f(CW$c\fR as a counter. \f(CW$c\fR is set to \f(CW0\fR before each \f(CW\*(C`s///\*(C'\fR.
.Sp
Available modifiers: \f(CW\*(C`g\*(C'\fR, \f(CW\*(C`i\*(C'\fR, \f(CW\*(C`e\*(C'\fR.
.Sp
By selecting the prompt line (\f(CW\*(C`Choose:\*(C'\fR) one can save search & replace instructions for later use.
.Sp
If a search & replace has altered the first row of the input data, a menu entry named \f(CW\*(C`RESTORE header row\*(C'\fR is offered.
.IP "Split Table" 4
.IX Item "Split Table"
.Vb 7
\&     y  | factor  | y  | factor             y  | factor
\&    \-\-\-\-|\-\-\-\-\-\-\-\-\-|\-\-\-\-|\-\-\-\-\-\-\-\-\-           \-\-\-|\-\-\-\-\-\-\-\-
\&     62 | 8,975.1 | 64 | 9,986.5            62 | 8,975.1
\&    \-\-\-\-|\-\-\-\-\-\-\-\-\-|\-\-\-\-|\-\-\-\-\-\-\-\-\-           63 | 9,745.8
\&     63 | 9,745.8 | 65 | 9,782.7            y  | factor
\&                                            64 | 9,818.2
\&                                            65 | 9,986.5
.Ve
.IP "Merge Rows" 4
.IX Item "Merge Rows"
.Vb 7
\&     Month | Average | Average              Month | Average MinTemp | Average MaxTemp
\&    \-\-\-\-\-\-\-|\-\-\-\-\-\-\-\-\-|\-\-\-\-\-\-\-\-\-             \-\-\-\-\-\-|\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-|\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
\&           | MinTemp | MaxTemp              Jan   |               9 |              22
\&    \-\-\-\-\-\-\-|\-\-\-\-\-\-\-\-\-|\-\-\-\-\-\-\-\-\-             Feb   |              10 |              23
\&     Jan   |       9 |      22
\&    \-\-\-\-\-\-\-|\-\-\-\-\-\-\-\-\-|\-\-\-\-\-\-\-\-\-
\&     Feb   |      10 |      23
.Ve
.Sp
\&\fIMerge Rows\fR can be used to edit a row by selecting only one row.
.IP "Join Columns" 4
.IX Item "Join Columns"
.Vb 7
\&     Item | length | width | height          Item | length/width/height
\&    \-\-\-\-\-\-|\-\-\-\-\-\-\-\-|\-\-\-\-\-\-\-|\-\-\-\-\-\-\-\-         \-\-\-\-\-|\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
\&      423 |     40 |    30 |     25           423 | 40/30/25
\&    \-\-\-\-\-\-|\-\-\-\-\-\-\-\-|\-\-\-\-\-\-\-|\-\-\-\-\-\-\-\-           64 | 80/60/30
\&       64 |     80 |    60 |     30           705 | 50/50/40
\&    \-\-\-\-\-\-|\-\-\-\-\-\-\-\-|\-\-\-\-\-\-\-|\-\-\-\-\-\-\-\-
\&      705 |     50 |    50 |     40
.Ve
.Sp
\&\fIJoin Columns\fR can be used to edit a column by selecting only one column.
.IP "Fill up Rows" 4
.IX Item "Fill up Rows"
If the input table rows have different numbers of cells, this filter appends empty cells to the rows until the cell
count of the rows are equal to the cell count of the row with highest cell count.
.Sp
One can enter in the \fIRow Group\fR filter to see if the table has rows with different length. If \fIRow Group\fR shows only
one group, all rows have the same length.
.IP "Cols to Rows" 4
.IX Item "Cols to Rows"
Transpose columns to rows.
.Sp
.Vb 5
\&     Year | 2000 | 2001 | 2002              Year | Max | Min
\&    \-\-\-\-\-\-|\-\-\-\-\-\-|\-\-\-\-\-\-|\-\-\-\-\-\-             \-\-\-\-\-|\-\-\-\-\-|\-\-\-\-
\&     Max  |   14 |   22 |   17              2000 |  14 |  11
\&    \-\-\-\-\-\-|\-\-\-\-\-\-|\-\-\-\-\-\-|\-\-\-\-\-\-             2001 |  22 |  10
\&     Min  |   11 |   10 |    9              2002 |  17 |   9
.Ve
.IP "Empty to \s-1NULL\s0" 4
.IX Item "Empty to NULL"
Convert fields containing an empty string to \s-1NULL\s0 (undefined).
.Sp
The default values for this filter can be set with the option \*(L"Empty to Null\*(R".
.IP "Reset" 4
.IX Item "Reset"
Reset the filters to the default values.
.IP "Reparse" 4
.IX Item "Reparse"
Change the parse settings and reparse the data with the new settings.
.SH "OPTIONS"
.IX Header "OPTIONS"
The options menu is called with \f(CW\*(C`db\-browser \-h\*(C'\fR.
.SS "\s-1HELP\s0"
.IX Subsection "HELP"
Show this documentation.
.SS "Path"
.IX Subsection "Path"
Shows the version and the path of the running \f(CW\*(C`db\-browser\*(C'\fR and the path of the application directory.
.SS "\s-1DB\s0 Options"
.IX Subsection "DB Options"
\fI\s-1DB\s0 Plugins\fR
.IX Subsection "DB Plugins"
.PP
Choose the required database plugins.
.PP
\fI\s-1DB\s0 Settings\fR
.IX Subsection "DB Settings"
.PP
These driver specific \fI\s-1DB\s0 Settings\fR are used as the default database settings.
.PP
There is also in each \*(L"Tables Menu\*(R" the entry \fISettings\fR (if enabled in \*(L"Extensions\*(R") to make database specific
settings. If no database specific settings are set, these global (to the database plugin) \fI\s-1DB\s0 Settings\fR are used.
.PP
User defined database plugins: it depends on the plugin which items are offered to be set in each option and whether the
selections made by the user are considered.
.IP "Fields" 4
.IX Item "Fields"
Set which fields are required to connect to a database.
.IP "Login Data" 4
.IX Item "Login Data"
The entered login data is saved in a configuration file and used to connect to the database (the password can not be
saved).
.IP "\s-1ENV\s0 Variables" 4
.IX Item "ENV Variables"
The user can choose environment variables form a list of environment variables that should be used \- if set \- to connect
to the database.
.IP "Attributes" 4
.IX Item "Attributes"
For the meaning of these driver specific attributes check the appropriate driver documentation.
.IP "Reset \s-1DB\s0" 4
.IX Item "Reset DB"
Reset database specific parameter to the global \fI\s-1DB\s0 Settings\fR.
.SS "Behavior"
.IX Subsection "Behavior"
Set the behavior of the interactive menus.
.PP
\fIMenu memory\fR
.IX Subsection "Menu memory"
.PP
If enabled: saves the menu position while entering in a sub menu.
.PP
\fIKeep header\fR
.IX Subsection "Keep header"
.PP
Show the table header on top of each page.
.PP
\fIExpand table\fR
.IX Subsection "Expand table"
.PP
Expand table rows:
.ie n .IP """YES""" 4
.el .IP "\f(CWYES\fR" 4
.IX Item "YES"
if \f(CW\*(C`Return\*(C'\fR is pressed, the selected table row is printed with each column in its own line.
.ie n .IP """NO""" 4
.el .IP "\f(CWNO\fR" 4
.IX Item "NO"
don't expand table rows.
.ie n .IP """YES fast back""" 4
.el .IP "\f(CWYES fast back\fR" 4
.IX Item "YES fast back"
do not expand the first row if the cursor auto-jumped to the first row.
.PP
\fIExpand info table\fR
.IX Subsection "Expand info table"
.PP
Before records are deleted/updated and before a table or a view is dropped the affected records are shown in an info-table.
.PP
Expand info tables rows:
.ie n .IP """YES""" 4
.el .IP "\f(CWYES\fR" 4
.IX Item "YES"
if \f(CW\*(C`Return\*(C'\fR is pressed, the selected table row is printed with each column in its own line.
.ie n .IP """NO""" 4
.el .IP "\f(CWNO\fR" 4
.IX Item "NO"
don't expand table rows.
.ie n .IP """YES fast back""" 4
.el .IP "\f(CWYES fast back\fR" 4
.IX Item "YES fast back"
do not expand the first row if the cursor auto-jumped to the first row.
.PP
\fIMouse mode\fR
.IX Subsection "Mouse mode"
.PP
Set the \fIMouse mode\fR (see \*(L"mouse\*(R" in Term::Choose).
.SS "Extensions"
.IX Subsection "Extensions"
Add menu entries to menus:
.PP
\fITables menu\fR
.IX Subsection "Tables menu"
.IP "\(bu" 4
Derived (table)
.IP "\(bu" 4
Join
.IP "\(bu" 4
Union
.IP "\(bu" 4
\&\s-1DB\s0 settings
.PP
\fIJoin menu\fR
.IX Subsection "Join menu"
.IP "\(bu" 4
Derived (table)
.PP
\fIUnion menu\fR
.IX Subsection "Union menu"
.IP "\(bu" 4
Derived (table)
.IP "\(bu" 4
Union All
.PP
\fISubstatements\fR
.IX Subsection "Substatements"
.PP
Substatement additions for:
.IP "\s-1SELECT\s0" 4
.IX Item "SELECT"
\&\fINone\fR, \fIFunc\fR, \fI\s-1SQ\s0\fR, \fIFunc/SQ\fR
.IP "\s-1WHERE\s0" 4
.IX Item "WHERE"
\&\fINone\fR, \fIFunc\fR, \fI\s-1SQ\s0\fR, \fIFunc/SQ\fR
.IP "\s-1GROUP BY\s0" 4
.IX Item "GROUP BY"
\&\fINone\fR, \fIFunc\fR, \fI\s-1SQ\s0\fR, \fIFunc/SQ\fR
.IP "\s-1HAVING\s0" 4
.IX Item "HAVING"
\&\fINone\fR, \fIFunc\fR, \fI\s-1SQ\s0\fR, \fIFunc/SQ\fR
.IP "\s-1ORDER BY\s0" 4
.IX Item "ORDER BY"
\&\fINone\fR, \fIFunc\fR, \fI\s-1SQ\s0\fR, \fIFunc/SQ\fR
.IP "\s-1SET\s0" 4
.IX Item "SET"
\&\fINone\fR, \fIFunc\fR, \fI\s-1SQ\s0\fR, \fI=N\fR, \fIFunc/SQ/=N\fR
.PP
If set to \fINone\fR, no menu extensions are available.
.PP
If set to \fIFunc\fR, \f(CW\*(C`f()\*(C'\fR is shown as additionally menu entry. Selecting \f(CW\*(C`f()\*(C'\fR opens the \*(L"Functions\*(R" menu.
.PP
If set to \fI\s-1SQ\s0\fR, \f(CW\*(C`SQ\*(C'\fR is shown as additionally menu entry. Selecting \f(CW\*(C`SQ\*(C'\fR opens the \*(L"Subqueries\*(R" menu.
.PP
If set to \fI=N\fR, \f(CW\*(C`=N\*(C'\fR is shown as additionally menu entry (available after the \f(CW\*(C`SET\*(C'\fR in an \f(CW\*(C`UPDATE\*(C'\fR statement).
Selecting \f(CW\*(C`=N\*(C'\fR sets the column to \f(CW\*(C`NULL\*(C'\fR.
.PP
If set to \fIFunc/SQ\fR (or \fIFunc/SQ/=N\fR), \f(CW\*(C`%%\*(C'\fR is shown as additionally menu entry. Selecting \f(CW\*(C`%%\*(C'\fR lets one choose
between all available extensions.
.PP
If these menu entries are prefixed with \f(CW\*(C`=\*(C'\fR, it is required to select the wanted operator \fIafter\fR the extended menu
entry has been chosen.
.PP
Functions
.IX Subsection "Functions"
.IP "\(bu" 4
Bit_Length
.IP "\(bu" 4
Char_Length
.IP "\(bu" 4
Concatenate
.IP "\(bu" 4
Epoch_to_Date
.IP "\(bu" 4
Epoch_to_DateTime
.IP "\(bu" 4
Replace
.IP "\(bu" 4
Round
.IP "\(bu" 4
Truncate
.PP
Subqueries
.IX Subsection "Subqueries"
.PP
Selecting a subquery menu entry (or a \fIDerived\fR menu entry) opens a subquery sub-menu which allows one the enter a
subquery (\fIRead-Line\fR).
.PP
If stored or temporarily stored subqueries are available, it is also possible to select one of those subqueries instead
of entering a subquery.
.PP
The subqueries are automatically enclosed in parentheses if the subqueries do not contain any parentheses.
.PP
A subquery can be saved or removed in the sub-menu which opens by selecting the prompt line of a subquery menu
(\fIChoose \s-1SQ:\s0\fR).
.PP
The last subqueries entered in the subquery menu and the last statements printed with \fIPrint \s-1TABLE\s0\fR are stored
temporarily.
.PP
\fIParentheses\fR
.IX Subsection "Parentheses"
.PP
Enable parentheses in \f(CW\*(C`WHERE\*(C'\fR and/or \f(CW\*(C`HAVING\*(C'\fR clauses.
.PP
\fIWrite access\fR
.IX Subsection "Write access"
.PP
Enable write access \- use with care.
.IP "\(bu" 4
Insert Records
.IP "\(bu" 4
Update Records
.IP "\(bu" 4
Delete Records
.IP "\(bu" 4
Create Table
.IP "\(bu" 4
Drop Table
.IP "\(bu" 4
Create View
.IP "\(bu" 4
Drop View
.SS "\s-1SQL\s0"
.IX Subsection "SQL"
\fIMetadata\fR
.IX Subsection "Metadata"
.PP
If \fIMetadata\fR is enabled, system tables/schemas/databases are appended to the respective list.
.PP
\fIOperators\fR
.IX Subsection "Operators"
.PP
Choose the required operators.
.PP
There are two regexp entries: \f(CW\*(C`REGEXP\*(C'\fR matches case sensitive while \f(CW\*(C`REGEXP_i\*(C'\fR matches case insensitive.
.PP
With \f(CW\*(C`MySQL\*(C'\fR the sensitive match is achieved by enabling the \f(CW\*(C`BINARY\*(C'\fR operator.
.PP
\fIAliases\fR
.IX Subsection "Aliases"
.PP
If enabled, it is asked for an alias. If entered nothing, no alias is added except for joined tables and unions and for
derived tables which get then a default alias.
.IP "\(bu" 4
Aggregate
.IP "\(bu" 4
Derived tables
.IP "\(bu" 4
Functions in the \s-1SELECT\s0 sub-statement.
.IP "\(bu" 4
Join
.IP "\(bu" 4
Subqueries in the \s-1SELECT\s0 sub-statement.
.IP "\(bu" 4
Union
.PP
\fIIdentifiers\fR
.IX Subsection "Identifiers"
.IP "Qualified table names" 4
.IX Item "Qualified table names"
If set to \f(CW\*(C`YES\*(C'\fR, qualified table names are used in \s-1SQL\s0 statements.
.IP "Quote identifiers" 4
.IX Item "Quote identifiers"
If set to \f(CW\*(C`YES\*(C'\fR, \s-1SQL\s0 identifiers are quoted.
.PP
\&\f(CW\*(C`SQLite\*(C'\fR:
.PP
\&\- databases in \s-1SQL\s0 statements (\f(CW\*(C`ATTACH DATABASE\*(C'\fR) are always quoted.
.PP
\&\- if the current database has attached databases, the use of qualified table names is enabled automatically.
.PP
\fIView prefix\fR
.IX Subsection "View prefix"
.PP
Enter a string which should be automatically put in front of all view names.
.PP
\fIAuto increment\fR
.IX Subsection "Auto increment"
.PP
Setting \fIAuto increment\fR to a value which is not the empty string enables the option to set an auto increment column
when creating a table. The value set here is then used as the default name for the auto increment column.
.PP
\fICol data types\fR
.IX Subsection "Col data types"
.PP
If this option is enabled and a table is created, \f(CW\*(C`SQL::Type::Guess\*(C'\fR is used to detect the data types. These data types
are then used as default values when the user is asked for the data types.
.PP
\fIMax Rows\fR
.IX Subsection "Max Rows"
.PP
Sets \f(CW\*(C`LIMIT\*(C'\fR automatically to \fIMax Rows\fR. This can be overwritten by setting a \s-1SQL\s0 \f(CW\*(C`LIMIT\*(C'\fR statement manually.
Fetched table rows are kept in memory.
.PP
To disable the automatic limit set \fIAuto Limit\fR to \f(CW0\fR.
.SS "Output"
.IX Subsection "Output"
\fICol width\fR
.IX Subsection "Col width"
.PP
Columns with a width below or equal \fIColwidth\fR are only trimmed if it is still required to lower the row width despite
all columns wider than \fIColwidth\fR have been trimmed to \fIColwidth\fR.
.PP
\fIProgress bar\fR
.IX Subsection "Progress bar"
.PP
Set the progress bar threshold. If the number of fields (rows x columns) is higher than the threshold, a progress bar is
shown while preparing the data for the output.
.PP
\fITab width\fR
.IX Subsection "Tab width"
.PP
Set the number of spaces between columns.
.PP
\fIGrid\fR
.IX Subsection "Grid"
.PP
Separate the columns from each other and the header from the body with lines.
.PP
\fIColor\fR
.IX Subsection "Color"
.PP
Enables the support for color and text formatting escape sequences (\s-1SGR\s0) if set to \f(CW\*(C`Enable\*(C'\fR. Before the output it is
added a reset (\f(CW\*(C`\ee[0m\*(C'\fR) at the end of each row.
.PP
\fIBinary binary\fR
.IX Subsection "Binary binary"
.PP
Setting the \fIbinary_filter\fR to \f(CW1\fR means: print \*(L"\s-1BNRY\*(R"\s0 instead of arbitrary binary data. If data matches the repexp
\&\f(CW\*(C`/[\ex00\-\ex08\ex0B\-\ex0C\ex0E\-\ex1F]/\*(C'\fR, it is considered arbitrary binary data. Printing arbitrary binary data could break
the output.
.PP
\fISquash spaces\fR
.IX Subsection "Squash spaces"
.PP
If \fIsquash_spaces\fR is enabled, consecutive spaces are squashed to one space and leading and trailing spaces are removed.
.PP
\fIShow table name\fR
.IX Subsection "Show table name"
.PP
If enabled, the table name is displayed in the lower left corner of the terminal behind the page number.
.PP
\fIIndentation\fR
.IX Subsection "Indentation"
.PP
Set the indentation width for the info output.
.PP
\fITruncated rows\fR
.IX Subsection "Truncated rows"
.PP
How should truncated data source rows be marked at the end: \f(CW\*(C`...\*(C'\fR, \f(CW\*(C`|\*(C'\fR or \f(CW\*(C`none\*(C'\fR.
.PP
\fISet string\fR
.IX Subsection "Set string"
.PP
Undef
.IX Subsection "Undef"
.PP
Set the string that will be shown on the screen instead of an undefined field.
.PP
On \f(CW\*(C`MSWin32\*(C'\fR only single-byte character sets are supported when entering the setting \fIUndef\fR, \fIuser\fR, \fIhost\fR or
\&\fIport\fR with the \f(CW\*(C`db\-browser\*(C'\fRs readline. But it is possible to edit the entry in configuration files directly after the
entry was created with this options menu.
.PP
Decimal separator
.IX Subsection "Decimal separator"
.PP
Set the decimal separator. Numbers with a decimal separator are formatted as number if this option is set to the right
value.
.PP
Allowed values: a character with a print width of \f(CW1\fR. If an invalid value is passed, \fIdecimal_separator\fR falls back
to the default value (dot).
.PP
\fIWarnings\fR
.IX Subsection "Warnings"
.PP
Enable/disable \f(CW\*(C`File::Find\*(C'\fR warnings when searching for \f(CW\*(C`SQLite\*(C'\fR databases.
.SS "Insert Data"
.IX Subsection "Insert Data"
\fIParse tool for 'file'\fR
.IX Subsection "Parse tool for 'file'"
.PP
Set how to parse text files. Files where \f(CW\*(C`\-T $filename\*(C'\fR returns true are considered text files.
.PP
If a file is not a text file, then it is always used \f(CW\*(C`Spreadsheet::Read\*(C'\fR to parse the file regardless of this setting.
.IP "\(bu" 4
Text::CSV
.Sp
To decode the files it is used the \*(L"File encoding\*(R".
.Sp
Advantages:
.RS 4
.IP "\(bu" 4
Allows to set different csv-related options.
.RE
.RS 4
.RE
.IP "\(bu" 4
split
.Sp
Reads to whole input at once and splits the input with the input record separator (\s-1IRS\s0) to get the records (rows). Then
it splits the records with the input field separator (\s-1IFS\s0) to get the fields (columns) of each record.
.Sp
To decode the files it is used the \*(L"File encoding\*(R".
.Sp
Advantages:
.RS 4
.IP "\(bu" 4
The values assigned to the \s-1IRS\s0 and the \s-1IFS\s0 are treated as regexps.
.RE
.RS 4
.RE
.IP "\(bu" 4
Template
.Sp
Uses \f(CW\*(C`unpack\*(C'\fR with the \f(CW\*(C`A\*(C'\fR character to break up input lines.
.Sp
\&\f(CW\*(C`unpack\*(C'\fR used with \f(CW\*(C`A\*(C'\fR strips trailing whitespace. For leading whitespace to user has the option to remove it or not.
Any remaining column separators can be removed with the \fISearch & Replace\fR filter.
.Sp
If the row length is greater than the screen width, make notes of the number of columns and the length of each column
before using \fITemplate\fR.
.Sp
Advantages:
.RS 4
.IP "\(bu" 4
Good for input with fixed-columns-length.
.RE
.RS 4
.RE
.IP "\(bu" 4
Spreadsheet::Read
.Sp
If \f(CW\*(C`Spreadsheet::Read\*(C'\fR is chosen, the default settings from Spreadsheet::Read are used.
.Sp
\&\f(CW\*(C`Spreadsheet::Read\*(C'\fR will use the first line of the file to auto-detect the separation character if the file is a
csv-file.
.Sp
\&\f(CW\*(C`Spreadsheet::Read::rows\*(C'\fR fills up uneven rows automatically so the filter \*(L"Fill up Rows\*(R" and \*(L"Row Groups\*(R" have no
meaning if \f(CW\*(C`Spreadsheet::Read\*(C'\fR is used.
.Sp
Advantages:
.RS 4
.IP "\(bu" 4
Auto-detects the separation character for csv-files
.RE
.RS 4
.RE
.PP
\fIParse tool for 'copy & paste'\fR
.IX Subsection "Parse tool for 'copy & paste'"
.PP
Set how to parse the \*(L"multi row\*(R" input.
.PP
Same options as in \fIParse file\fR.
.PP
\fIcsv settings-a\fR
.IX Subsection "csv settings-a"
.PP
Set the Text::CSV options
.IP "\(bu" 4
sep_char
.IP "\(bu" 4
quote_char
.IP "\(bu" 4
escape_char
.IP "\(bu" 4
eol
.PP
\fIcsv settings-b\fR
.IX Subsection "csv settings-b"
.PP
Set Text::CSV options not mentioned in \fIcsv settings-a\fR:
.PP
For the meaning of the different options see Text::CSV.
.PP
\fI'split' settings\fR
.IX Subsection "'split' settings"
.IP "\(bu" 4
Record separator
.Sp
Set the input record separator (regexp).
.IP "\(bu" 4
Trim record left
.Sp
Expects a regex pattern. If set, removes leading characters matching regexp from each record.
.IP "\(bu" 4
Trim record right
.Sp
Expects a regex pattern. If set, removes trailing characters matching regexp from each record.
.IP "\(bu" 4
Field separator
.Sp
Set the input field separator (regexp).
.IP "\(bu" 4
Trim field left
.Sp
Expects a regex pattern. If set, removes leading characters matching regexp from each field.
.IP "\(bu" 4
Trim field right
.Sp
Expects a regex pattern. If set, removes trailing characters matching regexp from each field.
.PP
\fIEmpty to Null\fR
.IX Subsection "Empty to Null"
.PP
Set the \fIempty_to_null\fR defaults for the different data source types.
.PP
\fIFile encoding\fR
.IX Subsection "File encoding"
.PP
How to decode text files.
.PP
\fISource type of input data\fR
.IX Subsection "Source type of input data"
.PP
Set the data source type to \f(CW\*(C`plain\*(C'\fR, \f(CW\*(C`copy&paste\*(C'\fR, \f(CW\*(C`file\*(C'\fR or \f(CW\*(C`menu\*(C'\fR for \f(CW\*(C`Insert Into\*(C'\fR and for
\&\f(CW\*(C`Create Table\*(C'\fR.
.PP
If this option is set to \f(CW\*(C`menu\*(C'\fR, a menu is offered where the user can choose the type of the data source.
.PP
\fIDirectory history\fR
.IX Subsection "Directory history"
.PP
Set how many searched directories should be saved in the directory history.
.PP
A value of \f(CW0\fR disables the history.
.PP
If \fIDirectory history\fR is set to \f(CW1\fR and a directory has been saved, the directory is chosen automatically without
showing the history menu.
.PP
\fIFile filter\fR
.IX Subsection "File filter"
.PP
This option expects as its value a string. The string is used as a glob pattern.
.PP
If \fIfile\fR is selected as the data source type, only files matching this glob pattern are part of the available files.
.PP
\fIShow hidden files\fR
.IX Subsection "Show hidden files"
.PP
If \fIfile\fR is selected as the data source type, this setting determines if hidden files are part of the available files
or not.
.SH "CONFIGURATION FILES"
.IX Header "CONFIGURATION FILES"
To find out the location of the configuration files call \f(CW\*(C`db\-browser \-h\*(C'\fR and choose \fIPath\fR. The data is saved in \s-1JSON\s0
format.
.SH "REQUIREMENTS"
.IX Header "REQUIREMENTS"
.SS "Perl version"
.IX Subsection "Perl version"
Requires Perl version 5.10.1 or greater.
.SS "Decoded strings"
.IX Subsection "Decoded strings"
\&\f(CW\*(C`db\-browser\*(C'\fR expects decoded strings.
.PP
Non mappable characters will break the output.
.SS "Terminal"
.IX Subsection "Terminal"
It is required a terminal that uses a monospaced font which supports the printed characters.
.PP
The terminal has to understand \s-1ANSI\s0 escape sequences. If the \s-1OS\s0 is MSWin32 \f(CW\*(C`App::DBBrowser\*(C'\fR uses
Win32::Console::ANSI which emulates an \s-1ANSI\s0 console for the \f(CW\*(C`db\-browser\*(C'\fR.
.SS "Permissions"
.IX Subsection "Permissions"
To be able to browse the database\-, schema\- and table-lists and the content of tables the user must have the database
privileges required for fetching the requested data.
.PP
The \f(CW\*(C`db\-browser\*(C'\fR expects an existing home directory with read and write permissions for the user of the \f(CW\*(C`db\-browser\*(C'\fR.
.SH "CREDITS"
.IX Header "CREDITS"
Thanks to the Perl\-Community.de <http://www.perl-community.de> and the people form
stackoverflow <http://stackoverflow.com> for the help.
.SH "AUTHOR"
.IX Header "AUTHOR"
Matthäus Kiem <cuer2s@gmail.com>
.SH "LICENSE AND COPYRIGHT"
.IX Header "LICENSE AND COPYRIGHT"
Copyright 2012\-2020 Matthäus Kiem.
.PP
\&\s-1THIS SOFTWARE IS PROVIDED \*(L"AS IS\*(R" AND WITHOUT ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE
IMPLIED WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR A PARTICULAR PURPOSE.\s0
.PP
This program is free software; you can redistribute it and/or modify it under the same terms as Perl 5.10.0. For
details, see the full text of the licenses in the file \s-1LICENSE.\s0

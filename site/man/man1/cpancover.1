.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "CPANCOVER 1"
.TH CPANCOVER 1 "2020-05-19" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
cpancover \- report coverage statistics on CPAN modules
.SH "VERSION"
.IX Header "VERSION"
version 1.36
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 10
\& cpancover \-help \-info \-version
\&           \-collect \-redo_cpancover_html \-redo_html \-force \-dryrun
\&           \-modules module_name
\&           \-results_dir /path/to/dir
\&           \-outputdir /path/to/dir
\&           \-outputfile filename.html
\&           \-report report_name
\&           \-generate_html
\&           \-compress_old_versions number_to_keep
\&           \-local
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
.SH "OPTIONS"
.IX Header "OPTIONS"
The following command line options are supported:
.PP
.Vb 10
\& \-h \-help               \- show help
\& \-i \-info               \- show documentation
\& \-v \-version            \- show version
\& \-collect               \- collect coverage from modules       (on)
\& \-directory             \- location of the modules             ($cwd)
\& \-dryrun                \- don\*(Aqt execute (for some commands)   (off)
\& \-force                 \- recollect coverage                  (off)
\& \-modules               \- modules to use                      (all in $dir)
\& \-outputdir             \- where to store output               ($directory)
\& \-outputfile            \- top level index                     (coverage.html)
\& \-redo_cpancover_html   \- don\*(Aqt set default modules           (off)
\& \-redo_html             \- force html generation for modules   (off)
\& \-report                \- report to use                       (html_basic)
\& \-generate_html         \- generate html                       (off)
\& \-compress_old_versions \- compress data older than n versions (3)
\& \-local                 \- use local (uninstalled) code        (off)
.Ve
.SH "DETAILS"
.IX Header "DETAILS"
.SH "REQUIREMENTS"
.IX Header "REQUIREMENTS"
Collect coverage for results and create html, csv and json output.
.PP
The modules Template and Parallel::Iterator are required.
.SH "EXIT STATUS"
.IX Header "EXIT STATUS"
The following exit values are returned:
.PP
0   All operations were completed successfully.
.PP
>0  An error occurred.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.Vb 1
\& L<Devel::Cover>
.Ve
.SH "BUGS"
.IX Header "BUGS"
.Vb 1
\& Undocumented.
.Ve
.SH "LICENCE"
.IX Header "LICENCE"
Copyright 2002\-2019, Paul Johnson (paul@pjcj.net)
.PP
This software is free.  It is licensed under the same terms as Perl itself.
.PP
The latest version of this software should be available from my homepage:
http://www.pjcj.net

.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "HDR 1"
.TH HDR 1 "2020-08-18" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
.Vb 1
\& $>hdr \- hexadecimal [decimal] ascii, colorizing, range dump
.Ve
.SH "USAGE"
.IX Header "USAGE"
.Vb 1
\& $> hdr \-r range_definitions file_to_dump
\& 
\& $> hdr file_to_dump \-r \*(Aqcookie,10,yellow :padding,8 :size,4:data,100\*(Aq \-o ver
.Ve
.PP
The integer part can of a range definition and offset values can be hexadecimal value starting with \fI0x\fR
.SH "RANGE DEFINITION"
.IX Header "RANGE DEFINITION"
.Vb 1
\&                  format                          range example
\&                  
\&  normal range => integer                         header, 4, bright_blue
\&  comment      => #                               data section start, # 
\&  extra header => @                               header, @, red 
\&  bitfield     => [XInteger][xInteger]bInteger    bitfield, X2x4b4 (offset: X byte, x bit)
\&  skip range   => XInteger                        boring, X256,, your comment
.Ve
.SH "OPTIONS"
.IX Header "OPTIONS"
Options can be given before or after the name of the file to dump.
.PP
.Vb 5
\& range_description|r              file name containing a description
\&                                  or a string description formated as:
\&                                           \*(Aqname,size,color:name,size:name,size:...\*(Aq
\& dump_original_range_description  dump the un\-processed range descriptions
\& dump_range_description           dump the processed range descriptions
\&
\& offset                           position in the data where to start dumping
\& offset_start                     value added to the offset before display
\& 
\& maximum_size                     amount of data to dump
\& 
\& orientation|o                    \*(Aqhorizontal\*(Aq or \*(Aqvertical\*(Aq
\& display_column_names|col         display columns names
\& display_ruler|rul                display horizontal ruler
\& format|f                         \*(AqANSI\*(Aq or \*(AqASCII\*(Aq or \*(AqHTML\*(Aq 
\& display_command_line             make the command line part of the output
\& 
\& color                            \*(Aqcycle\*(Aq, \*(Aqno_cycle\*(Aq, or \*(Aqbw\*(Aq
\& colors                           file containing custom colors
\& start_color                      name of the first random color to use
\& start_tag/end_tag                text that is output before and after the dump
\&                                       see L<hdr_examples.pod>
\& 
\& data_width|w                     number of bytes per dump line
\& 
\& offset_format                    \*(Aqhex\*(Aq or \*(Aqdec\*(Aq 
\& display_offset                   0 == no the offset display
\& display_cumulative_offset        0 == no cumulative offset display
\& display_zero_size_range          0 == no display of range with size 0
\& display_zero_size_range_warning  0 == no warnings about ranges with size 0
\& display_comment_range            0 == no comment range display 
\& 
\& display_range_name               1 == display of the range name
\& maximum_range_name_size          truncate range name if longer
\& display_range_size               1 == prepend the range size to the name
\& 
\& display_hex_dump                 1 == display hexadecimal dump column
\& display_hexascii_dump            1 == display vombined HEX and ASCII dump column
\& display_dec_dump                 1 == display decimal dump column
\& display_ascii_dump               1 == display ASCII dump column
\& display_user_information         1 == display user information columns
\& maximum_user_information_size    truncate user information if longer
\& 
\& display_bitfields                1 == display bitfields
\& display_source                   1 == display source for bitfields 
\& maximum_bitfield_source_size     truncate bitfield source name if longer
\& 
\& bit_zero_on_left                 1 == bit index zero is on the left
\& 
\& h|help                           display this scripts help page
\& generate_completion_script|bash  generates a completion script on STDOUT
.Ve
.SH "EXAMPLES"
.IX Header "EXAMPLES"
See hdr_examples.pod in the distribution.
.SH "EXIT STATUS"
.IX Header "EXIT STATUS"
Non zero if an error occured.
.SH "AUTHOR"
.IX Header "AUTHOR"
.Vb 3
\&  Nadim ibn hamouda el Khemir
\&  CPAN ID: NKH
\&  mailto: nkh@cpan.org
.Ve

.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "XSLT-PARSER 1"
.TH XSLT-PARSER 1 "2001-03-01" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
xslt\-parser \- XSLT transformations
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
xslt-parser [options] <project>
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
xslt-parser performs stylesheet transformations.
.PP
When given a project name, it appends `.xsl' for the \s-1XSLT\s0 stylesheet
and `.xml' for the \s-1XML\s0 file to apply the stylesheet to and performs the
transformation using the \s-1XML::XSLT\s0 perl module.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\-c" 4
.IX Item "-c"
Pass through HTML::Clean.  You must have HTML::Clean installed.
.IP "\-d" 4
.IX Item "-d"
Turns debugging on.  This can produce a lot of noise.
.IP "\-n" 4
.IX Item "-n"
NoWeb.  You can use xslt-parser as a \s-1CGI\s0 script.  With this option,
it will not output the headers that are usually needed.
.IP "\-s <file>" 4
.IX Item "-s <file>"
Specify a seperate different stylesheet.  Usually, xslt-parser will
simply append `.xsl' to the project name to get the stylesheet.  A
different stylesheet can be specified using this option.
.SH "AUTHORS"
.IX Header "AUTHORS"
Geert Josten <gjosten@sci.kun.nl>,
Mark A. Hershberger <mah@everybody.org>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\s-1XML::XSLT\s0
.PP
The w3.org \s-1XSLT\s0 recommendation at <http://www.w3.org/TR/xslt>
.SH "POD ERRORS"
.IX Header "POD ERRORS"
Hey! \fBThe above document had some coding errors, which are explained below:\fR
.IP "Around line 48:" 4
.IX Item "Around line 48:"
You forgot a '=back' before '=head1'

.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "PFUNC 1"
.TH PFUNC 1 "2015-06-15" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
pfunc \- grep for perl functions
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    pfunc subroutine FILES...
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBpfunc\fR searches the named \s-1FILES\s0 for all calls to the given
subroutine.  It will report back the file and line number each call is
found on along with what sort of call it is
.PP
.Vb 3
\&    function            foo()
\&    class method        Class\->foo()
\&    object method       $obj\->foo()
.Ve
.SH "EXAMPLE"
.IX Header "EXAMPLE"
.Vb 10
\&    $ pfunc isa /usr/share/perl/5.6.1/*.pm
\&    Called as function in /usr/share/perl/5.6.1/CGI.pm at line 316
\&    Called as function in /usr/share/perl/5.6.1/CGI.pm at line 327
\&    Called as function in /usr/share/perl/5.6.1/CGI.pm at line 397
\&    Called as function in /usr/share/perl/5.6.1/CGI.pm at line 494
\&    Called as function in /usr/share/perl/5.6.1/CGI.pm at line 495
\&    Called as object method in /usr/share/perl/5.6.1/CPAN.pm at line 4957
\&    Called as function in /usr/share/perl/5.6.1/Dumpvalue.pm at line 191
\&    Called as function in /usr/share/perl/5.6.1/Dumpvalue.pm at line 218
\&    Called as function in /usr/share/perl/5.6.1/Dumpvalue.pm at line 248
\&    Called as function in /usr/share/perl/5.6.1/Dumpvalue.pm at line 251
\&    Called as function in /usr/share/perl/5.6.1/Dumpvalue.pm at line 254
\&    Called as object method in /usr/share/perl/5.6.1/Shell.pm at line 28
\&    Called as object method in /usr/share/perl/5.6.1/base.pm at line 12
.Ve
.SH "NOTES"
.IX Header "NOTES"
Its not fast, but its accurate.
.SH "AUTHOR"
.IX Header "AUTHOR"
Michael G Schwern <schwern@pobox.com>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Module::Info

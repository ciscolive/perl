.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "XLSGREP 1"
.TH XLSGREP 1 "2004-10-08" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
xlsgrep.pl \- Grep spreadsheet files in the current directory and any subdirectories.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
xlsgrep.pl some_regex_pattern
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
xlsgrep utilises the power of perls regular expressions to search every cell, on
every sheet in any spreadsheets files found in the current directory or subdirectories.
.PP
There are currently no switches supports.  Some of the standard grep switches can be
handled using perls regular expression syntax.  The equivalent of the ignore case grep
switch (\-i) can be applied to \fIpattern\fR by prefixing with \fB(?i)\fR to give \fI(?i)pattern\fR
.PP
The name of each spreadsheet checked is printed followed by any matches.  The following is
a typical run output
.PP
.Vb 5
\& C:> perl xlsgrep.pl 7:45
\& Checking ITTS\-GNG\-040830.xls
\& ./ITTS\-GNG\-040830.xls : Sheet=Sheet1, Row=12, Col=2, Value=7:45
\& Checking ITTS\-GNG\-040906.xls
\& Checking ITTS\-GNG\-040920.xls
.Ve
.PP
Here all spreadsheets in the current and sub directories were searched for the string '7:45'
which was found in the spreadsheet '\s-1ITTS\-GNG\-040830\s0.xls'.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
perlre, perlrequick and perlretut man pages for regualar expression details.
.PP
Spreadsheet::BasicRead and Spreadsheet:ParseExcel on \s-1CPAN\s0
.SH "AUTHOR"
.IX Header "AUTHOR"
.Vb 2
\& Greg George, IT Technology Solutions P/L, Australia
\& Mobile: +61\-404\-892\-159, Email: gng@cpan.org
.Ve
.SH "LICENSE"
.IX Header "LICENSE"
Copyright (c) 1999\- Greg George. All rights reserved. This
program is free software; you can redistribute it and/or modify it under
the same terms as Perl itself.
.SH "CVS ID"
.IX Header "CVS ID"
\&\f(CW$Id:\fR xlsgrep.pl,v 1.4 2004/10/08 22:35:20 Greg Exp $
.SH "CVS LOG"
.IX Header "CVS LOG"
.Vb 6
\& $Log: xlsgrep.pl,v $
\& Revision 1.4  2004/10/08 22:35:20  Greg
\& \- Wrap the open of each spreadsheet in an eval to trap the die
\& \- Add printing the name of each spreadsheet checked
\& \- Correct the printing of the column number
\& \- Added sample run output to POD
\&
\& Revision 1.3  2004/10/03 04:58:20  Greg
\& \- Test of open of spreadsheet and return if failure
\&
\& Revision 1.2  2004/10/01 10:59:30  Greg
\& \- Replaced the die with print to STDERR when you can\*(Aqt open a spreadsheet
\&
\& Revision 1.1  2004/09/30 12:31:26  Greg
\& \- Initial development
.Ve

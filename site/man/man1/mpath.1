.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "MPATH 1"
.TH MPATH 1 "2015-03-16" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
mpath \- display the full path to a perl module (installed locally)
.SH "USAGE"
.IX Header "USAGE"
.Vb 1
\&  mpath [OPTIONS] MODULE [MODULE ...]
.Ve
.SH "EXAMPLE"
.IX Header "EXAMPLE"
.Vb 2
\&  % mpath Module::Path
\&  /usr/local/lib/perl5/site_perl/5.16.0/Module/Path.pm
\&
\&  % mpath \-\-full Module::Path
\&  Module::Path /usr/local/lib/perl5/site_perl/5.16.0/Module/Path.pm
\&
\&  % mpath Moose Moo
\&  /usr/local/lib/perl5/site_perl/5.16.0/darwin\-2level/Moose.pm
\&  /usr/local/lib/perl5/site_perl/5.16.0/Moo.pm
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
mpath displays the full path to a perl module on the local system.
It uses the \f(CW\*(C`module_path()\*(C'\fR function from Module::Path to get the path.
.PP
If one of the module wasn't found, mpath will exit with the exit code 1 and
print the following message (you can silence it with the option \fB\-\-quiet\fR):
.PP
.Vb 2
\&  % mpath Foo::Bar
\&  Foo::Bar not found
.Ve
.PP
or:
.PP
.Vb 3
\&  % mpath Moose Foo::Bar
\&  /usr/local/lib/perl5/site_perl/5.16.0/darwin\-2level/Moose.pm
\&  Foo::Bar not found
.Ve
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-h\fR, \fB\-?\fR, \fB\-\-help\fR" 4
.IX Item "-h, -?, --help"
Print this help message and exit.
.IP "\fB\-f\fR, \fB\-\-full\fR" 4
.IX Item "-f, --full"
Print module name.
.IP "\fB\-q\fR, \fB\-\-quiet\fR" 4
.IX Item "-q, --quiet"
Don't print any error when one of the module requested could not be found.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Module::Path
.SH "AUTHOR"
.IX Header "AUTHOR"
Neil Bowers <neilb@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2012 by Neil Bowers <neilb@cpan.org>.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

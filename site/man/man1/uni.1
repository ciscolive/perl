.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "UNI 1"
.TH UNI 1 "2020-07-03" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
uni \- command\-line utility to find or display Unicode characters
.SH "VERSION"
.IX Header "VERSION"
version 9.004
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
.Vb 2
\&  $ uni ☺
\&  263A ☺ WHITE SMILING FACE
\&
\&  # Only on Perl 5.14+
\&  $ uni wry
\&  1F63C <U+1F63C> CAT FACE WITH WRY SMILE
.Ve
.PP
\&\fIuni\fR has several modes of operation:
.SS "\s-1DWIM\s0 Mode"
.IX Subsection "DWIM Mode"
By default, \fIuni\fR will interpret your arguments usefully.  If the only
argument is a single character, it will be looked up.  Otherwise, it will work
in name search mode, with the exception that search terms comprised entirely
of hex digits are allowed to match against the codepoint's numeric value.
.SS "Single Character Mode"
.IX Subsection "Single Character Mode"
.Vb 1
\&  $ uni \-s SINGLE\-CHAR
.Ve
.PP
This will print out the name and codepoint of the character.
.PP
.Vb 2
\&  $ uni \-s ¿
\&  ¿ \- U+000BF \- INVERTED QUESTION MARK
.Ve
.SS "Name Search Mode"
.IX Subsection "Name Search Mode"
.Vb 1
\&  $ uni \-n SOME /SEARCH/ TERMS
.Ve
.PP
This one will look for codepoints where each term appears as a (\eb\-bounded)
word in the name. If the term is bounded by slashes, it's treated as a regular
expression and is used to filter candidate codepoints by name.
.PP
.Vb 6
\&  $ uni \-n roman five
\&  Ⅴ \- U+02164 \- ROMAN NUMERAL FIVE
\&  Ⅾ \- U+0216E \- ROMAN NUMERAL FIVE HUNDRED
\&  ⅴ \- U+02174 \- SMALL ROMAN NUMERAL FIVE
\&  ⅾ \- U+0217E \- SMALL ROMAN NUMERAL FIVE HUNDRED
\&  ↁ \- U+02181 \- ROMAN NUMERAL FIVE THOUSAND
.Ve
.SS "String Decomposition"
.IX Subsection "String Decomposition"
.Vb 1
\&  $ uni \-c SOME STRINGS
.Ve
.PP
This prints out the codepoints in each string, with a blank line between each
argument's codepoints.
.PP
.Vb 4
\&  $ uni \-c Hey リコ
\&  H \- U+00048 \- LATIN CAPITAL LETTER H
\&  e \- U+00065 \- LATIN SMALL LETTER E
\&  y \- U+00079 \- LATIN SMALL LETTER Y
\&
\&  リ\- U+030EA \- KATAKANA LETTER RI
\&  コ\- U+030B3 \- KATAKANA LETTER KO
.Ve
.SS "Lookup By Codepoint"
.IX Subsection "Lookup By Codepoint"
.Vb 1
\&  $ uni \-u NUMBERS IN HEX
.Ve
.PP
This prints out the codepoint for each given hex value.
.PP
.Vb 4
\&  $ uni \-u FF 1FF 10FF
\&  ÿ \- U+000FF \- LATIN SMALL LETTER Y WITH DIAERESIS
\&  ǿ \- U+001FF \- LATIN SMALL LETTER O WITH STROKE AND ACUTE
\&  ჿ \- U+010FF \- GEORGIAN LETTER LABIAL SIGN
.Ve
.SH "NOTES"
.IX Header "NOTES"
If you'd like to search for Emojis in Unicode 6.0, please upgrade to Perl 5.14!
.SH "ACKNOWLEDGEMENTS"
.IX Header "ACKNOWLEDGEMENTS"
This is a re-implementation of a program written by Audrey Tang in Taiwan.  I
used that program for years before deciding I wanted to add a few features,
which I did by rewriting from scratch.
.PP
That program, in turn, was a re-implementation of a same-named program Larry
copied to me, which accompanied Audrey for years.  However, that program was
lost during a hard disk failure, so she coded it up from memory.
.PP
Thank-you, Larry, for everything. ♡
.SH "AUTHOR"
.IX Header "AUTHOR"
Ricardo Signes <rjbs@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Ricardo Signes has dedicated the work to the Commons by waiving all of his
or her rights to the work worldwide under copyright law and all related or
neighboring legal rights he or she had in the work, to the extent allowable by
law.
.PP
Works under \s-1CC0\s0 do not require attribution. When citing the work, you should
not imply endorsement by the author.

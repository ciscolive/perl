.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "GETVIDEO 1"
.TH GETVIDEO 1 "2020-09-17" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
getvideo \- Download YouTube and other videos.
.SH "VERSION"
.IX Header "VERSION"
Version 0.417
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    getvideo \-h|\-?|\-\-help
\&
\&    getvideo
\&
\&    getvideo url [url ...]
\&
\&    getvideo \-f|\-\-file filename
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Download single videos or choose videos from a playlist or an uploader.
.PP
Call \f(CW\*(C`getvideo\*(C'\fR followed by the space separated urls or enter the urls after calling \f(CW\*(C`getvideo\*(C'\fR. If the urls are
entered after calling \f(CW\*(C`getvideo\*(C'\fR, shell metacharacters are escaped automatically.
.PP
The urls can also be passed with a file: \f(CW\*(C`getvideo \-f|\-\-file filename\*(C'\fR. The urls in the file have to be space separated.
.PP
If a passed url results in more than one video, it is shown a menu with the video titles. The user can then choose from
the menu which videos to download. It is possible to filter the video titles of the list menu with a regexp. The filter
can be inverted by adding \f(CW\*(C`!~\*(C'\fR and a space in front of the regexp. Use the \f(CW\*(C`SpaceBar\*(C'\fR to select more than one video \-
see \*(L"USAGE-AND-RETURN-VALUES\*(R" in Term::Choose.
.PP
The different options of \f(CW\*(C`getvideo\*(C'\fR can be reached by calling \f(CW\*(C`getvideo \-h\*(C'\fR.
.PP
\&\f(CW\*(C`App::YTDL\*(C'\fR uses youtube-dl <http://rg3.github.io/youtube-dl/> to get the info data and to download the videos. To
list the extractors supported by \f(CW\*(C`youtube\-dl\*(C'\fR call \f(CW\*(C`getvideo \-h\*(C'\fR and select the entry \fIList extractors\fR.
.SH "Options"
.IX Header "Options"
.SS "\s-1HELP\s0"
.IX Subsection "HELP"
Shows this \s-1HELP\s0 text.
.SS "\s-1INFO\s0"
.IX Subsection "INFO"
Shows the path and the version of the running \f(CW\*(C`getvideo\*(C'\fR, the path of the video and configuration directories and the
version of \f(CW\*(C`youtube\-dl\*(C'\fR. If \f(CW\*(C`ffmpeg\*(C'\fR and \f(CW\*(C`ffprobe\*(C'\fR are available, their version is also shown.
.SS "Directory"
.IX Subsection "Directory"
\fIVideo directory\fR
.IX Subsection "Video directory"
.PP
Choose an alternative main video directory.
.PP
\fIExtractor directory\fR
.IX Subsection "Extractor directory"
.PP
Create/use extractor directories.
.PP
\&\- no
.PP
\&\- yes
.PP
\fIUploader directory\fR
.IX Subsection "Uploader directory"
.PP
Create/use uploader directories
.PP
\&\- no
.PP
\&\- yes
.PP
\&\- if chosen from an uploader or a playlist
.PP
\fIFilename format info\fR
.IX Subsection "Filename format info"
.PP
Which format info should be added to the filename.
.PP
\&\- none (unsafe)
.PP
\&\- video-height (unsafe)
.PP
\&\- format-id
.PP
\&\- format-id and video-height
.PP
\&\- format-string
.PP
\&\fInone\fR and \fIvideo-height\fR are unsafe because the don't result in an unambiguous filename and could therefore overwrite
previously downloaded files.
.SS "Video format"
.IX Subsection "Video format"
\fIResolution\fR
.IX Subsection "Resolution"
.PP
Set the video height.
.PP
If set to \fImanually\fR: \f(CW\*(C`+\*(C'\fR => \*(L"merge\*(R", \f(CW\*(C`,\*(C'\fR => \*(L"and\*(R", \f(CW\*(C`/\*(C'\fR => \*(L"or\*(R". See \f(CW\*(C`youtube\-dl\*(C'\fR documentation format section.
.PP
\fINo video height\fR
.IX Subsection "No video height"
.PP
If \fIResolution\fR is set to a "\fIres\fR or less": download videos whose height is unknown.
.PP
\&\- no
.PP
\&\- yes
.PP
\fIPrefer free formats\fR
.IX Subsection "Prefer free formats"
.PP
Prefer free video formats (\fI\-\-prefer\-free\-formats\fR).
.PP
\&\- no
.PP
\&\- yes
.SS "Download"
.IX Subsection "Download"
\fIUserAgent\fR
.IX Subsection "UserAgent"
.PP
Set the useragent string (\fI\-\-user\-agent\fR).
.PP
\fIDownload retries\fR
.IX Subsection "Download retries"
.PP
Set the number of download retries (\fI\-\-retries\fR).
.PP
\fITimeout\fR
.IX Subsection "Timeout"
.PP
Connection timeout in seconds (\fI\-\-socket\-timeout\fR).
.SS "History"
.IX Subsection "History"
\fISize history\fR
.IX Subsection "Size history"
.PP
If no arguments are passed to \f(CW\*(C`getvideo\*(C'\fR, the user can choose videos from uploaders saved in the history file and the
sticky file.
.PP
\&\fISize history\fR sets the limit of the number of uploaders saved in the history file. Setting \fIsize history\fR to \f(CW0\fR
disables the uploader-history.
.PP
An uploader can be made sticky. Uploaders made sticky don't count regarding the \fIsize history\fR limit. An uploader made
sticky gets also a new timestamp.
.PP
When added to the uploader-history an uploader gets the current timestamp. If the \fIsize history\fR limit is reached, the
uploader with the oldest timestamp is removed first.
.PP
\fIHistory sort\fR
.IX Subsection "History sort"
.PP
Sort the history
.PP
\&\- by name
.PP
\&\- by timestamp
.SS "Uploader video list"
.IX Subsection "Uploader video list"
\fIAdditional information\fR
.IX Subsection "Additional information"
.PP
For the first [value of \fIadditional information\fR] uploader video list entries is downloaded and shown additional
information. The uploader video list is ordered is adopted from the output returned by \f(CW\*(C`\-\-dump\-single\-json\*(C'\fR from
\&\f(CW\*(C`youtube\-dl\*(C'\fR. See also the following option \fIMax processes\fR.
.PP
\fIMax processes\fR
.IX Subsection "Max processes"
.PP
If \fIAdditional information\fR is enabled \fIMax processes\fR sets how many data-downloads are done in parallel.
.PP
\fISort order\fR
.IX Subsection "Sort order"
.PP
Sort the first  [value of \fIadditional information\fR] videos in the list-menu by
.PP
\&\- upload date (fallback title);
.PP
\&\- title
.PP
\&\- view count (fallback upload date)
.PP
\&\- duration (fallback upload date)
.PP
Fallback is used, if the chosen entry is not available.
.PP
\fIShow view count\fR
.IX Subsection "Show view count"
.PP
Show the view count in the first [value of \fIadditional information\fR] uploader video list entries
.PP
\&\- if sorted by view count
.PP
\&\- always
.PP
\fIShow video id\fR
.IX Subsection "Show video id"
.PP
Show the video id in the entries of the video list.
.PP
\&\- no
.PP
\&\- yes
.SS "Info output"
.IX Subsection "Info output"
\fIDisable warnings\fR
.IX Subsection "Disable warnings"
.PP
Ignore \f(CW\*(C`youtube\-dl\*(C'\fR warnings (\fI\-\-no\-warnings\fR).
.PP
\fIMax info width\fR
.IX Subsection "Max info width"
.PP
Set the maximum width of the video info output.
.PP
\fIMax rows of descriptions\fR
.IX Subsection "Max rows of descriptions"
.PP
Limit the rows of the description in the video info output.
.PP
Setting this option to \f(CW0\fR means no limit.
.SS "Youtube-dl config file"
.IX Subsection "Youtube-dl config file"
\fIyoutube-dl config file\fR
.IX Subsection "youtube-dl config file"
.PP
Location of the \f(CW\*(C`youtube\-dl\*(C'\fR configuration file (\fI\-\-config\-location\fR).
.PP
\fIIgnore youtube-dl config file\fR
.IX Subsection "Ignore youtube-dl config file"
.PP
Do not read \f(CW\*(C`youtube\-dl\*(C'\fR configuration files (\fI\-\-ignore\-config\fR).
.SS "List extractors"
.IX Subsection "List extractors"
List the extractors supported by \f(CW\*(C`youtube\-dl\*(C'\fR.
.SS "Extractor descriptions"
.IX Subsection "Extractor descriptions"
Output descriptions of supported extractors.
.SH "REQUIREMENTS"
.IX Header "REQUIREMENTS"
.SS "Perl version"
.IX Subsection "Perl version"
Requires Perl version 5.10.0 or greater.
.SS "youtube-dl"
.IX Subsection "youtube-dl"
A recent version of youtube-dl <http://rg3.github.io/youtube-dl/> is required.
.SS "ffmpeg and ffprobe"
.IX Subsection "ffmpeg and ffprobe"
The \fImerge\fR feature requires \f(CW\*(C`ffmpeg\*(C'\fR and \f(CW\*(C`ffprobe\*(C'\fR.
.SS "Monospaced font"
.IX Subsection "Monospaced font"
It is required a terminal that uses a monospaced font which supports the printed characters.
.SH "CREDITS"
.IX Header "CREDITS"
\&\f(CW\*(C`App::YTDL\*(C'\fR uses youtube-dl <http://rg3.github.io/youtube-dl/> to get the data required for the video download.
.PP
Thanks to the Perl\-Community.de <http://www.perl-community.de> and the people form
stackoverflow <http://stackoverflow.com> for the help.
.SH "AUTHOR"
.IX Header "AUTHOR"
Kuerbis <cuer2s@gmail.com>
.SH "LICENSE AND COPYRIGHT"
.IX Header "LICENSE AND COPYRIGHT"
Copyright (C) 2013\-2020 Kuerbis.
.PP
This program is free software; you can redistribute it and/or modify it under the same terms as Perl 5.10.0. For
details, see the full text of the licenses in the file \s-1LICENSE.\s0

.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "CDIF 1"
.TH CDIF 1 "2020-08-26" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
cdif \- word context diff
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
cdif [option] file1 file2
.PP
cdif [option] [diff\-data]
.PP
Options:
.PP
.Vb 8
\&        \-c, \-Cn         context diff
\&        \-u, \-Un         unified diff
\&        \-i              ignore case
\&        \-b              ignore space change
\&        \-w              ignore whitespace
\&        \-t              expand tabs
\&        \-\-rcs           use rcsdiff
\&        \-r<rev>, \-q     rcs options
\&
\&        \-\-diff=command      specify diff command
\&        \-\-subdiff=command   specify backend diff command
\&        \-\-stat              show statistical information
\&        \-\-colormap=s        specify color map
\&        \-\-unit=s            word, char or mecab     (default word)
\&        \-\-[no]color         color or not            (default true)
\&        \-\-[no]256           ANSI 256 color mode     (default true)
\&        \-\-[no]commandcolor  color for command line  (default true)
\&        \-\-[no]markcolor     color for diff mark     (default true)
\&        \-\-[no]textcolor     color for normal text   (default true)
\&        \-\-[no]unknowncolor  color for unknown text  (default true)
\&        \-\-[no]old           print old text          (default true)
\&        \-\-[no]new           print new text          (default true)
\&        \-\-[no]command       print diff command line (default true)
\&        \-\-[no]unknown       print unknown line      (default true)
\&        \-\-[no]mark          print mark or not       (default true)
\&        \-\-[no]prefix        read git \-\-graph output (default true)
\&        \-\-prefix\-pattern    prefix pattern
\&        \-\-visible char=?    set visible attributes
\&        \-\-[no]mecab         use mecab tokenizer     (default false)
\&        \-\-[no]lenience      supress unexpected input warning (default true)
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBcdif\fR is a post-processor of the Unix diff command.  It highlights
deleted, changed and added words based on word context.
.PP
You may want to compare character-by-character rather than
word-by-word.  Option \fB\-B\fR option can be used for that purpose.
.PP
If only one file is specified, cdif reads that file (stdin if no file)
as a output from diff command.
.PP
Lines those don't look like diff output are simply ignored and
printed.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-\fR[\fBcCuUibwtT\fR]" 7
.IX Item "-[cCuUibwtT]"
Almost same as \fBdiff\fR command.
.IP "\fB\-\-rcs\fR, \fB\-r\fR\fIrev\fR, \fB\-q\fR" 7
.IX Item "--rcs, -rrev, -q"
Use rcsdiff instead of normal diff.  Option \fB\-\-rcs\fR is not required
when \fB\-r\fR\fIrev\fR is supplied.
.IP "\fB\-\-\fR\fBunit\fR=\fIword\fR|\fIchar\fR|\fImecab\fR" 7
.IX Item "--unit=word|char|mecab"
.PD 0
.IP "\fB\-\-\fR\fBby\fR=\fIword\fR|\fIchar\fR|\fImecab\fR" 7
.IX Item "--by=word|char|mecab"
.PD
Specify the comparing unit.  Default is \fIword\fR and compare each line
word-by-word.  Specify \fIchar\fR if you want to compare them
character-by-character.
.Sp
When \fImecab\fR is given as an unit, \fBmecab\fR command is called as a
tokenizer for non-ASCII text.  \s-1ASCII\s0 text is compared word-by-word.
External \fBmecab\fR command has to been installed.
.IP "\fB\-B\fR, \fB\-\-char\fR" 7
.IX Item "-B, --char"
Shortcut for \fB\-\-unit=char\fR.  This option is being deprecated, and
will be removed in a future.
.IP "\fB\-\-mecab\fR" 7
.IX Item "--mecab"
Shortcut for \fB\-\-unit=mecab\fR.
.IP "\fB\-\-diff\fR=\fIcommand\fR" 7
.IX Item "--diff=command"
Specify the diff command to use.
.IP "\fB\-\-subdiff\fR=\fIcommand\fR" 7
.IX Item "--subdiff=command"
Specify the backend diff command to get word differences.  Accept
normal and unified diff format.
.Sp
If you want to use \fBgit diff\fR command, don't forget to set \fI\-U0\fR
option.
.Sp
.Vb 1
\&    \-\-subdiff="git diff \-U0 \-\-no\-index \-\-histogram"
.Ve
.IP "\fB\-\-\fR[\fBno\fR]\fBcolor\fR" 7
.IX Item "--[no]color"
Use \s-1ANSI\s0 color escape sequence for output.
.IP "\fB\-\-colormap\fR=\fIcolormap\fR, \fB\-\-cm\fR=\fIcolormap\fR" 7
.IX Item "--colormap=colormap, --cm=colormap"
Basic \fIcolormap\fR format is :
.Sp
.Vb 1
\&    FIELD=COLOR
.Ve
.Sp
where the \s-1FIELD\s0 is one from these :
.Sp
.Vb 9
\&    COMMAND  Command line
\&    OMARK    Old mark
\&    NMARK    New mark
\&    OTEXT    Old text
\&    NTEXT    New text
\&    OCHANGE  Old change part
\&    NCHANGE  New change part
\&    APPEND   Appended part
\&    DELETE   Deleted part
.Ve
.Sp
and additional \fICommon\fR and \fIMerged\fR FIELDs for git-diff combined
format.
.Sp
.Vb 4
\&    CMARK    Common mark
\&    CTEXT    Common text
\&    MMARK    Merged mark
\&    MTEXT    Merged text
.Ve
.Sp
You can make multiple fields same color joining them by = :
.Sp
.Vb 1
\&    FIELD1=FIELD2=...=COLOR
.Ve
.Sp
Also wildcard can be used for field name :
.Sp
.Vb 1
\&    *CHANGE=BDw
.Ve
.Sp
Multiple fields can be specified by repeating options
.Sp
.Vb 1
\&    \-\-cm FILED1=COLOR1 \-\-cm FIELD2=COLOR2 ...
.Ve
.Sp
or combined with comma (,) :
.Sp
.Vb 1
\&    \-\-cm FILED1=COLOR1,FIELD2=COLOR2, ...
.Ve
.Sp
Color specification is a combination of single uppercase character
representing 8 colors :
.Sp
.Vb 8
\&    R  Red
\&    G  Green
\&    B  Blue
\&    C  Cyan
\&    M  Magenta
\&    Y  Yellow
\&    K  Black
\&    W  White
.Ve
.Sp
and alternative (usually brighter) colors in lowercase :
.Sp
.Vb 1
\&    r, g, b, c, m, y, k, w
.Ve
.Sp
or \s-1RGB\s0 values and 24 grey levels if using \s-1ANSI 256\s0 or full color
terminal :
.Sp
.Vb 5
\&    (255,255,255)      : 24bit decimal RGB colors
\&    #000000 .. #FFFFFF : 24bit hex RGB colors
\&    #000    .. #FFF    : 12bit hex RGB 4096 colors
\&    000 .. 555         : 6x6x6 RGB 216 colors
\&    L00 .. L25         : Black (L00), 24 grey levels, White (L25)
.Ve
.Sp
or color names enclosed by angle bracket :
.Sp
.Vb 3
\&    <red> <blue> <green> <cyan> <magenta> <yellow>
\&    <aliceblue> <honeydue> <hotpink> <mooccasin>
\&    <medium_aqua_marine>
.Ve
.Sp
with other special effects :
.Sp
.Vb 4
\&    D  Double\-struck (boldface)
\&    I  Italic
\&    U  Underline
\&    S  Stand\-out (reverse video)
.Ve
.Sp
Above color spec is simplified summary so if you want complete
information, read Getopt::EX::Colormap.
.Sp
Defaults are :
.Sp
.Vb 9
\&    COMMAND => "555/222E"
\&    OMARK   => "CS"
\&    NMARK   => "MS"
\&    OTEXT   => "C"
\&    NTEXT   => "M"
\&    OCHANGE => "K/445"
\&    NCHANGE => "K/445"
\&    DELETE  => "K/544"
\&    APPEND  => "K/544"
\&
\&    CMARK   => "GS"
\&    MMARK   => "YS"
\&    CTEXT   => "G"
\&    MTEXT   => "Y"
.Ve
.Sp
This is equivalent to :
.Sp
.Vb 3
\&    cdif \-\-cm \*(AqCOMMAND=555/222E,OMARK=CS,NMARK=MS\*(Aq \e
\&         \-\-cm \*(AqOTEXT=C,NTEXT=M,*CHANGE=BD/445,DELETE=APPEND=RD/544\*(Aq \e
\&         \-\-cm \*(AqCMARK=GS,MMARK=YS,CTEXT=G,MTEXT=Y\*(Aq
.Ve
.IP "\fB\-\-\fR[\fBno\fR]\fBcommandcolor\fR, \fB\-\-cc\fR" 7
.IX Item "--[no]commandcolor, --cc"
.PD 0
.IP "\fB\-\-\fR[\fBno\fR]\fBmarkcolor\fR, \fB\-\-mc\fR" 7
.IX Item "--[no]markcolor, --mc"
.IP "\fB\-\-\fR[\fBno\fR]\fBtextcolor\fR, \fB\-\-tc\fR" 7
.IX Item "--[no]textcolor, --tc"
.IP "\fB\-\-\fR[\fBno\fR]\fBunknowncolor\fR, \fB\-\-uc\fR" 7
.IX Item "--[no]unknowncolor, --uc"
.PD
Enable/Disable using color for the corresponding field.
.IP "\fB\-\-\fR[\fBno\fR]\fBold\fR, \fB\-\-\fR[\fBno\fR]\fBnew\fR" 7
.IX Item "--[no]old, --[no]new"
Print or not old/new text in diff output.
.IP "\fB\-\-\fR[\fBno\fR]\fBcommand\fR" 7
.IX Item "--[no]command"
Print or not command lines preceding diff output.
.IP "\fB\-\-\fR[\fBno\fR]\fBunknown\fR" 7
.IX Item "--[no]unknown"
Print or not lines not look like diff output.
.IP "\fB\-\-\fR[\fBno\fR]\fBmark\fR" 7
.IX Item "--[no]mark"
Print or not marks at the top of diff output lines.  At this point,
this option is effective only for unified diff.
.Sp
Next example produces the output exactly same as \fInew\fR except visual
effects.
.Sp
.Vb 1
\&    cdif \-U100 \-\-no\-mark \-\-no\-old \-\-no\-command \-\-no\-unknown old new
.Ve
.Sp
These options are prepared for \fBwatchdiff\fR\|(1) command.
.IP "\fB\-\-\fR[\fBno\fR]\fBprefix\fR" 7
.IX Item "--[no]prefix"
Understand prefix for diff output including \fBgit\fR \fB\-\-graph\fR option.
True by default.
.IP "\fB\-\-prefix\-pattern\fR=\fIpattern\fR" 7
.IX Item "--prefix-pattern=pattern"
Specify prefix pattern in regex.  Default pattern is:
.Sp
.Vb 1
\&    (?:\e| )*(?:  )*
.Ve
.Sp
This pattern matches \fBgit\fR graph style and whitespace indented diff
output.
.IP "\fB\-\-visible\fR \fIchaname\fR=[0,1]" 7
.IX Item "--visible chaname=[0,1]"
Set visible attribute for specified characters.  Default visible: nul,
bel, bs, vt, np, cr, esc, del.  Default invisible: ht, nl, sp.  See
\&\fBascii\fR\|(7) for name representation.
.Sp
Multiple characters can be specified at once, by assembling them by
commna (\f(CW\*(C`,\*(C'\fR) like \f(CW\*(C`\-\-visible ht=1,sp=1\*(C'\fR; or connecting them by equal
sign (\f(CW\*(C`=\*(C'\fR) like \f(CW\*(C`\-\-visible ht=sp=1\*(C'\fR.  Character name accept
wildcard; \f(CW\*(C`\-\-visible \*(Aq*=1\*(Aq\*(C'\fR.
.Sp
Currently this option is effective only for modified lines.
.IP "\fB\-\-\fR[\fBno\fR]\fBvisible-cr\fR" 7
.IX Item "--[no]visible-cr"
.PD 0
.IP "\fB\-\-\fR[\fBno\fR]\fBvisible-esc\fR" 7
.IX Item "--[no]visible-esc"
.PD
Set CARRIAGE-RETURN and \s-1ESCAPE\s0 visible attributes.  These options will
be deprecated soon.  Use \fB\-\-visible\fR option instead.
.IP "\fB\-\-stat\fR" 7
.IX Item "--stat"
Print statistical information at the end of output.  It shows number
of total appended/deleted/changed words in the context of cdif.  It's
common to have many insertions and deletions of newlines because of
text filling process.  So normal information is followed by modified
number which ignores insert/delete newlines.
.IP "\fB\-\-\fR[\fBno\fR]\fBlenience\fR" 7
.IX Item "--[no]lenience"
Supress warning message for unexpected input from diff command.  True
by default.
.SH "ENVIRONMENT"
.IX Header "ENVIRONMENT"
Environment variable \fB\s-1CDIFOPTS\s0\fR is used to set default options.
.SH "AUTHOR"
.IX Header "AUTHOR"
.IP "Kazumasa Utashiro" 4
.IX Item "Kazumasa Utashiro"
.PD 0
.IP "<https://github.com/kaz\-utashiro/sdif\-tools>" 4
.IX Item "<https://github.com/kaz-utashiro/sdif-tools>"
.PD
.SH "LICENSE"
.IX Header "LICENSE"
Copyright 1992\-2020 Kazumasa Utashiro
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fBsdif\fR\|(1), \fBwatchdiff\fR\|(1)
.PP
Getopt::EX::Colormap
.PP
<https://taku910.github.io/mecab/>
.SH "BUGS"
.IX Header "BUGS"
\&\fBcdif\fR is naturally not very fast because it uses normal diff command
as a back-end processor to compare words.

.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "CPAN-UPLOAD 1"
.TH CPAN-UPLOAD 1 "2020-08-21" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
cpan\-upload \- upload a distribution to the CPAN
.SH "VERSION"
.IX Header "VERSION"
version 0.103015
.SH "USAGE"
.IX Header "USAGE"
.Vb 4
\&  usage: cpan\-upload [options] file\-to\-upload\-1 [ file\-to\-upload\-2 ... ]
\&    \-v \-\-verbose       enable verbose logging
\&    \-h \-\-help          display this help message
\&    \-\-dry\-run          do not actually upload anything
\&
\&    \-u \-\-user          your PAUSE username
\&    \-p \-\-password      the password to your PAUSE account
\&    \-d \-\-directory     a dir in your CPAN space in which to put the file
\&    \-\-http\-proxy       URL of the http proxy to use in uploading
\&    \-\-ignore\-errors    instead of aborting, continue to next file on error
\&    \-c \-\-config        config file to use; defaults to ~/.pause
\&    \-\-md5              compute MD5 checksums of the files
\&    \-\-retries          number of retries to perform on upload failure
\&    \-\-retry\-delay      number of seconds to wait between retries
.Ve
.SH "CONFIGURATION"
.IX Header "CONFIGURATION"
If you have a \f(CW\*(C`.pause\*(C'\fR file in your home directory, it will be checked for a
username and password.  It should look like this:
.PP
.Vb 2
\&  user EXAMPLE
\&  password your\-secret\-password
.Ve
.PP
You can GnuPG-encrypt this file if you wish, but you must install
Config::Identity and configure your gpg-agent as Config::Identity
currently doesn't prompt for a password at decryption time:
.PP
.Vb 5
\&    # Follow the prompts, setting your key as the "recipient"
\&    # Use ^D once you\*(Aqve finished typing out your authentication information
\&    gpg \-ea > $HOME/.pause
\&    # OR, encrypt a file you already created:
\&    gpg \-ea $HOME/.pause && mv $HOME/.pause{.asc,}
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.IP "CPAN::Uploader" 4
.IX Item "CPAN::Uploader"
.PD 0
.IP "Config::Identity" 4
.IX Item "Config::Identity"
.PD
.SH "AUTHOR"
.IX Header "AUTHOR"
Ricardo \s-1SIGNES\s0 <rjbs@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2020 by Ricardo \s-1SIGNES.\s0
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "ES-STATUS 1"
.TH ES-STATUS 1 "2020-09-16" "perl v5.32.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
es\-status.pl \- Simple ElaticSearch Status Checks
.SH "VERSION"
.IX Header "VERSION"
version 7.8
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
es\-status.pl \-\-health \-\-verbose \-\-color
.PP
Options:
    \-\-help              print help
    \-\-manual            print full manual
.PP
Query Modes:
    \-\-health            Display overall cluster health (\-\-verbose shows more detail)
    \-\-node              Display node details (\-\-verbose shows more detail)
    \-\-segments          Display segmentation details (\-\-verbose shows more detail)
    \-\-settings          Display index settings (\-\-verbose shows more detail)
.PP
.Vb 1
\&    \-\-all               Run all handlers!
.Ve
.PP
From CLI::Helpers:
.PP
.Vb 10
\&    \-\-data\-file         Path to a file to write lines tagged with \*(Aqdata => 1\*(Aq
\&    \-\-tags              A comma separated list of tags to display
\&    \-\-color             Boolean, enable/disable color, default use git settings
\&    \-\-verbose           Incremental, increase verbosity (Alias is \-v)
\&    \-\-debug             Show developer output
\&    \-\-debug\-class       Show debug messages originating from a specific package, default: main
\&    \-\-quiet             Show no output (for cron)
\&    \-\-syslog            Generate messages to syslog as well
\&    \-\-syslog\-facility   Default "local0"
\&    \-\-syslog\-tag        The program name, default is the script name
\&    \-\-syslog\-debug      Enable debug messages to syslog if in use, default false
\&    \-\-nopaste           Use App::Nopaste to paste output to configured paste service
\&    \-\-nopaste\-public    Defaults to false, specify to use public paste services
\&    \-\-nopaste\-service   Comma\-separated App::Nopaste service, defaults to Shadowcat
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This script is designed to help you get information about the state of the
ElasticSearh cluster in a hurry.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fBhelp\fR" 8
.IX Item "help"
Print this message and exit
.IP "\fBmanual\fR" 8
.IX Item "manual"
Print this message and exit
.IP "\fBall\fR" 8
.IX Item "all"
Runs all the \s-1ES\s0 Checks at once, this includes: health, node, and segments
Used in combination with \-\-verbose for more detail
.Sp
.Vb 1
\&    ./es\-status.pl \-\-all \-\-verbose
.Ve
.IP "\fBhealth\fR" 8
.IX Item "health"
Displays the cluster health, use \-\-verbose to get more information
.Sp
.Vb 1
\&    ./es\-status.pl \-\-health \-\-verbose
.Ve
.IP "\fBnode\fR" 8
.IX Item "node"
Displays the details on index segmentation, use \-\-verbose to get more information
.Sp
.Vb 1
\&    ./es\-status.pl \-\-node \-\-verbose
.Ve
.IP "\fBsegments\fR" 8
.IX Item "segments"
Displays the details on index segmentation, use \-\-verbose to get more information
.Sp
.Vb 1
\&    ./es\-status.pl \-\-segments \-\-verbose
.Ve
.IP "\fBsettings\fR" 8
.IX Item "settings"
Displays the details on index settings, use \-\-verbose to get more information
.Sp
.Vb 1
\&    ./es\-status.pl \-\-settings \-\-verbose
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Brad Lhotsky <brad@divisionbyzero.net>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is Copyright (c) 2020 by Brad Lhotsky.
.PP
This is free software, licensed under:
.PP
.Vb 1
\&  The (three\-clause) BSD License
.Ve

=head1 NAME

Infoblox::Grid::NamedACL - Named ACL object.

=head1 DESCRIPTION

Named ACL object represents a named list of access control entries.

=head1 CONSTRUCTOR

 my $nacl = Infoblox::Grid::NamedACL->new(
    'name'                  => $string,                                                                      # Required
    'comment'               => $string,                                                                      # Optional
    'access_list'           => [ $ipv4addr | $ipv4_subnet/prefix | $ipv6addr |                               # Optional
                                 $ipv6_subnet/prefix | $TSIGKey | $NamedACL, ... ],
    'extattrs'              => { $string => $extattr, ... },                                                 # Optional / Default is undefined
    'extensible_attributes' => { $string => $string | $num, $string => [ $string | $num, ... ], ... },       # Optional
 );

You cannot set both extattrs and extensible_attributes attributes at the same time.

=head1 SESSION METHODS

This section describes all the methods in the Infoblox::Session module that you can apply to a Named ACL object.

=head2 Infoblox::Session->get( )

=over

Use this method to retrieve all the matching objects from the Infoblox appliance. See L<Infoblox::Session-E<gt>get()|Infoblox::Session/get()/> for parameters and return values.

=over

=item B<Key References>

 Apply the following attributes to get a specific Named ACL object:

  name    - Optional. The name of Named ACL object.
  comment - Optional. The comment in string format.
  extattrs- Optional. A hash reference containing extensible attributes.

=item B<Example>

 my @retrieved_objs = $session->get(
    object => 'Infoblox::Grid::NamedACL',
    name   => 'nacl',
 );

=back

=back

=head2 Infoblox::Session->modify( )

=over

Use this method to modify an object in the Infoblox appliance. See L<Infoblox::Session-E<gt>modify()|Infoblox::Session/modify()/> for parameters and return values.

If you have applied an access control list to an object, you must restart services after you update the access control list for the changes to take effect. See L<Infoblox::Session-E<gt>restart()|Infoblox::Session/restart()/> method.

=over

=item B<Example>

 # Use this method to modify comment of Named ACL object.
 $nacl->comment('new comment');
 # Submit modification
 my $response = $session->modify( $nacl );

=back

=back

=head2 Infoblox::Session->remove( )

=over

Use this method to remove an object from the Infoblox appliance. See L<Infoblox::Session-E<gt>remove()|Infoblox::Session/remove()/> for parameters and return values.

To remove a specific object, first use get() or search() to retrieve the specific object, and then submit this object for removal.

=over

=item B<Example>

 # Get the objects with the same name
 my @retrieved_objs = $session->get(
     object => "Infoblox::Grid::NamedACL",
     name   => "nacl");
 # Find the desired object from the retrieved list.
 my $desired_nacl = $retrieved_objs[0];
 # Submit for removal
 my $response = $session->remove( $desired_nacl );

=back

=back

=head2 Infoblox::Session->search( )

=over

Use this method to search for Named ACL objects in the Infoblox appliance. See L<Infoblox::Session-E<gt>search()|Infoblox::Session/search()/> for parameters and return values.

=over

=item B<Key References>

 Apply the following attributes to search for Named ACL objects:

  name    - Optional. The name of Named ACL object (regular expression).
  comment - Optional. The comment in string format (regular expression).
  extattrs- Optional. A hash reference containing extensible attributes.

=item B<Example>

 my @retrieved_objs = $session->search(
    object => 'Infoblox::Grid::NamedACL',
    name   => 'nacl',
 );

=back

=back

=head1 MODULE METHODS

Retrieved Named ACL objects in an access list are considered 'partial' objects. See L<Infoblox::Session-E<gt>fill_partial_object()|Infoblox::Session/fill_partial_object()/> for more information on how it can be converted to a 'full' API object.

=head1 METHODS

This section describes all the methods that you can use to configure and retrieve the attribute values of Named ACL object.

=head2 access_list( )

=over

Use this method to set or retrieve an access list of Named ACL object.

=over

=item B<Parameter>

The valid value is an array reference that contains IPv4/IPv6 addresses, networks, L<Infoblox::DNS::TSIGKey|Infoblox::DNS::TSIGKey> objects and/or L<Infoblox::Grid::NamedACL|Infoblox::Grid::NamedACL> objects.

To deny queries from certain IP addresses and networks, add "!" as a prefix to the IP addresses and networks.

=item B<Returns>

If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.

If you did not specify a parameter, the method returns the attribute value.

=item B<Example>

 # Get attribute value
 my $value = $nacl->access_list();
 # Modify attribute value
 $nacl->access_list(['10.0.0.1', $tsigkey, $nacl]);

=back

=back

=head2 comment( )

=over

Use this method to set or retrieve a descriptive comment about Named ACL object.

=over

=item B<Parameter>

Desired comment in string format with a maximum of 256 bytes.

=item B<Returns>

If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.

If you did not specify a parameter, the method returns the attribute value.

=item B<Example>

 # Get attribute value
 my $value = $nacl->comment();
 # Modify attribute value
 $nacl->comment('modified comment');

=back

=back

=head2 exploded_access_list( )

=over

Use this method to retrieve the exploded access list of the Named ACL object. This is a read-only attribute.

=over

=item B<Parameter>

None.

=item B<Returns>

The method returns the attribute value.

The valid value is an array reference that contains IPv4/IPv6 addresses, networks and/or L<Infoblox::DNS::TSIGKey|Infoblox::DNS::TSIGKey> objects.

=item B<Example>

 # Get attribute value
 my $value = $nacl->exploded_access_list();

=back

=back

=head2 extattrs( )

=over

Use this method to set or retrieve the extensible attributes associated with a Named ACL object.

=over

=item B<Parameter>

Valid value is a hash reference containing the names of extensible attributes and their associated values ( L<Infoblox::Grid::Extattr|Infoblox::Grid::Extattr> objects ).

=item B<Returns>

If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.

If you did not specify a parameter, the method returns the attribute value.

=item B<Example>

 #Get extattrs
 my $ref_extattrs = $nacl->extattrs();
 #Modify extattrs
 $nacl->extattrs({ 'Site' => $extattr1, 'Administrator' => $extattr2 });

=back

=back

=head2 extensible_attributes( )

=over

Use this method to set or retrieve the extensible attributes associated with Named ACL object.

=over

=item B<Parameter>

For valid values for extensible attributes, see L<Infoblox::Grid::ExtensibleAttributeDefE<sol>Extensible Attribute Values|Infoblox::Grid::ExtensibleAttributeDef/Extensible Attribute Values>.

=item B<Returns>

If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.

If you did not specify a parameter, the method returns the attribute value.

=item B<Example>

 # Get attribute value
 my $value = $nacl->extensible_attributes();
 # Modify attribute value
 $nacl->extensible_attributes({ 'Site' => 'Santa Clara', 'Administrator' => [ 'Peter', 'Tom' ] });

=back

=back

=head2 name( )

=over

Use this method to set or retrieve the name of the Named ACL object.

=over

=item B<Parameter>

The name of the Named ACL object in string format.

=item B<Returns>

If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.

If you did not specify a parameter, the method returns the attribute value.

=item B<Example>

 # Get attribute value
 my $value = $nacl->name();
 # Modify attribute value
 $nacl->name('new_nacl');

=back

=back

=head1 SAMPLE CODE

The following sample code demonstrates the different functions that can be applied to an object such as add, get, modify, search and remove. This sample also includes error handling for the operations.

B<#Preparation prior to getting and modifying an object>

 use strict;
 use Infoblox;

 #refers to Infoblox Appliance IP address
 my $host_ip = "192.168.1.2";

 #Create a session to the Infoblox appliance

 my $session = Infoblox::Session->new(
     master   => $host_ip,
     username => "admin",
     password => "infoblox"
 );
 unless ($session) {
        die("Construct session failed: ",
                Infoblox::status_code() . ":" . Infoblox::status_detail());
 }
 print "Session created successfully\n";

B<#Create an object>

 my $nacl = Infoblox::Grid::NamedACL->new(
     name          => "NACL",
     access_list   => ['10.0.0.1', '20.0.0.0/24'],
     comment       => "Script Generated",
     );
 unless ($nacl) {
        die("Construct object failed: ",
                Infoblox::status_code() . ":" . Infoblox::status_detail());
 }
 print "The object created successfully\n";

 #Adding the object to appliance through session
 my $response = $session->add( $nacl );

 unless ($response) {
     die("Add object failed: ",
            $session->status_code() . ":" . $session->status_detail());
 }
 print"The object was added successfully \n";

B<#Search for the object>

  my @retrieved_objs = $session->search(
      object => "Infoblox::Grid::NamedACL",
      name   => ".*");
  my $object = $retrieved_objs[0];

  unless ($object) {
         die("Search the object failed: ",
                 $session->status_code() . ":" . $session->status_detail());
  }
  print "Search the object found at least 1 matching entry\n";

B<#Get and modify the object>

 #Get the object through session
 my @retrieved_objs = $session->get(
     object => "Infoblox::Grid::NamedACL",
     name   => "NACL"
     );
 my $nacl = $retrieved_objs[0];

 unless ($nacl) {
     die("Get the object failed: ",
            $session->status_code() . ":" . $session->status_detail());
 }
 print"Retrieved the object successfully \n";

 # Modify one of the attributes of selected object.

 $nacl->comment("Modified object");

 #Applying the changes
 $session->modify($nacl)
    or die("Modify the object failed",
             $session->status_code() . ":" . $session->status_detail());
 print"The object was modified successfully \n";

B<#Remove the object>

 #Get the object through session
 my @retrieved_objs = $session->get(
     object => "Infoblox::Grid::NamedACL",
     name   => "NACL"
     );
 my $desired_nacl = $retrieved_objs[0];

 unless ($desired_nacl) {
     die("Get the object failed: ",
            $session->status_code() . ":" . $session->status_detail());
 }
 print"Retrieved the object successfully \n";

 #Submit the object for removal
 $session->remove( $desired_nacl )
     or die("Remove the object failed",
            $session->status_code() . ":" . $session->status_detail());
 print"The object was removed successfully \n";

 ####PROGRAM ENDS####

=head1 AUTHOR

Infoblox Inc. L<http://www.infoblox.com/>

=head1 SEE ALSO

L<Infoblox::Session|Infoblox::Session>, L<Infoblox::DNS::TSIGKey|Infoblox::DNS::TSIGKey>, L<Infoblox::Grid::ExtensibleAttributeDef|Infoblox::Grid::ExtensibleAttributeDef>

=head1 COPYRIGHT

Copyright (c) 2017 Infoblox Inc.

=cut

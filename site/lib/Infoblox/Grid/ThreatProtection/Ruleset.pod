=head1 NAME

Infoblox::Grid::ThreatProtection::Ruleset - A Grid Threat Protection Ruleset object.

=head1 DESCRIPTION

This object represents the Grid Threat Protection ruleset.

=head1 SESSION METHODS

This section describes all the methods in an Infoblox::Session module that you can apply to a Grid ruleset object.

=head2 Infoblox::Session->get( )

=over

Use this method to retrieve all the ruleset objects from the Infoblox appliance. See L<Infoblox::Session-E<gt>get()|Infoblox::Session/get()/> for parameters and return values.

=over

=item B<Example>

 my @retrieved_objs = $session->get(
     'object' => 'Infoblox::Grid::ThreatProtection::Ruleset',
 );

=back

=back

=head2 Infoblox::Session->search( )

=over

Use this method to retrieve all the ruleset objects from the Infoblox appliance. See L<Infoblox::Session-E<gt>search()|Infoblox::Session/search()/> for parameters and return values.

=over

=item B<Example>

 my @retrieved_objs = $session->search(
     'object' => 'Infoblox::Grid::ThreatProtection::Ruleset',
 );

=back

=back

=head2 Infoblox::Session->modify( )

=over

Use this method to modify an object in the Infoblox appliance. See L<Infoblox::Session-E<gt>modify()|Infoblox::Session/modify()/> for parameters and return values.

If you have applied an access control list to an object, you must restart services after you update the access control list for the changes to take effect. See L<Infoblox::Session-E<gt>restart()|Infoblox::Session/restart()/> method.

=over

=item B<Example>

 # Use this method to modify comments for the Grid member.
 $ruleset->comment("This is modified object");
 # Submit modification
 my $response = $session->modify( $ruleset );

=back

=back

=head2 Infoblox::Session->remove( )

=over

Use this method to remove an object from the Infoblox appliance. See L<Infoblox::Session-E<gt>remove()|Infoblox::Session/remove()/> for parameters and return values.

To remove a specific object, first use get() or search() to retrieve the specific object, and then submit this object for removal.

=over

=item B<Example>

 # Submit for removal
 my $response = $session->remove( $desired_ruleset );

=back

=back


=head1 METHODS

This section describes all the methods that you can use to set or retrieve the attribute values of the struct.

=head2 add_type( )

=over

Use this method to retrieve how the ruleset was added. This is a read-only attribute.

=over

=item B<Parameter>

None

=item B<Returns>

The method returns the attribute value, which is either "AUTOMATIC" or "MANUAL".

=item B<Example>

 # Get attribute value
 my $value = $object->add_type();

=back

=back

=head2 added_time( )

=over

Use this method to retrieve the time when the ruleset was added. This is a read-only attribute.

=over

=item B<Parameter>

None

=item B<Returns>

The method returns the attribute value, the number of seconds that have elapsed since January 1st, 1970 UTC.

=item B<Example>

 # Get attribute value
 my $value = $object->added_time();

=back

=back

=head2 comment( )

=over

Use this method to set or retrieve a descriptive comment.

Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.

=over

=item B<Parameter>

Desired comment in string format with a maximum of 256 bytes.

=item B<Returns>

If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.

If you did not specify a parameter, the method returns the attribute value.

=item B<Example>

 #Get comment
 my $comment = $object->comment();
 #Modify comment
 $object->comment("Modified comment");

=back

=back

=head2 do_not_delete( )

=over

Use this method to set or retrieve the do_not_delete attribute of the ruleset. If set to "true", the ruleset will not be deleted during a ruleset upgrade.

Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.

=over

=item B<Parameter>

None

=item B<Returns>

The method returns the attribute value, which is "true" or "false".

=item B<Returns>

If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.

If you did not specify a parameter, the method returns the attribute value.

=item B<Example>

 #Get do_not_delete from the ruleset
 my $do_not_delete = $object->do_not_delete();
 #Modify do_not_delete
 $object->do_not_delete("true");

=back

=back

=head2 is_factory_reset_enabled( )

=over

Use this method to retrieve the flag that indicates whether the factory reset of this object is enabled or disabled. This is a read-only attribute.

=over

=item B<Parameter>

None

=item B<Returns>

The method returns the attribute value.

=item B<Example>

 # Get attribute value
 my $value = $object->is_factory_reset_enabled();

=back

=back

=head2 used_by( )

=over

Use this method to retrieve the users of the ruleset. This is a read-only attribute.

=over

=item B<Parameter>

None

=item B<Returns>

The method returns the attribute value, which is a list of strings.

=item B<Example>

 # Get attribute value
 my $value = $object->used_by();

=back

=back

=head2 version( )

=over

Use this method to retrieve the ruleset version. This is a read-only attribute.

=over

=item B<Parameter>

None

=item B<Returns>

The method returns the attribute value.

=item B<Example>

 # Get attribute value
 my $value = $object->version();

=back

=back

=head1 AUTHOR

Infoblox Inc. L<http://www.infoblox.com/>

=head1 SEE ALSO

L<Infoblox::Grid::ThreatProtection|Infoblox::Grid::ThreatProtection>, L<Infoblox::Grid::Member::ThreatProtection|Infoblox::Grid::Member::ThreatProtection>

=head1 COPYRIGHT

Copyright (c) 2017 Infoblox Inc.

=cut

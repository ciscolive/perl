=head1 NAME

Infoblox::Grid::SmartFolder::GroupBy - Smart Folder Group By object

=head1 DESCRIPTION

Defines grouping information in a global or personal smart folder.

=head1 CONSTRUCTOR

 my $group_by = Infoblox::Grid::SmartFolder::GroupBy->new(
     value                   => $string,            #Required
     enable_grouping         => "true" | "false",   #Required
     value_type              => "EXTATTR" | "NORMAL", #Optional / Default is "EXTATTR"
 );

=head1 MODULE METHODS

The following functions can be applied to a GroupBy object.

=head2 Infoblox::Grid::GlobalSmartFolder->group_bys( )

=over

Use this function to specify a list of "group by" items to store in a global smart folder.

=over

=item B<Example>

 #Construct an object
 my $group_by_state = Infoblox::Grid::SmartFolder::GroupBy->new(
                                                                enable_grouping => 'true',
                                                                value => "State",
                                                                value_type => "EXTATTR",
                                                               );

 my $group_by_vcluster = Infoblox::Grid::SmartFolder::GroupBy->new(
                                                             enable_grouping => 'true',
                                                             value => "v_cluster",
                                                             value_type => "NORMAL",
                                                            );
 # Configure group_by items
 my $response = $GlobalSmartFolder->group_bys([$group_by_state,$group_by_vcluster]);

=back

=back

=head2 Infoblox::Grid::PersonalSmartFolder->group_bys( )

=over

Use this function to specify a list of "group by" items to store in a personal smart folder.

=over

=item B<Example>

 #Construct an object
 my $group_by_state = Infoblox::Grid::SmartFolder::GroupBy->new(
                                                                enable_grouping => 'true',
                                                                value => "State",
                                                                value_type => "EXTATTR",
                                                               );

 my $group_by_vcluster = Infoblox::Grid::SmartFolder::GroupBy->new(
                                                             enable_grouping => 'true',
                                                             value => "v_cluster",
                                                             value_type => "NORMAL",
                                                            );
 # Configure group_by items
 my $response = $PersonalSmartFolder->group_bys([$group_by_state,$group_by_vcluster]);

=back

=back

=head1 METHODS

This section describes all the methods that you can use to configure and retrieve the attribute values of a SmartFolder::GroupBy object.

=head2 value( )

=over

Use this method to specify the name of the attribute (when value_type is "EXTATTR" or "NORMAL"). The possible values for the value attribute are v_datacenter, v_cluster, v_host, v_entity_type, port_vlan_name, network_component_name, network_component_port_name, and any valid extensible attribute in the appliance.

Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.

=over

=item B<Parameter>

Valid values are strings corresponding to extensible attributes, object types, or object names.

=item B<Returns>

If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.

If you did not specify a parameter, the method returns the attribute value.

=item B<Example>

 # Getting value
 my $value = $group_by->value();
 # Modifying value
 $group_by->value("Country");

=back

=back

=head2 value_type( )

=over

Use this method to set or retrieve the value type.

Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.

=over

=item B<Parameter>

"EXTATTR" and "NORMAL" are supported.

=item B<Returns>

If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.

If you did not specify a parameter, the method returns the attribute value.

=item B<Example>

 # Getting value_type
 my $value_type = $group_by->value_type();
 # Modifying value_type
 $group_by->value_type("EXTATTR");

=back

=back

=head2 enable_grouping( )

=over

Use this method to set or retrieve the enable grouping attribute.

Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.

=over

=item B<Parameter>

Specify "true" to set the enable_grouping flag or "false" to deactivate/unset it. "group by" rules where enable_grouping is set to "false" will be ignored when retrieving the corresponding smart folder.

=item B<Returns>

If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.

If you did not specify a parameter, the method returns the attribute value.

=item B<Example>

 # Getting enable_grouping
 my $enable_grouping = $group_by->enable_grouping();
 # Modifying enable_grouping
 $group_by->enable_grouping("true");

=back

=back

=head1 SAMPLE CODE

B<##Preparation prior to a smart folder group by object insertion>

 #PROGRAM STARTS: Include all the modules that will be used
 use strict;
 use Infoblox;

 #Create a session to the Infoblox appliance
 my $session = Infoblox::Session->new(
     master   => "192.168.1.2",
     username => "admin",
     password => "infoblox"
 );
 unless ($session) {
    die("Construct session failed: ",
        Infoblox::status_code() . ":" . Infoblox::status_detail());
 }
 print "Session created successfully\n";

B<#Create a smart folder query item object>

 my $group_by_state = Infoblox::Grid::SmartFolder::GroupBy->new(
                                                             enable_grouping => 'true',
                                                             value => "State",
                                                             value_type => "EXTATTR",
                                                            );
 unless ($group_by_state){
      die("Construct smart folder group_by item failed: ",
            Infoblox::status_code() . ":" . Infoblox::status_detail());
 }

 print "SmartFolder::GroupBy object created successfully\n";

B<#Create a personal smart folder and use $group_by>

  #create a personal smart folder and use $query_item
  my $smart_folder = Infoblox::Grid::PersonalSmartFolder->new(
     name         => "my_personal_folder",
     group_bys    => [$group_by_state],
 );

 #put smart folder into session
 $session->add($smart_folder)
   or die("Smart folder creation failed: ",
            Infoblox::status_code() . ":" . Infoblox::status_detail());

 print "Smart folder creation successful\n";

B<#Clean up>

 my @result = $session->get(
     object => "Infoblox::Grid::PersonalSmartFolder",
     name   => "my_personal_folder"
 );

 unless (scalar(@result) == 0) {
     $session->remove($result[0]);
 }

 ####PROGRAM ENDS####

=head1 AUTHOR

Infoblox Inc. L<http://www.infoblox.com/>

=head1 SEE ALSO

L<Infoblox::Session|Infoblox::Session>, L<Infoblox::Session-E<gt>add()|Infoblox::Session/add()/>, L<Infoblox::Session-E<gt>get()|Infoblox::Session/get()/>, L<Infoblox::Session-E<gt>modify()|Infoblox::Session/modify()/>,L<Infoblox::Grid::GlobalSmartFolder|Infoblox::Grid::GlobalSmartFolder>,L<Infoblox::Grid::PersonalSmartFolder|Infoblox::Grid::PersonalSmartFolder>

=head1 COPYRIGHT

Copyright (c) 2017 Infoblox Inc. 

=cut

=head1 NAME

Infoblox::Grid::MSServer::DHCP - Grid Microsoft (r) Server DHCP object.

=head1 DESCRIPTION

You can use Infoblox::Grid::MSServer::DHCP to configure some of the DHCP properties of a Microsoft DHCP server, including enabling/disabling the DHCP service. The service configurations of a grid are not inherited by this object.

=head1 SESSION METHODS

This section describes all the methods in an Infoblox::Session module that you can apply to a Microsoft Server DHCP object.

=head2 Infoblox::Session->get( )

=over

Use this method to retrieve all the matching objects from the Infoblox appliance. See L<Infoblox::Session-E<gt>get()|Infoblox::Session/get()/> for parameters and return values.

=over

=item B<Key References>

 Apply the following attributes to get a specific grid member object:

  address - Required. A Microsoft server address or name in FQDN (Fully Qualified Domain Name) format.

=item B<Example>

 my @retrieved_objs = $session->get(
     object  => "Infoblox::Grid::MSServer::DHCP",
     address => "10.0.0.1");

=back

=back

=head2 Infoblox::Session->search( )

=over

Use this method to retrieve all the matching objects from the Infoblox appliance. See L<Infoblox::Session-E<gt>search()|Infoblox::Session/search()/> for parameters and return values.

=over

=item B<Key References>

 Apply the following attributes to search for a specific grid member object:

  address - Required. A Microsoft server address or name in FQDN (Fully Qualified Domain Name) format. (Regular expressions are supported)

=item B<Example>

 my @retrieved_objs = $session->search(
     object  => "Infoblox::Grid::MSServer::DHCP",
     address => "domain.*");

=back

=back

=head2 Infoblox::Session->modify( )

=over

Use this method to modify an object in the Infoblox appliance. See L<Infoblox::Session-E<gt>modify()|Infoblox::Session/modify()/> for parameters and return values.

=over

=item B<Example>

 # Use this method to modify a field of a grid Microsoft DHCP server.
 $grid_msserver_dhcp->enable_dhcp('true');
 # Submit modification
 my $response = $session->modify( $grid_msserver_dhcp );

=back

=back

=head1 METHODS

This section describes all the methods that you can use to configure and retrieve the attribute values of a grid Microsoft DHCP server.

=head2 manage_dhcp()

=over

Retrieve or set the managed state of the Microsoft DHCP server. When setting the managed state, use true to enable or false to disable synchronization of the DHCP server. Setting the status does not stop or start the actual DHCP server, but controls whether it is synchronized.

Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.

=over

=item B<Parameter>

Specify "true" to set the disable flag or "false" to deactivate/unset it.

=item B<Returns>

If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.

If you did not specify a parameter, the method returns the attribute value.

=item B<Example>

  #Get manage_dhcp
  my $manage_dhcp = $msserver_dhcp->manage_dhcp();
  #Modify manage_dhcp
  $msserver_dhcp->manage_dhcp("true");

=back

=back

=head2 enable_dhcp()

=over

Set the DHCP service status of the Microsoft DHCP server. When setting the service status, use true to enable or false to disable the DHCP service on the Microsoft DHCP server. Setting the service status stops or starts the actual DHCP service. This only applies if manage_dhcp() is true.

When setting the service status, the Microsoft DHCP server will be started or stopped at the next synchronization.

Include the specified parameter to set the attribute value. This setting is write-only. To get the actual status of the service, use the status() method.

=over

=item B<Parameter>

Specify "true" to set the disable flag or "false" to deactivate/unset it.

=item B<Returns>

If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.

If you did not specify a parameter, the method returns the attribute value.

=item B<Example>

  #Get enable_dhcp
  my $enable_dhcp = $msserver_dhcp->enable_dhcp();
  #Modify enable_dhcp
  $msserver_dhcp->enable_dhcp("true");

=back

=back

=head2 status()

=over

Retrieve the running status of the DHCP service of the Microsoft DHCP server. The running status is "running", "stopped", or "error". The returned status is the latest known status as of the date returned by the status_last_updated() attribute.

=over

=item B<Returns>

The method returns the attribute value.

=item B<Example>

  #Get status
  my $status = $msserver_dhcp->status();

=back

=back

=head2 status_detail()

=over

Retrieve the detailed running status of the DHCP service of the Microsoft DHCP server. The returned status is the latest known status.

=over

=item B<Returns>

The method returns the attribute value.

=item B<Example>

  #Get status
  my $status = $msserver_dhcp->status();

=back

=back

=head2 status_last_updated()

=over

Retrieve the time when the DHCP service status of the Microsoft DHCP server was last updated.

=over

=item B<Returns>

The method returns the attribute value.

=item B<Example>

  #Get status_last_updated
  my $status_last_updated = $msserver_dhcp->status_last_updated();

=back

=back

=head2 last_sync_ts()

=over

Retrieve the timestamp of the end of the last synchronization attempt related to all DHCP data, except leases.

=over

=item B<Returns>

The method returns the attribute value.

=item B<Example>

  #Get last_sync_ts
  my $last_sync_ts = $msserver_dhcp->last_sync_ts();

=back

=back

=head2 last_sync_status()

=over

Retrieve the result of the last synchronization attempt, if last_sync_ts is defined. Valid values are "Ok", "Warning", or "Error".

=over

=item B<Returns>

The method returns the attribute value.

=item B<Example>

  #Get last_sync_status
  my $last_sync_status = $msserver_dhcp->last_sync_status();

=back

=back

=head2 last_sync_detail()

=over

Retrieve the detailed result of the last synchronization attempt, if last_sync_ts is defined.

=over

=item B<Returns>

The method returns the attribute value.

=item B<Example>

  #Get last_sync_detail
  my $last_sync_detail = $msserver_dhcp->last_sync_detail();

=back

=back

=head2 login_name( )

=over

Use this method to set or retrieve the Microsoft Server DHCP login name.

Setting this method to a defined value implicitly sets the override_login method to "true". Setting the parameter to undefined causes the appliance to use the Grid default and automatically resets the override_login attribute to "false".

Note that when login_name is set to a defined value and override_dlogin_name is set to "false", the last operation takes precedence. Thus the sequence $object->login_name('newuser'); $object->override_login("false"); will set override_login to "false", and the sequence $object->override_login("false"); $object->login_name('newuser'); will result in override_login="true".

Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.

When setting a value that requires a domain name, prepend the domain information followed by a backslash to the username: "domain\username".

=over

=item B<Parameter>

The valid value is a string that contains the login name.

=item B<Returns>

If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.

If you did not specify a parameter, the method returns the attribute value.

=item B<Example>

 #Get login value
 my $login = $msserver_dhcp->login_name();
 #Modify login value
 $msserver_dhcp->login_name("newuser");

=back

=back

=head2 login_password( )

=over

Use this method to set a password for the Microsoft Server DHCP. This field is used only if the login field for this member is defined. This is a write-only attribute.

This field cannot be retrieved.

=over

=item B<Parameter>

The valid value is a string that contains the password.

=item B<Returns>

If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.

=item B<Example>

 #Set the password
 $msserver_dhcp->login_password("iG&ojG97Y");

=back

=back

=head2 extattrs( )

=over

Use this method to retrieve the extensible attributes associated with a Grid Microsoft DHCP Server object. This attribute is read-only and cannot be set.

=over

=item B<Parameter>

None.

=item B<Returns>

The method returns the attribute value.

=item B<Example>

 #Get extattrs
 my $ref_extattrs = $msserver_dhcp->extattrs();

=back

=back

=head2 extensible_attributes()

=over

Use this method to retrieve the extensible attributes of the associated Grid Microsoft DHCP Server object.

This method is read-only. Use the Infoblox::Grid::MSServer object to set or modify the extensible attributes of the Grid Microsoft DHCP Server object.

=over

=item B<Returns>

The method returns the attribute value.

=item B<Example>

  #Get extensible_attributes
  my $extensible_attributes = $msserver_dhcp->extensible_attributes();

=back

=back

=head2 address()

=over

Use this method to retrieve the IP address or FQDN of the associated Grid Microsoft DHCP Server object.

This method is read-only. Use the Infoblox::Grid::MSServer object to set or modify the Grid Microsoft DHCP Server object address.

=over

=item B<Returns>

The method returns the attribute value.

=item B<Example>

  #Get address
  my $address = $msserver_dhcp->address();

=back

=back

=head2 broadcast_address()

=over

Use this method to set or retrieve the broadcast address of the associated Grid Microsoft DHCP Server object.

Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.

=over

=item B<Returns>

The Microsoft DHCP server broadcast address in IPV4 format.

=item B<Example>

  #Get address
  my $address = $msserver_dhcp->broadcast_address();
  #Modify broadcast_address
  $msserver_dhcp->broadcast_address("10.0.0.1");

=back

=back

=head2 enable_ddns()

=over

Retrieve or set the dynamic DNS flag of the Microsoft DHCP server.

Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.

=over

=item B<Parameter>

Specify "true" to set the disable flag or "false" to deactivate/unset it.

=item B<Returns>

If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.

If you did not specify a parameter, the method returns the attribute value.

=item B<Example>

  #Get enable_ddns
  my $enable_ddns = $msserver_dhcp->enable_ddns();
  #Modify enable_ddns
  $msserver_dhcp->enable_ddns("true");

=back

=back

=head2 enable_invalid_mac( )

=over

Use this method to allow invalid MAC address synchronization in DHCP leases and fixed addresses.

Setting this method to a defined value implicitly sets the override_enable_invalid_mac method to "true". Setting the parameter to undefined causes the appliance to use the grid default and automatically resets the override_enable_invalid_mac method to "false".

Note that when enable_invalid_mac is set to a defined value and override_enable_invalid_mac is set to "false", the last operation takes precedence. Thus the sequence $object->enable_invalid_mac("true"); $object->override_enable_invalid_mac("false"); will set override_enable_invalid_mac to "false", and the sequence $object->override_enable_invalid_mac("false"); $object->enable_invalid_mac("true"); will result in override_enable_invalid_mac="true".

=over

=item B<Parameter>

Specify "true" to allow invalid MAC address synchronization or "false" to forbid it. Default value is "false".

=item B<Returns>

If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.

If you did not specify a parameter, the method returns the attribute value.

=item B<Example>

 #Get enable_invalid_mac value
 my $enable_invalid_mac = $msserver_dhcp->enable_invalid_mac();
 #Modify enable_invalid_mac value
 $msserver_dhcp->enable_invalid_mac("true");

=back

=back

=head2 enable_monitoring( )

=over

Use this method to enable or disable the monitoring and control of DHCP service.

Setting this method to a defined value implicitly sets the override_enable_monitoring method to "true". Setting the parameter to undefined causes the appliance to use the grid default and automatically resets the override_enable_monitoring method to "false".

Note that when enable_monitoring is set to a defined value and override_enable_monitoring is set to "false", the last operation takes precedence. Thus the sequence $object->enable_monitoring("true"); $object->override_enable_monitoring("false"); will set override_enable_monitoring to "false", and the sequence $object->override_enable_monitoring("false"); $object->enable_monitoring("true"); will result in override_enable_monitoring="true".

=over

=item B<Parameter>

Specify "true" to allow invalid mac address synchronization or "false" to forbid it. Default value is "false".

=item B<Returns>

If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.

If you did not specify a parameter, the method returns the attribute value.

=item B<Example>

 #Get enable_monitoring value
 my $enable_monitoring = $msserver_dhcp->enable_dhcp_monitoring();
 #Modify enable_monitoring value
 $msserver_dhcp->enable_monitoring("true");

=back

=back

=head2 ddns_server_always_updates()

=over

Retrieve or set the "Always update DDNS" flag of the Microsoft DHCP server. Use "true" to always allow dynamic DNS updates, or use "false" to only update when requested by the client. The default value is "false".

Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.

=over

=item B<Parameter>

Specify "true" to set the disable flag or "false" to deactivate/unset it.

=item B<Returns>

If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.

If you did not specify a parameter, the method returns the attribute value.

=item B<Example>

  #Get ddns_server_always_updates
  my $ddns_server_always_updates = $msserver_dhcp->ddns_server_always_updates();
  #Modify ddns_server_always_updates
  $msserver_dhcp->ddns_server_always_updates("true");

=back

=back

=head2 ms_options( )

=over

Use this method to set or retrieve the custom DHCP options that are associated with the specified Microsoft DHCP server.

Note: You can set only options that are included in both the Microsoft server and NIOS predefined option definitions. Options that are not common to both are read-only and cannot be modified.

Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.

=over

=item B<Parameter>

The valid value is an array reference that contains defined L<Infoblox::DHCP::MSOption|Infoblox::DHCP::MSOption> objects. The default value is empty.

=item B<Returns>

If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.

If you did not specify a parameter, the method returns the attribute value.

=item B<Example>

 #Get options
 my $ref_options = $msserver_dhcp->ms_options();
 #Modify options
 $msserver_dhcp->ms_options([$option12]); #$option12 is an Infoblox::DHCP::MSOption object

=back

=back

=head2 comment()

=over

Use this method to retrieve the comment associated with the Grid Microsoft DHCP Server object.

This method is read-only. Use the Infoblox::Grid::MSServer object to set or modify the Grid Microsoft DHCP Server object comment.

=over

=item B<Returns>

The method returns the attribute value.

=item B<Example>

  #Get comment
  my $comment = $msserver_dhcp->comment();

=back

=back

=head2 read_only()

=over

Use this method to retrieve the read_only flag of the associated Grid Microsoft DHCP Server object.

This method is read-only. Use the Infoblox::Grid::MSServer object to set or modify the Grid Microsoft DHCP Server object read_only status.

=over

=item B<Returns>

The method returns the attribute value.

=item B<Example>

  #Get read_only
  my $read_only = $msserver_dhcp->read_only();

=back

=back

=head2 name()

=over

Use this method to retrieve the name of the associated Grid Microsoft DHCP Server object.

This method is read-only. Use the Infoblox::Grid::MSServer object to set or modify the Grid Microsoft DHCP Server object name.

=over

=item B<Returns>

The method returns the attribute value.

=item B<Example>

  #Get name
  my $name = $msserver_dhcp->name();

=back

=back

=head2 static_hosts()

=over

Use this method to retrieve the number of static addresses (fixed addresses and reservations) associated with the Microsoft server.

=over

=item B<Returns>

The method returns the attribute value.

=item B<Example>

  #Get static_hosts
  my $static_hosts = $msserver_dhcp->static_hosts();

=back

=back

=head2 supports_failover( )

=over

Use this method to retrieve the flag used to indicate whether DHCP supports failover. This is a read-only attribute.

=over

=item B<Parameter>

None

=item B<Returns>

The method returns the attribute value.

=item B<Example>

 #Get supports_failover value
 my $supports_failover = msserver_dhcp->supports_failover();

=back

=back

=head2 dynamic_hosts()

=over

Use this method to retrieve the number of active leases associated with the Microsoft server.

=over

=item B<Returns>

The method returns the attribute value.

=item B<Example>

  #Get dynamic_hosts
  my $dynamic_hosts = $msserver_dhcp->dynamic_hosts();

=back

=back

=head2 dhcp_utilization()

=over

Use this method to retrieve the DHCP utilization status of the Microsoft server. The returned value is between 0 and 1000. 1000 indicates 100% utilization.

=over

=item B<Returns>

The method returns the attribute value.

=item B<Example>

  #Get dhcp_utilization
  my $dhcp_utilization = $msserver_dhcp->dhcp_utilization();

=back

=back

=head2 dhcp_utilization_status()

=over

Use this method to retrieve the DHCP utilization status of the Microsoft server. The returned value is 'Low', 'Normal', 'High', or 'Full', and depend on the value of the low- and high-water mark parameters.

=over

=item B<Returns>

The method returns the attribute value.

=item B<Example>

  #Get dhcp_utilization_status
  my $dhcp_utilization_status = $msserver_dhcp->dhcp_utilization_status();

=back

=back

=head2 override_enable_invalid_mac( )

=over

The override_enable_invalid_mac attribute controls whether the enable_invalid_mac method values of the Microsoft Server DHCP object are used, instead of the Grid default.

The override_enable_invalid_mac attribute can be specified explicitly. It is also set implicitly when enable_invalid_mac is set to a defined value.

Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.

=over

=item B<Parameter>

Set the parameter to "true" to override the grid-level setting for enable_invalid_mac. Set the parameter to "false" to inherit the grid-level setting for enable_invalid_mac. The default value is "false".

=item B<Returns>

If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.

If you did not specify a parameter, the method returns the attribute value.

=item B<Example>

 #Get override_enable_invalid_mac
 my $override_enable_invalid_mac = $msserver_dhcp->override_enable_invalid_mac();
 #Modify override_enable_invalid_mac
 $msserver_dhcp->override_enable_invalid_mac("true");

=back

=back

=head2 override_enable_monitoring( )

=over

The override_enable_monitoring attribute controls whether the enable_monitoring method values of the Microsoft Server DHCP object are used, instead of the Grid default.

The override_enable_monitoring attribute can be specified explicitly. It is also set implicitly when enable_monitoring is set to a defined value.

Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.

=over

=item B<Parameter>

Set the parameter to "true" to override the grid-level setting for enable_monitoring. Set the parameter to "false" to inherit the grid-level setting for enable_monitoring. The default value is "false".

=item B<Returns>

If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.

If you did not specify a parameter, the method returns the attribute value.

=item B<Example>

 #Get override_enable_monitoring
 my $override_enable_monitoring = $msserver_dhcp->override_enable_monitoring();
 #Modify override_enable_monitoring
 $msserver_dhcp->override_enable_monitoring("true");

=back

=back

=head2 override_login( )

=over

The override_login attribute controls whether the login_name method values of the Microsoft Server DHCP are used, instead of the Grid default.

The override_login attribute can be specified explicitly. It is also set implicitly when login_name is set to a defined value.

Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.

=over

=item B<Parameter>

Set the parameter to "true" to override the Grid-level setting for login_name. Set the parameter to "false" to inherit the Grid-level setting for login_name. The default value is "false".

=item B<Returns>

If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.

If you did not specify a parameter, the method returns the attribute value.

=item B<Example>

 #Get override_login
 my $override_login = $msserver_dhcp->override_login();
 #Modify override_login
 $msserver_dhcp->override_login("true");

=back

=back

=head2 override_synchronization_interval( )

=over

The override_synchronization_interval attribute controls whether the synchronization_interval method values of the Microsoft Server DHCP are used, instead of the Grid default.

The override_synchronization_interval attribute can be specified explicitly. It is also set implicitly when synchronization_interval is set to a defined value.

Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.

=over

=item B<Parameter>

Set the parameter to "true" to override the Grid-level setting for synchronization_interval. Set the parameter to "false" to inherit the Grid-level setting for synchronization_interval. The default value is "false".

=item B<Returns>

If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.

If you did not specify a parameter, the method returns the attribute value.

=item B<Example>

 #Get override_synchronization_interval
 my $override_synchronization_interval = $msserver_dhcp->override_synchronization_interval();
 #Modify override_synchronization_interval
 $msserver_dhcp->override_synchronization_interval("true");

=back

=back

=head2 synchronization_interval( )

=over

Use this method to set or retrieve the synchronization interval of the Microsoft Server DHCP.

Setting this method to a defined value implicitly sets the override_synchronization_interval method to "true". Setting the parameter to undefined causes the appliance to use the Grid default and automatically resets the override_synchronization_interval attribute to "false".

Note that when synchronization_interval is set to a defined value and override_dsynchronization_interval is set to "false", the last operation takes precedence. Thus the sequence $object->synchronization_interval(10); $object->override_synchronization_interval("false"); will set override_synchronization_interval to "false", and the sequence $object->override_synchronization_interval("false"); $object->synchronization_interval(10); will result in override_synchronization_interval="true".

Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.

=over

=item B<Parameter>

The valid value is an unsigned integer.

=item B<Returns>

If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.

If you did not specify a parameter, the method returns the attribute value.

=item B<Example>

 #Get synchronization_interval value
 my $synchronization_interval = $msserver_dhcp->synchronization_interval();
 #Modify synchronization_interval value
 $msserver_dhcp->synchronization_interval(10);

=back

=back

=head1 AUTHOR

Infoblox Inc. L<http://www.infoblox.com/>

=head1 SEE ALSO

L<Infoblox::Grid::MSServer|Infoblox::Grid::MSServer>, L<Infoblox::DHCP::MSOption|Infoblox::DHCP::MSOption>

=head1 COPYRIGHT

Copyright (c) 2017 Infoblox Inc.

=cut

=head1 NAME

Infoblox::Grid::DNS::AttackDetect - a DNS Attack Detect object.

=head1 DESCRIPTION

The DNS Attack Detect object provides information about DNS attack detection settings.

=head1 CONSTRUCTOR

 my $attack_detect = Infoblox::Grid::DNS::AttackDetect->new(
    enable        => 'true' | 'false', # Optional
    high          => $uint,            # Optional
    interval_max  => $uint,            # Optional
    interval_min  => $uint,            # Optional
    interval_time => $uint,            # Optional
    low           => $uint,            # Optional
 );

=head1 SESSION METHODS

The object does not support any session methods.

=head1 MODULE METHODS

=head2 Infoblox::Grid::DNS::AttackMitigation->detect_chr( )

=over

Use this method to set or retrieve configuration for the Cache Hit Ratio (CHR) changes detection. See L<Infoblox::Grid::DNS::AttackMitigation-E<gt>detect_chr()|Infoblox::Grid::DNS::AttackMitigation/detect_chr()/> for parameters and return values.

=over

=item B<Example>

 #Get detect_chr value
 my $detect_chr = $attack_mitigation->detect_chr();
 #Modify detect_chr 
 $attack_mitigation->detect_chr($detect_chr);

=back

=back

=head2 Infoblox::Grid::DNS::AttackMitigation->detect_nxdomain_responses( )

=over

Use this method to set or retrieve configuration for the recursive queries NXDOMAIN responses detection. See L<Infoblox::Grid::DNS::AttackMitigation-E<gt>detect_nxdomain_responses()|Infoblox::Grid::DNS::AttackMitigation/detect_nxdomain_responses()/> for parameters and return values.

=over

=item B<Example>

 #Get detect_nxdomain_responses value
 my $detect_nxdomain_responses = $attack_mitigation->detect_nxdomain_responses();
 #Modify detect_nxdomain_responses 
 $attack_mitigation->detect_nxdomain_responses($detect_nxdomain_responses);

=back

=back

=head2 Infoblox::Grid::DNS::AttackMitigation->detect_udp_drop( )

=over

Use this method to set or retrieve configuration for the UDP packet drop rate detection. See L<Infoblox::Grid::DNS::AttackMitigation-E<gt>detect_udp_drop()|Infoblox::Grid::DNS::AttackMitigation/detect_udp_drop()/> for parameters and return values.

=over

=item B<Example>

 #Get detect_udp_drop value
 my $detect_udp_drop = $attack_mitigation->detect_udp_drop();
 #Modify detect_udp_drop 
 $attack_mitigation->detect_udp_drop($detect_udp_drop);

=back

=back

=head1 METHODS

=head2 enabled( )

=over

Use this method to enable or disable DNS attack detection.

Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.

=over

=item B<Parameter>

Specify 'true' to enable DNS attack detection or 'false' to disable it. The default value is 'false'.

=item B<Returns>

If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.

If you did not specify a parameter, the method returns the attribute value.

=item B<Example>

 #Get enable value
 my $enable = $attack_detect->enable();
 #Modify enable 
 $attack_detect->enable('true');

=back

=back

=head2 high( )

=over

Use this method to set or retrieve the high threshold value (in percentage) for starting DNS attack detection.

Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.

=over

=item B<Parameter>

The valid value is an unsigned integer between 0 and 100.

=item B<Returns>

If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.

If you did not specify a parameter, the method returns the attribute value.

=item B<Example>

 #Get high value
 my $high = $attack_detect->high();
 #Modify high 
 $attack_detect->high(90);

=back

=back

=head2 interval_max( )

=over

Use this method to set or retrieve the maximum number of events that have occurred before processing DNS attack detection.

Note that detection processing occurs each time when interval_max events have occurred or at least interval_min events have occurred and at least interval_time seconds have elapsed.

Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.

=over

=item B<Parameter>

The valid value is an unsigned integer.

=item B<Returns>

If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.

If you did not specify a parameter, the method returns the attribute value.

=item B<Example>

 #Get interval_max value
 my $interval_max = $attack_detect->interval_max();
 #Modify interval_max 
 $attack_detect->interval_max(100000);

=back

=back

=head2 interval_min( )

=over

Use this method to set or retrieve the minimum number of events that have occurred before processing DNS attack detection.

Note that detection processing occurs each time when interval_max events have occurred or at least interval_min events have occurred and at least interval_time seconds have elapsed.

Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.

=over

=item B<Parameter>

The valid value is an unsigned integer.

=item B<Returns>

If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.

If you did not specify a parameter, the method returns the attribute value.

=item B<Example>

 #Get interval_min value
 my $interval_min = $attack_detect->interval_min();
 #Modify interval_min 
 $attack_detect->interval_min(1000);

=back

=back

=head2 interval_time( )

=over

Use this method to set or retrieve the time interval between detection processing.

Note that detection processing occurs each time when interval_max events have occurred or at least interval_min events have occurred and at least interval_time seconds have elapsed.

Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.

=over

=item B<Parameter>

The valid value is an unsigned integer.

=item B<Returns>

If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.

If you did not specify a parameter, the method returns the attribute value.

=item B<Example>

 #Get interval_time value
 my $interval_time = $attack_detect->interval_time();
 #Modify interval_time 
 $attack_detect->interval_time(10);

=back

=back

=head2 low( )

=over

Use this method to set or retrieve the low threshold value (in percentage) for starting DNS attack detection.

Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.

=over

=item B<Parameter>

The valid value is an unsigned integer between 0 and 100.

=item B<Returns>

If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.

If you did not specify a parameter, the method returns the attribute value.

=item B<Example>

 #Get low value
 my $low = $attack_detect->low();
 #Modify low 
 $attack_detect->low(40);

=back

=back

=head1 AUTHOR

Infoblox Inc. L<http://www.infoblox.com/>

=head1 SEE ALSO

L<Infoblox::Grid::DNS::AttackMitigation>, L<Infoblox::Grid::DNS::AttackMitigation-E<gt>detect_chr()|Infoblox::Grid::DNS::AttackMitigation/detect_chr()/>, L<Infoblox::Grid::DNS::AttackMitigation-E<gt>detect_nxdomain_responses()|Infoblox::Grid::DNS::AttackMitigation/detect_nxdomain_responses()/>, L<Infoblox::Grid::DNS::AttackMitigation-E<gt>detect_udp_drop()|Infoblox::Grid::DNS::AttackMitigation/detect_udp_drop()/>

=head1 COPYRIGHT

Copyright (c) 2017 Infoblox Inc.

=cut

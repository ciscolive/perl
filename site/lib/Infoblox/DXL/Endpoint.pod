=head1 NAME

Infoblox::DXL::Endpoint - A Data Exchange Layer (DXL) endpoint object.

=head1 DESCRIPTION

The DXL endpoint object provides configuration for third party DXL server integration.

=head1 CONSTRUCTOR

 my $endpoint = Infoblox::DXL::Endpoint->new(
     name                   => $string,                                                              # Required
     outbound_member_type   => 'GM' | 'MEMBER',                                                      # Required
     brokers                => [$endpoint_dxl_broker1, ...],                                         # Required
     client_certificate     => $path,                                                                # Required
     comment                => $string,                                                              # Optional / Default is undefined
     disable                => 'true' | 'false',                                                     # Optional / Default is 'false'
     extattrs               => { $string => $extattr, ... },                                         # Optional / Default is undefined
     extensible_attributes  => {$string => $string | $num, $string => [ $string | $num, ... ], ... } # Optional / Default is undefined
     log_level              => 'WARNING' | 'DEBUG' | 'INFO' | 'ERROR',                               # Optional / Default is 'WARNING'
     outbound_members       => [$string, $string, ...],                                              # Optional / Default is empty list
     template_instance      => $template_instance                                                    # Optional / Default is undefined
     vendor_identifier      => $string,                                                              # Optional / Default is undefined
     wapi_user_name         => $string,                                                              # Optional / Default is undefined
     wapi_user_password     => $string,                                                              # Optional / Default is undefined
 );

You cannot set both extattrs and extensible_attributes attributes at the same time.

=head1 SESSION METHODS

This section describes all the methods in an Infoblox::Session module that you can apply to a DXL endpoint object.

=head2 Infoblox::Session->add( )

=over

Use this method to add the object to the Infoblox appliance.
See L<Infoblox::Session-E<gt>add()|Infoblox::Session/add()/> for parameters and return values.

=over

=item B<Example>

 #Construct Infoblox::DXL::Endpoint::Broker object
 my $broker = Infoblox::DXL::Endpoint::Broker->new(
     host_name => 'dxl-br.localdomain',
 );

 #Construct an object
 my $object = Infoblox::DXL::Endpoint->new(
     name                 => 'dxl_ep',
     outbound_member_type => 'GM',
     brokers              => [$broker],
     client_certificate   => '/path/to/certificate.pem',
 );

 #Submit for addition
 my $response = $session->add($object);

=back

=back

=head2 Infoblox::Session->get( )

=over

Use this method to retrieve all the matching objects from the Infoblox appliance.
See L<Infoblox::Session-E<gt>get()|Infoblox::Session/get()/> for parameters and return values.

=over

=item B<Key References>

 Apply the following attributes to get a specific DXL endpoint object:

  comment                    - Optional. The DXL endpoint comment in string format.
  name                       - Optional. The DXL endpoint name in string format.
  vendor_identifier          - Optional. The DXL endpoint vendor identifier in string format.
  outbound_member_type       - Optional. The DXL endpoint outbound member type.
  extattrs                   - Optional. A hash reference containing Infoblox::Grid::Extattr object.
  extensible_attributes      - Optional. A hash reference containing extensible attributes.

=item B<Examples>

 my @retrieved_objs = $session->get(
     object => 'Infoblox::DXL::Endpoint',
     name   => 'dxl_ep',
 );

 my @retrieved_objs = $session->get(
     object                => 'Infoblox::DXL::Endpoint',
     extensible_attributes => {'Site' => 'Santa Clara'},
 );

=back

=back

=head2 Infoblox::Session->modify( )

=over

Use this method to modify the object in the Infoblox appliance.
See L<Infoblox::Session-E<gt>modify()|Infoblox::Session/modify()/> for parameters and return values.

=over

=item B<Example>

 #Modify comment value
 $object->comment('this is a modified comment');

 #Submit modification
 my $response = $session->modify($object);

=back

=back

=head2 Infoblox::Session->remove( )

=over

Use this method to remove the object from the Infoblox appliance. See L<Infoblox::Session-E<gt>remove()|Infoblox::Session/remove()/> for parameters and return values.

To remove a specific object, first use get() or search() to retrieve the specific DXL endpoint object, and then submit this object for removal.

=over

=item B<Example>

 #Get the objects
 my @retrieved_objs = $session->get(
     object => 'Infoblox::DXL::Endpoint',
     name   => 'dxl_ep',
 );

 #Find the desired object from the retrieved list
 my $desired_object = $retrieved_objs[0];

 #Submit for removal
 my $response = $session->remove($desired_object);

=back

=back

=head2 Infoblox::Session->search( )

=over

Use this method to search for objects in the Infoblox appliance. See L<Infoblox::Session-E<gt>search()|Infoblox::Session/search()/> for parameters and return values.

=over

=item B<Key References>

 Apply the following attributes to search for the DXL endpoint object:

  comment                    - Optional. The DXL endpoint comment in string format (regexp).
  name                       - Optional. The DXL endpoint name in string format (regexp).
  vendor_identifier          - Optional. The DXL endpoint vendor identifier in string format (regexp).
  outbound_member_type       - Optional. The DXL endpoint outbound member type.
  extattrs                   - Optional. A hash reference containing Infoblox::Grid::Extattr object.
  extensible_attributes      - Optional. A hash reference containing extensible attributes.


For more information about searching extensible attributes,
see L<Infoblox::Grid::ExtensibleAttributeDef/Searching Extensible Attributes|Infoblox::Grid::ExtensibleAttributeDef/Searching Extensible Attributes>.

=item B<Examples>

 # search for objects
 my @retrieved_objs = $session->search(
     object            => 'Infoblox::DXL::Endpoint',
     name              => 'dxl_.*',
     vendor_identifier => 'Carbon',
);

 # search for objects defining 'Santa Clara' for 'Site' extensible attribute
 my @retrieved_objs = $session->search(
     object                => 'Infoblox::DHCP::Range',
     extensible_attributes => {'Site' => 'Santa Clara'},
 );

=back

=back

=head1 METHODS

This section describes all the methods that you can use to configure and retrieve the attribute values of a DXL endpoint.

=head2 brokers( )

=over

Use this method to set or retrieve the list of DXL brokers for the DXL endpoint.

Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.

=over

=item B<Parameter>

The valid value is an array reference that contains L<Infoblox::DXL::Endpoint::Broker|Infoblox::DXL::Endpoint::Broker> objects.

=item B<Returns>

If you have specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.

If you did not specify a parameter, the method returns the attribute value.

=item B<Example>

 #Get brokers value
 my $brokers = $object->brokers();

 #Construct Infoblox::DXL::Endpoint::Broker object
 my $broker = Infoblox::DXL::Endpoint::Broker->new(
     host_name => 'dxl-br.localdomain',
 );

 #Modify brokers value
 $object->brokers([$broker]);

=back

=back

=head2 client_certificate( )

=over

Use this method to set the path to a client certificate file. This is a write-only attribute.

Include the specified parameter to set the attribute value.

=over

=item B<Parameter>

The valid value is a path to a certificate in string format.

=item B<Returns>

If you have specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.

=item B<Example>

 #Modify client_certificate value
 $object->client_certificate('/path/to/cert.pem');

=back

=back

=head2 client_certificate_subject( )

=over

Use this method to retrieve the client certificate subject. This is a read-only attrbiute.

Omit the parameter to retrieve the attribute value.

=over

=item B<Parameter>

None

=item B<Returns>

The method returns the attribute value.

=item B<Example>

 #Get client_certificate_subject value
 my $client_certificate_subject = $object->client_certificate_subject();

=back

=back

=head2 client_certificate_valid_from( )

=over

Use this method to retrieve the time from which the client certificate is valid. This is a read-only attrbiute.

Omit the parameter to retrieve the attribute value.

=over

=item B<Parameter>

None

=item B<Returns>

The method returns the attribute value. The number of seconds that have elapsed since January 1st, 1970 UTC.

=item B<Example>

 #Get client_certificate_valid_from value
 my $client_certificate_valid_from = $object->client_certificate_valid_from();

=back

=back

=head2 client_certificate_valid_to( )

=over

Use this method to retrieve the expiration time for the client certificate. This is a read-only attrbiute.

Omit the parameter to retrieve the attribute value.

=over

=item B<Parameter>

None

=item B<Returns>

The method returns the attribute value. The number of seconds that have elapsed since January 1st, 1970 UTC.

=item B<Example>

 #Get client_certificate_valid_to value
 my $client_certificate_valid_to = $object->client_certificate_valid_to();

=back

=back

=head2 comment( )

=over

Use this method to set or retrieve the DXL endpoint comment.

Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.

=over

=item B<Parameter>

The valid value is a desired comment in string format.

=item B<Returns>

If you have specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.

If you did not specify a parameter, the method returns the attribute value.

=item B<Example>

 #Get comment value
 my $comment = $object->comment();

 #Modify comment value
 $object->comment('modified comment');

=back

=back

=head2 disable( )

=over

Use this method to set or retrieve the flag that indicates whether the DXL endpoint is enabled or disabled.

Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.

=over

=item B<Parameter>

Specify 'true' to disable the DXL endpoint or 'false' to enable it. The default value is 'true'.

=item B<Returns>

If you have specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.

If you did not specify a parameter, the method returns the attribute value.

=item B<Example>

 #Get disable value
 my $disable = $object->disable();

 #Modify disable value
 $object->disable('false');

=back

=back

=head2 extattrs( )

=over

Use this method to set or retrieve the extensible attributes associated with a DXL endpoint object.

=over

=item B<Parameter>

Valid value is a hash reference that contains the names of extensible attributes and their associated values (L<Infoblox::Grid::Extattr|Infoblox::Grid::Extattr> objects).

=item B<Returns>

If you have specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.

If you did not specify a parameter, the method returns the attribute value.

=item B<Example>

 #Get extattrs value
 my $extattrs = $object->extattrs();

 #Modify extattrs value
 $object->extattrs({'Site' => $extattr1, 'Administrator' => $extattr2});

=back

=back

=head2 extensible_attributes( )

=over

Use this method to set or retrieve the extensible attributes associated with a DXL endpoint object.

Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.

=over

=item B<Parameter>

For valid values for extensible attributes, see L<Infoblox::Grid::ExtensibleAttributeDef/Extensible Attribute Values|Infoblox::Grid::ExtensibleAttributeDef/Extensible Attribute Values>.

=item B<Returns>

If you have specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.

If you did not specify a parameter, the method returns the attribute value.

=item B<Example>

 #Get extensible attributes value
 my $extensible_attributes = $object->extensible_attributes();
 #Modify extensible attributes
 $object->extensible_attributes({'Site' => 'Santa Clara', 'Administrator' => ['Peter', 'Tom']});

=back

=back

=head2 name( )

=over

Use this method to set or retrieve the DXL endpoint name.

Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.

=over

=item B<Parameter>

The valid value is a desired name in string format.

=item B<Returns>

If you have specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.

If you did not specify a parameter, the method returns the attribute value.

=item B<Example>

 #Get name value
 my $name = $object->name();

 #Modify name value
 $object->name('modified_name');

=back

=back

=head2 outbound_members( )

=over

Use this method to set or retrieve the list of DXL endpoint members that are responsible for event generation.

Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.

=over

=item B<Parameter>

The valid value is an array that contains Grid member names in string format.

=item B<Returns>

If you have specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.

If you did not specify a parameter, the method returns the attribute value.

=item B<Example>

 #Get outbound_members value
 my $outbound_members = $object->outbound_members();

 #Modify outbound_members value
 $object->outbound_members(['member1', 'member2']);

=back

=back

=head2 outbound_member_type( )

=over

Use this method to set or retrieve the DXL endpoint member that is responsible for event generation.

Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.

=over

=item B<Parameter>

The valid values are 'GM' and 'MEMBER'.

=item B<Returns>

If you have specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.

If you did not specify a parameter, the method returns the attribute value.

=item B<Example>

 #Get outbound_member_type value
 my $outbound_member_type = $object->outbound_member_type();

 #Modify outbound_member_type value
 $object->outbound_member_type('MEMBER');

=back

=back

=head2 log_level( )

=over

Use this method to set or retrieve the DXL endpoint logging level.

Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.

=over

=item B<Parameter>

The valid values are 'DEBUG', 'ERROR', 'INFO', and 'WARNING'.

=item B<Returns>

If you have specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.

If you did not specify a parameter, the method returns the attribute value.

=item B<Example>

 #Get log_level value
 my $value = $object->log_level();

 #Modify log_level value
 $object->log_level('INFO');

=back

=back

=head2 template_instance( )

=over

Use this method to set or retrieve the DXL endpoint template instance.

Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.

Note that you cannot change the 'parameters' value of the template instance object for a DXL endpoint.

=over

=item B<Parameter>

The valid value is an L<Infoblox::Notification::REST::TemplateInstance|Infoblox::Notification::REST::TemplateInstance> object.

=item B<Returns>

If you have specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.

If you did not specify a parameter, the method returns the attribute value.

=item B<Example>

 #Get template_instance value
 my $value = $object->template_instance();

 #Modify template_instance value
 $object->template_instance($instance);

=back

=back

=head2 vendor_identifier( )

=over

Use this method to set or retrieve the DXL endpoint vendor identifier.

Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.

=over

=item B<Parameter>

The valid value is a desired vendor identifier in string format.

=item B<Returns>

If you have specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.

If you did not specify a parameter, the method returns the attribute value.

=item B<Example>

 #Get vendor_identifier value
 my $vendor_identifier = $object->vendor_identifier();

 #Modify vendor_identifier value
 $object->vendor_identifier('CarbonBlack');

=back

=back

=head2 wapi_user_name( )

=over

Use this method to set or retrieve the user name for WAPI integration.

Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.

=over

=item B<Parameter>

The valid value is a desired user name in string format.

=item B<Returns>

If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.

If you did not specify a parameter, the method returns the attribute value.

=item B<Example>

 #Get wapi_user_name value
 my $value = $object->wapi_user_name();

 #Modify wapi_user_name value
 $object->wapi_user_name('admin');

=back

=back

=head2 wapi_user_password( )

=over

Use this method to set the user password for WAPI integration. This is a write-only attribute.

Include the specified parameter to set the attribute value.

=over

=item B<Parameter>

The valid value is a desired user password in string format.

=item B<Returns>

The method returns true when the modification succeeds, and returns false when the operation fails.

=item B<Example>

 #Modify wapi_user_password value
 $object->wapi_user_password('infoblox');

=back

=back

=head1 AUTHOR

Infoblox Inc. L<http://www.infoblox.com/>

=head1 SEE ALSO

L<Infoblox::Session|Infoblox::Session>,
L<Infoblox::Session-E<gt>add()|Infoblox::Session/add()/>,
L<Infoblox::Session-E<gt>get()|Infoblox::Session/get()/>,
L<Infoblox::Session-E<gt>modify()|Infoblox::Session/modify()/>,
L<Infoblox::Session-E<gt>remove()|Infoblox::Session/remove()/>,
L<Infoblox::Session-E<gt>search()|Infoblox::Session/search()/>,
L<Infoblox::Grid::Extattr|Infoblox::Grid::Extattr>,
L<Infoblox::Grid::ExtensibleAttributeDef/Searching Extensible Attributes|Infoblox::Grid::ExtensibleAttributeDef/Searching Extensible Attributes>,
L<Infoblox::Notification::REST::TemplateInstance|Infoblox::Notification::REST::TemplateInstance>,
L<Infoblox::DXL::Endpoint::Broker|Infoblox::DXL::Endpoint::Broker>.

=head1 COPYRIGHT

Copyright (c) 2017 Infoblox Inc.

=cut

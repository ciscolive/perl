=head1 NAME

Infoblox::Notification::RuleExpressionOp - A notification rule expression operand object.

=head1 DESCRIPTION

The expression operand object is used to build expression lists. The allowed values for the expression operand object depend on the object they appear to be a part of.

=head1 CONSTRUCTOR

 my $expression = Infoblox::Notification::RuleExpressionOp->new(
     op       => 'AND' | 'OR' | 'ENDLIST' | 'EQ' | 'REGEX' |
                 | 'MATCH_CIDR' | 'MATCH_RANGE' | 'LE' | 'GE' | 'CONTAINED_IN'            # Required
     op1      => 'ADDRESS_TYPE' | 'DHCP_FINGERPRINT' |
                 'DHCP_LEASE_STATE' | 'DHCP_IP_ADDRESS' | 'DISABLE' |
                 'DNS_RPZ_ACTION_POLICY' | 'DNS_RPZ_NAME' | 'DNS_RPZ_RULE_NAME' |
                 'DNS_RPZ_TYPE' | 'DUID' | 'HOST' | 'IPV4_ADDRESS' |
                 'IPV6_ADDRESS' | 'IPV6_PREFIX' | 'IPV6_PREFIX_BITS' | 'MAC' |
                 'NAME' | 'NETWORK' | 'NETWORK_VIEW' | 'SECURITY_ADP_RULE_MESSAGE' |
                 'SECURITY_ADP_RULE_SEVERITY' | 'SECURITY_ADP_SID' |
                 'SERVER_ASSOC_TYPE_IPV4', 'SERVER_ASSOC_TYPE_IPV6' | 'SOURCE_IP',        # Optional / Default is undefined
     op2      => $string,                                                                 # Optional / Default is undefined
     op1_type => 'FIELD' | 'LIST',                                                        # Optional / Default is undefined
     op2_type => 'STRING',                                                                # Optional / Default is undefined
 );

=head1 SESSION METHODS

The object does not support any session methods.

=head1 MODULE METHODS

=head2 Infoblox::Notification::Rule->expression_list( )

=over

Use this method to set or retrieve the notification rule condition expression.
See L<Infoblox::Notification::Rule-E<gt>expression_list()|Infoblox::Notification::Rule/expression_list()/> for parameters and return values.

=over

=item B<Example>

 #Get expression_list value
 my $expression_list = $object->expression_list();

 #Modify expression_list value
 $object->expression_list([$start_list, $op1, $op2, $end_list]);

=back

=back

=head1 METHODS

=head2 op( )

=over

Use this method to set or retrieve the operation name.

Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.

=over

=item B<Parameter>

The valid values are 'AND', 'OR', 'ENDLIST', 'EQ', 'NOT_EQ', 'LE', 'REGEX', 'GE', 'CONTAINED_IN', 'MATCH_CIDR' and 'MATCH_RANGE'.

=item B<Returns>

If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.

If you did not specify a parameter, the method returns the attribute value.

=item B<Example>

 #Get op value
 my $op = $object->op();

 #Modify op value
 $object->op('OR');

=back

=back

=head2 op1( )

=over

Use this method to set or retrieve the first operand value.

Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.

=over

=item B<Parameter>

The valid values are 'ADDRESS_TYPE', 'DHCP_FINGERPRINT' , 'DHCP_LEASE_STATE', 'DHCP_IP_ADDRESS', 'DISABLE' , 'DNS_RPZ_ACTION_POLICY', 'DNS_RPZ_NAME', 'DNS_RPZ_RULE_NAME' , 'DNS_RPZ_TYPE', 'DUID', 'HOST', 'IPV4_ADDRESS' , 'IPV6_ADDRESS', 'IPV6_PREFIX', 'IPV6_PREFIX_BITS', 'MAC' , 'NAME', 'NETWORK', 'NETWORK_VIEW', 'SECURITY_ADP_RULE_MESSAGE' , 'SECURITY_ADP_RULE_SEVERITY', 'SECURITY_ADP_SID' , 'SERVER_ASSOC_TYPE_IPV4', 'SERVER_ASSOC_TYPE_IPV6', 'SOURCE_IP'.

=item B<Returns>

If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.

If you did not specify a parameter, the method returns the attribute value.

=item B<Example>

 #Get op1 value
 my $op1 = $object->op1();

 #Modify op1 value
 $object->op1('SOURCE_IP');

=back

=back

=head2 op1_type( )

=over

Use this method to set or retrieve the first operand type.

Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.

=over

=item B<Parameter>

The valid values are 'FIELD', 'LIST' and 'STRING'.

=item B<Returns>

If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.

If you did not specify a parameter, the method returns the attribute value.

=item B<Example>

 #Get op1_type value
 my $op1_type = $object->op1_type();

 #Modify op1_type value
 $object->op1_type('LIST');

=back

=back

=head2 op2( )

=over

Use this method to set or retrieve the second operand value.

Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.

=over

=item B<Parameter>

The valid value is a string that contains the second operand value.

=item B<Returns>

If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.

If you did not specify a parameter, the method returns the attribute value.

=item B<Example>

 #Get op2 value
 my $op2 = $object->op2();

 #Modify op2 value
 $object->op2('OP2_VAL');

=back

=back

=head2 op2_type( )

=over

Use this method to set or retrieve the second operand type.

Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.

=over

=item B<Parameter>

The valid value is 'STRING'.

=item B<Returns>

If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.

If you did not specify a parameter, the method returns the attribute value.

=item B<Example>

 #Get op2_type value
 my $op2_type = $object->op2_type();

 #Modify op2_type value
 $object->op2_type('STRING');

=back

=back

=head1 AUTHOR

Infoblox Inc. L<http://www.infoblox.com/>

=head1 SEE ALSO

L<Infoblox::Notification::Rule|Infoblox::Notification::Rule>,
L<Infoblox::Notification::Rule-E<gt>expression_list()|Infoblox::Notification::Rule/expression_list()/>,

=head1 COPYRIGHT

Copyright (c) 2017 Infoblox Inc.

=cut


=head1 NAME

Infoblox::DNS::SharedRecord::SRV - DNS shared SRV record object

=head1 DESCRIPTION

A shared SRV record is similar to a regular SRV record, which is also known as a service record. A SRV record provides information on available services. The difference is that shared SRV records should be added into a shared record group. If this shared record group is associated with other zones, then this shared SRV record will be shared into these zones. For more information about how shared record groups and shared records work, please refer to Infoblox Administrator Guide.

=head1 CONSTRUCTOR

 my $srv = Infoblox::DNS::SharedRecord::SRV->new(
     name                    => $string,               #Required
     port                    => $num,                  #Required
     priority                => $num,                  #Required
     shared_record_group     => $string,               #Required
     target                  => $fqdn,                 #Required
     weight                  => $num,                  #Required
     comment                 => $string,               #Optional / Default is empty
     disable                 => "true" | "false"       #Optional / Default "false"
     extattrs                => { $string => $extattr, ... },      #Optional / Default is undefined
     extensible_attributes => { $string => $string|$num, $string => [ $string|$num, ...], ... }, #Optional / Default is undefined
     ttl                     => $num | undef,          #Optional / Default is undefined
 );

You cannot set both extattrs and extensible_attributes attributes at the same time.

=head1 SESSION METHODS

This section describes all the methods in Infoblox::Session that you can apply to a DNS shared SRV record object.

=head2 Infoblox::Session->add( )

=over

Use this method to add an object to the Infoblox appliance. See L<Infoblox::Session-E<gt>add()|Infoblox::Session/add()/> for parameters and return values.

=over

=item B<Example>

 #Construct object
 my $srg_srv = Infoblox::DNS::SharedRecord::SRV->new(
     name     => "srg_srv",
     comment  => "add shared srv srg_srv",
     priority => 1,
     port     => 1,
     weight   => 1,
     target   => "old.target.test.org",
     shared_record_group => "test_srg"
 );
 # Submit for addition
 my $response = $session->add( $srg_srv );

=back

=back

=head2 Infoblox::Session->get( )

=over

Use this method to retrieve the existing objects from the Infoblox appliance. See L<Infoblox::Session-E<gt>get()|Infoblox::Session/get()/> for parameters and return values.

=over

=item B<Key Reference>

 Apply the following attributes to get a specified DNS shared SRV object:

  name - Required. A name in string format.
  extattrs     - Optional. A hash reference containing extensible attributes.
  extensible_attributes - Optional. A hash reference containing extensible attributes.

=item B<Example>

 my @retrieved_objs = $session->get(
     object => "Infoblox::DNS::SharedRecord::SRV",
     name     => "srg_srv");

 # get all shared SRV records with a given extensible attribute
 my @retrieved_objs = $session->get(
     object => "Infoblox::DNS::SharedRecord::SRV",
     extensible_attributes => { 'Site' => 'Santa Clara' });

=back

=back

=head2 Infoblox::Session->modify( )

=over

Use this method to modify objects in the Infoblox appliance. See L<Infoblox::Session-E<gt>modify()|Infoblox::Session/modify()/> for parameters and return values.

=over

=item B<Example>

 # Use method to modify the comment.
 $srg_srv->comment("this is a modified comment");
 # Submit modification
 my $response = $session->modify( $srg_srv);

=back

=back

=head2 Infoblox::Session->remove( )

=over

Use this method to remove an object from the Infoblox appliance. See L<Infoblox::Session-E<gt>remove()|Infoblox::Session/remove()/> for parameters and return values.

To remove a specific object, first use get() or search() to retrieve the specific object, and then submit this object for removal.

=over

=item B<Example>

 # Get the object under the same name
 my @retrieved_objs = $session->get(
     object => "Infoblox::DNS::SharedRecord::SRV",
     name     => "srg_srv");
 my $desired_srv= $retrieved_objs[0];
 # Submit for removal
 my $response = $session->remove( $desired_srv );

=back

=back

=head2 Infoblox::Session->search( )

=over

Use this method to search for existing DNS shared SRV record objects in the Infoblox appliance. See L<Infoblox::Session-E<gt>search()|Infoblox::Session/search()/> for parameters and return values.

=over

=item B<Key Reference>

 Apply the following attributes, to search for a DNS shared SRV record object:

   name    - Required. Reverse domain name of the shared SRV record (regular expression).
   comment - Optional . A comment in string format (regular expression).
   extattrs     - Optional. A hash reference containing extensible attributes.
   extensible_attributes - Optional. A hash reference containing extensible attributes.

For more information about searching extensible attributes, see L<Infoblox::Grid::ExtensibleAttributeDefE<sol>Searching Extensible Attributes|Infoblox::Grid::ExtensibleAttributeDef/Searching Extensible Attributes>.

=item B<Example>

 # search for all DNS shared SRV object with comment containing 'shared'.
 my @retrieved_objs = $session->search(
     object => "Infoblox::DNS::SharedRecord::SRV",
     name     => ".*",
     comment  => "shared");

 # search all DNS shared SRV records with the extensible attribute 'Site'
 my @retrieved_objs = $session->search(
    object => "Infoblox::DNS::SharedRecord::SRV",
    extensible_attributes => { 'Site' => 'Santa Clara' });

=back

=back

=head1 METHODS

This section describes all the methods that you can use to configure and retrieve the attribute values of a DNS shared SRV record object.

=head2 comment( )

=over

Use this method to add or retrieve a descriptive comment of a DNS shared SRV record.

Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.

=over

=item B<Parameter>

Desired comment in string format with a maximum of 256 bytes.

=item B<Returns>

If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.

=item B<Example>

 #Get comment
 my $comment = $sharedsrv->comment();
 #Modify comment
 $sharedsrv->comment("Modifying the DNS shared SRV comment");

=back

=back

=head2 disable( )

=over

Use this method to set or retrieve the disable flag of a DNS shared SRV record.

Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.

The default value for this field is false, therefore the DNS shared SRV record is enabled.

=over

=item B<Parameter>

Specify "true" to set the disable flag or "false" to deactivate/unset it.

=item B<Returns>

If you specified a parameter,the method returns true when the modification succeeds,and returns false when the operation fails.

=item B<Example>

 #Get disable
 my $disable = $sharedsrv->disable();
 #Modify disable
 $sharedsrv->disable("true");

=back

=back

=head2 dns_name( )

=over

Use this method to retrieve the name, in punycode format, of a DNS shared SRV record. This is a read-only attribute.

=over

=item B<Parameter>

None

=item B<Returns>

The method returns the attribute value.

=item B<Example>

 # Get attribute value
 my $value = $sharedsrv->dns_name();

=back

=back

=head2 dns_target( )

=over

Use this method to retrieve the target, in punycode format,  of a DNS shared SRV record. This is a read-only attribute.

=over

=item B<Parameter>

None

=item B<Returns>

The method returns the attribute value.

=item B<Example>

 # Get attribute value
 my $value = $sharedsrv->dns_target();

=back

=back

=head2 extattrs( )

=over

Use this method to set or retrieve the extensible attributes associated with a DNS shared SRV record object.

=over

=item B<Parameter>

Valid value is a hash reference containing the names of extensible attributes and their associated values ( L<Infoblox::Grid::Extattr|Infoblox::Grid::Extattr> objects ).

=item B<Returns>

If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.

If you did not specify a parameter, the method returns the attribute value.

=item B<Example>

 #Get extattrs
 my $ref_extattrs = $sharedsrv->extattrs();
 #Modify extattrs
 $sharedsrv->extattrs({ 'Site' => $extattr1, 'Administrator' => $extattr2 });

=back

=back

=head2 extensible_attributes( )

=over

Use this method to set or retrieve the extensible attributes associated with a DNS shared SRV record.

Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.

=over

=item B<Parameter>

For valid values for extensible attributes, see L<Infoblox::Grid::ExtensibleAttributeDefE<sol>Extensible Attribute Values|Infoblox::Grid::ExtensibleAttributeDef/Extensible Attribute Values>.

=item B<Returns>

If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.

If you did not specify a parameter, the method returns the attribute value.

=item B<Example>

 #Get extensible attributes
 my $ref_extensible_attributes = $sharedsrv->extensible_attributes();
 #Modify extensible attributes
 $sharedsrv->extensible_attributes({ 'Site' => 'Santa Clara', 'Administrator' => [ 'Peter', 'Tom' ] });

=back

=back

=head2 name( )

=over

Use this method to set or retrieve the name of a DNS shared SRV record.

Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.

The attribute value can be in unicode format.

=over

=item B<Parameter>

The name of the DNS shared SRV record.

=item B<Returns>

If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.

=item B<Example>

 #Get name
 my $name = $sharedsrv->name();
 #Modify name
 $sharedsrv->name("modified_srg_srv");

=back

=back

=head2 port( )

=over

Use this method to add or retrieve a port of a DNS shared SRV record.

=over

=item B<Parameter>

The port number for the DNS shared SRV record (range from 0 to 65535).

=item B<Returns>

If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.

=item B<Example>

 #Get port
 my $port = $sharedsrv->port();
 #Modify port
 $sharedport->port("2");

=back

=back

=head2 priority( )

=over

Use this method to add or retrieve the priority of a DNS shared SRV record.

=over

=item B<Parameter>

Number with the priority for the DNS shared SRV record (range from 0 to 65535).

=item B<Returns>

If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.

=item B<Example>

 #Get priority
 my $priority = $sharedsrv->priority();
 #Modify priority
 $sharedsrv->priority("2");

=back

=back

=head2  target( )

=over

Use this method to set or retrieve the target of a DNS shared SRV record. The target must be in Fully Qualified Domain Name (FQDN) format.

The attribute value can be in unicode format.

=over

=item B<Parameter>

Text with the target for the DNS shared SRV record.

=item B<Returns>

If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.

=item B<Example>

 #Get target
 my $target = $sharedsrv->target();
 #Modify target
 $sharedsrv->target ("new.target.test.org");

=back

=back

=head2 shared_record_group( )

=over

Use this method to set or retrieve the shared record group of a DNS shared SRV record.

Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.

=over

=item B<Parameter>

The name of defined L<Infoblox::DNS::SRG|Infoblox::DNS::SRG> objects. The shared SRV record will be defined under this shared record group and shared among zones associated with this shared record group.

=item B<Returns>

If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.

If you did not specify a parameter, the method returns the attribute value.

=item B<Example>

 #Get shared record group
 my $srg = $shared_srv->shared_record_group();
 #Modify shared record group
 $shared_srv->shared_record_group("test_srg");

=back

=back

=head2 ttl( )

=over

Use this method to configure or retrieve the Time to Live (TTL) value of a DNS shared SRV record.

Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.

The default value is undefined; therefore the record inherits the TTL value from the zone level.

With a specified TTL value, the method overrides the zone values with the specified TTL value.

=over

=item B<Parameter>

A 32-bit integer (range from 0 to 4294967295) that represents the duration in seconds that the record is cached. Zero indicates that the record should not be cached.

=item B<Returns>

If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.

=item B<Example>

 #Get ttl
 my $ttl = $sharedsrv->ttl();
 #Modify ttl
 $sharedsrv->ttl(1800);
 #Un-override ttl
 $sharedsrv->ttl(undef);

=back

=back

=head2  weight( )

=over

Use this method to set or retrieve the weight of a DNS shared SRV record.

=over

=item B<Parameter>

The weight of the DNS shared SRV record.

=item B<Returns>

If you specified a parameter, the method returns true when the modification succeeds, and returns false when the operation fails.

=item B<Example>

 #Get weight
 my $weight = $sharedsrv->weight ();
 #Modify weight
 $sharedsrv->weight ("3");

=back

=back

=head1 SAMPLE CODE

The following sample code demonstrates different operations that can be applied to an object such as create, search, modify, and remove an object. This sample code also includes error handling for the operations.

B<#Preparation prior to a DNS shared SRV record insertion>

 #PROGRAM STARTS: Include all the modules that will be used
 use strict;
 use Infoblox;

 #Create a session to the Infoblox appliance
 my $session = Infoblox::Session->new(
     master   => "192.168.1.2",
     username => "admin",
     password => "infoblox"
 );
 unless ($session) {
    die("Construct session failed: ",
        $session->status_code() . ":" . $session->status_detail());
 }
 print "Session created successfully\n";

 #Create the shared record group prior to an shared SRV record insertion
 my $srg = Infoblox::DNS::SRG->new(name => "test_srg");
 unless ($srg) {
    die("Construct srg failed: ",
        Infoblox::status_code() . ":" . Infoblox::status_detail());
 }
 print "SRG object created successfully\n";

 #Verify if the SRG exists
 my $object = $session->get(object => "Infoblox::DNS::SRG", name => "test_srg");
 unless ($object) {
    print "SRG does not exist on server, safe to add the SRG\n";
    $session->add($SRG)
       or die("Add SRG failed: ",
              $session->status_code() . ":" . $session->status_detail());
 }
 print "SRG added successfully\n";

B<#Create a DNS shared SRV record>

 my $srg_srv = Infoblox::DNS::SharedRecord::SRV->new(
    name     => "srg_srv",
    comment  => "add shared srg_srv",
    priority => 1,
    port     => 1,
    weight   => 1,
    target   => "old.target.test.org",
    shared_record_group => "test_srg",
  );
  unless ($srg_srv) {
     die("Construct DNS shared record SRV failed: ",
         Infoblox::status_code() . ":" . Infoblox::status_detail());
  }
 print "DNS shared SRV object created successfully\n";

 #Add the DNS shared SRV record object to Infoblox  appliance through a session
 $session->add($srg_srv)
     or die("Add shared record SRV failed: ",
            $session->status_code() . ":" . $session->status_detail());
 print "DNS shared SRV object added to server successfully\n";

B<#Search for a specific DNS shared SRV record>

 #Search for SRV record
 my @retrieved_objs = $session->search(
     "object" => "Infoblox::DNS::SharedRecord::SRV",
     "name" => "srg_srv",
 );
 my $object = $retrieved_objs[0];
 unless ($object) {
     die("Search shared record SRV failed: ",
         $session->status_code() . ":" . $session->status_detail());
 }
 print "Search DNS shared SRV object found at least 1 matching entry\n";

 #Search all shared SRV records that  has "shared" in the comment
 my @retrieved_objs = $session->search(
     object => "Infoblox::DNS::SharedRecord::SRV",
     name   => ".*",
     comment => "shared"
 );
 my $object = $retrieved_objs[0];
 unless ($object) {
     die("Search record SRV failed: ",
        $session->status_code() . ":" . $session->status_detail());
 }
 print "Search DNS shared SRV object using regexp found at least 1 matching entry\n";

B<#Get and modify a DNS shared SRV record>

 #Get a SRV shared record through the session
 my @retrieved_objs = $session->get(
     object => "Infoblox::DNS::SharedRecord::SRV",
     name   => "srg_srv",
 );
 my $object = $retrieved_objs[0];
 unless ($object) {
     die("Get shared record SRV failed: ",
         $session->status_code() . ":" . $session->status_detail());
 }
 print "Get DNS shared SRV object found at least 1 matching entry\n";

 #Modify one of the attributes of the specified SRV record
 $object->comment ("modified comment for shared SRV rec");

 #Apply the changes
 $session->modify($object)
     or die("Modify shared record SRV failed: ",
            $session->status_code() . ":" . $session->status_detail());
 print "DNS shared SRV object modified successfully \n";

B<#Remove a DNS shared SRV record>

 #Get a SRV record through the session
 my @retrieved_objs = $session->get(
     object => "Infoblox::DNS::SharedRecord::SRV",
     name   => "srg_srv",
 );
 my $object = $retrieved_objs[0];
 unless ($object) {
     die("Get shared record SRV failed: ",
         $session->status_code() . ":" . $session->status_detail());
 }
 print "Get DNS shared SRV object found at least 1 matching entry\n";

 #submit the object for removal
 $session->remove($object)
     or die("Remove shared record SRV failed: ",
            $session->status_code() . ":" . $session->status_detail());
 print "DNS shared SRV object removed successfully \n";

 ####PROGRAM ENDS####

=head1 AUTHOR

Infoblox Inc. L<http://www.infoblox.com/>

=head1 SEE ALSO

L<Infoblox::DNS::View|Infoblox::DNS::View>, L<Infoblox::DNS::Zone|Infoblox::DNS::Zone>, L<Infoblox::DNS::SRG|Infoblox::DNS::SRG>, L<Infoblox::Session|Infoblox::Session>, L<Infoblox::Session-E<gt>get()|Infoblox::Session/get()/>, L<Infoblox::Session-E<gt>search()|Infoblox::Session/search()/>, L<Infoblox::Session-E<gt>add()|Infoblox::Session/add()/>, L<Infoblox::Session-E<gt>remove()|Infoblox::Session/remove()/>, L<Infoblox::Session-E<gt>modify()|Infoblox::Session/modify()/>

=head1 COPYRIGHT

Copyright (c) 2017 Infoblox Inc.

=cut

=head1 NAME

Infoblox::DTC::Topology - A DTC Topology object.

=head1 DESCRIPTION

A DTC Topology is a named list of ordered DTC topology rules. These rules cannot be shared. Topology rules map client IPs to pools or resources.

=head1 CONSTRUCTOR

 my $topology = Infoblox::DTC::Topology->new(
    name                  => $string,                                                               #Required
    comment               => $string,                                                               #Optional / Default is undefined
    rules                 => [$rule1, $rule2, ...],                                                 #Optional / Default is undefined
    extattrs              => { $string => $extattr, ... },                                          #Optional / Default is undefined
    extensible_attributes => { $string => $string | $num, $string => [ $string | $num, ... ], ... } #Optional / Default is undefined
 );

You cannot set both extattrs and extensible_attributes attributes at the same time.

=head1 SESSION METHODS

This section describes all the methods in a Session module that you can apply to a Topology object.

=head2 Infoblox::Session->add( )

=over

Use this method to add an object to the Infoblox appliance. See L<Infoblox::Session-E<gt>add()|Infoblox::Session/add()/> for parameters and return values.

=over

=item B<Example>

 #construct an object
 my $topology = Infoblox::DTC::Topology->new(
    name  => 'topology',
    rules => [$rule1, $rule2, ...],
 );

 #submit for addition
 my $response = $session->add($topology);

=back

=back

=head2 Infoblox::Session->get( )

=over

Use this method to retrieve all the matching objects from the Infoblox appliance. See L<Infoblox::Session-E<gt>get()|Infoblox::Session/get()/> for parameters and return values.

=over

=item B<Key Reference>

 Apply the following attribute to get a specific object:

  name                  - Optional. A DTC Topology name in a string format.
  comment               - Optional. A DTC Topology comment.
  extattrs              - Optional. A hash reference containing extensible attributes.
  extensible_attributes - Optional. A hash reference that contains extensible attributes.

=item B<Example>

 my @retrieved_objs = $session->get(
     object => 'Infoblox::DTC::Topology',
     name   => 'topology',
 );

 my @retrieved_objs = $session->get(
     object => 'Infoblox::DTC::Topology',
     extensible_attributes => { 'Site' => 'Santa Clara' }
 );

=back

=back

=head2 Infoblox::Session->modify( )

=over

Use this method to modify an object in the Infoblox appliance. See L<Infoblox::Session-E<gt>modify()|Infoblox::Session/modify()/> for parameters and return values.

=over

=item B<Example>

 #Use method to modify the comment
 $topology->comment('this is a modified comment');
 #Submit modification
 my $response = $session->modify($topology);

=back

=back

=head2 Infoblox::Session->remove( )

=over

Use this method to remove an object from the Infoblox appliance. See L<Infoblox::Session-E<gt>remove()|Infoblox::Session/remove()/> for parameters and return values.

To remove a specific object, first use get() or search() to retrieve the specific object, and then submit this object for removal.

=over

=item B<Example>

 #Get the objects with the same name
 my @retrieved_objs = $session->get(
     object => 'Infoblox::DTC::Topology',
     name   => 'topology',
 );
 #Find the desired object from the retrieved list.
 my $desired_topology = $retrieved_objs[0];
 #Submit for removal
 my $response = $session->remove($desired_topology);


=back

=back

=head2 Infoblox::Session->search( )

=over

Use this method to search for objects in the Infoblox appliance. See L<Infoblox::Session-E<gt>search()|Infoblox::Session/search()/> for parameters and return values.

=over

=item B<Key Reference> 

 Apply the following attribute to get a specific object:

  name                  - Optional. A DTC Topology name in a string format.
  comment               - Optional. A DTC Topology comment.
  extattrs              - Optional. A hash reference containing extensible attributes.
  extensible_attributes - Optional. A hash reference that contains extensible attributes.

=item B<Example>

 my @retrieved_objs = $session->search(
     object => 'Infoblox::DTC::Topology',
     name   => 'top.*',
 );

 my @retrieved_objs = $session->search(
     object => 'Infoblox::DTC::Topology',
     extensible_attributes => { 'Site' => 'Santa Clara' }
 );

=back

=back

=head1 METHODS

This section describes all the methods that you can use to set or retrieve the attribute values of the object.

=head2 comment( )

=over

Use this method to set or retrieve a descriptive comment.

Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.

=over

=item B<Parameter>

Desired comment in a string format (UTF-8) with a maximum of 256 bytes.

=item B<Returns>

If you specified a parameter, the method returns 'true' when the modification succeeds, and returns 'false' when the operation fails.

If you did not specify a parameter, the method returns the attribute value.

=item B<Example>

 #get comment value
 my $comment = $topology->comment();

 #modify comment value
 $topology->comment('desired comment');

=back

=back

=head2 extattrs( )

=over

Use this method to set or retrieve the extensible attributes associated with a DTC Topology object.

Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.

=over

=item B<Parameter>

Valid value is a hash reference containing the names of extensible attributes and their associated values (L<Infoblox::Grid::Extattr|Infoblox::Grid::Extattr> objects).

=item B<Returns>

If you specified a parameter, the method returns 'true' when the modification succeeds, and returns 'false' when the operation fails.

If you did not specify a parameter, the method returns the attribute value.

=item B<Example>

 #get extattrs value
 my $ref_extattrs = $topology->extattrs();

 #Modify extattrs
 $topology->extattrs({ 'Site' => $extattr1, 'Administrator' => $extattr2 });

=back

=back

=head2 extensible_attributes( )

=over

Use this method to set or retrieve the extensible attributes associated with a DTC Topology object.

Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.

=over

=item B<Parameter>

For valid values for extensible attributes, see L<Infoblox::Grid::ExtensibleAttributeDefE<sol>Extensible Attribute Values|Infoblox::Grid::ExtensibleAttributeDef/Extensible Attribute Values>.

=item B<Returns>

If you specified a parameter, the method returns 'true' when the modification succeeds, and returns 'false' when the operation fails.

If you did not specify a parameter, the method returns the attribute value.

=item B<Example>

 #Get extensible attributes
 my $ref_extensible_attributes = $topology->extensible_attributes();

 #Modify extensible attributes
 $topology->extensible_attributes({'Site' => 'Santa Clara', 'Administrator' => ['Peter', 'Tom']});

=back

=back

=head2 name( )

=over

Use this method to set or retrieve topology name.

Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.

=over

=item B<Parameter>

The valid value is a topology list name in a string format.

=item B<Returns>

If you specified a parameter, the method returns 'true' when the modification succeeds, and returns 'false' when the operation fails.

If you did not specify a parameter, the method returns the attribute value.

=item B<Example>

 #get name value
 my $name = $topology->name();

 #modify name value
 $topology->name('topology1');

=back

=back

=head2 rules( )

=over

Use this method to set or retrieve a list of topology rules.

Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.

=over

=item B<Parameter>

The valid value is an L<Infoblox::DTC::Topology::Rule|Infoblox::DTC::Topology::Rule> object.

=item B<Returns>

If you specified a parameter, the method returns 'true' when the modification succeeds, and returns 'false' when the operation fails.

If you did not specify a parameter, the method returns the attribute value.

=item B<Example>

 #get rules value
 my $rules = $topology->rules();

 #modify rules value
 $topology->rules([$rule1, $rule2]);

=back

=back

=head1 AUTHOR

Infoblox Inc. L<http://www.infoblox.com/>

=head1 SEE ALSO

L<Infoblox::Session|Infoblox::Session>, L<Infoblox::Session-E<gt>add()|Infoblox::Session/add()/>, L<Infoblox::Session-E<gt>get()|Infoblox::Session/get()/>, L<Infoblox::Session-E<gt>modify()|Infoblox::Session/modify()/>, L<Infoblox::Session-E<gt>remove()|Infoblox::Session/remove()/>, L<Infoblox::Session-E<gt>search()|Infoblox::Session/search()/>, L<Infoblox::Grid::Extattr|Infoblox::Grid::Extattr>, L<Infoblox::Grid::ExtensibleAttributeDefE<sol>Extensible Attribute Values|Infoblox::Grid::ExtensibleAttributeDef/Extensible Attribute Values>, L<Infoblox::DTC::Topology::Rule|Infoblox::DTC::Topology::Rule>. 

=head1 COPYRIGHT

Copyright (c) 2017 Infoblox Inc.

=cut 
